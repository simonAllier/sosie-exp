{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":469,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":81,"com.google.gson.functional.StringTest.testStringValueDeserialization":79,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":183,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":426,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":283,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":387,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":224,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":369,"com.google.gson.MixedStreamTest.testWriteLenient":11,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":232,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":331,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":292,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":313,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":184,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":201,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":329,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":435,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":219,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":321,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":122,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":396,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":615,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":132,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":573,"com.google.gson.functional.ObjectTest.testSingletonLists":327,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":284,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":324,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":82,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":380,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":509,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":529,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":206,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":302,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":347,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":18,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":438,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":111,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":95,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":97,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":71,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":427,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":165,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":372,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":600,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":38,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":164,"com.google.gson.functional.EnumTest.testEnumCaseMapping":218,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":20,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":80,"com.google.gson.functional.JsonTreeTest.testToJsonTree":3,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":371,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":76,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":305,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":525,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":616,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":140,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":258,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":57,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":276,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":382,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":576,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":608,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":194,"com.google.gson.functional.ObjectTest.testNullDeserialization":359,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":537,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":92,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":341,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":448,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":597,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":388,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":348,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":36,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":493,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":356,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":596,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":306,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":453,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":559,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":452,"com.google.gson.JsonParserTest.testParseString":606,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":301,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":432,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":411,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":257,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":459,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":53,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":360,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":282,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":409,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":157,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":233,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":424,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":551,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":273,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":591,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":495,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":179,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":239,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":433,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":425,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":47,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":355,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":24,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":26,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":335,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":175,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":231,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":392,"com.google.gson.metrics.PerformanceTest.testDummy":23,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":325,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":516,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":130,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":32,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":497,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":181,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":526,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":290,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":29,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":275,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":492,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":540,"com.google.gson.functional.CollectionTest.testSetDeserialization":200,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":123,"com.google.gson.functional.EnumTest.testEnumSet":209,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":221,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":340,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":416,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":131,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":496,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":152,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":263,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":349,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":129,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":599,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":429,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":31,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":440,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":33,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":535,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":441,"com.google.gson.functional.MapTest.testHashMapDeserialization":146,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":385,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":190,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":288,"com.google.gson.MixedStreamTest.testReadNulls":12,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":27,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":471,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":467,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":542,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":533,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":587,"com.google.gson.functional.MapTest.testSortedMap":168,"com.google.gson.functional.MapTest.testMapSerialization":163,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":470,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":103,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":422,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":60,"com.google.gson.functional.MapTest.testSerializeMaps":149,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":311,"com.google.gson.functional.MapTest.testComplexKeysSerialization":176,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":220,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":180,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":67,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":216,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":539,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":585,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":554,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":530,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":214,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":74,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":617,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":226,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":358,"com.google.gson.functional.MapTest.testStringKeyDeserialization":178,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":64,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":501,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":455,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":182,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":391,"com.google.gson.functional.PrettyPrintingTest.testMap":72,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":386,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":566,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":187,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":253,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":473,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":531,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":17,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":66,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":85,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":89,"com.google.gson.functional.MapTest.testMapSerializationEmpty":177,"com.google.gson.functional.CollectionTest.testQueueSerialization":191,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":270,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":618,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":417,"com.google.gson.functional.MapTest.testMapOfMapSerialization":162,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":408,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":278,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":197,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":419,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":510,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":83,"com.google.gson.functional.FieldNamingTest.testIdentity":312,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":498,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":483,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":361,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":2,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":230,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":315,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":326,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":374,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":601,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":84,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":489,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":241,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":414,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":294,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":594,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":265,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":272,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":304,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":143,"com.google.gson.functional.MapTest.testMapSubclassSerialization":148,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":451,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":139,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":319,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":223,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":8,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":109,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":406,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":568,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":252,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":466,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":528,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":128,"com.google.gson.functional.EnumTest.testEnumSubclass":212,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":428,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":19,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":345,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":373,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":488,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":434,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":500,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":549,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":376,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":243,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":412,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":242,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":514,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":56,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":593,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":610,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":339,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":418,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":229,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":410,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":297,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":328,"com.google.gson.MixedStreamTest.testWriteNulls":9,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":145,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":55,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":237,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":49,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":125,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":538,"com.google.gson.CommentsTest.testParseComments":592,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":613,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":330,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":505,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":579,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":62,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":431,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":479,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":102,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":87,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":167,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":99,"com.google.gson.MixedStreamTest.testReadInvalidState":6,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":119,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":137,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":299,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":450,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":104,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":384,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":68,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":476,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":401,"com.google.gson.JsonArrayTest.testRemove":4,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":280,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":445,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":52,"com.google.gson.functional.MapTest.testMapDeserialization":155,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":274,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":77,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":144,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":572,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":154,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":523,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":578,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":574,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":555,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap":611,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":1,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":213,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":250,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":346,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":362,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":544,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":569,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":515,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":259,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":136,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":240,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":553,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":73,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":166,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":303,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":370,"com.google.gson.functional.PrimitiveTest.testShortSerialization":449,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":507,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":581,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":437,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":40,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":407,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":436,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":264,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":383,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":308,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":211,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":609,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":186,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":318,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":607,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":150,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":400,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":207,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":457,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":235,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":291,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":586,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":16,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":464,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":458,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":228,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":363,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":499,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":522,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":245,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":443,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":70,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":413,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":502,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":367,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":334,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":217,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":222,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":546,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":195,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":260,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":564,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":503,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":571,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":281,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":580,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":390,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":267,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":590,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":582,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":286,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":188,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":519,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":377,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":444,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":415,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":461,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":41,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":210,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":577,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":475,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":105,"com.google.gson.functional.MapTest.testGeneralMapField":172,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":332,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":46,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":463,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":61,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":490,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":565,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":293,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":170,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":246,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":381,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":558,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":439,"com.google.gson.MixedStreamTest.testReadMixedStreamed":15,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":603,"com.google.gson.JsonObjectTest.testDeepCopy":619,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":158,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":261,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":402,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":202,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":589,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":602,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":323,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":420,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":39,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":30,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":279,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":159,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":142,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":147,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":462,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":506,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":101,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":114,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":403,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":277,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":238,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":484,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":196,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":244,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":584,"com.google.gson.functional.ObjectTest.testNestedDeserialization":368,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":512,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":98,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":353,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":472,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":513,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":37,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":460,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":478,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":86,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":160,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":225,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":127,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":447,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":545,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":236,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":317,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":205,"com.google.gson.functional.ObjectTest.testNullSerialization":342,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":548,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":141,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":151,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":171,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":375,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":58,"com.google.gson.functional.MapTest.testInterfaceTypeMap":169,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":567,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":518,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":378,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":215,"com.google.gson.MixedStreamTest.testReadClosed":7,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":552,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":570,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":247,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":35,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":394,"com.google.gson.MixedStreamTest.testWriteClosed":14,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":193,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":474,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":307,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":333,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":521,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":133,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":517,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":481,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":365,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":477,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":300,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":336,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":524,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":192,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":115,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":423,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":117,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":550,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":287,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":485,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":465,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":399,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":0,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":255,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":43,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":541,"com.google.gson.functional.CollectionTest.testQueueDeserialization":208,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":480,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":405,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":421,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":91,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":468,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":298,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":156,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":357,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":269,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":366,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":560,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":185,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":5,"com.google.gson.functional.MapTest.testRawMapSerialization":174,"com.google.gson.JsonParserTest.testParseReader":605,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":203,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":285,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":351,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":543,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":108,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":583,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":48,"com.google.gson.functional.PrimitiveTest.testByteSerialization":446,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":527,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":562,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":556,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":389,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":314,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":59,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":309,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":88,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":134,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":598,"com.google.gson.functional.MapTest.testMapWithQuotes":161,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":254,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":397,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":90,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":494,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":588,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":511,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":612,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":454,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":251,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":121,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":575,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":124,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":364,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":266,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":344,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":430,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":65,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":295,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":256,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":268,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":316,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":442,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":534,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":199,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":51,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":44,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":126,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":296,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":547,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":486,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":118,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":320,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":532,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":138,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":379,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":508,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":350,"com.google.gson.functional.ObjectTest.testNestedSerialization":352,"com.google.gson.JsonObjectTest.testAddingStringProperties":620,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":42,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":94,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":393,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":557,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":100,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":173,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":106,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":69,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":13,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":22,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":343,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":482,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":456,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":520,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":322,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":271,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":21,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":395,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":595,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":249,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":354,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":112,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":93,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":54,"com.google.gson.functional.CollectionTest.testSetSerialization":204,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":491,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":75,"com.google.gson.functional.StringTest.testStringValueSerialization":96,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":504,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":561,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":189,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":227,"com.google.gson.MixedStreamTest.testWriteInvalidState":10,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":45,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":337,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":398,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":63,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":404,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":25,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":262,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":310,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":604,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":536,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":614,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":487,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":34,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":135,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":289,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":563,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":153,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":28,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":50},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1f95b95-3f3e-11e6-8d6c-c127348a32bb","method":{"position":"com.google.gson.internal.$Gson$Types:54","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type ownerType, java.lang.reflect.Type rawType, java.lang.reflect.Type... typeArguments) {\n    return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(ownerType , rawType , typeArguments);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"ownerType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1f9d0c6-3f3e-11e6-8d6c-23e777008e15","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1f9f7d7-3f3e-11e6-8d6c-f739fcc40155","method":{"position":"com.google.gson.internal.bind.TypeAdapters:744","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    out.value((value == null ? null : java.util.Map<T, java.lang.String>.get(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:377","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1f9f7d8-3f3e-11e6-8d6c-ddde45d6735a","method":{"position":"com.google.gson.Gson:136","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (typeOfSrc != (src[0])) {\n        {\n            return toJsonTree(src, typeOfSrc);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"originalLowerBound":"src","lowerBound":"typeOfSrc"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1fa1ee9-3f3e-11e6-8d6c-179cd9c43495","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:360","type":"CtVariableReadImpl"},"failures":[0,1,2,3],"tindex":"b1fa1eea-3f3e-11e6-8d6c-99e8b3a41ade","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonObject:54","type":"CtBinaryOperatorImpl"},"failures":[4],"tindex":"b1fa1eeb-3f3e-11e6-8d6c-2584f9d68ef6","method":{"position":"com.google.gson.JsonArray:92","type":"CtMethodImpl","sourcecode":"public boolean remove(com.google.gson.JsonElement element) {\n    if (element == null) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,0,1,2,3,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602],"tindex":"b1fa45fc-3f3e-11e6-8d6c-7173399209ce","method":{"position":"com.google.gson.Gson:305","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> longAdapter(com.google.gson.LongSerializationPolicy longSerializationPolicy) {\n    if (longSerializationPolicy == longSerializationPolicy) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (longSerializationPolicy == (com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy)) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextLong();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    out.value(value.toString());\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"longSerializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"longSerializationPolicy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1fa6d0d-3f3e-11e6-8d6c-bb7a6eebc12f","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:160","type":"CtMethodImpl","sourcecode":"public java.util.Map<K, V> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Map<K, V> java.util.Map<K, V> = com.google.gson.internal.ObjectConstructor<? extends java.util.Map<K, V>>.construct();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.beginArray();\n        while (in.hasNext()) {\n            in.beginArray();\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n            in.endArray();\n        }\n        in.endArray();\n    } else {\n        in.beginObject();\n        while (in.hasNext()) {\n            com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.com.google.gson.internal.JsonReaderInternalAccess.promoteNameToValue(in);\n            K K = com.google.gson.TypeAdapter<K>.read(in);\n            V V = com.google.gson.TypeAdapter<V>.read(in);\n            V V = map.put(key, value);\n            if (replaced != null) {\n                throw new com.google.gson.JsonSyntaxException((\"duplicate key: \" + key));\n            } \n        }\n        in.endObject();\n    }\n    return map;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:437","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fa6d0e-3f3e-11e6-8d6c-65c6cca10875","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:686","type":"CtMethodImpl","sourcecode":"void add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node) {\n    if (node != null) {\n        {\n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            node.int = 1;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node;\n            (int)++;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            for (int int = 4 ; ((int) & (scale - 1)) == (scale - 1) ; scale *= 2) {\n                if ((int) == 0) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                } else if ((int) == 1) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    int = 0;\n                } else if ((int) == 2) {\n                    int = 0;\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pivotRight":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl"},"failures":[107,118,264,344,471,531,532,575,584],"tindex":"b1fabb2f-3f3e-11e6-8d6c-87cdf7e9bd9d","method":{"position":"com.google.gson.Gson:780","type":"CtMethodImpl","sourcecode":"private static void assertFullConsumption(java.lang.Object obj, com.google.gson.stream.JsonReader reader) {\n    if (obj != null) {\n        {\n            try {\n                if ((obj != null) && ((reader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonIOException(\"JSON document was not fully consumed.\");\n                } \n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1fabb30-3f3e-11e6-8d6c-35003fad12fd","method":{"position":"com.google.gson.internal.bind.TypeAdapters:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        int int = in.nextInt();\n        return ((byte)(intValue));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1fabb31-3f3e-11e6-8d6c-55dadb97e993","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Date read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return deserializeToDate(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:553","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fabb32-3f3e-11e6-8d6c-d7c879fc1603","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (src != null) {\n                toJson(src, src.getClass(), writer);\n            } else {\n                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:345","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fabb33-3f3e-11e6-8d6c-913831968154","method":{"position":"com.google.gson.stream.JsonWriter:353","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop == newTop) {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                int[] = newStack;\n            } \n            int[][((int)++)] = newTop;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"newTop","com.google.gson.stream.JsonReader.PEEKED_BEGIN_ARRAY":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1fae244-3f3e-11e6-8d6c-57fbec3fbb24","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"b1fae245-3f3e-11e6-8d6c-19e876d1b588","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (f.isSynthetic()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n                    return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fae246-3f3e-11e6-8d6c-a9637f8a7f1f","method":{"position":"com.google.gson.JsonPrimitive:93","type":"CtMethodImpl","sourcecode":"void setValue(java.lang.Object primitive) {\n    if ((primitive.length()) == 0) {\n        {\n            if (primitive instanceof java.lang.Character) {\n                char char = ((java.lang.Character)(primitive)).charValue();\n                com.google.gson.JsonPrimitive.this.java.lang.Object = java.lang.String.valueOf(c);\n            } else {\n                com.google.gson.internal.$Gson$Preconditions.checkArgument(((primitive instanceof java.lang.Number) || (com.google.gson.JsonPrimitive.isPrimitiveOrString(primitive))));\n                com.google.gson.JsonPrimitive.this.java.lang.Object = primitive;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"primitive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.$Gson$Types:309","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fae247-3f3e-11e6-8d6c-03403f6943e6","method":{"position":"com.google.gson.Gson:801","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT == typeOfT) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            boolean boolean = true;\n            boolean boolean = reader.isLenient();\n            reader.setLenient(true);\n            try {\n                reader.peek();\n                isEmpty = false;\n                com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(typeOfT)));\n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = getAdapter(typeToken);\n                T T = typeAdapter.read(reader);\n                return object;\n            } catch (java.io.EOFException e) {\n                if (isEmpty) {\n                    return null;\n                } \n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.lang.IllegalStateException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } finally {\n                reader.setLenient(oldLenient);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Properties.class":"typeOfT","context":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1fae248-3f3e-11e6-8d6c-d167f5c286e9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:424","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuffer(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fb0959-3f3e-11e6-8d6c-9966bd50dca4","method":{"position":"com.google.gson.JsonObject:181","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonObject getAsJsonObject(java.lang.String memberName) {\n    if (memberName == null) {\n        {\n            return ((com.google.gson.JsonObject)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1fb095a-3f3e-11e6-8d6c-79e6c683290c","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fb095b-3f3e-11e6-8d6c-e972c3c7ce1d","method":{"position":"com.google.gson.internal.$Gson$Types:117","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getRawType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        return ((java.lang.Class<?>)(type));\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getRawType();\n        com.google.gson.internal.$Gson$Preconditions.checkArgument((rawType instanceof java.lang.Class));\n        return ((java.lang.Class<?>)(rawType));\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n        return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.getRawType(componentType), 0).getClass();\n    } else if (type instanceof java.lang.reflect.TypeVariable) {\n        return java.lang.Object.java.lang.Object.java.lang.Class;\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        return com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(type)).getUpperBounds()[0]);\n    } else {\n        java.lang.String java.lang.String = type == null ? \"null\" : type.getClass().getName();\n        throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + type) + \"> is of type \") + className));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"type","java.sql.Timestamp.class":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl"},"failures":[309,310,311,544,546,547,549,550,554],"tindex":"b1fb095c-3f3e-11e6-8d6c-a1966ead79a3","method":{"position":"com.google.gson.FieldNamingPolicy:122","type":"CtMethodImpl","sourcecode":"private static java.lang.String separateCamelCase(java.lang.String name, java.lang.String separator) {\n    if (name == null) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (int int = 0 ; i < (name.length()) ; i++) {\n                char char = name.charAt(i);\n                if ((java.lang.Character.isUpperCase(character)) && ((translation.length()) != 0)) {\n                    translation.append(separator);\n                } \n                translation.append(character);\n            }\n            return translation.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl"},"failures":[264],"tindex":"b1fb095d-3f3e-11e6-8d6c-65a422b3833c","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n                    out.value(dateFormatAsString);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[603,604],"tindex":"b1fb306e-3f3e-11e6-8d6c-554341b86da8","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n            return read(reader);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:356","type":"CtVariableReadImpl"},"failures":[11,419,432,433,447,455,461],"tindex":"b1fb306f-3f3e-11e6-8d6c-391939c3782c","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:127","type":"CtInvocationImpl"},"failures":[605,606,607,608,609,610,97,104,105,106,611,138,147,150,151,155,159,164,175,178,612,248,313,314,316,317,319,320,469,480,481,485,497,498,513,514,515,519,520,525,591,603,604,613,614,615,616,617,618,619,620],"tindex":"b1fb3070-3f3e-11e6-8d6c-210df4325f17","method":{"position":"com.google.gson.internal.LinkedTreeMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key.equals(key)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"key","type":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtInvocationImpl"},"failures":[],"tindex":"b1fb5781-3f3e-11e6-8d6c-a702f22a3f09","method":{"position":"com.google.gson.TypeAdapter:278","type":"CtMethodImpl","sourcecode":"public final T fromJsonTree(com.google.gson.JsonElement jsonTree) {\n    if (jsonTree.isBoolean()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.internal.bind.JsonTreeReader(jsonTree);\n                return read(jsonReader);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"jsonTree"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fb5782-3f3e-11e6-8d6c-8f3129e69d2f","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fb5783-3f3e-11e6-8d6c-5f881317327a","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n                    out.value(dateFormatAsString);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fb5784-3f3e-11e6-8d6c-dd42ed4a3e19","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fb5785-3f3e-11e6-8d6c-a774e5be4d04","method":{"position":"com.google.gson.internal.$Gson$Types:151","type":"CtMethodImpl","sourcecode":"static boolean equal(java.lang.Object a, java.lang.Object b) {\n    return (a == b) || ((a != null) && (a.equals(b)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1fb7e96-3f3e-11e6-8d6c-65ec6558d97c","method":{"position":"com.google.gson.internal.LinkedTreeMap:207","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (!(b instanceof com.google.gson.JsonPrimitive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fb7e97-3f3e-11e6-8d6c-9b60df658871","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key == null) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = removeInternalByKey(key);\n            return node != null ? node.V : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b1fb7e98-3f3e-11e6-8d6c-01de6fc5fb71","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Date read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        final long long = java.text.DateFormat.parse(in.nextString()).getTime();\n        return new java.sql.Date(utilDate);\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl"},"failures":[618],"tindex":"b1fb7e99-3f3e-11e6-8d6c-43334dcc1827","method":{"position":"com.google.gson.JsonObject:100","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Boolean value) {\n    if (property == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fb7e9a-3f3e-11e6-8d6c-3f81860abb74","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if ((target instanceof java.lang.Class) && (((java.lang.Class<?>)(toResolve)).isArray())) {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:417","type":"CtBinaryOperatorImpl"},"failures":[4],"tindex":"b1fba5ab-3f3e-11e6-8d6c-d72564c78d16","method":{"position":"com.google.gson.JsonArray:105","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(int index) {\n    if (index == index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"index","com.google.gson.stream.JsonReader.PEEKED_NONE":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fba5ac-3f3e-11e6-8d6c-512a21ae61d8","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o == o) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"o","java.util.Date.class":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1240","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fba5ad-3f3e-11e6-8d6c-7f2cd5c5bd60","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == style) {\n        {\n            com.google.gson.GsonBuilder.this.int = style;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"style","com.google.gson.stream.JsonReader.PEEKED_BEGIN_ARRAY":"style"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"b1fba5ae-3f3e-11e6-8d6c-ed8e0744af71","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (f.isSynthetic()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n                    return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl"},"failures":[264],"tindex":"b1fba5af-3f3e-11e6-8d6c-217321047fc9","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            float float = value.floatValue();\n            checkValidFloatingPoint(floatValue);\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:298","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b1fbccc0-3f3e-11e6-8d6c-bfae0377fb6e","method":{"position":"com.google.gson.internal.Excluder:69","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withVersion(double ignoreVersionsAfter) {\n    if ((java.lang.Double.isNaN(ignoreVersionsAfter)) || (java.lang.Double.isInfinite(value))) {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            result.double = ignoreVersionsAfter;\n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344102322/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":44,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}