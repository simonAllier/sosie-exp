{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":138,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":555,"com.google.gson.functional.StringTest.testStringValueDeserialization":553,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":630,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":95,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":266,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":186,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":56,"com.google.gson.stream.JsonWriterTest.testRepeatedName":622,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":511,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":438,"com.google.gson.MixedStreamTest.testWriteLenient":15,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":387,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":400,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":195,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":307,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":486,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":398,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":503,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":104,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":219,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":595,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":442,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":65,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":320,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":534,"com.google.gson.functional.ObjectTest.testSingletonLists":396,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":187,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":222,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":49,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":556,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":605,"com.google.gson.stream.JsonWriterTest.testStrings":640,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":350,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":366,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":508,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":205,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":416,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":23,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":107,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":460,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":656,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":569,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":523,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":96,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":377,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":634,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":248,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":28,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":41,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":449,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":247,"com.google.gson.functional.EnumTest.testEnumCaseMapping":594,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":1,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":554,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":40,"com.google.gson.functional.JsonTreeTest.testToJsonTree":357,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":382,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":208,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":485,"com.google.gson.stream.JsonWriterTest.testNulls":620,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":161,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":328,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":653,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":288,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":51,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":179,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":537,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":496,"com.google.gson.functional.ObjectTest.testNullDeserialization":428,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":330,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":566,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":410,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":5,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":117,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":57,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":417,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":447,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":601,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":425,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":4,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":440,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":151,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":209,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":122,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":361,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":204,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":101,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":654,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":80,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":128,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":160,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":284,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":429,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":185,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":93,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":240,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":388,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":580,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":176,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":472,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":608,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":336,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":262,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":102,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":394,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":94,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":278,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":424,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":21,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":404,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":551,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":635,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":61,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":258,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":518,"com.google.gson.metrics.PerformanceTest.testDummy":3,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":223,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":476,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":318,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":35,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":338,"com.google.gson.stream.JsonWriterTest.testEmptyArray":614,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":264,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":363,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":193,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":272,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":32,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":178,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":600,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":333,"com.google.gson.functional.CollectionTest.testSetDeserialization":502,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":443,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":374,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":409,"com.google.gson.functional.EnumTest.testEnumSet":585,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":85,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":319,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":337,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":166,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":235,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":418,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":27,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":317,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":98,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":34,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":109,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":633,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":372,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":444,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":110,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":54,"com.google.gson.functional.MapTest.testHashMapDeserialization":229,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":492,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":191,"com.google.gson.MixedStreamTest.testReadNulls":16,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":140,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":552,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":136,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":571,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":370,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":468,"com.google.gson.functional.MapTest.testSortedMap":251,"com.google.gson.functional.MapTest.testMapSerialization":246,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":139,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":91,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":268,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":291,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":214,"com.google.gson.functional.MapTest.testSerializeMaps":232,"com.google.gson.functional.MapTest.testComplexKeysSerialization":259,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":373,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":263,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":607,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":298,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":332,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":592,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":546,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":602,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":583,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":367,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":590,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":380,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":513,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":427,"com.google.gson.functional.MapTest.testStringKeyDeserialization":261,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":295,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":342,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":124,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":60,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":265,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":55,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":302,"com.google.gson.functional.PrettyPrintingTest.testMap":378,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":489,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":142,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":156,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":368,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":22,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":297,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":655,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":559,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":563,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":173,"com.google.gson.functional.MapTest.testMapSerializationEmpty":260,"com.google.gson.functional.CollectionTest.testQueueSerialization":493,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":86,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":636,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":638,"com.google.gson.functional.MapTest.testMapOfMapSerialization":245,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":77,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":181,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":499,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":615,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":88,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":647,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":351,"com.google.gson.functional.FieldNamingTest.testIdentity":215,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":557,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":339,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":527,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":625,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":430,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":309,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":356,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":395,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":517,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":618,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":43,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":29,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":558,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":597,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":83,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":520,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":197,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":7,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":168,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":207,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":646,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":226,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":120,"com.google.gson.functional.MapTest.testMapSubclassSerialization":231,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":37,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":327,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":376,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":12,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":75,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":304,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":458,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":135,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":155,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":389,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":365,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":316,"com.google.gson.functional.EnumTest.testEnumSubclass":588,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":97,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":24,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":414,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":42,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":596,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":103,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":341,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":578,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":45,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":522,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":626,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":81,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":521,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":474,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":6,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":287,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":87,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":408,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":79,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":516,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":628,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":624,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":200,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":397,"com.google.gson.MixedStreamTest.testWriteNulls":13,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":228,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":286,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":623,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":392,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":280,"com.google.gson.CommentsTest.testParseComments":0,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":313,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":331,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":346,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":399,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":540,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":100,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":293,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":455,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":267,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":250,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":561,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":525,"com.google.gson.MixedStreamTest.testReadInvalidState":10,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":439,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":325,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":119,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":202,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":269,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":603,"com.google.gson.JsonParserTest.testParseMixedArray":606,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":53,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":299,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":452,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":70,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":645,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":183,"com.google.gson.functional.MapTest.testMapDeserialization":238,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":283,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":177,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":383,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":227,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":533,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":237,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":483,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":539,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":535,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":584,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":355,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":589,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":153,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":415,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":431,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":573,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":305,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":475,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":162,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":324,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":519,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":582,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":249,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":379,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":658,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":206,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":39,"com.google.gson.functional.PrimitiveTest.testShortSerialization":118,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":348,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":542,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":106,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":451,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":76,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":105,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":52,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":167,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":211,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":587,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":488,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":36,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":233,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":69,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":126,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":509,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":390,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":612,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":194,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":547,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":20,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":610,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":133,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":127,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":650,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":515,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":340,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":432,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":482,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":148,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":459,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":613,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":112,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":386,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":82,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":343,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":436,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":403,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":593,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":375,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":575,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":163,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":497,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":300,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":344,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":532,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":184,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":541,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":170,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":471,"com.google.gson.stream.JsonWriterTest.testNullStringValue":617,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":543,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":189,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":479,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":490,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":46,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":113,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":84,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":130,"com.google.gson.stream.JsonWriterTest.testEmptyObject":632,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":548,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":538,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":586,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":144,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":270,"com.google.gson.functional.MapTest.testGeneralMapField":255,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":401,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":277,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":132,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":292,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":301,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":598,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":196,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":253,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":50,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":149,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":360,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":108,"com.google.gson.MixedStreamTest.testReadMixedStreamed":19,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":71,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":164,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":241,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":30,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":470,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":504,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":221,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":89,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":450,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":182,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":242,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":225,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":230,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":131,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":347,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":146,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":463,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":621,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":72,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":611,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":180,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":393,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":528,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":147,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":498,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":545,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":353,"com.google.gson.functional.ObjectTest.testNestedDeserialization":437,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":422,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":524,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":141,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":473,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":448,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":129,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":454,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":243,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":512,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":560,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":315,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":116,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":574,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":311,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":391,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":507,"com.google.gson.functional.ObjectTest.testNullSerialization":411,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":577,"com.google.gson.stream.JsonWriterTest.testDoubles":637,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":224,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":234,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":44,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":254,"com.google.gson.functional.MapTest.testInterfaceTypeMap":252,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":289,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":303,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":478,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":47,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":591,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":649,"com.google.gson.MixedStreamTest.testReadClosed":11,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":306,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":581,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":150,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":446,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":63,"com.google.gson.MixedStreamTest.testWriteClosed":18,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":143,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":495,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":210,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":402,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":481,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":321,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":477,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":457,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":434,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":453,"com.google.gson.stream.JsonWriterTest.testLongs":619,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":203,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":405,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":484,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":494,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":464,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":92,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":466,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":579,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":500,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":190,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":529,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":134,"com.google.gson.stream.JsonWriterTest.testNumbers":639,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":643,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":68,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":354,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":158,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":274,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":334,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":456,"com.google.gson.functional.CollectionTest.testQueueDeserialization":510,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":74,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":90,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":565,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":137,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":201,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":465,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":239,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":426,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":631,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":172,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":362,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":435,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":487,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":9,"com.google.gson.functional.MapTest.testRawMapSerialization":257,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":505,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":188,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":651,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":420,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":572,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":273,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":544,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":657,"com.google.gson.functional.PrimitiveTest.testByteSerialization":115,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":279,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":364,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":659,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":217,"com.google.gson.ObjectTypeAdapterTest.testSerialize":604,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":358,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":58,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":308,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":290,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":212,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":26,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":322,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":562,"com.google.gson.functional.MapTest.testMapWithQuotes":244,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":66,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":157,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":564,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":335,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":469,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":352,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":642,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":123,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":154,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":441,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":627,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":536,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":312,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":433,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":384,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":99,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":169,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":413,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":296,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":407,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":159,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":171,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":310,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":462,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":111,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":371,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":501,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":282,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":199,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":275,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":314,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":576,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":530,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":467,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":38,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":369,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":48,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":326,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":349,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":648,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":419,"com.google.gson.functional.ObjectTest.testNestedSerialization":421,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":549,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":62,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":359,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":568,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":145,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":256,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":271,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":385,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":17,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":25,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":641,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":412,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":526,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":125,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":480,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":220,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":174,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":2,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":8,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":64,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":152,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":423,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":461,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":652,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":567,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":285,"com.google.gson.functional.CollectionTest.testSetSerialization":506,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":599,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":345,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":381,"com.google.gson.functional.StringTest.testStringValueSerialization":570,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":216,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":491,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":514,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":644,"com.google.gson.MixedStreamTest.testWriteInvalidState":14,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":276,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":406,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":67,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":73,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":294,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":550,"com.google.gson.stream.JsonWriterTest.testBooleans":616,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":165,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":213,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":329,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":531,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":445,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":609,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":323,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":192,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":218,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":236,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":629,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":31,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":281},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:154","type":"CtUnaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601],"tindex":"8aae6ae8-3f3d-11e6-a16e-5fed8a539507","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (!serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:103","type":"CtVariableReadImpl"},"failures":[602],"tindex":"8aaf7c59-3f3d-11e6-a16e-23e2d2787bce","method":{"position":"com.google.gson.internal.LinkedTreeMap:217","type":"CtMethodImpl","sourcecode":"void removeInternal(com.google.gson.internal.LinkedTreeMap.Node<K, V> node, boolean unlink) {\n    if (unlink) {\n        {\n            if (unlink) {\n                node.com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                node.com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            if ((left != null) && (right != null)) {\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = (left.int) > (right.int) ? left.last() : right.first();\n                removeInternal(adjacent, false);\n                int int = 0;\n                left = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                if (left != null) {\n                    leftHeight = left.int;\n                    adjacent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = left;\n                    left.com.google.gson.internal.LinkedTreeMap.Node<K, V> = adjacent;\n                    node.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null;\n                } \n                int int = 0;\n                right = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                if (right != null) {\n                    rightHeight = right.int;\n                    adjacent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = right;\n                    right.com.google.gson.internal.LinkedTreeMap.Node<K, V> = adjacent;\n                    node.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null;\n                } \n                adjacent.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                replaceInParent(node, adjacent);\n                return ;\n            } else if (left != null) {\n                replaceInParent(node, left);\n                node.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null;\n            } else if (right != null) {\n                replaceInParent(node, right);\n                node.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null;\n            } else {\n                replaceInParent(node, null);\n            }\n            rebalance(originalParent, false);\n            (int)--;\n            (int)++;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deserialization":"unlink"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8aaff18a-3f3d-11e6-a16e-0f0735f793f2","method":{"position":"com.google.gson.internal.Excluder:224","type":"CtMethodImpl","sourcecode":"private boolean isStatic(java.lang.Class<?> clazz) {\n    if (clazz == clazz) {\n        {\n            return ((clazz.getModifiers()) & (java.lang.reflect.Modifier.java.lang.reflect.Modifier.int)) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz","rawSupertype":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8ab0189b-3f3d-11e6-a16e-7304de201388","method":{"position":"com.google.gson.internal.Streams:72","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"resource\")\npublic static java.io.Writer writerForAppendable(java.lang.Appendable appendable) {\n    if (appendable == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return appendable instanceof java.io.Writer ? ((java.io.Writer)(appendable)) : new com.google.gson.internal.Streams.AppendableWriter(appendable);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"appendable"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:822","type":"CtBinaryOperatorImpl"},"failures":[1,2,4,5,6,7,603,604,605,9,12,15,17,18,21,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,27,36,37,38,50,62,71,105,119,126,131,136,139,142,145,146,154,159,165,170,173,180,182,184,185,193,196,198,203,211,212,213,214,215,216,217,218,222,227,231,232,235,237,239,244,245,246,249,250,252,253,254,255,256,257,259,260,262,265,266,269,271,274,275,277,278,279,280,281,284,285,286,290,292,294,296,298,300,304,312,314,315,316,317,318,319,321,322,323,325,328,329,330,331,332,334,335,337,341,342,343,345,346,349,353,355,358,359,360,361,362,366,372,377,378,379,380,381,382,383,384,385,395,396,399,402,405,406,409,412,418,420,421,422,424,429,431,432,434,642,439,440,441,442,443,452,453,454,455,459,462,463,466,468,471,472,476,477,478,483,484,486,487,488,489,493,494,495,496,497,500,503,504,506,507,511,513,515,517,518,519,522,523,527,528,530,532,535,538,539,541,542,543,546,548,549,550,551,561,571,572,573,575,576,577,580,582,585,586,587,588,591,593,643,644,645,646,647,648,649,650,651,652,653,654,655,656,598,601],"tindex":"8ab0189c-3f3d-11e6-a16e-ddf9b9e18941","method":{"position":"com.google.gson.stream.JsonWriter:335","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter close(int empty, int nonempty, java.lang.String closeBracket) throws java.io.IOException {\n    if (nonempty == empty) {\n        {\n            int int = peek();\n            if ((context != nonempty) && (context != empty)) {\n                throw new java.lang.IllegalStateException(\"Nesting problem.\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException((\"Dangling name: \" + (java.lang.String)));\n            } \n            (int)--;\n            if (context == nonempty) {\n                newline();\n            } \n            java.io.Writer.write(closeBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"nonempty","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED":"empty"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1079","type":"CtBinaryOperatorImpl"},"failures":[657,658,659,138,266,307,308,309,310,311,314,354,355,356,357,456,457,473,474,475,479,480,485,523,597],"tindex":"8ab066bd-3f3d-11e6-a16e-a3206c1d042d","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        {\n            com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.get();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"8ab066be-3f3d-11e6-a16e-61d6b1f24a9b","method":{"position":"com.google.gson.internal.Excluder:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if (skipDeserialize) {\n        in.skipValue();\n        return null;\n    } \n    return delegate().read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:817","type":"CtVariableReadImpl"},"failures":[],"tindex":"8ab08dcf-3f3d-11e6-a16e-3198bd6b33f5","method":{"position":"com.google.gson.internal.$Gson$Preconditions:40","type":"CtMethodImpl","sourcecode":"public static void checkArgument(boolean condition) {\n    if (!condition) {\n        throw new java.lang.IllegalArgumentException();\n    } \n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"condition"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"8ab08dd0-3f3d-11e6-a16e-0fdfad3a1a32","method":{"position":"com.google.gson.internal.bind.TypeAdapters:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextLong();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8ab0b4e1-3f3d-11e6-a16e-db7e0b7d351c","method":{"position":"com.google.gson.JsonObject:161","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String memberName) {\n    if (memberName != null) {\n        {\n            if (memberName != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return ((com.google.gson.JsonPrimitive)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8ab0b4e2-3f3d-11e6-a16e-d597059c6982","method":{"position":"com.google.gson.JsonObject:161","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String memberName) {\n    if (memberName != null) {\n        {\n            if (memberName != null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return ((com.google.gson.JsonPrimitive)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8ab0dbf3-3f3d-11e6-a16e-d13318254188","method":{"position":"com.google.gson.stream.JsonReader:1448","type":"CtMethodImpl","sourcecode":"private boolean skipTo(java.lang.String toFind) throws java.io.IOException {\n    if (toFind != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            outer : for ( ; (((int) + (toFind.length())) <= (int)) || (fillBuffer(toFind.length())) ; (int)++) {\n                if ((char[][int]) == '\\n') {\n                    (int)++;\n                    int = (int) + 1;\n                    continue;\n                } \n                for (int int = 0 ; c < (toFind.length()) ; c++) {\n                    if ((char[][((int) + c)]) != (toFind.charAt(c))) {\n                        continue outer;\n                    } \n                }\n                return true;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"8ab10304-3f3d-11e6-a16e-25f535224b61","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:843","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (removeInternalByKey(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:378","type":"CtVariableReadImpl"},"failures":[],"tindex":"8ab10305-3f3d-11e6-a16e-99a00637b1e3","method":{"position":"com.google.gson.internal.LinkedTreeMap:310","type":"CtMethodImpl","sourcecode":"private void rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V> unbalanced, boolean insert) {\n    if (insert) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467344125528/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = unbalanced ; node != null ; node = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>) {\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                int int = left != null ? left.int : 0;\n                int int = right != null ? right.int : 0;\n                int int = leftHeight - rightHeight;\n                if (delta == (-2)) {\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    int int = rightRight != null ? rightRight.int : 0;\n                    int int = rightLeft != null ? rightLeft.int : 0;\n                    int int = rightLeftHeight - rightRightHeight;\n                    if ((rightDelta == (-1)) || ((rightDelta == 0) && (!insert))) {\n                        rotateLeft(node);\n                    } else {\n                        assert rightDelta == 1;\n                        rotateRight(right);\n                        rotateLeft(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 2) {\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    int int = leftRight != null ? leftRight.int : 0;\n                    int int = leftLeft != null ? leftLeft.int : 0;\n                    int int = leftLeftHeight - leftRightHeight;\n                    if ((leftDelta == 1) || ((leftDelta == 0) && (!insert))) {\n                        rotateRight(node);\n                    } else {\n                        assert leftDelta == (-1);\n                        rotateLeft(left);\n                        rotateRight(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 0) {\n                    node.int = leftHeight + 1;\n                    if (insert) {\n                        break;\n                    } \n                } else {\n                    assert (delta == (-1)) || (delta == 1);\n                    node.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                    if (!insert) {\n                        break;\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"insert"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":14,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}