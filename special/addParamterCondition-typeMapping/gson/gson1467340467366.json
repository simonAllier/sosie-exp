{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":454,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":77,"com.google.gson.functional.StringTest.testStringValueDeserialization":75,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":638,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":176,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":406,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":367,"com.google.gson.stream.JsonWriterTest.testRepeatedName":635,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":218,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":349,"com.google.gson.MixedStreamTest.testWriteLenient":5,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":226,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":315,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":279,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":594,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":297,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":177,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":194,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":313,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":415,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":213,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":305,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":115,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":376,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":125,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":558,"com.google.gson.functional.ObjectTest.testSingletonLists":311,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":272,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":308,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":78,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":360,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":578,"com.google.gson.stream.JsonWriterTest.testStrings":640,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":494,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":514,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":199,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":288,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":328,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":11,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":418,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":105,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":628,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":91,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":93,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":67,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":407,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":158,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":352,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":589,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":34,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":157,"com.google.gson.functional.EnumTest.testEnumCaseMapping":212,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":16,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":76,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":351,"com.google.gson.functional.JsonTreeTest.testToJsonTree":528,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":72,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":616,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":510,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":581,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":133,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":248,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":625,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":265,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":362,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":561,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":187,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":520,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":88,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":324,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":428,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":643,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":368,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":329,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":32,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":478,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":337,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":642,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":290,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":614,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":433,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":546,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":432,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":287,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":412,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField":592,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":626,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":391,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":439,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":615,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":49,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":271,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":389,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":150,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":227,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":404,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":538,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":262,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":576,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":480,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":172,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":233,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":413,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":405,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":43,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":336,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":21,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":23,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":319,"com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes":613,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":168,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":225,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":372,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":309,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":501,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":123,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":28,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":482,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":174,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":511,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":277,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":25,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":264,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":477,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":523,"com.google.gson.functional.CollectionTest.testSetDeserialization":193,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":116,"com.google.gson.functional.EnumTest.testEnumSet":203,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":215,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":323,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":396,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":124,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":481,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":145,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":252,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":330,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":122,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":588,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":409,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":27,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":420,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":29,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":518,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":421,"com.google.gson.functional.MapTest.testHashMapDeserialization":139,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":365,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":183,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":276,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":456,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":452,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":529,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":517,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":572,"com.google.gson.functional.MapTest.testSortedMap":161,"com.google.gson.functional.MapTest.testMapSerialization":156,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":455,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":98,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":402,"com.google.gson.JsonPrimitiveTest.testByteEqualsShort":612,"com.google.gson.JsonPrimitiveTest.testByteEqualsBigInteger":603,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":56,"com.google.gson.functional.MapTest.testSerializeMaps":142,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":295,"com.google.gson.functional.MapTest.testComplexKeysSerialization":169,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":214,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":173,"com.google.gson.JsonPrimitiveTest.testLongEqualsBigInteger":605,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":63,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":210,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":522,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":570,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":541,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":208,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":70,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":618,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":220,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":339,"com.google.gson.functional.MapTest.testStringKeyDeserialization":171,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":60,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":486,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":435,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":175,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":371,"com.google.gson.functional.PrettyPrintingTest.testMap":68,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":366,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":551,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":180,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":245,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":458,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":515,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":10,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":62,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":627,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":81,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":85,"com.google.gson.functional.MapTest.testMapSerializationEmpty":170,"com.google.gson.functional.CollectionTest.testQueueSerialization":184,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":259,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":397,"com.google.gson.functional.MapTest.testMapOfMapSerialization":155,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":388,"com.google.gson.JavaSerializationTest.testMapIsSerializable":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":267,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":190,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":399,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":451,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":495,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":79,"com.google.gson.functional.FieldNamingTest.testIdentity":296,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":483,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":468,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":341,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":224,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":299,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":310,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":527,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":354,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":590,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":80,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":474,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":235,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":394,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":281,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":583,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":254,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":261,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":450,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":136,"com.google.gson.functional.MapTest.testMapSubclassSerialization":141,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":431,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":132,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":303,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":217,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":3,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":386,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":553,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":228,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":244,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":446,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":513,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":121,"com.google.gson.functional.EnumTest.testEnumSubclass":206,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":408,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":12,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":326,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":353,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":473,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":414,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":485,"com.google.gson.JsonPrimitiveTest.testShortEqualsInteger":609,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":536,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":356,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":237,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject":19,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":392,"com.google.gson.JsonPrimitiveTest.testByteEqualsLong":599,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":236,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":499,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":52,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":582,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":322,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":398,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":223,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":390,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":636,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":284,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":312,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":138,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":51,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":231,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":45,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":118,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":521,"com.google.gson.CommentsTest.testParseComments":579,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":314,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":490,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":564,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":58,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":411,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":464,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":97,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":83,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":160,"com.google.gson.MixedStreamTest.testReadInvalidState":2,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":112,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":130,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":0,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":430,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":99,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":364,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":64,"com.google.gson.JsonPrimitiveTest.testDoubleEqualsBigDecimal":601,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":461,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":381,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":449,"com.google.gson.JsonArrayTest.testRemove":617,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":269,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":425,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":48,"com.google.gson.functional.MapTest.testMapDeserialization":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":263,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":73,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":137,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":557,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":619,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":147,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":508,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":563,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":559,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":542,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":207,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":526,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":243,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":327,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":342,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":531,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":554,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":500,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":249,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":129,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":234,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":540,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":69,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":159,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":585,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":289,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":350,"com.google.gson.functional.PrimitiveTest.testShortSerialization":429,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":492,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":566,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":417,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":36,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":387,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":416,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":253,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":363,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":292,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":205,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":179,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":302,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":143,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":380,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":200,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":437,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":278,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":571,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":9,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":620,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":444,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":438,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":624,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":222,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":343,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":484,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":507,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":239,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":622,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":423,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":66,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":393,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":487,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":347,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":318,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":211,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":216,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":533,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":188,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":250,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":549,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":488,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":556,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":270,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":565,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":370,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":256,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":575,"com.google.gson.stream.JsonWriterTest.testNullStringValue":633,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":567,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":274,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":181,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":504,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":357,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":424,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":395,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":441,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":37,"com.google.gson.JsonPrimitiveTest.testEquals":611,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":204,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":562,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":460,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":100,"com.google.gson.functional.MapTest.testGeneralMapField":165,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":316,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":42,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":443,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":57,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":475,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":550,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":280,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":163,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":240,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":361,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":545,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":419,"com.google.gson.MixedStreamTest.testReadMixedStreamed":8,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":151,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":251,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":382,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":195,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":574,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":591,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":307,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":400,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":35,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":13,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":26,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":268,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":152,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":135,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":140,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":442,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":491,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":96,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":108,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":634,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":383,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":621,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":266,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":232,"com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes":610,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":469,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":189,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":238,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":569,"com.google.gson.JsonPrimitiveTest.testFloatEqualsDouble":604,"com.google.gson.functional.ObjectTest.testNestedDeserialization":348,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":497,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":94,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":334,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":457,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":498,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":33,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":440,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":463,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":82,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":153,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":219,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":120,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":427,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":532,"com.google.gson.JavaSerializationTest.testListIsSerializable":15,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":230,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":301,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":198,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":535,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":134,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":144,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":164,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":355,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":54,"com.google.gson.functional.MapTest.testInterfaceTypeMap":162,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":552,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":503,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":358,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":209,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":623,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields":595,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":539,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":555,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":241,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":31,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":374,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsLong":607,"com.google.gson.MixedStreamTest.testWriteClosed":7,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":186,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":459,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":291,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":317,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":506,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":126,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":502,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":466,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":345,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":462,"com.google.gson.JsonPrimitiveTest.testShortEqualsLong":602,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":286,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":320,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":509,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":185,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":109,"com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger":598,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":403,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":111,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":537,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":191,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":275,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":470,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":445,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":447,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":379,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":525,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":246,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":39,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":524,"com.google.gson.functional.CollectionTest.testQueueDeserialization":201,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":465,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":385,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":401,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField":20,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":87,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":453,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":285,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":149,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":338,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":639,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":258,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":346,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":547,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":178,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":1,"com.google.gson.functional.MapTest.testRawMapSerialization":167,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":196,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":273,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":596,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":332,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":530,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":103,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":568,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":584,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":44,"com.google.gson.functional.PrimitiveTest.testByteSerialization":426,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":512,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":586,"com.google.gson.ObjectTypeAdapterTest.testSerialize":577,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":631,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":543,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":369,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":600,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":298,"com.google.gson.JsonPrimitiveTest.testFloatEqualsBigDecimal":597,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":55,"com.google.gson.JsonPrimitiveTest.testByteEqualsInteger":606,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":293,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":84,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":127,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":587,"com.google.gson.functional.MapTest.testMapWithQuotes":154,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":377,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":629,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":86,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":479,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":573,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":496,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":202,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":434,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":114,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":560,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":117,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":344,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":255,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":410,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":61,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":321,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":282,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":247,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":257,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":300,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":422,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":192,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":47,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":40,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":119,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":283,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":534,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":471,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsBigInteger":608,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":304,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":580,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":516,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":131,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":359,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields":593,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":644,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":493,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":331,"com.google.gson.functional.ObjectTest.testNestedSerialization":333,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":38,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":90,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":373,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":544,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":95,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":166,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":101,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":65,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":6,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":18,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":641,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":325,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":467,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":436,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":505,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":306,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":260,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":17,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":375,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":242,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":335,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":106,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":89,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":50,"com.google.gson.functional.CollectionTest.testSetSerialization":197,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":476,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":71,"com.google.gson.functional.StringTest.testStringValueSerialization":92,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":489,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":548,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":182,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":221,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":448,"com.google.gson.MixedStreamTest.testWriteInvalidState":4,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":41,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":378,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":59,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":384,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":22,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":630,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":294,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":519,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":472,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":30,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":128,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":632,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":146,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":637,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":24,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":46},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:163","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"54bbed11-3f34-11e6-af42-635402755c99","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src instanceof java.lang.Class) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:174","type":"CtInvocationImpl"},"failures":[],"tindex":"54bc3b32-3f34-11e6-af42-516710ff516a","method":{"position":"com.google.gson.internal.LinkedTreeMap:207","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    return (a == b) || ((a != null) && (a.equals(b)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"a","this":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"54bc3b33-3f34-11e6-af42-251cd1c2be14","method":{"position":"com.google.gson.internal.bind.TypeAdapters:126","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.BitSet src) throws java.io.IOException {\n    if (src == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginArray();\n    for (int int = 0 ; i < (src.length()) ; i++) {\n        int int = src.get(i) ? 1 : 0;\n        out.value(value);\n    }\n    out.endArray();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:398","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,0,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595],"tindex":"54bc6244-3f34-11e6-af42-a562bccea621","method":{"position":"com.google.gson.internal.Excluder:215","type":"CtMethodImpl","sourcecode":"private boolean isAnonymousOrLocal(java.lang.Class<?> clazz) {\n    if (clazz == null) {\n        {\n            return (!(java.lang.Enum.java.lang.Enum.java.lang.Class.isAssignableFrom(clazz))) && ((clazz.isAnonymousClass()) || (clazz.isLocalClass()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredByRaw":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl"},"failures":[1,3,21,40,46,51,55,57,63,65,67,68,69,70,71,72,73,74,96,596,104,107,108,111,112,113,114,115,116,117,119,120,121,122,123,124,126,127,128,130,133,142,156,165,167,175,177,180,185,188,194,197,198,202,220,224,234,237,292,293,294,295,296,303,304,308,314,323,325,330,333,340,342,345,421,428,430,452,454,455,463,464,466,468,469,487,489,502,508,514,518,525,526,527,528,535,540,543,546,547,548,572,575,576,577],"tindex":"54bc8955-3f34-11e6-af42-73287aa46da2","method":{"position":"com.google.gson.internal.bind.TypeAdapters:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"54bc8956-3f34-11e6-af42-9f3cd39c11d1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:401","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"54bc8957-3f34-11e6-af42-9f9d59e54801","method":{"position":"com.google.gson.FieldNamingPolicy:163","type":"CtMethodImpl","sourcecode":"private static java.lang.String modifyString(char firstCharacter, java.lang.String srcString, int indexOfSubstring) {\n    if (indexOfSubstring == indexOfSubstring) {\n        {\n            return indexOfSubstring < (srcString.length()) ? firstCharacter + (srcString.substring(indexOfSubstring)) : java.lang.String.valueOf(firstCharacter);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"indexOfSubstring","com.google.gson.stream.JsonReader.PEEKED_END_OBJECT":"indexOfSubstring"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:199","type":"CtUnaryOperatorImpl"},"failures":[597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,525,528,617,618],"tindex":"54bc8958-3f34-11e6-af42-0748cb7aa864","method":{"position":"com.google.gson.JsonPrimitive:305","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (!(obj instanceof java.lang.reflect.TypeVariable)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((com.google.gson.JsonPrimitive.this) == obj) {\n                return true;\n            } \n            if ((obj == null) || ((getClass()) != (obj.getClass()))) {\n                return false;\n            } \n            com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(obj));\n            if ((java.lang.Object) == null) {\n                return (other.java.lang.Object) == null;\n            } \n            if ((com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))) {\n                return (getAsNumber().longValue()) == (other.getAsNumber().longValue());\n            } \n            if (((java.lang.Object) instanceof java.lang.Number) && ((other.java.lang.Object) instanceof java.lang.Number)) {\n                double double = getAsNumber().doubleValue();\n                double double = other.getAsNumber().doubleValue();\n                return (a == b) || ((java.lang.Double.isNaN(a)) && (java.lang.Double.isNaN(b)));\n            } \n            return java.lang.Object.equals(other.java.lang.Object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"54bcb069-3f34-11e6-af42-d1b94e2e6b92","method":{"position":"com.google.gson.internal.bind.TypeAdapters:509","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.UUID value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl"},"failures":[1,3,6,10,619,16,18,21,620,621,622,22,23,29,30,31,32,33,34,35,36,37,38,39,40,44,45,49,50,55,57,61,65,68,69,70,74,76,77,78,79,80,83,85,89,92,93,94,95,96,99,101,623,624,596,625,626,627,628,104,107,108,111,112,114,115,116,117,119,120,121,122,123,124,126,127,128,130,133,135,141,142,145,147,149,154,155,156,160,162,164,165,166,167,169,172,175,176,177,178,179,184,186,187,188,191,194,195,197,200,202,203,204,205,206,209,211,212,213,216,218,220,224,225,234,237,239,240,241,245,629,247,248,249,630,255,257,258,259,261,263,264,266,268,269,270,272,275,277,279,280,283,284,285,0,286,289,290,292,293,294,295,296,302,303,304,305,308,310,311,314,317,320,323,325,330,332,333,336,340,342,343,345,361,364,379,421,447,448,449,450,451,452,455,458,461,462,463,464,468,469,471,473,477,478,479,481,485,486,487,489,490,491,493,497,501,502,503,508,509,512,514,518,519,520,521,522,524,526,529,530,531,533,534,535,538,540,543,544,545,546,547,548,631,632,549,550,551,552,553,554,556,559,562,563,565,566,567,570,572,575,576,577,578,633,634,635,636,637,638,639,640,641,582,583,642,643,588,591],"tindex":"54bcb06a-3f34-11e6-af42-515a347daa06","method":{"position":"com.google.gson.stream.JsonWriter:532","type":"CtMethodImpl","sourcecode":"private void string(java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            java.lang.String[] java.lang.String[] = boolean ? com.google.gson.stream.JsonWriter.com.google.gson.stream.JsonWriter.java.lang.String[] : com.google.gson.stream.JsonWriter.com.google.gson.stream.JsonWriter.java.lang.String[];\n            java.io.Writer.write(\"\\\"\");\n            int int = 0;\n            int int = value.length();\n            for (int int = 0 ; i < length ; i++) {\n                char char = value.charAt(i);\n                java.lang.String java.lang.String;\n                if (c < 128) {\n                    replacement = replacements[c];\n                    if (replacement == null) {\n                        continue;\n                    } \n                } else if (c == '\\u2028') {\n                    replacement = \"\\\\u2028\";\n                } else if (c == '\\u2029') {\n                    replacement = \"\\\\u2029\";\n                } else {\n                    continue;\n                }\n                if (last < i) {\n                    java.io.Writer.write(value, last, (i - last));\n                } \n                java.io.Writer.write(replacement);\n                last = i + 1;\n            }\n            if (last < length) {\n                java.io.Writer.write(value, last, (length - last));\n            } \n            java.io.Writer.write(\"\\\"\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl"},"failures":[292,295,529,534,536,542],"tindex":"54bcd77b-3f34-11e6-af42-efebfbec7f6a","method":{"position":"com.google.gson.FieldNamingPolicy:137","type":"CtMethodImpl","sourcecode":"private static java.lang.String upperCaseFirstLetter(java.lang.String name) {\n    if (name != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = 0;\n            char char = name.charAt(index);\n            while (index < ((name.length()) - 1)) {\n                if (java.lang.Character.isLetter(firstCharacter)) {\n                    break;\n                } \n                fieldNameBuilder.append(firstCharacter);\n                firstCharacter = name.charAt((++index));\n            }\n            if (index == (name.length())) {\n                return fieldNameBuilder.toString();\n            } \n            if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n                java.lang.String java.lang.String = com.google.gson.FieldNamingPolicy.modifyString(java.lang.Character.toUpperCase(firstCharacter), name, (++index));\n                return fieldNameBuilder.append(modifiedTarget).toString();\n            } else {\n                return name;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"54bcfe8c-3f34-11e6-af42-27b5875d2d92","method":{"position":"com.google.gson.TreeTypeAdapter:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.JsonSerializer<T>) == null) {\n        delegate().write(out, value);\n        return ;\n    } \n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.JsonSerializer<T>.serialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonSerializationContext);\n    com.google.gson.internal.Streams.write(tree, out);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"54bcfe8d-3f34-11e6-af42-836b1980d50f","method":{"position":"com.google.gson.Gson:310","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextLong();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"54bcfe8e-3f34-11e6-af42-1115e9685243","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if ((json != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:430","type":"CtUnaryOperatorImpl"},"failures":[644],"tindex":"54bcfe8f-3f34-11e6-af42-c3342960822c","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:338","type":"CtMethodImpl","sourcecode":"private void rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> unbalanced, boolean insert) {\n    if (!insert) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = unbalanced ; node != null ; node = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                int int = left != null ? left.int : 0;\n                int int = right != null ? right.int : 0;\n                int int = leftHeight - rightHeight;\n                if (delta == (-2)) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = rightRight != null ? rightRight.int : 0;\n                    int int = rightLeft != null ? rightLeft.int : 0;\n                    int int = rightLeftHeight - rightRightHeight;\n                    if ((rightDelta == (-1)) || ((rightDelta == 0) && (!insert))) {\n                        rotateLeft(node);\n                    } else {\n                        assert rightDelta == 1;\n                        rotateRight(right);\n                        rotateLeft(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 2) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = leftRight != null ? leftRight.int : 0;\n                    int int = leftLeft != null ? leftLeft.int : 0;\n                    int int = leftLeftHeight - leftRightHeight;\n                    if ((leftDelta == 1) || ((leftDelta == 0) && (!insert))) {\n                        rotateRight(node);\n                    } else {\n                        assert leftDelta == (-1);\n                        rotateLeft(left);\n                        rotateRight(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 0) {\n                    node.int = leftHeight + 1;\n                    if (insert) {\n                        break;\n                    } \n                } else {\n                    assert (delta == (-1)) || (delta == 1);\n                    node.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                    if (!insert) {\n                        break;\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"skipPastFound":"insert"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:191","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"54bd4cb0-3f34-11e6-af42-296231c8ec9f","method":{"position":"com.google.gson.internal.Streams:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int i) throws java.io.IOException {\n    if ((i++) > i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.Appendable.append(((char)(i)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"size":"i","threshold":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:716","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"54bd4cb1-3f34-11e6-af42-556319f05c88","method":{"position":"com.google.gson.stream.JsonReader:755","type":"CtMethodImpl","sourcecode":"private boolean isLiteral(char c) throws java.io.IOException {\n    if ((c < '0') || (c > '9')) {\n        {\n            switch (c) {\n                case '/' :\n                case '\\\\' :\n                case ';' :\n                case '#' :\n                case '=' :\n                    checkLenient();\n                case '{' :\n                case '}' :\n                case '[' :\n                case ']' :\n                case ':' :\n                case ',' :\n                case ' ' :\n                case '\\t' :\n                case '\\f' :\n                case '\\r' :\n                case '\\n' :\n                    return false;\n                default :\n                    return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"54bd4cb2-3f34-11e6-af42-eb7bd7b24ca8","method":{"position":"com.google.gson.JsonObject:111","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Character value) {\n    if (property == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"54bd4cb3-3f34-11e6-af42-7dedd472d2ae","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if (value instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                type = value.getClass();\n            } \n            return type;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:556","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"54bd73c4-3f34-11e6-af42-41065f50a0f8","method":{"position":"com.google.gson.stream.JsonWriter:353","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if ((newTop != newTop) && (newTop != (java.text.DateFormat.java.text.DateFormat.int))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                int[] = newStack;\n            } \n            int[][((int)++)] = newTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"dateStyle":"newTop","timeStyle":"newTop","java.text.DateFormat.DEFAULT":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"54bd73c5-3f34-11e6-af42-0fd301a34fcd","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"54bd73c6-3f34-11e6-af42-5fcaaea40ad4","method":{"position":"com.google.gson.reflect.TypeToken:272","type":"CtMethodImpl","sourcecode":"private static boolean matches(java.lang.reflect.Type from, java.lang.reflect.Type to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeMap) {\n    if (to == to) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (to.equals(from)) || ((from instanceof java.lang.reflect.TypeVariable) && (to.equals(typeMap.get(((java.lang.reflect.TypeVariable<?>)(from)).getName()))));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"to","java.sql.Timestamp.class":"to"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:154","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"54bd9ad7-3f34-11e6-af42-a51b09b7a314","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (!serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467340023210/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":23,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}