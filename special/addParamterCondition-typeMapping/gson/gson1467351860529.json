{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":142,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":321,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":45,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":99,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":260,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":353,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":180,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":52,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":111,"com.google.gson.functional.PrimitiveTest.testShortSerialization":245,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":343,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":24,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":137,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":238,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":154,"com.google.gson.MixedStreamTest.testWriteLenient":4,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":183,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":130,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":172,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":188,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":112,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":114,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":122,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":193,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":135,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":196,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":75,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":126,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":249,"com.google.gson.functional.ObjectTest.testSingletonLists":199,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":168,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":197,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":53,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":301,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":252,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":8,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":139,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":216,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":68,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":144,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":281,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":60,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":43,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":133,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":136,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":317,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":120,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":330,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":337,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":358,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":22,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":166,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":342,"com.google.gson.functional.EnumTest.testEnumCaseMapping":134,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":10,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":51,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":156,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":348,"com.google.gson.functional.JsonTreeTest.testToJsonTree":313,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":344,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":48,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":295,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":299,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":151,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":232,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":250,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":25,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":339,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":129,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":340,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":119,"com.google.gson.functional.MapTest.testGeneralMapField":104,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":29,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":306,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":38,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":274,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":331,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":173,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":145,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":220,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":244,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":324,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":356,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":239,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":208,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":20,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":276,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":226,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":123,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":355,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":360,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":73,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":182,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":325,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":23,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":164,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":236,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":89,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":230,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":34,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":214,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":251,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":284,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":167,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":63,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":163,"com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode":367,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":320,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":270,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":349,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":288,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":61,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":212,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":109,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":289,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":21,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":237,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":265,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":30,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":213,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":13,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":15,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":141,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":222,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":365,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":79,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":243,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":361,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":292,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":82,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":192,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":125,"com.google.gson.functional.ObjectTest.testNullSerialization":205,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":319,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":171,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":103,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":219,"com.google.gson.functional.MapTest.testInterfaceTypeMap":101,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":162,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":275,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":333,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":294,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":76,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":66,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":132,"com.google.gson.functional.EnumTest.testEnumSet":128,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":204,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":336,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":83,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":278,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":146,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":19,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":93,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":209,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":81,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":357,"com.google.gson.MixedStreamTest.testWriteClosed":6,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":17,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":118,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":304,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":201,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":240,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse":366,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":84,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":293,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":268,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":16,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":217,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":264,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":258,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":314,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":347,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":179,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":202,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":298,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":117,"com.google.gson.functional.MapTest.testMapSerialization":98,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":261,"com.google.gson.functional.MapTest.testSerializeMaps":92,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":186,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":71,"com.google.gson.functional.MapTest.testComplexKeysSerialization":107,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":169,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":41,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":253,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":308,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":224,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":346,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":310,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":27,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":309,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":267,"com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides":363,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":227,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":302,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":259,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":46,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":177,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":138,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":95,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":158,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":280,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":326,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":113,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":248,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":0,"com.google.gson.functional.MapTest.testRawMapSerialization":106,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":110,"com.google.gson.functional.PrettyPrintingTest.testMap":44,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":332,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":115,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":210,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":315,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":148,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":262,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":7,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":57,"com.google.gson.functional.MapTest.testMapSerializationEmpty":108,"com.google.gson.functional.CollectionTest.testQueueSerialization":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":159,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":345,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":352,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":31,"com.google.gson.functional.PrimitiveTest.testByteSerialization":242,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":300,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":354,"com.google.gson.functional.MapTest.testMapOfMapSerialization":97,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":328,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":228,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":322,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":189,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":233,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":257,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":286,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":54,"com.google.gson.functional.FieldNamingTest.testIdentity":187,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":37,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":184,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":85,"com.google.gson.functional.MapTest.testMapWithQuotes":96,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":269,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":149,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":140,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":190,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":198,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":312,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":277,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":287,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":127,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":359,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":55,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":147,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":273,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":231,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":74,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":181,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":256,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":77,"com.google.gson.functional.MapTest.testMapSubclassSerialization":91,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":247,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":50,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":155,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":194,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":235,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":40,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":1,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":67,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":334,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":174,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":80,"com.google.gson.functional.EnumTest.testEnumSubclass":131,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":150,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":234,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":9,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":218,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":272,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":157,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":191,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":303,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":279,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":28,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":175,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":318,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":271,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":364,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":143,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":195,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":290,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":285,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":350,"com.google.gson.functional.ObjectTest.testNestedSerialization":211,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":26,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":223,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":323,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":62,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":229,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":105,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":65,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":176,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":42,"com.google.gson.MixedStreamTest.testWriteNulls":2,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":36,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":5,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":12,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":32,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":206,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":307,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":200,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":283,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":296,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":266,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":11,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":56,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":100,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":72,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":58,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":87,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":178,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":246,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":35,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":64,"com.google.gson.functional.CollectionTest.testSetSerialization":124,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":47,"com.google.gson.functional.StringTest.testStringValueSerialization":59,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":282,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":327,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":254,"com.google.gson.MixedStreamTest.testWriteInvalidState":3,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":221,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":203,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":362,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":263,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":225,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":39,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":255,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":165,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":241,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":153,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":161,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":185,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":49,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":305,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":90,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":94,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":297,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":341,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":338,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":311,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":18,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":86,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":170,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":207,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":215,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":316,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":329,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":335,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":291,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":152,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":33},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:99","type":"CtVariableReadImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360],"tindex":"db96a2f6-3f4e-11e6-ba94-9d5118ec10eb","method":{"position":"com.google.gson.stream.JsonWriter:252","type":"CtMethodImpl","sourcecode":"public final void setHtmlSafe(boolean htmlSafe) {\n    if (htmlSafe) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351700345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = htmlSafe;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialization":"htmlSafe"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonObject:54","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"db96f117-3f4e-11e6-ba94-57e0be0d5c6e","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351700345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.contains(element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,292,293,294,297,298,300,301,302,303,304,305,306,307,308,309,311,314,315,316,361,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,355,356,357,358,359,360],"tindex":"db971828-3f4e-11e6-ba94-5f7eea0548ad","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351700345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:109","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"db973f39-3f4e-11e6-ba94-9b832a0c0786","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src instanceof com.google.gson.JsonPrimitive) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351700345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"db973f3a-3f4e-11e6-ba94-770eeb9fbc23","method":{"position":"com.google.gson.JsonObject:100","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Boolean value) {\n    if ((property != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351700345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl"},"failures":[362,363,364,365,366,367],"tindex":"db973f3b-3f4e-11e6-ba94-95d430acd718","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ncom.google.gson.internal.LinkedHashTreeMap.Node<K, V> findByObject(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.GenericArrayType) {\n        {\n            try {\n                return key != null ? find(((K)(key)), false) : null;\n            } catch (java.lang.ClassCastException e) {\n                return null;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351700345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"db973f3c-3f4e-11e6-ba94-2951d2426e0b","method":{"position":"com.google.gson.stream.JsonReader:1448","type":"CtMethodImpl","sourcecode":"private boolean skipTo(java.lang.String toFind) throws java.io.IOException {\n    if (toFind == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467351700345/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            outer : for ( ; (((int) + (toFind.length())) <= (int)) || (fillBuffer(toFind.length())) ; (int)++) {\n                if ((char[][int]) == '\\n') {\n                    (int)++;\n                    int = (int) + 1;\n                    continue;\n                } \n                for (int int = 0 ; c < (toFind.length()) ; c++) {\n                    if ((char[][((int) + c)]) != (toFind.charAt(c))) {\n                        continue outer;\n                    } \n                }\n                return true;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":7,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}