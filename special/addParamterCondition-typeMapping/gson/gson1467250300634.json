{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":117,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":227,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":214,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":274,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":29,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":226,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":202,"com.google.gson.stream.JsonWriterTest.testRepeatedName":21,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":105,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":95,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":7,"com.google.gson.MixedStreamTest.testWriteLenient":48,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":253,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":153,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":258,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":260,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":157,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":268,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":163,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":97,"com.google.gson.functional.ObjectTest.testSingletonLists":230,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":196,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":286,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":292,"com.google.gson.stream.JsonWriterTest.testStrings":42,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":149,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":290,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":74,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":107,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":244,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":80,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":81,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":293,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":5,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":123,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":272,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":156,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":113,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":266,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":34,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":165,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":197,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":2,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":143,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":201,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":0,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":139,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":193,"com.google.gson.stream.JsonWriterTest.testNullStringValue":15,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":203,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":277,"com.google.gson.stream.JsonWriterTest.testNulls":18,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":135,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":77,"com.google.gson.stream.JsonWriterTest.testEmptyObject":32,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder":296,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":65,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":152,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":199,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":265,"com.google.gson.functional.MapTest.testGeneralMapField":219,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":172,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":247,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":89,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":146,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":217,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":52,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":92,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":187,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":91,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":94,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":51,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":269,"com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles":35,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":161,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":188,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":30,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":142,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":98,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":177,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":242,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":144,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":191,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":8,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":83,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":20,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":291,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":141,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":116,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":54,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":194,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":288,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":104,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":240,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":224,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":63,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":173,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":241,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":37,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":71,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":280,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":109,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":126,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":118,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":129,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":10,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":271,"com.google.gson.stream.JsonWriterTest.testEmptyArray":11,"com.google.gson.stream.JsonWriterTest.testDoubles":39,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":115,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":145,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":218,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":36,"com.google.gson.functional.MapTest.testInterfaceTypeMap":216,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":90,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":120,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":164,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":73,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":155,"com.google.gson.functional.EnumTest.testEnumSet":151,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":235,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":130,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":100,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":208,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":237,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":44,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":128,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":33,"com.google.gson.MixedStreamTest.testWriteClosed":50,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":150,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":264,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":3,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":232,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":131,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":119,"com.google.gson.stream.JsonWriterTest.testLongs":17,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":62,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":245,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":67,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":110,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":192,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":148,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":122,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":233,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":263,"com.google.gson.functional.MapTest.testMapSerialization":213,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":68,"com.google.gson.functional.MapTest.testSerializeMaps":207,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":256,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":84,"com.google.gson.functional.MapTest.testComplexKeysSerialization":222,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":267,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":287,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":184,"com.google.gson.stream.JsonWriterTest.testNumbers":41,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":56,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":249,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":204,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":170,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":250,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":275,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":297,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":106,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":210,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":31,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":4,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":189,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":259,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":45,"com.google.gson.functional.MapTest.testRawMapSerialization":221,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":225,"com.google.gson.functional.PrettyPrintingTest.testMap":273,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":75,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":111,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":238,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":261,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":69,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":79,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":140,"com.google.gson.functional.MapTest.testMapSerializationEmpty":223,"com.google.gson.functional.CollectionTest.testQueueSerialization":262,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":38,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":40,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":174,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":86,"com.google.gson.functional.MapTest.testMapOfMapSerialization":212,"com.google.gson.ObjectTypeAdapterTest.testSerialize":285,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":185,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":13,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":60,"com.google.gson.functional.FieldNamingTest.testIdentity":257,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":180,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":254,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":132,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":24,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":53,"com.google.gson.functional.MapTest.testMapWithQuotes":211,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":108,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":229,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":16,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":99,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":167,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":136,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":162,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":283,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":26,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":59,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":124,"com.google.gson.functional.MapTest.testMapSubclassSerialization":206,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":294,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":279,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":158,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":183,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":46,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":166,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":9,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":147,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":127,"com.google.gson.functional.EnumTest.testEnumSubclass":154,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":137,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":88,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":82,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":101,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":125,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":171,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":114,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":55,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":159,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":228,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":25,"com.google.gson.stream.JsonWriterTest.testTwoNames":12,"com.google.gson.stream.JsonWriterTest.testNullName":19,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":6,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":72,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":282,"com.google.gson.functional.ObjectTest.testNestedSerialization":239,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":66,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":93,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":186,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":27,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":190,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":23,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":220,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":252,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":195,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":179,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":22,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":49,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":43,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":175,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":236,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":248,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":103,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":231,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":64,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":1,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":169,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":215,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":76,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":160,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":134,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":96,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":178,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":251,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":284,"com.google.gson.functional.CollectionTest.testSetSerialization":270,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":102,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":276,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":85,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":57,"com.google.gson.JsonParserTest.testParseMixedArray":281,"com.google.gson.MixedStreamTest.testWriteInvalidState":47,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":234,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":295,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":61,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":58,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":182,"com.google.gson.stream.JsonWriterTest.testBooleans":14,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":138,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":255,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":246,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":278,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":205,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":121,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":209,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":200,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":198,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":168,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":289,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":133,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":243,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":87,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":112,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":28,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":176},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"652c5527-3e62-11e6-a19c-9d0d01266206","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:251","type":"CtBinaryOperatorImpl","sourcecode":"right != null"},"failures":[],"tindex":"652c7c38-3e62-11e6-a19c-57e11704a31f","method":{"position":"com.google.gson.internal.LinkedTreeMap:401","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if (root != null) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"right":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:274","type":"CtBinaryOperatorImpl","sourcecode":"target instanceof java.lang.String"},"failures":[],"tindex":"652ca349-3e62-11e6-a19c-d1b511c1bf93","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"target":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"652cca5a-3e62-11e6-a19c-ab191a48f282","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:64","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Date value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:119","type":"CtInvocationImpl","sourcecode":"isJsonPrimitive()"},"failures":[],"tindex":"652cca5b-3e62-11e6-a19c-f7e5cf41ac3a","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:245","type":"CtMethodImpl","sourcecode":"private java.lang.String keyToString(com.google.gson.JsonElement keyElement) {\n    if (keyElement.isJsonPrimitive()) {\n        com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = keyElement.getAsJsonPrimitive();\n        if (primitive.isNumber()) {\n            return java.lang.String.valueOf(primitive.getAsNumber());\n        } else if (primitive.isBoolean()) {\n            return java.lang.Boolean.toString(primitive.getAsBoolean());\n        } else if (primitive.isString()) {\n            return primitive.getAsString();\n        } else {\n            throw new java.lang.AssertionError();\n        }\n    } else if (keyElement.isJsonNull()) {\n        return \"null\";\n    } else {\n        throw new java.lang.AssertionError();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"keyElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"652cca5c-3e62-11e6-a19c-97b85eff39e6","method":{"position":"com.google.gson.FieldNamingPolicy:113","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"-\").toLowerCase();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[0,1,2,3],"tindex":"652cca5d-3e62-11e6-a19c-dbdaef8f9ec8","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"652cf16e-3e62-11e6-a19c-951adde8d5f5","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.contains(element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:178","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"652cf16f-3e62-11e6-a19c-21b9910b66af","method":{"position":"com.google.gson.JsonPrimitive:305","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if ((com.google.gson.JsonPrimitive.this) == obj) {\n        return true;\n    } \n    if ((obj == null) || ((getClass()) != (obj.getClass()))) {\n        return false;\n    } \n    com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(obj));\n    if ((java.lang.Object) == null) {\n        return (other.java.lang.Object) == null;\n    } \n    if ((com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))) {\n        return (getAsNumber().longValue()) == (other.getAsNumber().longValue());\n    } \n    if (((java.lang.Object) instanceof java.lang.Number) && ((other.java.lang.Object) instanceof java.lang.Number)) {\n        double double = getAsNumber().doubleValue();\n        double double = other.getAsNumber().doubleValue();\n        return (a == b) || ((java.lang.Double.isNaN(a)) && (java.lang.Double.isNaN(b)));\n    } \n    return java.lang.Object.equals(other.java.lang.Object);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"obj"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"652d1880-3e62-11e6-a19c-8d8611f96fa7","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:43","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (a == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a.compareTo(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[4,5,6,7,8,9,10],"tindex":"652d1881-3e62-11e6-a19c-adfbee4a236d","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if (value == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:309","type":"CtBinaryOperatorImpl","sourcecode":"(obj == null) || ((getClass()) != (obj.getClass()))"},"failures":[],"tindex":"652d1882-3e62-11e6-a19c-b9c737e3c181","method":{"position":"com.google.gson.reflect.TypeToken:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object o) {\n    if (o instanceof java.util.Iterator) {\n        {\n            return (o instanceof com.google.gson.reflect.TypeToken<?>) && (com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.Type, ((com.google.gson.reflect.TypeToken<?>)(o)).java.lang.reflect.Type));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"obj":"o","this":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"652d1883-3e62-11e6-a19c-a77de2115c5e","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"652d3f94-3e62-11e6-a19c-4344b1c040a6","method":{"position":"com.google.gson.internal.bind.TypeAdapters:491","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.InetAddress value) throws java.io.IOException {\n    out.value((value == null ? null : value.getHostAddress()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:694","type":"CtBinaryOperatorImpl","sourcecode":"last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E)"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,0,1,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,4,5,102,103,6,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"652d3f95-3e62-11e6-a19c-117253a6dee4","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if (empty == empty) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"empty","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"empty"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"652d66a6-3e62-11e6-a19c-f3642a8435b0","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:180","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    T T = com.google.gson.internal.ObjectConstructor<T>.construct();\n    try {\n        in.beginObject();\n        while (in.hasNext()) {\n            java.lang.String java.lang.String = in.nextName();\n            com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField = java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>.get(name);\n            if ((field == null) || (!(field.boolean))) {\n                in.skipValue();\n            } else {\n                field.read(in, instance);\n            }\n        }\n    } catch (java.lang.IllegalStateException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.AssertionError(e);\n    }\n    in.endObject();\n    return instance;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[],"tindex":"652d66a7-3e62-11e6-a19c-59e7ac27d763","method":{"position":"com.google.gson.FieldNamingPolicy:122","type":"CtMethodImpl","sourcecode":"private static java.lang.String separateCamelCase(java.lang.String name, java.lang.String separator) {\n    if (name != null) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (int int = 0 ; i < (name.length()) ; i++) {\n                char char = name.charAt(i);\n                if ((java.lang.Character.isUpperCase(character)) && ((translation.length()) != 0)) {\n                    translation.append(separator);\n                } \n                translation.append(character);\n            }\n            return translation.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"name"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:297","type":"CtBinaryOperatorImpl","sourcecode":"(value) instanceof java.lang.Number"},"failures":[],"tindex":"652d8db8-3e62-11e6-a19c-0da8ca7ff8ff","method":{"position":"com.google.gson.TreeTypeAdapter:103","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class<?> hierarchyType, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , null , false , hierarchyType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:92","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof java.util.Iterator"},"failures":[],"tindex":"652d8db9-3e62-11e6-a19c-a9401575964b","method":{"position":"com.google.gson.reflect.TypeToken:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object o) {\n    if (o instanceof java.util.Iterator) {\n        {\n            return (o instanceof com.google.gson.reflect.TypeToken<?>) && (com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.Type, ((com.google.gson.reflect.TypeToken<?>)(o)).java.lang.reflect.Type));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:87","type":"CtInvocationImpl","sourcecode":"isJsonObject()"},"failures":[],"tindex":"652d8dba-3e62-11e6-a19c-81cc1d490c34","method":{"position":"com.google.gson.JsonObject:121","type":"CtMethodImpl","sourcecode":"private com.google.gson.JsonElement createJsonElement(java.lang.Object value) {\n    return value == null ? com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull : new com.google.gson.JsonPrimitive(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"652db4cb-3e62-11e6-a19c-8379b6d1eae5","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"652db4cc-3e62-11e6-a19c-218c7ed7164b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.reflect.TypeToken:164","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"652db4cd-3e62-11e6-a19c-fba54dc3a307","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            T T = ((T)(fromJson(jsonReader, typeOfT)));\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"652db4ce-3e62-11e6-a19c-6b7c3aea80dd","method":{"position":"com.google.gson.internal.bind.TypeAdapters:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    out.value((value == null ? \"null\" : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:919","type":"CtBinaryOperatorImpl","sourcecode":"p != (com.google.gson.stream.JsonReader.PEEKED_BUFFERED)"},"failures":[294,295,296,297],"tindex":"652ddbdf-3e62-11e6-a19c-a138e391a22e","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize != targetSize) {\n        {\n            int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n            int = treeCapacity - targetSize;\n            int = 0;\n            int = 0;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"targetSize","com.google.gson.stream.JsonReader.PEEKED_BUFFERED":"targetSize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:136","type":"CtInvocationImpl","sourcecode":"isJsonNull()"},"failures":[],"tindex":"652ddbe0-3e62-11e6-a19c-e909fb7d008d","method":{"position":"com.google.gson.TypeAdapter:278","type":"CtMethodImpl","sourcecode":"public final T fromJsonTree(com.google.gson.JsonElement jsonTree) {\n    try {\n        com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.internal.bind.JsonTreeReader(jsonTree);\n        return read(jsonReader);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonTree"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"652ddbe1-3e62-11e6-a19c-2994fe46a01c","method":{"position":"com.google.gson.stream.JsonReader:1448","type":"CtMethodImpl","sourcecode":"private boolean skipTo(java.lang.String toFind) throws java.io.IOException {\n    if (toFind != null) {\n        {\n            outer : for ( ; (((int) + (toFind.length())) <= (int)) || (fillBuffer(toFind.length())) ; (int)++) {\n                if ((char[][int]) == '\\n') {\n                    (int)++;\n                    int = (int) + 1;\n                    continue;\n                } \n                for (int int = 0 ; c < (toFind.length()) ; c++) {\n                    if ((char[][((int) + c)]) != (toFind.charAt(c))) {\n                        continue outer;\n                    } \n                }\n                return true;\n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:280","type":"CtInvocationImpl","sourcecode":"standardPrimitive.isAssignableFrom(classOfPrimitive)"},"failures":[],"tindex":"652e02f2-3e62-11e6-a19c-cd042fbf9d09","method":{"position":"com.google.gson.internal.Excluder:215","type":"CtMethodImpl","sourcecode":"private boolean isAnonymousOrLocal(java.lang.Class<?> clazz) {\n    if (clazz.isAssignableFrom(clazz)) {\n        {\n            return (!(java.lang.Enum.java.lang.Enum.java.lang.Class.isAssignableFrom(clazz))) && ((clazz.isAnonymousClass()) || (clazz.isLocalClass()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"standardPrimitive":"clazz","classOfPrimitive":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[],"tindex":"652e02f3-3e62-11e6-a19c-a7d868f43b2c","method":{"position":"com.google.gson.reflect.TypeToken:111","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.Class<?> cls) {\n    if (cls.isInterface()) {\n        {\n            return isAssignableFrom(((java.lang.reflect.Type)(cls)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467249740429/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"cls"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":29,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}