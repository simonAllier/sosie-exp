{"failureDictionary":{"com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings":36,"com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext":142,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":39,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":97,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":116,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":72,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":90,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":66,"com.google.gson.JsonPrimitiveTest.testDeepCopy":125,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":23,"com.google.gson.JsonParserTest.testParseEmptyString":47,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":32,"com.google.gson.internal.bind.JsonElementReaderTest.testStrings":37,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs":131,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":11,"com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose":19,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":20,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":71,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":99,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":114,"com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber":127,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":3,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":105,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":100,"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":34,"com.google.gson.internal.bind.JsonElementReaderTest.testWrongType":35,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":51,"com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails":41,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":59,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":14,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInFr":133,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":8,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":29,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":67,"com.google.gson.JsonParserTest.testParseReader":42,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":55,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":27,"com.google.gson.JsonPrimitiveTest.testExponential":126,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":95,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":30,"com.google.gson.JsonPrimitiveTest.testStringsAndChar":122,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":1,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":9,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":38,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":40,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":54,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":17,"com.google.gson.DefaultDateTypeAdapterTest.testDatePattern":130,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":80,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":4,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":25,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":87,"com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput":140,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":63,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":111,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":103,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":60,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":107,"com.google.gson.functional.JsonTreeTest.testToJsonTree":108,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":61,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":77,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":117,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":79,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":113,"com.google.gson.JsonArrayTest.testSet":136,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":16,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":144,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":73,"com.google.gson.JsonPrimitiveTest.testEquals":124,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":98,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":92,"com.google.gson.functional.MapTest.testGeneralMapField":70,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":82,"com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization":129,"com.google.gson.JsonPrimitiveTest.testParsingStringAsBoolean":121,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":110,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":13,"com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities":33,"com.google.gson.JsonObjectTest.testDeepCopy":52,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":86,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":112,"com.google.gson.internal.bind.JsonElementReaderTest.testBooleans":31,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":5,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":50,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":7,"com.google.gson.JsonParserTest.testParseString":43,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":57,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":115,"com.google.gson.internal.bind.JsonTreeWriterTest.testEmptyWriter":24,"com.google.gson.JsonArrayTest.testDeepCopy":137,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":65,"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":134,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":12,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":58,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":75,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":88,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":10,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":28,"com.google.gson.JsonObjectTest.testAddingStringProperties":2,"com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes":123,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":104,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":21,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":68,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":93,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":81,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":109,"com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails":45,"com.google.gson.MixedStreamTest.testWriteNulls":118,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":74,"com.google.gson.JsonPrimitiveTest.testBoolean":119,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":49,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":64,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":44,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":78,"com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes":128,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":48,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":89,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":6,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":15,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":91,"com.google.gson.JsonParserTest.testParseMixedArray":46,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":94,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale":135,"com.google.gson.functional.MapTest.testInterfaceTypeMap":69,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":83,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":26,"com.google.gson.JsonStreamParserTest.testIterator":143,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":62,"com.google.gson.JsonArrayTest.testRemove":138,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":85,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":0,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":120,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":84,"com.google.gson.JsonStreamParserTest.testParseTwoStrings":141,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":106,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":22,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":101,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":18,"com.google.gson.LongSerializationPolicyTest.testStringLongSerialization":139,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":76,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale":132,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":102},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:318","type":"CtBinaryOperatorImpl","sourcecode":"delta == (-2)"},"failures":[],"tindex":"2c36a23c-3e37-11e6-8e46-c992f7984b15","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:41","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] buffer, int offset, int count) throws java.io.IOException {\n    if (count == (-2)) {\n        {\n            throw new java.lang.AssertionError();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delta":"count"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"2c36f05d-3e37-11e6-8e46-5549adcd0b55","method":{"position":"com.google.gson.JsonObject:121","type":"CtMethodImpl","sourcecode":"private com.google.gson.JsonElement createJsonElement(java.lang.Object value) {\n    if (value instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return value == null ? com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull : new com.google.gson.JsonPrimitive(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonObject:54","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"2c37176e-3e37-11e6-8e46-bd32d862ed34","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (jsonElement == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (jsonElement == null) {\n                {\n                    boolean boolean = writer.isLenient();\n                    writer.setLenient(true);\n                    boolean boolean = writer.isHtmlSafe();\n                    writer.setHtmlSafe(boolean);\n                    boolean boolean = writer.getSerializeNulls();\n                    writer.setSerializeNulls(boolean);\n                    try {\n                        com.google.gson.internal.Streams.write(jsonElement, writer);\n                    } catch (java.io.IOException e) {\n                        throw new com.google.gson.JsonIOException(e);\n                    } finally {\n                        writer.setLenient(oldLenient);\n                        writer.setHtmlSafe(oldHtmlSafe);\n                        writer.setSerializeNulls(oldSerializeNulls);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:455","type":"CtBinaryOperatorImpl","sourcecode":"(typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)"},"failures":[],"tindex":"2c37176f-3e37-11e6-8e46-85c9028df32f","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if ((src instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (src == null) {\n                        return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n                    } \n                    return toJson(src, src.getClass());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2c373e80-3e37-11e6-8e46-018c505131c5","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n    if ((fieldValue != null) || (!isPrimitive)) {\n        field.set(value, fieldValue);\n    } \n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"2c376591-3e37-11e6-8e46-0d374f901509","method":{"position":"com.google.gson.internal.$Gson$Types:213","type":"CtMethodImpl","sourcecode":"private static int hashCodeOrZero(java.lang.Object o) {\n    return o != null ? o.hashCode() : 0;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2c376592-3e37-11e6-8e46-114d6c311794","method":{"position":"com.google.gson.TreeTypeAdapter:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.JsonSerializer<T>) == null) {\n        delegate().write(out, value);\n        return ;\n    } \n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.JsonSerializer<T>.serialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonSerializationContext);\n    com.google.gson.internal.Streams.write(tree, out);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:917","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_UNQUOTED)"},"failures":[],"tindex":"2c376593-3e37-11e6-8e46-7b861bf70cc0","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:35","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] buffer, int offset, int counter) {\n    if (offset == offset) {\n        {\n            throw new java.lang.AssertionError();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"offset","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED":"offset"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,1,52,2,53,54,55,56,57,58,59,3,4,60,5,6,61,62,63,7,64,65,66,67,68,11,12,13,14,15,69,70,71,72,16,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,17,18,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"2c378ca4-3e37-11e6-8e46-db05a18d945d","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"target"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"2c378ca5-3e37-11e6-8e46-f36ad5fc60f9","method":{"position":"com.google.gson.Gson:254","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"2c37b3b6-3e37-11e6-8e46-25cd2b8198a6","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"2c37b3b7-3e37-11e6-8e46-83a324ddc46e","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (jsonElement == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (jsonElement == null) {\n                {\n                    boolean boolean = writer.isLenient();\n                    writer.setLenient(true);\n                    boolean boolean = writer.isHtmlSafe();\n                    writer.setHtmlSafe(boolean);\n                    boolean boolean = writer.getSerializeNulls();\n                    writer.setSerializeNulls(boolean);\n                    try {\n                        com.google.gson.internal.Streams.write(jsonElement, writer);\n                    } catch (java.io.IOException e) {\n                        throw new com.google.gson.JsonIOException(e);\n                    } finally {\n                        writer.setLenient(oldLenient);\n                        writer.setHtmlSafe(oldHtmlSafe);\n                        writer.setSerializeNulls(oldSerializeNulls);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"2c3828e8-3e37-11e6-8e46-b7ef0bbd7350","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if (src instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if ((src instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (src == null) {\n                        return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n                    } \n                    return toJson(src, src.getClass());\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"2c384ff9-3e37-11e6-8e46-a9f8c4f5f6d9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:491","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.InetAddress value) throws java.io.IOException {\n    out.value((value == null ? null : value.getHostAddress()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:109","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonPrimitive"},"failures":[],"tindex":"2c384ffa-3e37-11e6-8e46-959ff6a54846","method":{"position":"com.google.gson.internal.$Gson$Types:151","type":"CtMethodImpl","sourcecode":"static boolean equal(java.lang.Object a, java.lang.Object b) {\n    return (a == b) || ((a != null) && (a.equals(b)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.reflect.TypeToken:199","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"2c384ffb-3e37-11e6-8e46-65d30433e993","method":{"position":"com.google.gson.Gson:127","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonParseException {\n    if (typeOfT instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    } else {\n        {\n            return ((T)(fromJson(json, typeOfT)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[144],"tindex":"2c384ffc-3e37-11e6-8e46-41109d0256b1","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:370","type":"CtVariableReadImpl","sourcecode":"requiresThreadLocalCleanup"},"failures":[],"tindex":"2c384ffd-3e37-11e6-8e46-df944e5ecae1","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467231435777/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"requiresThreadLocalCleanup":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":18,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}