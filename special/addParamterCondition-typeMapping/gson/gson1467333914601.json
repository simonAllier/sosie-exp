{"failureDictionary":{"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":8,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":101,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":106,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":136,"com.google.gson.functional.MapTest.testComplexKeysSerialization":10,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":51,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":5,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":83,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":72,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":99,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":137,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":20,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":13,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":48,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":22,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":70,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":39,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":33,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":121,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":52,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":132,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":112,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":86,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":62,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":11,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":29,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":45,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":88,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":78,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":113,"com.google.gson.ObjectTypeAdapterTest.testSerialize":0,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":103,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":133,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":65,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":90,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":14,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":76,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":118,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":9,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":128,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":94,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":130,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":55,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":108,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":110,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":43,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":47,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":119,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":30,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":93,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":32,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":57,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":135,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":75,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":102,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":18,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":26,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":2,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":12,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":80,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":92,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":95,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":127,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":15,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":79,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":122,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":24,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":68,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":100,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":109,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":66,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":7,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":116,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":41,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":87,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":117,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":58,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":131,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":54,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":84,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":120,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":23,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":123,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":134,"com.google.gson.MixedStreamTest.testWriteNulls":81,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":37,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":19,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":115,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":60,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":38,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":6,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":3,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":64,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":31,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":16,"com.google.gson.functional.ObjectTest.testNullSerialization":77,"com.google.gson.functional.CollectionTest.testSetSerialization":50,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":67,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":114,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":53,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":73,"com.google.gson.JsonParserTest.testParseMixedArray":82,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":124,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":1,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":107,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":21,"com.google.gson.functional.CollectionTest.testSetDeserialization":49,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":34,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":35,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":27,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":74,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":111,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":97,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":17,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":126,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":105,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":91,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":46,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":125,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":44,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":71,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":25,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":4,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":42,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":85,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":28,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":40,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":98,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":63,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":104,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":36,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":61,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":129},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:168","type":"CtUnaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"12ffe985-3f25-11e6-b171-b35b07adbabc","method":{"position":"com.google.gson.internal.ConstructorConstructor:200","type":"CtMethodImpl","sourcecode":"private <T>com.google.gson.internal.ObjectConstructor<T> newUnsafeAllocator(final java.lang.reflect.Type type, final java.lang.Class<? super T> rawType) {\n    if (!(type instanceof java.lang.reflect.ParameterizedType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new com.google.gson.internal.ObjectConstructor<T>() {\n                private final com.google.gson.internal.UnsafeAllocator unsafeAllocator = com.google.gson.internal.UnsafeAllocator.create();\n\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                public T construct() {\n                    try {\n                        java.lang.Object java.lang.Object = com.google.gson.internal.UnsafeAllocator.newInstance(rawType);\n                        return ((T)(newInstance));\n                    } catch (java.lang.Exception e) {\n                        throw new java.lang.RuntimeException((((\"Unable to invoke no-args constructor for \" + type) + \". \") + \"Register an InstanceCreator with Gson for this type may fix this problem.\") , e);\n                    }\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"13012206-3f25-11e6-b171-d1bbfb46d041","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:116","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getFieldAdapter(com.google.gson.Gson gson, java.lang.reflect.Field field, com.google.gson.reflect.TypeToken<?> fieldType) {\n    if (field.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.annotations.JsonAdapter com.google.gson.annotations.JsonAdapter = field.getAnnotation(com.google.gson.annotations.JsonAdapter.com.google.gson.annotations.JsonAdapter.java.lang.Class);\n            if (annotation != null) {\n                com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, gson, fieldType, annotation);\n                if (adapter != null)\n                    return adapter;\n                \n            } \n            return gson.getAdapter(fieldType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1301be47-3f25-11e6-b171-f9fa16c2b701","method":{"position":"com.google.gson.internal.$Gson$Types:213","type":"CtMethodImpl","sourcecode":"private static int hashCodeOrZero(java.lang.Object o) {\n    return o != null ? o.hashCode() : 0;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonObject:54","type":"CtBinaryOperatorImpl"},"failures":[77,78],"tindex":"1301e558-3f25-11e6-b171-e356460eaceb","method":{"position":"com.google.gson.Gson:617","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {\n    if (jsonElement == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(jsonElement, writer);\n            return writer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"jsonElement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"1301e559-3f25-11e6-b171-d910c7865fbc","method":{"position":"com.google.gson.internal.bind.TypeAdapters:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return ((short)(in.nextInt()));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"13020c6a-3f25-11e6-b171-1108678a4a29","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Time value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:189","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"1302337b-3f25-11e6-b171-9f8509789b5a","method":{"position":"com.google.gson.internal.Primitives:69","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitive(java.lang.reflect.Type type) {\n    if (!(type instanceof java.lang.reflect.WildcardType)) {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,13,14,108,15,16,109,110,111,24,112,113,114,115,116,117,118,119,120,25,121,122,123,124,77,125,126,127,128,129,130,131,132,133,134,135,136,78,137],"tindex":"1302337c-3f25-11e6-b171-91b8f7fdf331","method":{"position":"com.google.gson.internal.bind.TypeAdapters:680","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, com.google.gson.JsonElement value) throws java.io.IOException {\n    if (value instanceof com.google.gson.JsonArray) {\n        {\n            if ((value == null) || (value.isJsonNull())) {\n                out.nullValue();\n            } else if (value.isJsonPrimitive()) {\n                com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = value.getAsJsonPrimitive();\n                if (primitive.isNumber()) {\n                    out.value(primitive.getAsNumber());\n                } else if (primitive.isBoolean()) {\n                    out.value(primitive.getAsBoolean());\n                } else {\n                    out.value(primitive.getAsString());\n                }\n            } else if (value.isJsonArray()) {\n                out.beginArray();\n                for (com.google.gson.JsonElement com.google.gson.JsonElement : value.getAsJsonArray()) {\n                    write(out, e);\n                }\n                out.endArray();\n            } else if (value.isJsonObject()) {\n                out.beginObject();\n                for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> : value.getAsJsonObject().entrySet()) {\n                    out.name(e.getKey());\n                    write(out, e.getValue());\n                }\n                out.endObject();\n            } else {\n                throw new java.lang.IllegalArgumentException((\"Couldn't write \" + (value.getClass())));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:497","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"13025a8d-3f25-11e6-b171-e533d39e0ac7","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if ((o instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:199","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"1302819e-3f25-11e6-b171-196c21e36b5a","method":{"position":"com.google.gson.internal.$Gson$Types:394","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.reflect.TypeVariable<?> unknown) {\n    java.lang.Class<?> java.lang.Class<?> = com.google.gson.internal.$Gson$Types.declaringClassOf(unknown);\n    if (declaredByRaw == null) {\n        return unknown;\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, declaredByRaw);\n    if (declaredBy instanceof java.lang.reflect.ParameterizedType) {\n        int int = com.google.gson.internal.$Gson$Types.indexOf(declaredByRaw.getTypeParameters(), unknown);\n        return ((java.lang.reflect.ParameterizedType)(declaredBy)).getActualTypeArguments()[index];\n    } \n    return unknown;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1302a8af-3f25-11e6-b171-35722ab295ad","method":{"position":"com.google.gson.TypeAdapter:140","type":"CtMethodImpl","sourcecode":"public final void toJson(java.io.Writer out, T value) throws java.io.IOException {\n    if (out == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(out);\n            write(writer, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:318","type":"CtBinaryOperatorImpl"},"failures":[99,100],"tindex":"1302a8b0-3f25-11e6-b171-3d3be973c8fa","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == (-2)) {\n        {\n            com.google.gson.GsonBuilder.this.int = style;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delta":"style"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl"},"failures":[],"tindex":"1302cfc1-3f25-11e6-b171-0d00ddf78c10","method":{"position":"com.google.gson.JsonArray:92","type":"CtMethodImpl","sourcecode":"public boolean remove(com.google.gson.JsonElement element) {\n    return java.util.List<com.google.gson.JsonElement>.remove(element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1302cfc2-3f25-11e6-b171-e1b7667687d1","method":{"position":"com.google.gson.stream.JsonReader:1572","type":"CtMethodImpl","sourcecode":"private java.io.IOException syntaxError(java.lang.String message) throws java.io.IOException {\n    if (message != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            throw new com.google.gson.stream.MalformedJsonException(((((((message + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())) + \" path \") + (getPath())));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"message"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:545","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"1302f6d3-3f25-11e6-b171-7de1c410eea9","method":{"position":"com.google.gson.stream.JsonReader:755","type":"CtMethodImpl","sourcecode":"private boolean isLiteral(char c) throws java.io.IOException {\n    if (c == '\\u2028') {\n        {\n            switch (c) {\n                case '/' :\n                case '\\\\' :\n                case ';' :\n                case '#' :\n                case '=' :\n                    checkLenient();\n                case '{' :\n                case '}' :\n                case '[' :\n                case ']' :\n                case ':' :\n                case ',' :\n                case ' ' :\n                case '\\t' :\n                case '\\f' :\n                case '\\r' :\n                case '\\n' :\n                    return false;\n                default :\n                    return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467333617292/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":15,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}