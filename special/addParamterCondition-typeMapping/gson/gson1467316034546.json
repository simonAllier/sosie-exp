{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":453,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":61,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":118,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":144,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":451,"com.google.gson.MixedStreamTest.testWriteLenient":3,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":421,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":435,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":179,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":194,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":119,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":129,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":434,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":142,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":202,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":84,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":415,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":467,"com.google.gson.functional.ObjectTest.testSingletonLists":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":175,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":203,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":62,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":297,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":442,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":17,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":383,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":410,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":69,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":52,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":364,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":345,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":32,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":363,"com.google.gson.functional.EnumTest.testEnumCaseMapping":141,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":19,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":60,"com.google.gson.functional.JsonTreeTest.testToJsonTree":308,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":57,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":295,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":97,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":158,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":351,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":332,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":126,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":301,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":440,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":245,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":343,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":213,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":30,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":272,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":445,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":342,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":82,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":189,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":320,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":5,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":235,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":44,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":219,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":174,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":422,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":408,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":315,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":336,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":457,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":116,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":6,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":40,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":218,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":22,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":25,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":438,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":148,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":227,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":367,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":432,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":288,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":91,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":370,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":389,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":169,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":399,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":271,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":461,"com.google.gson.functional.CollectionTest.testSetDeserialization":375,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":85,"com.google.gson.functional.EnumTest.testEnumSet":135,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":209,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":92,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":274,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":102,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":214,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":90,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":344,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":401,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":27,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":299,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":242,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":26,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":1,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":334,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":390,"com.google.gson.functional.MapTest.testSortedMap":365,"com.google.gson.functional.MapTest.testMapSerialization":106,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":258,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":402,"com.google.gson.functional.MapTest.testSerializeMaps":101,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":192,"com.google.gson.functional.MapTest.testComplexKeysSerialization":114,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":23,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":369,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":50,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":303,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":418,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":333,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":465,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":298,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":55,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":145,"com.google.gson.functional.MapTest.testStringKeyDeserialization":368,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":276,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":8,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":117,"com.google.gson.functional.PrettyPrintingTest.testMap":53,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":326,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":122,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":155,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":16,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":66,"com.google.gson.functional.MapTest.testMapSerializationEmpty":115,"com.google.gson.functional.CollectionTest.testQueueSerialization":123,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":166,"com.google.gson.functional.MapTest.testMapOfMapSerialization":105,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":233,"com.google.gson.JavaSerializationTest.testMapIsSerializable":349,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":374,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":4,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":256,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":282,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":63,"com.google.gson.functional.FieldNamingTest.testIdentity":193,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":386,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":265,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":447,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":147,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":196,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":204,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":307,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":346,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":64,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":269,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":236,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":425,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":167,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":188,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":255,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":353,"com.google.gson.functional.MapTest.testMapSubclassSerialization":100,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":248,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":200,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":417,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":11,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":76,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":328,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":423,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":460,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":89,"com.google.gson.functional.EnumTest.testEnumSubclass":138,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":238,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":18,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":441,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":223,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":268,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":275,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":462,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":150,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":426,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":286,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":337,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":381,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":234,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":420,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":183,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":433,"com.google.gson.MixedStreamTest.testWriteNulls":12,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":45,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":379,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":42,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":302,"com.google.gson.CommentsTest.testParseComments":396,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":414,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":206,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":279,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":468,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":262,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":65,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":108,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":81,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":185,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":247,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":73,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":226,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":259,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":230,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":254,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":172,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":243,"com.google.gson.functional.MapTest.testMapDeserialization":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":168,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":58,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":99,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":466,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":103,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":293,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":393,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":331,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":2,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":306,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":378,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":428,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":212,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":220,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":310,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":329,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":287,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":159,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":416,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":149,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":316,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":54,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":107,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":187,"com.google.gson.functional.PrimitiveTest.testShortSerialization":246,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":387,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":34,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":240,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":161,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":0,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":137,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":121,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":199,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":355,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":133,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":249,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":424,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":469,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":398,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":251,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":146,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":221,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":458,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":459,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":77,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":151,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":452,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":352,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":277,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":449,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":437,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":140,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":143,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":312,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":127,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":324,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":391,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":173,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":163,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":335,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":291,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":371,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":237,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":9,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":35,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":136,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":392,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":456,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":403,"com.google.gson.functional.MapTest.testGeneralMapField":112,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":436,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":39,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":47,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":270,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":325,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":180,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":152,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":225,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":319,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":241,"com.google.gson.MixedStreamTest.testReadMixedStreamed":397,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":231,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":360,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":130,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":347,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":395,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":431,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":33,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":348,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":400,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":171,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":361,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":98,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":354,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":250,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":280,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":72,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":79,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":170,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":380,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField":406,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":266,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":373,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":284,"com.google.gson.functional.ObjectTest.testNestedDeserialization":450,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":70,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":217,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":454,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":285,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":31,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":261,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":362,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":88,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":7,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":311,"com.google.gson.JavaSerializationTest.testListIsSerializable":350,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":198,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":132,"com.google.gson.functional.ObjectTest.testNullSerialization":210,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":314,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":356,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":111,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":224,"com.google.gson.functional.MapTest.testInterfaceTypeMap":109,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":327,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":290,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":75,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":139,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":330,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":464,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":153,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":29,"com.google.gson.MixedStreamTest.testWriteClosed":15,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":125,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":455,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":207,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":388,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":93,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":289,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":264,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":222,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":260,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":186,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":208,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":294,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":124,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":412,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":405,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":80,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":463,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":128,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":176,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":252,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":229,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":305,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":37,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":304,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":263,"com.google.gson.functional.CollectionTest.testQueueDeserialization":377,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":232,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":257,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize":409,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":184,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":413,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":359,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":446,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":165,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":321,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":382,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":120,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":10,"com.google.gson.functional.MapTest.testRawMapSerialization":113,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":376,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":215,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":309,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":404,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":339,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":41,"com.google.gson.functional.PrimitiveTest.testByteSerialization":244,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":296,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":341,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":317,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":195,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":46,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":190,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":94,"com.google.gson.functional.MapTest.testMapWithQuotes":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":156,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":273,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":394,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":283,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":134,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":154,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":83,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":86,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":448,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":162,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":239,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":49,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":439,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":157,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":164,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":197,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":38,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":87,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":182,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":313,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":267,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":201,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":281,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":443,"com.google.gson.functional.ObjectTest.testNestedSerialization":216,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":36,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":228,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":318,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":71,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":366,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":74,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":51,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":14,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":21,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":211,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":384,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":292,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":430,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":429,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":20,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":427,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":444,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":411,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":67,"com.google.gson.functional.CollectionTest.testSetSerialization":131,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":385,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":56,"com.google.gson.functional.StringTest.testStringValueSerialization":68,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":278,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":322,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":253,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":372,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":419,"com.google.gson.MixedStreamTest.testWriteInvalidState":13,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":48,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":24,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":160,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":191,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":300,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":28,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject":407,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":95,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":177,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":323,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":357,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":43},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:831","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a4add4-3efb-11e6-98ba-bd4a6b9477bc","method":{"position":"com.google.gson.internal.Streams:111","type":"CtMethodImpl","sourcecode":"public java.lang.CharSequence subSequence(int start, int end) {\n    if (end == start) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.lang.String(char[] , start , (end - start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"end","com.google.gson.stream.JsonReader.PEEKED_LONG":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:342","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a52305-3efb-11e6-98ba-0d549e3eaa31","method":{"position":"com.google.gson.FieldAttributes:134","type":"CtMethodImpl","sourcecode":"public boolean hasModifier(int modifier) {\n    if (modifier == modifier) {\n        {\n            return ((java.lang.reflect.Field.getModifiers()) & modifier) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"modifier","com.google.gson.stream.JsonReader.PEEKED_NONE":"modifier"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a52306-3efb-11e6-98ba-25593e8a7b5b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigInteger value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a54a17-3efb-11e6-98ba-1b14b9e8a3a3","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[0,1,2],"tindex":"71a54a18-3efb-11e6-98ba-5b2ef8f5af10","method":{"position":"com.google.gson.FieldNamingPolicy:53","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(f.getName());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"71a54a19-3efb-11e6-98ba-01239d5280a4","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:66","type":"CtMethodImpl","sourcecode":"private java.lang.String getFieldName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (f.isSynthetic()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy, f);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:159","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a5712a-3efb-11e6-98ba-451e0ab9b65e","method":{"position":"com.google.gson.internal.$Gson$Types:65","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type componentType) {\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(componentType);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"componentType","b":"componentType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:246","type":"CtVariableReadImpl"},"failures":[3,4,5,6,7,8,9],"tindex":"71a5712b-3efb-11e6-98ba-b7ecc3f99c9e","method":{"position":"com.google.gson.Gson:249","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextDouble();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    double double = value.doubleValue();\n                    checkValidFloatingPoint(doubleValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unlink":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a5983c-3efb-11e6-98ba-c125be988b0a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:126","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.BitSet src) throws java.io.IOException {\n    if (src == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginArray();\n    for (int int = 0 ; i < (src.length()) ; i++) {\n        int int = src.get(i) ? 1 : 0;\n        out.value(value);\n    }\n    out.endArray();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a5bf4d-3efb-11e6-98ba-2b9bd9a08230","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a5bf4e-3efb-11e6-98ba-af009634b61b","method":{"position":"com.google.gson.DefaultDateTypeAdapter:77","type":"CtMethodImpl","sourcecode":"public java.util.Date deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT, com.google.gson.JsonDeserializationContext context) throws com.google.gson.JsonParseException {\n    if (typeOfT instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                throw new com.google.gson.JsonParseException(\"The date should be a string value\");\n            } \n            java.util.Date java.util.Date = deserializeToDate(json);\n            if (typeOfT == (java.util.Date.java.util.Date.java.lang.Class)) {\n                return date;\n            } else if (typeOfT == (java.sql.Timestamp.java.sql.Timestamp.java.lang.Class)) {\n                return new java.sql.Timestamp(date.getTime());\n            } else if (typeOfT == (java.sql.Date.java.sql.Date.java.lang.Class)) {\n                return new java.sql.Date(date.getTime());\n            } else {\n                throw new java.lang.IllegalArgumentException((((getClass()) + \" cannot deserialize to \") + typeOfT));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl"},"failures":[],"tindex":"71a5e65f-3efb-11e6-98ba-213f331456c5","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    boolean boolean = writer.isLenient();\n    writer.setLenient(true);\n    boolean boolean = writer.isHtmlSafe();\n    writer.setHtmlSafe(boolean);\n    boolean boolean = writer.getSerializeNulls();\n    writer.setSerializeNulls(boolean);\n    try {\n        com.google.gson.internal.Streams.write(jsonElement, writer);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } finally {\n        writer.setLenient(oldLenient);\n        writer.setHtmlSafe(oldHtmlSafe);\n        writer.setSerializeNulls(oldSerializeNulls);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a5e660-3efb-11e6-98ba-9d3850721e78","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:162","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((!(isLenient())) && ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value)))) {\n                throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:363","type":"CtUnaryOperatorImpl"},"failures":[10,11,12,13,3,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,0,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,4,238,239,5,6,240,241,242,243,244,7,245,246,247,248,8,249,9,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,1,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"tindex":"71a60d71-3efb-11e6-98ba-07ec31f0f49e","method":{"position":"com.google.gson.stream.JsonWriter:268","type":"CtMethodImpl","sourcecode":"public final void setSerializeNulls(boolean serializeNulls) {\n    if (!serializeNulls) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = serializeNulls;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serializeNulls"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a63482-3efb-11e6-98ba-ef1278aceea9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a63483-3efb-11e6-98ba-839cc5371daf","method":{"position":"com.google.gson.internal.bind.TypeAdapters:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.lang.Boolean.valueOf(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl"},"failures":[],"tindex":"71a63484-3efb-11e6-98ba-b3a16513a75e","method":{"position":"com.google.gson.GsonBuilder:493","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class<?> baseType, java.lang.Object typeAdapter) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n    if ((typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n        java.util.List<com.google.gson.TypeAdapterFactory>.add(0, com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(baseType, typeAdapter));\n    } \n    if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n        java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(baseType, ((com.google.gson.TypeAdapter)(typeAdapter))));\n    } \n    return com.google.gson.GsonBuilder.this;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a65b95-3efb-11e6-98ba-c531ecd4d731","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if (array instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (array == null) {\n                out.nullValue();\n                return ;\n            } \n            out.beginArray();\n            for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n                E E = ((E)(java.lang.reflect.Array.get(array, i)));\n                com.google.gson.TypeAdapter<E>.write(out, value);\n            }\n            out.endArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:178","type":"CtInvocationImpl"},"failures":[],"tindex":"71a65b96-3efb-11e6-98ba-6304c938a744","method":{"position":"com.google.gson.JsonArray:92","type":"CtMethodImpl","sourcecode":"public boolean remove(com.google.gson.JsonElement element) {\n    return java.util.List<com.google.gson.JsonElement>.remove(element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:131","type":"CtBinaryOperatorImpl"},"failures":[3,14,348,349,350,45,351,51,352,54,59,72,81,83,85,86,88,89,90,93,94,95,96,97,353,354,355,356,102,357,103,358,359,360,361,362,106,363,364,107,365,109,110,111,112,366,367,114,115,368,116,369,370,117,118,119,120,371,372,123,124,126,373,374,128,375,376,132,377,135,136,137,138,378,140,379,380,157,200,201,205,381,218,221,382,383,252,253,254,255,256,259,260,262,263,264,384,268,385,272,274,386,387,284,286,289,388,389,390,391,392,393,333,334,394,395,335,336,396,339,340],"tindex":"71a65b97-3efb-11e6-98ba-7b06d1b1970a","method":{"position":"com.google.gson.internal.ConstructorConstructor:128","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T>com.google.gson.internal.ObjectConstructor<T> newDefaultImplementationConstructor(final java.lang.reflect.Type type, java.lang.Class<? super T> rawType) {\n    if (type instanceof java.lang.Class<?>) {\n        {\n            if (java.util.Collection.java.util.Collection.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedSet.java.util.SortedSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.EnumSet.java.util.EnumSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        @java.lang.SuppressWarnings(value = \"rawtypes\")\n                        public T construct() {\n                            if (type instanceof java.lang.reflect.ParameterizedType) {\n                                java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0];\n                                if (elementType instanceof java.lang.Class) {\n                                    return ((T)(java.util.EnumSet.noneOf(((java.lang.Class)(elementType)))));\n                                } else {\n                                    throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                                }\n                            } else {\n                                throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                            }\n                        }\n                    };\n                } else if (java.util.Set.java.util.Set.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.Queue.java.util.Queue.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedList<java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.ArrayList<java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            if (java.util.Map.java.util.Map.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedMap.java.util.SortedMap.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else if ((type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.java.lang.String.java.lang.Class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new com.google.gson.internal.LinkedTreeMap<java.lang.String, java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            return null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a682a8-3efb-11e6-98ba-c1a53af94a9f","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a682a9-3efb-11e6-98ba-fd8ecba1e91e","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"71a6a9ba-3efb-11e6-98ba-ef867588f176","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:66","type":"CtMethodImpl","sourcecode":"private java.lang.String getFieldName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (f.isSynthetic()) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy, f);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtInvocationImpl"},"failures":[],"tindex":"71a6a9bb-3efb-11e6-98ba-7babb9cffcc5","method":{"position":"com.google.gson.internal.$Gson$Types:431","type":"CtMethodImpl","sourcecode":"private static void checkNotPrimitive(java.lang.reflect.Type type) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(((!(type instanceof java.lang.Class<?>)) || (!(((java.lang.Class<?>)(type)).isPrimitive()))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"type","to":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl"},"failures":[],"tindex":"71a6a9bc-3efb-11e6-98ba-c936aafb20ee","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:75","type":"CtMethodImpl","sourcecode":"private void put(com.google.gson.JsonElement value) {\n    if ((java.lang.String) != null) {\n        if ((!(value.isJsonNull())) || (getSerializeNulls())) {\n            com.google.gson.JsonObject com.google.gson.JsonObject = ((com.google.gson.JsonObject)(peek()));\n            object.add(java.lang.String, value);\n        } \n        java.lang.String = null;\n    } else if (java.util.List<com.google.gson.JsonElement>.isEmpty()) {\n        com.google.gson.JsonElement = value;\n    } else {\n        com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n        if (element instanceof com.google.gson.JsonArray) {\n            ((com.google.gson.JsonArray)(element)).add(value);\n        } else {\n            throw new java.lang.IllegalStateException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"71a6a9bd-3efb-11e6-98ba-698717e982d7","method":{"position":"com.google.gson.FieldNamingPolicy:113","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"-\").toLowerCase();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a6a9be-3efb-11e6-98ba-f9c59dade568","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:88","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Collection<E> collection) throws java.io.IOException {\n    if (collection == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginArray();\n    for (E E : collection) {\n        com.google.gson.TypeAdapter<E>.write(out, element);\n    }\n    out.endArray();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl"},"failures":[],"tindex":"71a6a9bf-3efb-11e6-98ba-fd850daaddb6","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"contextRawType"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl"},"failures":[],"tindex":"71a6d0d0-3efb-11e6-98ba-01f665a2852e","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if (array instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (array == null) {\n                out.nullValue();\n                return ;\n            } \n            out.beginArray();\n            for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n                E E = ((E)(java.lang.reflect.Array.get(array, i)));\n                com.google.gson.TypeAdapter<E>.write(out, value);\n            }\n            out.endArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:64","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a6d0d1-3efb-11e6-98ba-33cdac30eb24","method":{"position":"com.google.gson.JsonNull:60","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    if ((other.peek()) == other) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((com.google.gson.JsonNull.this) == other) || (other instanceof com.google.gson.JsonNull);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"other","com.google.gson.stream.JsonToken.NULL":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:167","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a6d0d2-3efb-11e6-98ba-1f4f7c03fcdd","method":{"position":"com.google.gson.internal.$Gson$Types:65","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type componentType) {\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(componentType);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"componentType"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:159","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a6d0d3-3efb-11e6-98ba-714dfb2b9145","method":{"position":"com.google.gson.internal.$Gson$Types:117","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getRawType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        return ((java.lang.Class<?>)(type));\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getRawType();\n        com.google.gson.internal.$Gson$Preconditions.checkArgument((rawType instanceof java.lang.Class));\n        return ((java.lang.Class<?>)(rawType));\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n        return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.getRawType(componentType), 0).getClass();\n    } else if (type instanceof java.lang.reflect.TypeVariable) {\n        return java.lang.Object.java.lang.Object.java.lang.Class;\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        return com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(type)).getUpperBounds()[0]);\n    } else {\n        java.lang.String java.lang.String = type == null ? \"null\" : type.getClass().getName();\n        throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + type) + \"> is of type \") + className));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"type","b":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a6d0d4-3efb-11e6-98ba-95868cd5c6c2","method":{"position":"com.google.gson.reflect.TypeToken:122","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.reflect.Type from) {\n    if (from instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (java.lang.reflect.Type.equals(from)) {\n                return true;\n            } \n            if ((java.lang.reflect.Type) instanceof java.lang.Class<?>) {\n                return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from));\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.ParameterizedType) {\n                return com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.GenericArrayType) {\n                return (java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from))) && (com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))));\n            } else {\n                throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class.java.lang.Class.java.lang.Class, java.lang.reflect.ParameterizedType.java.lang.reflect.ParameterizedType.java.lang.Class, java.lang.reflect.GenericArrayType.java.lang.reflect.GenericArrayType.java.lang.Class);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl"},"failures":[],"tindex":"71a6f7e5-3efb-11e6-98ba-9773c7db6ad8","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    return java.util.List<com.google.gson.JsonElement>.contains(element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a6f7e6-3efb-11e6-98ba-e994b19e9a0a","method":{"position":"com.google.gson.internal.$Gson$Types:213","type":"CtMethodImpl","sourcecode":"private static int hashCodeOrZero(java.lang.Object o) {\n    return o != null ? o.hashCode() : 0;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:54","type":"CtBinaryOperatorImpl"},"failures":[397,398,22,399,400,401,352,69,72,402,73,403,404,75,405,406,407,408,409,410,411,412,413,86,414,89,415,93,94,95,416,417,119,121,375,134,418,419,420,421,422,423,424,425,426,427,428,429,199,200,201,430,431,432,205,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,382,449,450,451,452,252,254,255,256,453,454,455,456,265,385,457,458,388,459,460,297,300,301,302,303,461,304,309,462,463,464,465,2,317,320,321,466,467,468,469,395,335,336],"tindex":"71a6f7e7-3efb-11e6-98ba-2be821263bd8","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value != value) {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"runtimeType":"value","type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a6f7e8-3efb-11e6-98ba-75006e819243","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a6f7e9-3efb-11e6-98ba-e59026fc6aba","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"toFind","com.google.gson.LongSerializationPolicy.DEFAULT":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl"},"failures":[],"tindex":"71a6f7ea-3efb-11e6-98ba-590acd2ecba9","method":{"position":"com.google.gson.DefaultDateTypeAdapter:94","type":"CtMethodImpl","sourcecode":"private java.util.Date deserializeToDate(com.google.gson.JsonElement json) {\n    if (json.isNumber()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            synchronized(java.text.DateFormat) {\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException ignored) {\n                }\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException ignored) {\n                }\n                try {\n                    return java.text.DateFormat.parse(json.getAsString());\n                } catch (java.text.ParseException e) {\n                    throw new com.google.gson.JsonSyntaxException(json.getAsString() , e);\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a71efb-3efb-11e6-98ba-6bd3e5043de3","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Time value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:194","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a71efc-3efb-11e6-98ba-73b811e94235","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:137","type":"CtMethodImpl","sourcecode":"private void expect(com.google.gson.stream.JsonToken expected) throws java.io.IOException {\n    if ((expected != expected) && (token != expected)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((peek()) != expected) {\n                throw new java.lang.IllegalStateException((((\"Expected \" + expected) + \" but was \") + (peek())));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"expected","token":"expected","com.google.gson.stream.JsonToken.NUMBER":"expected"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a71efd-3efb-11e6-98ba-795b824a3b92","method":{"position":"com.google.gson.Gson:254","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"71a71efe-3efb-11e6-98ba-5d69e87ad047","method":{"position":"com.google.gson.FieldNamingPolicy:90","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"_\").toLowerCase();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a71eff-3efb-11e6-98ba-4d835478d791","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            return fromJson(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"71a71f00-3efb-11e6-98ba-3904d3936ac3","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1358","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a74611-3efb-11e6-98ba-196f2164d4b2","method":{"position":"com.google.gson.stream.JsonReader:1268","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (((newTop == ' ') || (c == '\\r')) || (c == '\\t')) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                int[] int[] = new int[(int) * 2];\n                java.lang.String[] java.lang.String[] = new java.lang.String[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                java.lang.System.arraycopy(int[], 0, newPathIndices, 0, int);\n                java.lang.System.arraycopy(java.lang.String[], 0, newPathNames, 0, int);\n                int[] = newStack;\n                int[] = newPathIndices;\n                java.lang.String[] = newPathNames;\n            } \n            int[][((int)++)] = newTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonParser:60","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"71a74612-3efb-11e6-98ba-95d859ef5cc1","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if ((!(o.isJsonNull())) && ((o.peek()) != o)) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467315175496/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"o","jsonReader":"o","element":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":47,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}