{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":61,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":358,"com.google.gson.functional.StringTest.testStringValueDeserialization":356,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":146,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":483,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":107,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":208,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":527,"com.google.gson.MixedStreamTest.testWriteLenient":26,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":374,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":493,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":20,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":303,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":79,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":546,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":491,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":563,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":155,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":335,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":422,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":342,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":116,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":602,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":253,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":429,"com.google.gson.functional.ObjectTest.testSingletonLists":489,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":296,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":425,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":100,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":359,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":599,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":202,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":320,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":568,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":313,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":506,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":5,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":158,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":71,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":372,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":243,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":147,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":571,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":465,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":12,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":92,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":584,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":464,"com.google.gson.functional.EnumTest.testEnumCaseMapping":334,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":33,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":357,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":91,"com.google.gson.functional.JsonTreeTest.testToJsonTree":355,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":576,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":242,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":32,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":603,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":272,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":396,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlBuilder":2,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":289,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":432,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":615,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":556,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":529,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":369,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":502,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":168,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":108,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":507,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":616,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":582,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":89,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":515,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":315,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":609,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":173,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":411,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":172,"com.google.gson.JsonParserTest.testParseString":611,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":312,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField":18,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":152,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":131,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":179,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":392,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":518,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":129,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":295,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":144,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":375,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":457,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":225,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":286,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":419,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":188,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":479,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":153,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":381,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":145,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":386,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":514,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":69,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":497,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":591,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":112,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":215,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":475,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":426,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":233,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":251,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":39,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":190,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":317,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":481,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":301,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":539,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":36,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":288,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":88,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":532,"com.google.gson.functional.CollectionTest.testSetDeserialization":562,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":343,"com.google.gson.functional.EnumTest.testEnumSet":325,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":501,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":588,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":136,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":252,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":189,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":276,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":452,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":508,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":11,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":250,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":149,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":38,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":160,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":324,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":579,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":161,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":105,"com.google.gson.functional.MapTest.testHashMapDeserialization":446,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":552,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":300,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":63,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":59,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":216,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":323,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":415,"com.google.gson.functional.MapTest.testSortedMap":468,"com.google.gson.functional.MapTest.testMapSerialization":463,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":62,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":142,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":535,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":399,"com.google.gson.functional.MapTest.testSerializeMaps":449,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":544,"com.google.gson.functional.MapTest.testComplexKeysSerialization":476,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":587,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":480,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":406,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":332,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":531,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":441,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":228,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":330,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":3,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":574,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":604,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":210,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":517,"com.google.gson.functional.MapTest.testStringKeyDeserialization":478,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":403,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":194,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":175,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":111,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":482,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":106,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":346,"com.google.gson.functional.PrettyPrintingTest.testMap":572,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":549,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":65,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":269,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":321,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":4,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":405,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":362,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":366,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":283,"com.google.gson.functional.MapTest.testMapSerializationEmpty":477,"com.google.gson.functional.CollectionTest.testQueueSerialization":553,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":605,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":137,"com.google.gson.functional.MapTest.testMapOfMapSerialization":462,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":128,"com.google.gson.JavaSerializationTest.testMapIsSerializable":8,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":291,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":559,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":50,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":139,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":203,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":360,"com.google.gson.functional.FieldNamingTest.testIdentity":545,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":191,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":41,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":519,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":81,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":214,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":354,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":488,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":94,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":13,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":85,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":361,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":134,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":485,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":305,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":597,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":278,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":49,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":285,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":443,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":171,"com.google.gson.functional.MapTest.testMapSubclassSerialization":448,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":260,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":337,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":590,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":24,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":126,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":348,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":620,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":186,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":268,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":376,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":319,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":249,"com.google.gson.functional.EnumTest.testEnumSubclass":328,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":148,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":6,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":504,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":93,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":84,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":154,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":193,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":223,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":96,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":487,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject":15,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":132,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":486,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":231,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":395,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":596,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":618,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":138,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":500,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":130,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":213,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":308,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":490,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":445,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":394,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":379,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":388,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":246,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":530,"com.google.gson.CommentsTest.testParseComments":592,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":600,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":198,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":435,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":492,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":54,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":151,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":401,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":534,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":364,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":467,"com.google.gson.MixedStreamTest.testReadInvalidState":23,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":339,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":258,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":170,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":310,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":536,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":104,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":1,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":407,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":51,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":619,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":121,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":48,"com.google.gson.JsonArrayTest.testRemove":622,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":165,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":293,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":391,"com.google.gson.functional.MapTest.testMapDeserialization":455,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":287,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":577,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":444,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":428,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":240,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":454,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":434,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":430,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":229,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap":608,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":329,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":353,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":267,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":505,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":520,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":218,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":349,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":232,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":273,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":257,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":227,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":484,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":466,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":573,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":594,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":314,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":90,"com.google.gson.functional.PrimitiveTest.testShortSerialization":169,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":200,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":437,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":157,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":586,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":127,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":156,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":103,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":277,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":541,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":327,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":617,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":548,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":336,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":614,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":450,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":120,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":177,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":569,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":377,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":302,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":442,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":30,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":184,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":178,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":212,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":192,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":239,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":521,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":263,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":163,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":421,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":133,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":195,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":525,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":496,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":333,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":220,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":589,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":274,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":557,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":344,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":196,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":427,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":294,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":436,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":280,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":418,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":438,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":298,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":236,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":550,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":97,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":164,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":135,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":181,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":57,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":326,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":433,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":67,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":537,"com.google.gson.functional.MapTest.testGeneralMapField":472,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":494,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":385,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":183,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":86,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":345,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":400,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":304,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":470,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":101,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":264,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":410,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":159,"com.google.gson.MixedStreamTest.testReadMixedStreamed":29,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":612,"com.google.gson.JsonObjectTest.testDeepCopy":606,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":122,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":275,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":458,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":14,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":417,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":564,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":424,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":140,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":585,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":7,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":37,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":292,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":459,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":207,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":447,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":182,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":199,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":414,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":74,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":123,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":290,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":380,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":42,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":262,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":558,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":440,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":205,"com.google.gson.functional.ObjectTest.testNestedDeserialization":526,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":244,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":512,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":64,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":230,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":583,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":180,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":53,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":209,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":363,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":460,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":248,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":167,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":219,"com.google.gson.JavaSerializationTest.testListIsSerializable":9,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":83,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":378,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":567,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":222,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":206,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":451,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":95,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":471,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":397,"com.google.gson.functional.MapTest.testInterfaceTypeMap":469,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":347,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":235,"com.google.gson.FieldAttributesTest.testModifiers":623,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":98,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":331,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields":21,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":226,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":350,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":265,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":581,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":114,"com.google.gson.MixedStreamTest.testWriteClosed":28,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":66,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":555,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":238,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":316,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":495,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":254,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":234,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":56,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":52,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":523,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":311,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":241,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":498,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":554,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":75,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":143,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":77,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":224,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":560,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":299,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":43,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":46,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":185,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":119,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":352,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":270,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":382,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":533,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":55,"com.google.gson.functional.CollectionTest.testQueueDeserialization":570,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":125,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":141,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField":16,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":368,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":60,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":76,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":309,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":456,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":516,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":282,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":412,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":524,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":547,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":22,"com.google.gson.functional.MapTest.testRawMapSerialization":474,"com.google.gson.JsonParserTest.testParseReader":610,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":565,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":297,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":217,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":510,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":540,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":439,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":593,"com.google.gson.functional.PrimitiveTest.testByteSerialization":166,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":318,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":387,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":595,"com.google.gson.ObjectTypeAdapterTest.testSerialize":598,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":408,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":109,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":80,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":398,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":542,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":10,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":255,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":365,"com.google.gson.functional.MapTest.testMapWithQuotes":461,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":117,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":367,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":187,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":416,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":204,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":351,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":174,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":341,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":431,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":245,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":522,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":0,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":578,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":150,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":279,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":404,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":499,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":306,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":271,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":73,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":82,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":281,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":162,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":561,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":390,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":247,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":307,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":383,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":221,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":44,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":621,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":31,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":338,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":322,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":99,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":259,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields":19,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":201,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":509,"com.google.gson.functional.ObjectTest.testNestedSerialization":511,"com.google.gson.JsonObjectTest.testAddingStringProperties":607,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":58,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":113,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":371,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":409,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":413,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":473,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":538,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":420,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":17,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":27,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":40,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":503,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":176,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":237,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":423,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":284,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":34,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":115,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":266,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":513,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":72,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":370,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":393,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":87,"com.google.gson.functional.CollectionTest.testSetSerialization":566,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":197,"com.google.gson.functional.StringTest.testStringValueSerialization":373,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":575,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":78,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":47,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":211,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":551,"com.google.gson.MixedStreamTest.testWriteInvalidState":25,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":384,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":118,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":124,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":402,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":68,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":543,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":613,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":528,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":601,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":45,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":580,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":256,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":453,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":35,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":389},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"572fcad3-3e7e-11e6-b1bc-9d19c090e9f0","method":{"position":"com.google.gson.internal.bind.TypeAdapters:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.parseBoolean(in.nextString());\n    } \n    return in.nextBoolean();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:795","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME)"},"failures":[0,1,2,3],"tindex":"573018f4-3e7e-11e6-b1bc-6d8a2149650e","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:677","type":"CtMethodImpl","sourcecode":"void reset(int targetSize) {\n    if (targetSize == targetSize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int int = ((java.lang.Integer.highestOneBit(targetSize)) * 2) - 1;\n            int = treeCapacity - targetSize;\n            int = 0;\n            int = 0;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"targetSize","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME":"targetSize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:127","type":"CtInvocationImpl","sourcecode":"raw.isInterface()"},"failures":[],"tindex":"57304005-3e7e-11e6-b1bc-27c3bd164474","method":{"position":"com.google.gson.internal.Excluder:224","type":"CtMethodImpl","sourcecode":"private boolean isStatic(java.lang.Class<?> clazz) {\n    if (clazz.isInterface()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((clazz.getModifiers()) & (java.lang.reflect.Modifier.java.lang.reflect.Modifier.int)) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"raw":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:127","type":"CtInvocationImpl","sourcecode":"type.equals(from)"},"failures":[],"tindex":"57304006-3e7e-11e6-b1bc-23761b28e3f0","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"toFind","type":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:167","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"57306717-3e7e-11e6-b1bc-bba52421bcd1","method":{"position":"com.google.gson.internal.$Gson$Types:563","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.WildcardType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtInvocationImpl","sourcecode":"toResolve.isAssignableFrom(rawSupertype)"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599],"tindex":"57308e28-3e7e-11e6-b1bc-bbb007dd5ec6","method":{"position":"com.google.gson.internal.Excluder:215","type":"CtMethodImpl","sourcecode":"private boolean isAnonymousOrLocal(java.lang.Class<?> clazz) {\n    if (clazz.isAssignableFrom(clazz)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (!(java.lang.Enum.java.lang.Enum.java.lang.Class.isAssignableFrom(clazz))) && ((clazz.isAnonymousClass()) || (clazz.isLocalClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz","rawSupertype":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"5730b539-3e7e-11e6-b1bc-fd9ecce11a87","method":{"position":"com.google.gson.internal.bind.TypeAdapters:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.parseBoolean(in.nextString());\n    } \n    return in.nextBoolean();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:430","type":"CtUnaryOperatorImpl","sourcecode":"!skipPastFound"},"failures":[600,601,602,603,604,605,606,607,43,55,56,61,608,79,80,82,83,190,191,230,231,232,236,237,242,243,259,609,337,338,351,354,377,419,447,450,451,455,459,464,475,478,536,537,538,610,611,593,612,613,614,615,616,617,618],"tindex":"5730b53a-3e7e-11e6-b1bc-75f84db449e0","method":{"position":"com.google.gson.internal.LinkedTreeMap:121","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> find(K key, boolean create) {\n    if (!create) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.util.Comparator<? super K> java.util.Comparator<? super K> = com.google.gson.internal.LinkedTreeMap.this.java.util.Comparator<? super K>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            int int = 0;\n            if (nearest != null) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = comparator == (com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap.java.util.Comparator<java.lang.Comparable>) ? ((java.lang.Comparable<java.lang.Object>)(key)) : null;\n                while (true) {\n                    comparison = comparableKey != null ? comparableKey.compareTo(nearest.K) : comparator.compare(key, nearest.K);\n                    if (comparison == 0) {\n                        return nearest;\n                    } \n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = comparison < 0 ? nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V> : nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    if (child == null) {\n                        break;\n                    } \n                    nearest = child;\n                }\n            } \n            if (!create) {\n                return null;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.this.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            if (nearest == null) {\n                if ((comparator == (com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n                    throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n                } \n                created = new com.google.gson.internal.LinkedTreeMap.Node<K, V>(nearest , key , header , header.com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> = created;\n            } else {\n                created = new com.google.gson.internal.LinkedTreeMap.Node<K, V>(nearest , key , header , header.com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n                if (comparison < 0) {\n                    nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V> = created;\n                } else {\n                    nearest.com.google.gson.internal.LinkedTreeMap.Node<K, V> = created;\n                }\n                rebalance(nearest, true);\n            }\n            (int)++;\n            (int)++;\n            return created;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"skipPastFound":"create"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:243","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[619,31,32,620,70,71,72,73,74,75,76,77,621],"tindex":"5731035b-3e7e-11e6-b1bc-0b18a7b53766","method":{"position":"com.google.gson.internal.Excluder:228","type":"CtMethodImpl","sourcecode":"private boolean isValidVersion(com.google.gson.annotations.Since since, com.google.gson.annotations.Until until) {\n    if (until != null) {\n        {\n            return (isValidSince(since)) && (isValidUntil(until));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"until"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[612,613],"tindex":"5731035c-3e7e-11e6-b1bc-cdd49546fb24","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if (json != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            return fromJson(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"json"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[139,153,167],"tindex":"5731035d-3e7e-11e6-b1bc-ada3b77eb928","method":{"position":"com.google.gson.internal.bind.TypeAdapters:282","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"5731035e-3e7e-11e6-b1bc-c34adab70c4e","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return f.getName();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:189","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.WildcardType)"},"failures":[],"tindex":"57312a6f-3e7e-11e6-b1bc-d71bf3f00cba","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (!(key instanceof java.lang.reflect.WildcardType)) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:175","type":"CtInvocationImpl","sourcecode":"java.util.SortedMap.class.isAssignableFrom(rawType)"},"failures":[],"tindex":"57312a70-3e7e-11e6-b1bc-33a8c37a6d7c","method":{"position":"com.google.gson.internal.ConstructorConstructor:128","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nprivate <T>com.google.gson.internal.ObjectConstructor<T> newDefaultImplementationConstructor(final java.lang.reflect.Type type, java.lang.Class<? super T> rawType) {\n    if (type.isAssignableFrom(rawType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (java.util.Collection.java.util.Collection.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedSet.java.util.SortedSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.EnumSet.java.util.EnumSet.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        @java.lang.SuppressWarnings(value = \"rawtypes\")\n                        public T construct() {\n                            if (type instanceof java.lang.reflect.ParameterizedType) {\n                                java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0];\n                                if (elementType instanceof java.lang.Class) {\n                                    return ((T)(java.util.EnumSet.noneOf(((java.lang.Class)(elementType)))));\n                                } else {\n                                    throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                                }\n                            } else {\n                                throw new com.google.gson.JsonIOException((\"Invalid EnumSet type: \" + (type.toString())));\n                            }\n                        }\n                    };\n                } else if (java.util.Set.java.util.Set.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashSet<java.lang.Object>()));\n                        }\n                    };\n                } else if (java.util.Queue.java.util.Queue.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedList<java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.ArrayList<java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            if (java.util.Map.java.util.Map.java.lang.Class.isAssignableFrom(rawType)) {\n                if (java.util.SortedMap.java.util.SortedMap.java.lang.Class.isAssignableFrom(rawType)) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.TreeMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else if ((type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.java.lang.String.java.lang.Class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>()));\n                        }\n                    };\n                } else {\n                    return new com.google.gson.internal.ObjectConstructor<T>() {\n                        public T construct() {\n                            return ((T)(new com.google.gson.internal.LinkedTreeMap<java.lang.String, java.lang.Object>()));\n                        }\n                    };\n                }\n            } \n            return null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"rawType":"rawType","java.util.SortedMap.class":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:297","type":"CtBinaryOperatorImpl","sourcecode":"(value) instanceof java.lang.Number"},"failures":[],"tindex":"57315181-3e7e-11e6-b1bc-73f984a83d06","method":{"position":"com.google.gson.internal.LinkedTreeMap:574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"57315182-3e7e-11e6-b1bc-b3264631315d","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:808","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonObject) {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[622],"tindex":"57315183-3e7e-11e6-b1bc-aff656e76770","method":{"position":"com.google.gson.JsonArray:115","type":"CtMethodImpl","sourcecode":"public boolean contains(com.google.gson.JsonElement element) {\n    if (element instanceof com.google.gson.JsonArray) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.contains(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:153","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.STRING)) && (token != (com.google.gson.stream.JsonToken.NUMBER))"},"failures":[],"tindex":"57315184-3e7e-11e6-b1bc-2f762e165caf","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:137","type":"CtMethodImpl","sourcecode":"private void expect(com.google.gson.stream.JsonToken expected) throws java.io.IOException {\n    if ((expected != expected) && (token != expected)) {\n        {\n            if ((peek()) != expected) {\n                throw new java.lang.IllegalStateException((((\"Expected \" + expected) + \" but was \") + (peek())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"expected","token":"expected","com.google.gson.stream.JsonToken.NUMBER":"expected"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:233","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[70,71,72,73,74,75,76,77],"tindex":"57317895-3e7e-11e6-b1bc-5b43a8b9548c","method":{"position":"com.google.gson.internal.Excluder:232","type":"CtMethodImpl","sourcecode":"private boolean isValidSince(com.google.gson.annotations.Since annotation) {\n    if (annotation != null) {\n        {\n            if (annotation != null) {\n                double double = annotation.value();\n                if (annotationVersion > (double)) {\n                    return false;\n                } \n            } \n            return true;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[41,42,47,78,230,231,232,233,235,236,237,241,242,252,277,324,354,393,400,404,425,427,430,433,434,439,441,456,469,471,483,498,503,556,557,578],"tindex":"57317896-3e7e-11e6-b1bc-1b65dc7e5a29","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if ((value.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:288","type":"CtBinaryOperatorImpl","sourcecode":"left != null"},"failures":[],"tindex":"57317897-3e7e-11e6-b1bc-1b084b560cb9","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root != null) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"57319fa8-3e7e-11e6-b1bc-8fdaa14081a2","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.GenericArrayType) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            T T = ((T)(fromJson(jsonReader, typeOfT)));\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return object;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:549","type":"CtBinaryOperatorImpl","sourcecode":"peekStack == (com.google.gson.stream.JsonScope.CLOSED)"},"failures":[623],"tindex":"57319fa9-3e7e-11e6-b1bc-090cef316332","method":{"position":"com.google.gson.FieldAttributes:134","type":"CtMethodImpl","sourcecode":"public boolean hasModifier(int modifier) {\n    if (modifier == modifier) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((java.lang.reflect.Field.getModifiers()) & modifier) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonScope.CLOSED":"modifier","peekStack":"modifier"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"57319faa-3e7e-11e6-b1bc-df5a6e5ed7e2","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n            return read(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:795","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME)"},"failures":[],"tindex":"57319fab-3e7e-11e6-b1bc-bd8dd2fddd8f","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if (empty == empty) {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"empty","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME":"empty"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.reflect.TypeToken:123","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"57319fac-3e7e-11e6-b1bc-11725f57f5fb","method":{"position":"com.google.gson.Gson:552","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            if (src != null) {\n                toJson(src, src.getClass(), writer);\n            } else {\n                toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull, writer);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[216,229,541],"tindex":"5731c6bd-3e7e-11e6-b1bc-bfe4901cd83b","method":{"position":"com.google.gson.FieldNamingPolicy:53","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(f.getName());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.GenericArrayType)"},"failures":[],"tindex":"5731c6be-3e7e-11e6-b1bc-ef2bc8cc7abf","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (!(o instanceof java.lang.reflect.GenericArrayType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"5731c6bf-3e7e-11e6-b1bc-d73eefa9f9d2","method":{"position":"com.google.gson.stream.JsonWriter:212","type":"CtMethodImpl","sourcecode":"public final void setIndent(java.lang.String indent) {\n    if (indent != null) {\n        {\n            if ((indent.length()) == 0) {\n                com.google.gson.stream.JsonWriter.this.java.lang.String = null;\n                com.google.gson.stream.JsonWriter.this.java.lang.String = \":\";\n            } else {\n                com.google.gson.stream.JsonWriter.this.java.lang.String = indent;\n                com.google.gson.stream.JsonWriter.this.java.lang.String = \": \";\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"indent"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:380","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"5731c6c0-3e7e-11e6-b1bc-17c96fbc68ea","method":{"position":"com.google.gson.stream.JsonReader:1268","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop == newTop) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467261734586/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                int[] int[] = new int[(int) * 2];\n                java.lang.String[] java.lang.String[] = new java.lang.String[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                java.lang.System.arraycopy(int[], 0, newPathIndices, 0, int);\n                java.lang.System.arraycopy(java.lang.String[], 0, newPathNames, 0, int);\n                int[] = newStack;\n                int[] = newPathIndices;\n                java.lang.String[] = newPathNames;\n            } \n            int[][((int)++)] = newTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"newTop","com.google.gson.stream.JsonReader.PEEKED_NONE":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":30,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}