{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":44,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":143,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":167,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":180,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":75,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":10,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":142,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":217,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":64,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":113,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":232,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":53,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":47,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":48,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":51,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":111,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":175,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":161,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":25,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":86,"com.google.gson.functional.ObjectTest.testSingletonLists":109,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":67,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":202,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":6,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":93,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":243,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":124,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":14,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":58,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":103,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":136,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":222,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":223,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":107,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":213,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":60,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":140,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":116,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":147,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":37,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":49,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":216,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":84,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":70,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":90,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":206,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":91,"com.google.gson.functional.JsonTreeTest.testToJsonTree":211,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":100,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":106,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":32,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":62,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":87,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":185,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":172,"com.google.gson.functional.MapTest.testGeneralMapField":73,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":114,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":149,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":77,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":191,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":121,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipExplicitlySkippedFields":248,"com.google.gson.MixedStreamTest.testReadMixedStreamed":242,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":249,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":80,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":131,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":205,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":82,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":201,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":165,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":219,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField":245,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":133,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":190,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":65,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":226,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":42,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":187,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":207,"com.google.gson.functional.ObjectTest.testNestedDeserialization":141,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":57,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":182,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":94,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":196,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":130,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":4,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":117,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":231,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":11,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":17,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":20,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":203,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":36,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":97,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":23,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":56,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":68,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":39,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":72,"com.google.gson.functional.MapTest.testInterfaceTypeMap":71,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":164,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":79,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":99,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":152,"com.google.gson.functional.CollectionTest.testSetDeserialization":50,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":162,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":8,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":120,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields":247,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":43,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":24,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":125,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":0,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":22,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":166,"com.google.gson.MixedStreamTest.testWriteClosed":241,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":7,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":184,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":102,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":115,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":26,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":98,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":199,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":138,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":195,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":33,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":179,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":204,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":221,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":105,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":118,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":227,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":181,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":170,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":235,"com.google.gson.functional.MapTest.testComplexKeysSerialization":74,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":229,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":41,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":154,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":9,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":151,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":92,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":208,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":45,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":153,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":198,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":168,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":228,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":12,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":69,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":132,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":83,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":139,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":238,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":34,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":127,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":183,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":174,"com.google.gson.ObjectTypeAdapterTest.testSerialize":3,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":81,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":54,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":158,"com.google.gson.functional.FieldNamingTest.testIdentity":236,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":233,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":27,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":186,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":134,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":16,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":108,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":210,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":178,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipNonAnnotatedFields":244,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":144,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":160,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":2,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":157,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":18,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":137,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":169,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":31,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":176,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":119,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":163,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":239,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":66,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":220,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":5,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":21,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":123,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":76,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":55,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":225,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":59,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":40,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":38,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":188,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":146,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":177,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":145,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":95,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields":246,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":1,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":126,"com.google.gson.functional.ObjectTest.testNestedSerialization":128,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":63,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":15,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":173,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":110,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":212,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":122,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":19,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":150,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":89,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":112,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":101,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":200,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":192,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":197,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":218,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":129,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":214,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":224,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":159,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":30,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":171,"com.google.gson.functional.CollectionTest.testSetSerialization":52,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":78,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":61,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":237,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":13,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":155,"com.google.gson.MixedStreamTest.testWriteInvalidState":240,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":194,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":156,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":193,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":230,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":234,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":250,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":148,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":85,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":104,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":88,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":189,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":46,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":209,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":215,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":28,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":135,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":35,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":251,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":29},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"f4d15cec-3e3c-11e6-a7da-f313e7c77d72","method":{"position":"com.google.gson.internal.bind.TypeAdapters:385","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigInteger read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigInteger(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"f4d1ab0d-3e3c-11e6-a7da-d576cbcab906","method":{"position":"com.google.gson.internal.bind.TypeAdapters:406","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuilder read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuilder(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"f4d1ab0e-3e3c-11e6-a7da-69ab0c27e22f","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n    out.value(dateFormatAsString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:608","type":"CtBinaryOperatorImpl","sourcecode":"(!(lenient)) && (!root)"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"f4d1ab0f-3e3c-11e6-a7da-23c2cdc2f353","method":{"position":"com.google.gson.internal.Excluder:149","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field field, boolean serialize) {\n    if (!serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((!serialize) && (!serialize)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (((int) & (field.getModifiers())) != 0) {\n                        return true;\n                    } \n                    if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(field.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), field.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                        return true;\n                    } \n                    if (field.isSynthetic()) {\n                        return true;\n                    } \n                    if (boolean) {\n                        com.google.gson.annotations.Expose com.google.gson.annotations.Expose = field.getAnnotation(com.google.gson.annotations.Expose.com.google.gson.annotations.Expose.java.lang.Class);\n                        if ((annotation == null) || (serialize ? !(annotation.serialize()) : !(annotation.deserialize()))) {\n                            return true;\n                        } \n                    } \n                    if ((!(boolean)) && (isInnerClass(field.getType()))) {\n                        return true;\n                    } \n                    if (isAnonymousOrLocal(field.getType())) {\n                        return true;\n                    } \n                    java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n                    if (!(list.isEmpty())) {\n                        com.google.gson.FieldAttributes com.google.gson.FieldAttributes = new com.google.gson.FieldAttributes(field);\n                        for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                            if (exclusionStrategy.shouldSkipField(fieldAttributes)) {\n                                return true;\n                            } \n                        }\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"serialize","lenient":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[249,250],"tindex":"f4d26e60-3e3c-11e6-a7da-a3481eefbfaa","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n            return read(reader);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1079","type":"CtBinaryOperatorImpl","sourcecode":"builder == null"},"failures":[251],"tindex":"f4d2e391-3e3c-11e6-a7da-89e90cf3c068","method":{"position":"com.google.gson.internal.bind.TypeAdapters:414","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuilder value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value((value == null ? null : value.toString()));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.reflect.TypeToken:162","type":"CtBinaryOperatorImpl","sourcecode":"toGenericComponentType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"f4d2e392-3e3c-11e6-a7da-e17e4d52e143","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            if (!(boolean))\n                return false;\n            \n            java.lang.Object java.lang.Object = field.get(value);\n            return fieldValue != value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericComponentType":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"f4d30aa3-3e3c-11e6-a7da-15751886f11d","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:43","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (a == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a.compareTo(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:167","type":"CtUnaryOperatorImpl","sourcecode":"!create"},"failures":[],"tindex":"f4d30aa4-3e3c-11e6-a7da-0f1fa3c3bab5","method":{"position":"com.google.gson.internal.Excluder:149","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field field, boolean serialize) {\n    if (!serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((!serialize) && (!serialize)) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if (((int) & (field.getModifiers())) != 0) {\n                        return true;\n                    } \n                    if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(field.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), field.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                        return true;\n                    } \n                    if (field.isSynthetic()) {\n                        return true;\n                    } \n                    if (boolean) {\n                        com.google.gson.annotations.Expose com.google.gson.annotations.Expose = field.getAnnotation(com.google.gson.annotations.Expose.com.google.gson.annotations.Expose.java.lang.Class);\n                        if ((annotation == null) || (serialize ? !(annotation.serialize()) : !(annotation.deserialize()))) {\n                            return true;\n                        } \n                    } \n                    if ((!(boolean)) && (isInnerClass(field.getType()))) {\n                        return true;\n                    } \n                    if (isAnonymousOrLocal(field.getType())) {\n                        return true;\n                    } \n                    java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n                    if (!(list.isEmpty())) {\n                        com.google.gson.FieldAttributes com.google.gson.FieldAttributes = new com.google.gson.FieldAttributes(field);\n                        for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                            if (exclusionStrategy.shouldSkipField(fieldAttributes)) {\n                                return true;\n                            } \n                        }\n                    } \n                    return false;\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"serialize"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:540","type":"CtBinaryOperatorImpl","sourcecode":"c < 128"},"failures":[],"tindex":"f4d331b5-3e3c-11e6-a7da-85015c91177b","method":{"position":"com.google.gson.stream.JsonReader:1101","type":"CtMethodImpl","sourcecode":"private void skipQuotedValue(char quote) throws java.io.IOException {\n    if (quote < 128) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025057/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            do {\n                int int = int;\n                int int = int;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        return ;\n                    } else if (c == '\\\\') {\n                        int = p;\n                        readEscapeCharacter();\n                        p = int;\n                        l = int;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                int = p;\n            } while (fillBuffer(1) );\n            throw syntaxError(\"Unterminated string\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":10,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}