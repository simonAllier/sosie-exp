{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":116,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":355,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":233,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":11,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":143,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":61,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":95,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":45,"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":6,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":261,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":316,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":275,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":267,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":280,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":295,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":137,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":284,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":96,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":257,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":3,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":103,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":288,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":294,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":114,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":147,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":239,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":247,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":359,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":105,"com.google.gson.functional.ObjectTest.testSingletonLists":149,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":10,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":134,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":148,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":62,"com.google.gson.stream.JsonWriterTest.testStrings":216,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":186,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":366,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":226,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":303,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":76,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":157,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":333,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":342,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":16,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":17,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":118,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":317,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":232,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":334,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":314,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":297,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":69,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":112,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":115,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":194,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":101,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":274,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":205,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":357,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":256,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":43,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":363,"com.google.gson.functional.EnumTest.testEnumCaseMapping":113,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":33,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":60,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":212,"com.google.gson.functional.JsonTreeTest.testToJsonTree":348,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":364,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":339,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":343,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":27,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":124,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":255,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":46,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":5,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":108,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":360,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":12,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":100,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":235,"com.google.gson.functional.MapTest.testGeneralMapField":91,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":296,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":189,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":55,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":206,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":328,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":301,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":138,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":119,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":159,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":199,"com.google.gson.MixedStreamTest.testReadMixedStreamed":225,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":41,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":331,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":308,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":104,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":220,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":222,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":368,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":144,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":200,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":290,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":44,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":228,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":277,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":81,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":52,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":156,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":178,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":72,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":268,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":20,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":371,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":196,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":173,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":213,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":179,"com.google.gson.functional.ObjectTest.testNestedDeserialization":315,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":332,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":70,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":318,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":94,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":336,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":42,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":321,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":307,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":35,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":37,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":298,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":266,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":243,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":291,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":350,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":180,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":246,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":269,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":287,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":136,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":90,"com.google.gson.functional.MapTest.testInterfaceTypeMap":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":132,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":227,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":330,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":208,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":182,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":345,"com.google.gson.functional.CollectionTest.testSetDeserialization":258,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":240,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":75,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":111,"com.google.gson.functional.EnumTest.testEnumSet":107,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":300,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":354,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":80,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":120,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":40,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":84,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":154,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":221,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":245,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":229,"com.google.gson.MixedStreamTest.testWriteClosed":224,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":38,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":99,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":187,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":320,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":151,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":162,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":341,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":248,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":181,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":324,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":158,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":171,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":168,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":193,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":367,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":279,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":152,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":184,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":21,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":169,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":234,"com.google.gson.functional.MapTest.testSerializeMaps":83,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":282,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":23,"com.google.gson.functional.MapTest.testComplexKeysSerialization":93,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":353,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":135,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":163,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":191,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":260,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":161,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":365,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":346,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":8,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":2,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":48,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":192,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":323,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":22,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":58,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":141,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":370,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":262,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":86,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":309,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":128,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":201,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":313,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":97,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":28,"com.google.gson.functional.MapTest.testRawMapSerialization":92,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":207,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":77,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":305,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":349,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":121,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":319,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":31,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":236,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":66,"com.google.gson.functional.CollectionTest.testQueueSerialization":98,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":129,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":214,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":50,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":185,"com.google.gson.functional.MapTest.testMapOfMapSerialization":88,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":203,"com.google.gson.ObjectTypeAdapterTest.testSerialize":369,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":197,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":285,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":167,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":63,"com.google.gson.functional.FieldNamingTest.testIdentity":283,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":54,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":281,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":249,"com.google.gson.functional.MapTest.testMapWithQuotes":87,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":172,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":310,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":122,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":265,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":292,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":347,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":174,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":106,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":64,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":270,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":238,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":219,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":130,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":166,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":241,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":312,"com.google.gson.functional.MapTest.testMapSubclassSerialization":82,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":59,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":126,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":145,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":254,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":56,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":299,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":15,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":29,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":209,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":9,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":278,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":344,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":244,"com.google.gson.functional.EnumTest.testEnumSubclass":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":123,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":302,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":327,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":19,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":127,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":286,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":176,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":49,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":79,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":139,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":352,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":195,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":325,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":24,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":26,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":117,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":146,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":271,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":253,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":337,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":218,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":304,"com.google.gson.internal.LinkedTreeMapTest.testClear":4,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":7,"com.google.gson.functional.ObjectTest.testNestedSerialization":155,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":47,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":198,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":71,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":264,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":74,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":140,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":57,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":293,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":30,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":34,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":217,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":51,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":153,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":190,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":242,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":150,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":177,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":362,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":340,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":289,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":230,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":322,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":276,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":65,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":272,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":306,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":18,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":237,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":67,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":142,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":53,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":73,"com.google.gson.functional.CollectionTest.testSetSerialization":259,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":329,"com.google.gson.functional.StringTest.testStringValueSerialization":68,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":335,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":202,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":164,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":263,"com.google.gson.MixedStreamTest.testWriteInvalidState":223,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":160,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":25,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":170,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":165,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":231,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":133,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":36,"com.google.gson.stream.JsonWriterTest.testWrongTopLevelType":215,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":0,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":131,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":188,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":32,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":358,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":85,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":183,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":361,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":211,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":326,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":356,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":13,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":39,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":273,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":250,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":311,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":1,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":204,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":210,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":125,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":251},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[0,1,2],"tindex":"74cdbd98-3f2c-11e6-ae2e-4f6587f59066","method":{"position":"com.google.gson.FieldNamingPolicy:90","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"_\").toLowerCase();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74ce32c9-3f2c-11e6-ae2e-73dfceb59f11","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if (openBracket != null) {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"openBracket"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74ce59da-3f2c-11e6-ae2e-191d33d2a40c","method":{"position":"com.google.gson.internal.Streams:39","type":"CtMethodImpl","sourcecode":"public static com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader reader) throws com.google.gson.JsonParseException {\n    boolean boolean = true;\n    try {\n        reader.peek();\n        isEmpty = false;\n        return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.read(reader);\n    } catch (java.io.EOFException e) {\n        if (isEmpty) {\n            return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n        } \n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (com.google.gson.stream.MalformedJsonException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reader"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74ce59db-3f2c-11e6-ae2e-810c1a3b7e57","method":{"position":"com.google.gson.internal.bind.TypeAdapters:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigInteger value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:291","type":"CtBinaryOperatorImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"74ce80ec-3f2c-11e6-ae2e-edfec769fec0","method":{"position":"com.google.gson.internal.LinkedTreeMap:373","type":"CtMethodImpl","sourcecode":"private void rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotLeft;\n            if (pivotLeft != null) {\n                pivotLeft.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((left != null ? left.int : 0), (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotRight != null ? pivotRight.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:245","type":"CtBinaryOperatorImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"74cea7fd-3f2c-11e6-ae2e-ed8694aa7f48","method":{"position":"com.google.gson.internal.Excluder:69","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withVersion(double ignoreVersionsAfter) {\n    if (ignoreVersionsAfter <= ignoreVersionsAfter) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            result.double = ignoreVersionsAfter;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"version":"ignoreVersionsAfter","annotationVersion":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74cea7fe-3f2c-11e6-ae2e-93d88318be01","method":{"position":"com.google.gson.FieldNamingPolicy:137","type":"CtMethodImpl","sourcecode":"private static java.lang.String upperCaseFirstLetter(java.lang.String name) {\n    if (name == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = 0;\n            char char = name.charAt(index);\n            while (index < ((name.length()) - 1)) {\n                if (java.lang.Character.isLetter(firstCharacter)) {\n                    break;\n                } \n                fieldNameBuilder.append(firstCharacter);\n                firstCharacter = name.charAt((++index));\n            }\n            if (index == (name.length())) {\n                return fieldNameBuilder.toString();\n            } \n            if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n                java.lang.String java.lang.String = com.google.gson.FieldNamingPolicy.modifyString(java.lang.Character.toUpperCase(firstCharacter), name, (++index));\n                return fieldNameBuilder.append(modifiedTarget).toString();\n            } else {\n                return name;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"name"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74cecf0f-3f2c-11e6-ae2e-fd5aa8dd6c49","method":{"position":"com.google.gson.internal.Excluder:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (skipSerialize) {\n        out.nullValue();\n        return ;\n    } \n    delegate().write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:431","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74cef620-3f2c-11e6-ae2e-e758dff8ab92","method":{"position":"com.google.gson.GsonBuilder:473","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory factory) {\n    if (factory == factory) {\n        {\n            java.util.List<com.google.gson.TypeAdapterFactory>.add(factory);\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"factory","skipPast":"factory"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:122","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74cef621-3f2c-11e6-ae2e-b7b04aa941ad","method":{"position":"com.google.gson.Gson:801","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.ParameterizedType) {\n        {\n            boolean boolean = true;\n            boolean boolean = reader.isLenient();\n            reader.setLenient(true);\n            try {\n                reader.peek();\n                isEmpty = false;\n                com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(typeOfT)));\n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = getAdapter(typeToken);\n                T T = typeAdapter.read(reader);\n                return object;\n            } catch (java.io.EOFException e) {\n                if (isEmpty) {\n                    return null;\n                } \n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.lang.IllegalStateException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } finally {\n                reader.setLenient(oldLenient);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74cf1d32-3f2c-11e6-ae2e-116fe91a486e","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:72","type":"CtMethodImpl","sourcecode":"public java.util.Collection<E> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Collection<E> java.util.Collection<E> = com.google.gson.internal.ObjectConstructor<? extends java.util.Collection<E>>.construct();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        collection.add(instance);\n    }\n    in.endArray();\n    return collection;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74cf1d33-3f2c-11e6-ae2e-63f300969360","method":{"position":"com.google.gson.internal.LinkedTreeMap:41","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (a == null) {\n        {\n            return a.compareTo(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74cf4444-3f2c-11e6-ae2e-774ad0c8c399","method":{"position":"com.google.gson.internal.bind.TypeAdapters:367","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigDecimal read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigDecimal(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74cf4445-3f2c-11e6-ae2e-8b8b46a1a274","method":{"position":"com.google.gson.Gson:127","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonParseException {\n    if (typeOfT instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    } else {\n        {\n            return ((T)(fromJson(json, typeOfT)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"collectionType":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74cf4446-3f2c-11e6-ae2e-f5fa7faa80e9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:607","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Locale read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(locale , \"_\");\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    if (tokenizer.hasMoreElements()) {\n        language = tokenizer.nextToken();\n    } \n    if (tokenizer.hasMoreElements()) {\n        country = tokenizer.nextToken();\n    } \n    if (tokenizer.hasMoreElements()) {\n        variant = tokenizer.nextToken();\n    } \n    if ((country == null) && (variant == null)) {\n        return new java.util.Locale(language);\n    } else if (variant == null) {\n        return new java.util.Locale(language , country);\n    } else {\n        return new java.util.Locale(language , country , variant);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:51","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74cf6b57-3f2c-11e6-ae2e-fbb560322ef0","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if ((key.peek()) == key) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (findByObject(key)) != null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"key","com.google.gson.stream.JsonToken.NULL":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:188","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74cf6b58-3f2c-11e6-ae2e-b338fb51cf15","method":{"position":"com.google.gson.internal.$Gson$Types:54","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type ownerType, java.lang.reflect.Type rawType, java.lang.reflect.Type... typeArguments) {\n    return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(ownerType , rawType , typeArguments);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"ownerType"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,19,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,13,193,1,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222],"tindex":"74cf6b59-3f2c-11e6-ae2e-c51956cde6fd","method":{"position":"com.google.gson.stream.JsonWriter:413","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            beforeValue(false);\n            string(value);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:131","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74cf926a-3f2c-11e6-ae2e-fda377c07b99","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:952","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74cfe08b-3f2c-11e6-ae2e-fdfd62a92742","method":{"position":"com.google.gson.FieldAttributes:134","type":"CtMethodImpl","sourcecode":"public boolean hasModifier(int modifier) {\n    if (modifier == modifier) {\n        {\n            return ((java.lang.reflect.Field.getModifiers()) & modifier) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"modifier","com.google.gson.stream.JsonReader.PEEKED_LONG":"modifier"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74cfe08c-3f2c-11e6-ae2e-81540896f7e3","method":{"position":"com.google.gson.TypeAdapter:187","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n    } else {\n        com.google.gson.TypeAdapter.this.write(out, value);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl"},"failures":[28,29,223,224,225,226,35,36,37,227,228,229,46,47,55,230,231,57,232,233,58,59,69,72,234,73,235,74,236,16,17,18,19,20,21,22,23,237,238,239,240,241,242,243,244,245,246,80,247,248,249,250,251,252,253,254,255,86,256,89,90,91,93,95,96,257,101,258,103,259,106,111,260,261,262,263,264,265,266,267,268,9,10,269,116,270,271,117,272,273,274,275,276,277,278,279,280,281,0,282,283,284,285,286,287,288,145,146,289,290,148,291,292,149,293,294,150,295,296,151,297,298,152,299,300,301,153,302,303,154,304,305,155,306,307,308,309,156,310,311,157,312,158,313,314,315,316,317,163,164,165,166,167,168,11,169,318,319,320,12,170,171,321,322,323,324,172,173,325,326,327,328,329,330,331,332,333,176,334,335,336,337,338,180,181,182,339,340,341,342,183,184,343,344,186,187,188,189,190,191,345,192,346,13,347,348,193,349,1,350,194,195,351,352,353,196,354,355,2,356,197,200,201,202,209,357,358,359,360,361,362,363,364,365,366,367,368,212,213,369,218,219,221],"tindex":"74cfe08d-3f2c-11e6-ae2e-a14eb5a81db0","method":{"position":"com.google.gson.internal.Primitives:69","type":"CtMethodImpl","sourcecode":"public static boolean isPrimitive(java.lang.reflect.Type type) {\n    if (!(type instanceof java.lang.reflect.GenericArrayType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(type);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74d0079e-3f2c-11e6-ae2e-83f7ea926504","method":{"position":"com.google.gson.internal.bind.TypeAdapters:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:166","type":"CtBinaryOperatorImpl"},"failures":[10,370],"tindex":"74d0079f-3f2c-11e6-ae2e-25a127e54186","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key instanceof java.lang.Class<?>) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl"},"failures":[371,106],"tindex":"74d007a0-3f2c-11e6-ae2e-f14fc5bc5851","method":{"position":"com.google.gson.TypeAdapter:278","type":"CtMethodImpl","sourcecode":"public final T fromJsonTree(com.google.gson.JsonElement jsonTree) {\n    if (jsonTree instanceof com.google.gson.JsonArray) {\n        {\n            try {\n                com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.internal.bind.JsonTreeReader(jsonTree);\n                return read(jsonReader);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"jsonTree"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74d02eb1-3f2c-11e6-ae2e-51d10108ed8f","method":{"position":"com.google.gson.internal.Excluder:224","type":"CtMethodImpl","sourcecode":"private boolean isStatic(java.lang.Class<?> clazz) {\n    if (clazz == clazz) {\n        {\n            return ((clazz.getModifiers()) & (java.lang.reflect.Modifier.java.lang.reflect.Modifier.int)) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz","rawSupertype":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74d02eb2-3f2c-11e6-ae2e-b57ea4c0ab4c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:274","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:189","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74d02eb3-3f2c-11e6-ae2e-a9f752100dec","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (!(typeOfT instanceof java.lang.reflect.WildcardType)) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            T T = ((T)(fromJson(jsonReader, typeOfT)));\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return object;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl"},"failures":[10,370],"tindex":"74d055c4-3f2c-11e6-ae2e-4905a1c1c4ba","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if (property == null) {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"74d055c5-3f2c-11e6-ae2e-9fd056dc082d","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    float float = value.floatValue();\n    checkValidFloatingPoint(floatValue);\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:828","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74d055c6-3f2c-11e6-ae2e-af5f5e0f92a2","method":{"position":"com.google.gson.stream.JsonReader:1288","type":"CtMethodImpl","sourcecode":"private boolean fillBuffer(int minimum) throws java.io.IOException {\n    if (minimum == minimum) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int -= int;\n            if ((int) != (int)) {\n                int -= int;\n                java.lang.System.arraycopy(buffer, int, buffer, 0, int);\n            } else {\n                int = 0;\n            }\n            int = 0;\n            int int;\n            while ((total = java.io.Reader.read(buffer, int, ((buffer.int) - (int)))) != (-1)) {\n                int += total;\n                if (((((int) == 0) && ((int) == 0)) && ((int) > 0)) && ((buffer[0]) == '\\ufeff')) {\n                    (int)++;\n                    (int)++;\n                    minimum++;\n                } \n                if ((int) >= minimum) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"minimum","com.google.gson.stream.JsonReader.PEEKED_BUFFERED":"minimum"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:722","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"74d07cd7-3f2c-11e6-ae2e-5968b86f59cc","method":{"position":"com.google.gson.GsonBuilder:423","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int dateStyle, int timeStyle) {\n    if ((timeStyle == dateStyle) || (last == dateStyle)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467336484193/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.int = dateStyle;\n            com.google.gson.GsonBuilder.this.int = timeStyle;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"timeStyle","com.google.gson.stream.JsonReader.NUMBER_CHAR_SIGN":"dateStyle","com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"dateStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":32,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}