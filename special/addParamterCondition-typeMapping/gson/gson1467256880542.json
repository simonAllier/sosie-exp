{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":38,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":376,"com.google.gson.functional.StringTest.testStringValueDeserialization":561,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":185,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":510,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":483,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":70,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":224,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":147,"com.google.gson.MixedStreamTest.testWriteLenient":262,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":195,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":349,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":463,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":55,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":241,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":193,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":245,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":515,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":367,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":400,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":139,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":490,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":113,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":171,"com.google.gson.functional.ObjectTest.testSingletonLists":191,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":167,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":345,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":377,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":478,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":621,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":535,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":130,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":615,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":553,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":206,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":255,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":517,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":47,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":569,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":105,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":436,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":511,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":180,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":257,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":472,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":446,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":598,"com.google.gson.functional.EnumTest.testEnumCaseMapping":366,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":266,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":375,"com.google.gson.functional.JsonTreeTest.testToJsonTree":146,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":471,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":439,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":104,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":16,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":330,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":577,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":479,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":545,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":402,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":431,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":226,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":567,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":203,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":265,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":302,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":484,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":424,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":444,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":63,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":213,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":264,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":368,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":357,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":156,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":522,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":521,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":552,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField":4,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":294,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":288,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":526,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":215,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":391,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":344,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":498,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":148,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":508,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":594,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":87,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":544,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":162,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":65,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":419,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":295,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":572,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":509,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":212,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":387,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":45,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":199,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":250,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":77,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":280,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":600,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":168,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":95,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":111,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":466,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":531,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":555,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":603,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":348,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":607,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":17,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":340,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":62,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":229,"com.google.gson.functional.CollectionTest.testSetDeserialization":244,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":140,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":202,"com.google.gson.functional.EnumTest.testEnumSet":361,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":618,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":501,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":112,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":312,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":408,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":542,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":207,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":0,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":110,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":512,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":19,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":518,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":131,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":441,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":298,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":481,"com.google.gson.functional.MapTest.testHashMapDeserialization":588,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":610,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":549,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":269,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":469,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":37,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":78,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":159,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":558,"com.google.gson.functional.MapTest.testSortedMap":599,"com.google.gson.functional.MapTest.testMapSerialization":412,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":39,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":231,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":506,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":579,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":239,"com.google.gson.functional.MapTest.testSerializeMaps":407,"com.google.gson.functional.MapTest.testComplexKeysSerialization":184,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":617,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":602,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":396,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":133,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":228,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":177,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":90,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":359,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":560,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":248,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":72,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":605,"com.google.gson.functional.MapTest.testStringKeyDeserialization":601,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":580,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":313,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":306,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":420,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":487,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":371,"com.google.gson.functional.PrettyPrintingTest.testMap":437,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":482,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":427,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":41,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":327,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":556,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":254,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":581,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":381,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":562,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":337,"com.google.gson.functional.MapTest.testMapSerializationEmpty":418,"com.google.gson.functional.CollectionTest.testQueueSerialization":428,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":502,"com.google.gson.functional.MapTest.testMapOfMapSerialization":411,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":286,"com.google.gson.JavaSerializationTest.testMapIsSerializable":459,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":546,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":612,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":28,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":291,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":317,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":454,"com.google.gson.functional.FieldNamingTest.testIdentity":240,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":378,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":532,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":20,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":216,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":76,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":145,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":190,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":274,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":473,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":258,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipNonAnnotatedFields":3,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":275,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":379,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":187,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":289,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":551,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":543,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":27,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":356,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":586,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":305,"com.google.gson.functional.MapTest.testMapSubclassSerialization":406,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":119,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":135,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":619,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":9,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":141,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":271,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":496,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":149,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":530,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":539,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":129,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":109,"com.google.gson.functional.EnumTest.testEnumSubclass":364,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":292,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":205,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":256,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":276,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":59,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":514,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":67,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":85,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":474,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":189,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassObject":462,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":499,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":188,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":93,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":251,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":576,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":503,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":604,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":75,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":287,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":352,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":192,"com.google.gson.MixedStreamTest.testWriteNulls":261,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":587,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":393,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":570,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":389,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":107,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":227,"com.google.gson.CommentsTest.testParseComments":620,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":174,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":194,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":314,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":32,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":153,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":513,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":606,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":380,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":414,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":456,"com.google.gson.MixedStreamTest.testReadInvalidState":464,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":137,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":118,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":304,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":354,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":232,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":279,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":457,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":582,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":14,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":29,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":283,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":26,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":299,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":342,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":575,"com.google.gson.functional.MapTest.testMapDeserialization":593,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":339,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":440,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":405,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":170,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":102,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":409,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":173,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":401,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":91,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":144,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":559,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":122,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":217,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":423,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":80,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":373,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":94,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":331,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":117,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":89,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":186,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":247,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":413,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":451,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":355,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":470,"com.google.gson.functional.PrimitiveTest.testShortSerialization":303,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":534,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":403,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":516,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":448,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":453,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":497,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":296,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":124,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":480,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":236,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":363,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":242,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":134,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":590,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":493,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":307,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":435,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":150,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":550,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":13,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":310,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":525,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":74,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":66,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":101,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":218,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":46,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":323,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":64,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":164,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":68,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":500,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":222,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":198,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":365,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":82,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":449,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":123,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":243,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":369,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassField":1,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":533,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":169,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":343,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":486,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":161,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":334,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":176,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":548,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":98,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":608,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":475,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":520,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":290,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":308,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":35,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":172,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":362,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":43,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":233,"com.google.gson.functional.MapTest.testGeneralMapField":183,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":196,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":386,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":528,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":60,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":152,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":370,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipExplicitlySkippedFields":7,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":350,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":415,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":278,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":324,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":398,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":297,"com.google.gson.MixedStreamTest.testReadMixedStreamed":12,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":284,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":541,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":595,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":160,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":259,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":433,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":166,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":504,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":447,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":458,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":18,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":126,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":596,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":320,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":589,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":309,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":315,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":158,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":50,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":494,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":341,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":571,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":21,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":538,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":611,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":585,"com.google.gson.functional.ObjectTest.testNestedDeserialization":223,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":319,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":321,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":425,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":40,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":92,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":445,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":527,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":31,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":71,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":563,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":597,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":108,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":301,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":81,"com.google.gson.JavaSerializationTest.testListIsSerializable":460,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":58,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":151,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":434,"com.google.gson.functional.ObjectTest.testNullSerialization":422,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":84,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":536,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":591,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":182,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":277,"com.google.gson.functional.MapTest.testInterfaceTypeMap":181,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":578,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":372,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":97,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":476,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":132,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":270,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields":6,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":88,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":374,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":325,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":443,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":488,"com.google.gson.MixedStreamTest.testWriteClosed":11,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":42,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":430,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":100,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":197,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":554,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":114,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":96,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":34,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":30,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":220,"com.google.gson.stream.JsonWriterTest.testLongs":455,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":128,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":103,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":200,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":429,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":51,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":507,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":53,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":86,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":432,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":346,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":468,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":24,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":529,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":282,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":143,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":540,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":230,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":384,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":33,"com.google.gson.functional.CollectionTest.testQueueDeserialization":616,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":285,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":505,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField":2,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":566,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":268,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":52,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":353,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":179,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":214,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":336,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":157,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":221,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":426,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":8,"com.google.gson.functional.MapTest.testRawMapSerialization":417,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":614,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":547,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":79,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":209,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":235,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":404,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":450,"com.google.gson.functional.PrimitiveTest.testByteSerialization":300,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":358,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":388,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":452,"com.google.gson.ObjectTypeAdapterTest.testSerialize":253,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":272,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":155,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":485,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":56,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":394,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":237,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":115,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":461,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":564,"com.google.gson.functional.MapTest.testMapWithQuotes":410,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":328,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":491,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":565,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":311,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":583,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":318,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":142,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":523,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":326,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":138,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":584,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":106,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":219,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":249,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":293,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":333,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":201,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":395,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":127,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":329,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":49,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":57,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":335,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":519,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":360,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":613,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":574,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":322,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":351,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":385,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":83,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":22,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":15,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":136,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":557,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":477,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":537,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields":5,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":316,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":208,"com.google.gson.functional.ObjectTest.testNestedSerialization":210,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":36,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":281,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":397,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":568,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":399,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":416,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":234,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":163,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":260,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":263,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":204,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":467,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":524,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":99,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":165,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":125,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":267,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":489,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":121,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":211,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":48,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":382,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":392,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":61,"com.google.gson.functional.CollectionTest.testSetSerialization":246,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":69,"com.google.gson.functional.StringTest.testStringValueSerialization":383,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":438,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":54,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":25,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":73,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":609,"com.google.gson.MixedStreamTest.testWriteInvalidState":10,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":573,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":421,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":492,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":154,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":495,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":44,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":332,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":238,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":225,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":23,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":442,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":347,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":273,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":592,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":390,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":465},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:162","type":"CtBinaryOperatorImpl","sourcecode":"toGenericComponentType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"b71b39a4-3e71-11e6-aed2-9db29528ad60","method":{"position":"com.google.gson.JsonPrimitive:93","type":"CtMethodImpl","sourcecode":"void setValue(java.lang.Object primitive) {\n    if (primitive instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (primitive instanceof java.lang.Character) {\n                char char = ((java.lang.Character)(primitive)).charValue();\n                com.google.gson.JsonPrimitive.this.java.lang.Object = java.lang.String.valueOf(c);\n            } else {\n                com.google.gson.internal.$Gson$Preconditions.checkArgument(((primitive instanceof java.lang.Number) || (com.google.gson.JsonPrimitive.isPrimitiveOrString(primitive))));\n                com.google.gson.JsonPrimitive.this.java.lang.Object = primitive;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericComponentType":"primitive"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:75","type":"CtBinaryOperatorImpl","sourcecode":"(value != null) && (((type == (java.lang.Object.class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))"},"failures":[],"tindex":"b71b87c5-3e71-11e6-aed2-4f68981a8e3f","method":{"position":"com.google.gson.internal.LinkedTreeMap:570","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if ((o != null) && (((o == o) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o","value":"o","java.lang.Object.class":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:358","type":"CtUnaryOperatorImpl","sourcecode":"!changed"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"b71baed6-3e71-11e6-aed2-65fe374fcbb9","method":{"position":"com.google.gson.internal.Excluder:149","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field field, boolean serialize) {\n    if (!serialize) {\n        {\n            if (((int) & (field.getModifiers())) != 0) {\n                return true;\n            } \n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(field.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), field.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if (field.isSynthetic()) {\n                return true;\n            } \n            if (boolean) {\n                com.google.gson.annotations.Expose com.google.gson.annotations.Expose = field.getAnnotation(com.google.gson.annotations.Expose.com.google.gson.annotations.Expose.java.lang.Class);\n                if ((annotation == null) || (serialize ? !(annotation.serialize()) : !(annotation.deserialize()))) {\n                    return true;\n                } \n            } \n            if ((!(boolean)) && (isInnerClass(field.getType()))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(field.getType())) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            if (!(list.isEmpty())) {\n                com.google.gson.FieldAttributes com.google.gson.FieldAttributes = new com.google.gson.FieldAttributes(field);\n                for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                    if (exclusionStrategy.shouldSkipField(fieldAttributes)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"changed":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[254,255,256,0,257,258,259,260,8,9,261,10,262,263,11,264,265,266,267,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,268,38,39,41,44,45,269,270,271,46,49,50,53,54,272,273,55,56,274,57,58,59,275,60,62,63,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,67,313,68,69,314,315,316,317,318,319,320,70,72,74,76,77,78,79,80,82,83,84,87,89,92,93,94,95,96,97,98,99,102,103,104,105,321,106,322,108,109,110,111,112,114,115,116,118,120,323,324,325,326,327,328,329,330,331,332,124,333,334,335,336,337,338,339,340,341,126,342,343,344,345,346,347,348,349,350,127,351,352,353,354,128,355,356,357,358,130,359,360,131,361,362,363,364,132,365,366,367,134,135,136,137,368,138,139,140,369,370,371,372,141,373,374,142,143,144,145,146,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,152,154,395,396,155,397,398,156,157,399,158,159,161,162,163,400,167,169,401,402,172,173,175,403,176,404,177,405,406,407,408,409,179,410,411,412,413,414,181,415,182,183,416,417,184,418,419,420,185,186,189,190,191,194,197,200,421,202,422,204,423,424,207,209,210,425,212,215,217,218,220,225,226,227,228,230,232,234,236,237,238,239,240,241,426,242,427,428,429,430,431,243,432,245,433,246,434,435,436,437,247,248,438,439,440,249,441,442,443,444,445,446,447,448,449,250,450,451,452,251,252,453,454],"tindex":"b71bd5e7-3e71-11e6-aed2-d5c170f2fc2f","method":{"position":"com.google.gson.stream.JsonWriter:234","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"lenient"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[455,255,334,344],"tindex":"b71bfcf8-3e71-11e6-aed2-c1c68151a7ab","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:188","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"b71bfcf9-3e71-11e6-aed2-edc1f5e1805e","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:687","type":"CtBinaryOperatorImpl","sourcecode":"last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E)"},"failures":[],"tindex":"b71bfcfa-3e71-11e6-aed2-7dd479be62c3","method":{"position":"com.google.gson.internal.Streams:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chars, int offset, int length) throws java.io.IOException {\n    if (length == length) {\n        {\n            if (length == length) {\n                {\n                    com.google.gson.internal.Streams.AppendableWriter.CurrentWrite.char[] = chars;\n                    java.lang.Appendable.append(com.google.gson.internal.Streams.AppendableWriter.CurrentWrite, offset, (offset + length));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"length","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"length"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl","sourcecode":"primitive.isNumber()"},"failures":[],"tindex":"b71c240b-3e71-11e6-aed2-fd61b26b61fe","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element.isNumber()) {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:280","type":"CtInvocationImpl","sourcecode":"standardPrimitive.isAssignableFrom(classOfPrimitive)"},"failures":[0,318,105,321,456,363,424,444,446,447,448],"tindex":"b71c240c-3e71-11e6-aed2-31c032d03e8a","method":{"position":"com.google.gson.GsonBuilder:493","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class<?> baseType, java.lang.Object typeAdapter) {\n    if (baseType.isAssignableFrom(baseType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if ((typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(0, com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(baseType, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(baseType, ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"standardPrimitive":"baseType","classOfPrimitive":"baseType"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl","sourcecode":"primitive.isNumber()"},"failures":[],"tindex":"b71c4b1d-3e71-11e6-aed2-31ffa1822a0b","method":{"position":"com.google.gson.internal.Streams:67","type":"CtMethodImpl","sourcecode":"public static void write(com.google.gson.JsonElement element, com.google.gson.stream.JsonWriter writer) throws java.io.IOException {\n    if (element.isNumber()) {\n        {\n            com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.write(writer, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"b71c4b1e-3e71-11e6-aed2-2da42f4f440e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:367","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigDecimal read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigDecimal(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:127","type":"CtInvocationImpl","sourcecode":"type.equals(from)"},"failures":[],"tindex":"b71c4b1f-3e71-11e6-aed2-8b8c0fdd61ec","method":{"position":"com.google.gson.internal.$Gson$Types:213","type":"CtMethodImpl","sourcecode":"private static int hashCodeOrZero(java.lang.Object o) {\n    return o != null ? o.hashCode() : 0;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"o","type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:179","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"b71c7230-3e71-11e6-aed2-1117b595977c","method":{"position":"com.google.gson.internal.LinkedTreeMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"b71c7231-3e71-11e6-aed2-273320d01881","method":{"position":"com.google.gson.Gson:278","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:314","type":"CtBinaryOperatorImpl","sourcecode":"replacement != null"},"failures":[457],"tindex":"b71c7232-3e71-11e6-aed2-51f6f45d07ee","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[],"tindex":"b71c9943-3e71-11e6-aed2-c78edb9d23e0","method":{"position":"com.google.gson.internal.$Gson$Types:117","type":"CtMethodImpl","sourcecode":"public static java.lang.Class<?> getRawType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class<?>) {\n        return ((java.lang.Class<?>)(type));\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        java.lang.reflect.Type java.lang.reflect.Type = parameterizedType.getRawType();\n        com.google.gson.internal.$Gson$Preconditions.checkArgument((rawType instanceof java.lang.Class));\n        return ((java.lang.Class<?>)(rawType));\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(type)).getGenericComponentType();\n        return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.getRawType(componentType), 0).getClass();\n    } else if (type instanceof java.lang.reflect.TypeVariable) {\n        return java.lang.Object.java.lang.Object.java.lang.Class;\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        return com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(type)).getUpperBounds()[0]);\n    } else {\n        java.lang.String java.lang.String = type == null ? \"null\" : type.getClass().getName();\n        throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + type) + \"> is of type \") + className));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"b71c9944-3e71-11e6-aed2-07a547755f58","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value.isSynthetic()) {\n        {\n            if (!(boolean))\n                return false;\n            \n            java.lang.Object java.lang.Object = field.get(value);\n            return fieldValue != value;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"b71cc055-3e71-11e6-aed2-b1ed0f4f1cef","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json instanceof com.google.gson.JsonObject) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:879","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"b71cc056-3e71-11e6-aed2-d33f8803e4c1","method":{"position":"com.google.gson.JsonArray:81","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement set(int index, com.google.gson.JsonElement element) {\n    if (index == index) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.set(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"index","com.google.gson.stream.JsonReader.PEEKED_NONE":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"b71cc057-3e71-11e6-aed2-517f0cb297c6","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Time value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"b71cc058-3e71-11e6-aed2-b9ba445da0a7","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtInvocationImpl","sourcecode":"toResolve.isAssignableFrom(rawSupertype)"},"failures":[254,255,256,458,459,460,461,0,257,258,259,462,2,260,4,5,463,6,8,464,9,10,262,263,11,12,13,15,16,266,267,465,17,18,19,466,467,20,21,468,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,268,38,39,469,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,274,57,58,59,275,60,61,62,63,470,471,472,276,473,277,474,475,476,477,478,278,479,480,279,481,482,483,484,485,486,487,280,281,488,489,490,491,492,282,493,283,284,494,495,285,496,497,286,498,287,288,499,500,289,290,501,502,503,291,504,505,506,507,508,509,510,511,292,512,293,513,294,295,514,515,296,516,517,297,518,298,519,64,520,299,300,301,302,303,304,305,521,522,523,306,524,307,525,526,527,308,309,528,310,529,530,311,65,312,531,532,66,67,313,68,533,69,314,315,534,316,535,317,318,319,536,320,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,321,106,107,322,108,109,110,111,112,113,114,115,116,117,118,537,119,120,538,323,324,325,121,122,539,327,540,329,330,331,123,541,542,124,543,333,334,335,336,337,125,338,544,339,340,545,341,546,126,342,343,344,345,547,548,346,549,348,550,349,350,551,127,351,352,353,354,128,552,553,355,357,554,555,358,129,130,556,557,558,131,361,362,363,364,559,560,132,133,365,366,367,134,135,136,137,368,138,139,140,369,370,371,372,141,373,374,142,143,144,145,146,561,375,376,377,378,379,562,563,380,564,381,565,566,567,382,568,569,383,147,148,149,150,151,570,571,572,384,385,573,386,387,388,389,390,574,575,391,392,393,576,577,578,394,579,152,153,154,580,395,581,396,582,155,397,398,156,157,399,158,159,583,160,161,162,163,164,400,165,166,167,168,169,170,171,401,584,402,172,173,174,175,403,176,404,585,177,178,586,405,587,588,589,406,407,590,591,408,592,409,593,179,594,595,596,597,410,411,412,598,180,413,414,599,181,415,182,183,416,417,600,184,418,601,419,602,603,420,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,604,202,203,204,205,423,206,424,207,208,209,210,425,211,212,213,214,605,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,606,231,232,233,234,607,235,236,237,238,239,240,241,426,242,427,608,609,610,428,429,430,431,243,611,612,432,613,244,245,433,614,246,434,615,435,616,436,437,247,248,438,439,440,249,441,442,443,444,445,446,447,448,617,618,449,619,250,620,450,451,452,251,252,253,621],"tindex":"b71ce769-3e71-11e6-aed2-21eee87add3c","method":{"position":"com.google.gson.internal.Excluder:215","type":"CtMethodImpl","sourcecode":"private boolean isAnonymousOrLocal(java.lang.Class<?> clazz) {\n    if (clazz.isAssignableFrom(clazz)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (!(java.lang.Enum.java.lang.Enum.java.lang.Class.isAssignableFrom(clazz))) && ((clazz.isAnonymousClass()) || (clazz.isLocalClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz","rawSupertype":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"b71d0e7a-3e71-11e6-aed2-f1cd3d0a308c","method":{"position":"com.google.gson.internal.$Gson$Types:511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    return (o instanceof java.lang.reflect.GenericArrayType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl.this, ((java.lang.reflect.GenericArrayType)(o))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:497","type":"CtBinaryOperatorImpl","sourcecode":"(typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)"},"failures":[],"tindex":"b71d0e7b-3e71-11e6-aed2-bf9d32a7e2b0","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if ((key instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1249","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_END_OBJECT)"},"failures":[],"tindex":"b71d0e7c-3e71-11e6-aed2-4b6a37d6ebc3","method":{"position":"com.google.gson.internal.Streams:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chars, int offset, int length) throws java.io.IOException {\n    if (length == length) {\n        {\n            if (length == length) {\n                {\n                    com.google.gson.internal.Streams.AppendableWriter.CurrentWrite.char[] = chars;\n                    java.lang.Appendable.append(com.google.gson.internal.Streams.AppendableWriter.CurrentWrite, offset, (offset + length));\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"length","com.google.gson.stream.JsonReader.PEEKED_END_OBJECT":"length"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:511","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[],"tindex":"b71d358d-3e71-11e6-aed2-2ff308c5de7d","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:839","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return containsKey(o);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"b71d358e-3e71-11e6-aed2-313d1bb320db","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:45","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.TypeAdapter<T>;\n    java.lang.reflect.Type java.lang.reflect.Type = getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, value);\n    if (runtimeType != (java.lang.reflect.Type)) {\n        com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(runtimeType));\n        if (!(runtimeTypeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = runtimeTypeAdapter;\n        } else if (!((com.google.gson.TypeAdapter<T>) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = com.google.gson.TypeAdapter<T>;\n        } else {\n            chosen = runtimeTypeAdapter;\n        }\n    } \n    chosen.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[80,82,83,85,86,90,237,238,239],"tindex":"b71d5c9f-3e71-11e6-aed2-09bfd2b99298","method":{"position":"com.google.gson.FieldNamingPolicy:122","type":"CtMethodImpl","sourcecode":"private static java.lang.String separateCamelCase(java.lang.String name, java.lang.String separator) {\n    if (separator == null) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (int int = 0 ; i < (name.length()) ; i++) {\n                char char = name.charAt(i);\n                if ((java.lang.Character.isUpperCase(character)) && ((translation.length()) != 0)) {\n                    translation.append(separator);\n                } \n                translation.append(character);\n            }\n            return translation.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"separator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"b71d5ca0-3e71-11e6-aed2-db2584880aa1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:289","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:958","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NUMBER)"},"failures":[],"tindex":"b71d5ca1-3e71-11e6-aed2-93a2bcf1d09d","method":{"position":"com.google.gson.stream.JsonReader:1288","type":"CtMethodImpl","sourcecode":"private boolean fillBuffer(int minimum) throws java.io.IOException {\n    if (minimum == minimum) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int -= int;\n            if ((int) != (int)) {\n                int -= int;\n                java.lang.System.arraycopy(buffer, int, buffer, 0, int);\n            } else {\n                int = 0;\n            }\n            int = 0;\n            int int;\n            while ((total = java.io.Reader.read(buffer, int, ((buffer.int) - (int)))) != (-1)) {\n                int += total;\n                if (((((int) == 0) && ((int) == 0)) && ((int) > 0)) && ((buffer[0]) == '\\ufeff')) {\n                    (int)++;\n                    (int)++;\n                    minimum++;\n                } \n                if ((int) >= minimum) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467256318604/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"minimum","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"minimum"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":30,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}