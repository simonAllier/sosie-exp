{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":241,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":263,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":113,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":176,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":51,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":125,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":249,"com.google.gson.stream.JsonWriterTest.testRepeatedName":43,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":236,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":73,"com.google.gson.MixedStreamTest.testWriteLenient":21,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":95,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":266,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":222,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":224,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":67,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":232,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":204,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":75,"com.google.gson.functional.ObjectTest.testSingletonLists":184,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":103,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":17,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":31,"com.google.gson.stream.JsonWriterTest.testStrings":64,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":172,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":29,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":277,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":238,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":198,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":32,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":210,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":283,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":161,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":243,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":174,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":269,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":259,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":230,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":56,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":143,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":5,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":89,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":248,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":9,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":85,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":215,"com.google.gson.stream.JsonWriterTest.testNullStringValue":37,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":250,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":179,"com.google.gson.stream.JsonWriterTest.testNulls":40,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":151,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":280,"com.google.gson.stream.JsonWriterTest.testEmptyObject":54,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":251,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":6,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":265,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":229,"com.google.gson.functional.MapTest.testGeneralMapField":118,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":130,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":153,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":139,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":285,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":92,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":116,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":12,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":70,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":169,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":288,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":287,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":72,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":11,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":233,"com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles":57,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":202,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":170,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":52,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":88,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":281,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":76,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":135,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":196,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":90,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":81,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":212,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":42,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":30,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":87,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":262,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":245,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":216,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":27,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":165,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":194,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":123,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":208,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":131,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":195,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":24,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":59,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":254,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":240,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":146,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":217,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":147,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":235,"com.google.gson.stream.JsonWriterTest.testEmptyArray":33,"com.google.gson.stream.JsonWriterTest.testDoubles":61,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":91,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":117,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":58,"com.google.gson.functional.MapTest.testInterfaceTypeMap":115,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":286,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":219,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":205,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":268,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":276,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":189,"com.google.gson.functional.EnumTest.testEnumSet":264,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":148,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":158,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":107,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":191,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":2,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":66,"com.google.gson.MixedStreamTest.testWriteClosed":23,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":55,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":173,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":228,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":186,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":149,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":218,"com.google.gson.stream.JsonWriterTest.testLongs":39,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":199,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":207,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":77,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":256,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":214,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":94,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":187,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":221,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":227,"com.google.gson.functional.MapTest.testMapSerialization":112,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":78,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":98,"com.google.gson.functional.MapTest.testSerializeMaps":106,"com.google.gson.functional.MapTest.testComplexKeysSerialization":121,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":213,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":231,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":26,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":142,"com.google.gson.stream.JsonWriterTest.testNumbers":63,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":270,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":155,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":8,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":128,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":156,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":177,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":237,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":109,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":53,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":160,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":171,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":223,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":18,"com.google.gson.functional.MapTest.testRawMapSerialization":120,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":124,"com.google.gson.functional.PrettyPrintingTest.testMap":175,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":278,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":192,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":225,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":257,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":79,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":282,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":86,"com.google.gson.functional.MapTest.testMapSerializationEmpty":122,"com.google.gson.functional.CollectionTest.testQueueSerialization":226,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":60,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":62,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":132,"com.google.gson.ObjectTypeAdapterTest.testSerialize":16,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":101,"com.google.gson.functional.MapTest.testMapOfMapSerialization":111,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":167,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":35,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":274,"com.google.gson.functional.FieldNamingTest.testIdentity":99,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":138,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":96,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":3,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":46,"com.google.gson.functional.MapTest.testMapWithQuotes":110,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":244,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":183,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":239,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":38,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":157,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":200,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":82,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":203,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":14,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":48,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":273,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":0,"com.google.gson.functional.MapTest.testMapSubclassSerialization":105,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":181,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":68,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":141,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":19,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":144,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":93,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":1,"com.google.gson.functional.EnumTest.testEnumSubclass":267,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":83,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":284,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":211,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":159,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":129,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":145,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":260,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":246,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":69,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":242,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":47,"com.google.gson.stream.JsonWriterTest.testTwoNames":34,"com.google.gson.stream.JsonWriterTest.testNullName":41,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":164,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":275,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":13,"com.google.gson.functional.ObjectTest.testNestedSerialization":193,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":252,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":71,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":168,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":49,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":80,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":45,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":119,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":127,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":182,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":137,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":44,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":22,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":65,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":133,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":190,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":154,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":163,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":185,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":209,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":10,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":114,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":255,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":279,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":201,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":150,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":74,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":136,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":15,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":126,"com.google.gson.functional.CollectionTest.testSetSerialization":234,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":162,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":178,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":100,"com.google.gson.JsonParserTest.testParseMixedArray":25,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":271,"com.google.gson.MixedStreamTest.testWriteInvalidState":20,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":188,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":206,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":140,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":272,"com.google.gson.stream.JsonWriterTest.testBooleans":36,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":253,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":84,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":97,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":289,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":152,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":180,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":104,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":108,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":220,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":7,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":247,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":166,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":28,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":4,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":197,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":102,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":258,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":50,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":134},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"ac433418-3f44-11e6-a102-57128f6553d5","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value.toString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ac441e79-3f44-11e6-a102-531c63537708","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if (property == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8],"tindex":"ac441e7a-3f44-11e6-a102-e347076a663b","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if (array == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (array == null) {\n                out.nullValue();\n                return ;\n            } \n            out.beginArray();\n            for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n                E E = ((E)(java.lang.reflect.Array.get(array, i)));\n                com.google.gson.TypeAdapter<E>.write(out, value);\n            }\n            out.endArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ac44458b-3f44-11e6-a102-0fee26caa01b","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n            return read(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"ac4556fc-3f44-11e6-a102-9dfc2193eaf1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:274","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"ac4556fd-3f44-11e6-a102-cb03d9185ca6","method":{"position":"com.google.gson.internal.bind.TypeAdapters:385","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigInteger read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigInteger(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"ac457e0e-3f44-11e6-a102-5d6171f52dc9","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n    out.value(dateFormatAsString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:506","type":"CtBinaryOperatorImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,0,145,146,1,2,147,148,149,3,4,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,5,247,6,7,248,249,250,8,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287],"tindex":"ac457e0f-3f44-11e6-a102-839fbe8cd257","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if (empty != empty) {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"empty","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"empty"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl"},"failures":[],"tindex":"ac45a520-3f44-11e6-a102-b1e0bed37a26","method":{"position":"com.google.gson.Gson:617","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {\n    if (jsonElement.isNumber()) {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(jsonElement, writer);\n            return writer.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ac45cc31-3f44-11e6-a102-919c57c853df","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:181","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ac45cc32-3f44-11e6-a102-99cb76154c99","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.String.class":"context","type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[288,289],"tindex":"ac45cc33-3f44-11e6-a102-ad0c99f88e54","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if (json == null) {\n        {\n            return fromJson(new java.io.StringReader(json));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"json"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtInvocationImpl"},"failures":[],"tindex":"ac45f344-3f44-11e6-a102-21d4a23155ef","method":{"position":"com.google.gson.internal.$Gson$Types:226","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type context, java.lang.Class<?> rawType, java.lang.Class<?> toResolve) {\n    if (toResolve == rawType) {\n        return context;\n    } \n    if (toResolve.isInterface()) {\n        java.lang.Class<?>[] java.lang.Class<?>[] = rawType.getInterfaces();\n        for (int int = 0, int int = interfaces.int ; i < length ; i++) {\n            if ((interfaces[i]) == toResolve) {\n                return rawType.getGenericInterfaces()[i];\n            } else if (toResolve.isAssignableFrom(interfaces[i])) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);\n            } \n        }\n    } \n    if (!(rawType.isInterface())) {\n        while (rawType != (java.lang.Object.java.lang.Object.java.lang.Class)) {\n            java.lang.Class<?> java.lang.Class<?> = rawType.getSuperclass();\n            if (rawSupertype == toResolve) {\n                return rawType.getGenericSuperclass();\n            } else if (toResolve.isAssignableFrom(rawSupertype)) {\n                return com.google.gson.internal.$Gson$Types.getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);\n            } \n            rawType = rawSupertype;\n        }\n    } \n    return toResolve;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"toResolve","rawSupertype":"rawType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:171","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ac45f345-3f44-11e6-a102-13c19768095e","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:137","type":"CtMethodImpl","sourcecode":"private void expect(com.google.gson.stream.JsonToken expected) throws java.io.IOException {\n    if ((expected != expected) && (token != expected)) {\n        {\n            if ((peek()) != expected) {\n                throw new java.lang.IllegalStateException((((\"Expected \" + expected) + \" but was \") + (peek())));\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"expected","token":"expected","com.google.gson.stream.JsonToken.NUMBER":"expected"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:137","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ac461a56-3f44-11e6-a102-dd232de74e20","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if ((!lenient) && (!lenient)) {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serialize":"lenient","deserialize":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ac461a57-3f44-11e6-a102-839f2739a55b","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl"},"failures":[],"tindex":"ac461a58-3f44-11e6-a102-872d5d9b836f","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target.isNumber()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"target"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"ac464169-3f44-11e6-a102-3118d78c445d","method":{"position":"com.google.gson.stream.JsonWriter:385","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name == null) {\n        {\n            if (name == null) {\n                throw new java.lang.NullPointerException(\"name == null\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException();\n            } \n            if ((int) == 0) {\n                throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n            } \n            java.lang.String = name;\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467347108655/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"name"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":18,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}