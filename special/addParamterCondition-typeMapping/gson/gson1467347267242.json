{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":157,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":307,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":470,"com.google.gson.functional.StringTest.testStringValueDeserialization":498,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":64,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":561,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":530,"com.google.gson.stream.JsonWriterTest.testRepeatedName":462,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":628,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":74,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":149,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":82,"com.google.gson.MixedStreamTest.testWriteLenient":247,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":387,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":104,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":65,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":69,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":118,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":564,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":359,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":396,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":41,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":549,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":673,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":50,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":230,"com.google.gson.functional.ObjectTest.testSingletonLists":116,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":383,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":308,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":545,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":452,"com.google.gson.stream.JsonWriterTest.testStrings":483,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":577,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":197,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":514,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":536,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":131,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":266,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":648,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":32,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":325,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":506,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":24,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":301,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":562,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":475,"com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse":670,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":59,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":542,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":666,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":286,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":601,"com.google.gson.functional.EnumTest.testEnumCaseMapping":358,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":270,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":306,"com.google.gson.functional.JsonTreeTest.testToJsonTree":208,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":621,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":304,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":537,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":195,"com.google.gson.stream.JsonWriterTest.testNulls":460,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":57,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":368,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":322,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":588,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":528,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":546,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":450,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":667,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":348,"com.google.gson.functional.ObjectTest.testNullDeserialization":541,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":200,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":504,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":128,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":422,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":486,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":629,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":399,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":668,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":284,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":177,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":138,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":485,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":327,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":395,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":520,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":224,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":569,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":568,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":471,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":535,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":323,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":414,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":639,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":523,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":571,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":140,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":296,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":382,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":555,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":83,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":559,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":597,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":218,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":527,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":241,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":275,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":178,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":341,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":415,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":617,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":560,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":137,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":292,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":8,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":10,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":124,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":478,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":81,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":603,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":632,"com.google.gson.metrics.PerformanceTest.testDummy":585,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":114,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":186,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":48,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":489,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":575,"com.google.gson.stream.JsonWriterTest.testEmptyArray":453,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":606,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":659,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":386,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":508,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":11,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":378,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":176,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":203,"com.google.gson.functional.CollectionTest.testSetDeserialization":68,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":42,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":127,"com.google.gson.functional.EnumTest.testEnumSet":353,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":517,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":556,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":49,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":432,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":331,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":525,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":132,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":47,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":245,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":646,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":13,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":474,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":566,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":198,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":281,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":418,"com.google.gson.functional.MapTest.testHashMapDeserialization":591,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":626,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":609,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":532,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":280,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":573,"com.google.gson.MixedStreamTest.testReadNulls":584,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":156,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":209,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":238,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":660,"com.google.gson.functional.MapTest.testSortedMap":602,"com.google.gson.functional.MapTest.testMapSerialization":335,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":158,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":26,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":558,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":494,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":102,"com.google.gson.functional.MapTest.testSerializeMaps":252,"com.google.gson.functional.MapTest.testComplexKeysSerialization":63,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":516,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":274,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":605,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":300,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":73,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":202,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":236,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":221,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":441,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":515,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":22,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":674,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":76,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":540,"com.google.gson.functional.MapTest.testStringKeyDeserialization":604,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":495,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":433,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":425,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":342,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":548,"com.google.gson.functional.PrettyPrintingTest.testMap":302,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":447,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":627,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":344,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":365,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":578,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":265,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":324,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":496,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":312,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":499,"com.google.gson.functional.MapTest.testMapSerializationEmpty":340,"com.google.gson.functional.CollectionTest.testQueueSerialization":345,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":375,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":675,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":479,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":642,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":481,"com.google.gson.functional.MapTest.testMapOfMapSerialization":334,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":638,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":529,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":611,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":455,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":155,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":411,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":437,"com.google.gson.functional.FieldNamingTest.testIdentity":103,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":309,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":657,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":169,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":465,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":141,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":80,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":115,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":207,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":254,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":458,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":543,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":487,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":256,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":310,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":88,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":409,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":534,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":244,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":526,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":154,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":376,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":394,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":590,"com.google.gson.functional.MapTest.testMapSubclassSerialization":330,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":650,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":56,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":109,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":518,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":3,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":227,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":326,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":553,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":84,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":521,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":655,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":196,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":46,"com.google.gson.functional.EnumTest.testEnumSubclass":356,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":412,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":130,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":267,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":401,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":173,"com.google.gson.GsonBuilderTest.testRegisterTypeAdapterForCoreType":678,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":563,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":180,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":216,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":623,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":90,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":466,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":640,"com.google.gson.stream.JsonWriterTest.testTwoNames":454,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":89,"com.google.gson.stream.JsonWriterTest.testNullName":1,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":184,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":243,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":492,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":619,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":643,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":79,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":408,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":468,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":464,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":390,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":117,"com.google.gson.MixedStreamTest.testWriteNulls":246,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":512,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":297,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":463,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":615,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":294,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":44,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":201,"com.google.gson.CommentsTest.testParseComments":663,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":119,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":233,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":434,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":17,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":166,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":647,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":507,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":311,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":337,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":589,"com.google.gson.MixedStreamTest.testReadInvalidState":582,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":39,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":55,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":392,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":424,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":27,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":451,"com.google.gson.JsonParserTest.testParseMixedArray":273,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":403,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":0,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":497,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":163,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":636,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":153,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":380,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":419,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":491,"com.google.gson.functional.MapTest.testMapDeserialization":596,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":377,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":305,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":329,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":229,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":269,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":193,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":332,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":232,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":259,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":222,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":206,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":614,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":92,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":142,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":398,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":211,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":449,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":185,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":369,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":54,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":87,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":220,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":21,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":336,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":263,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":393,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":620,"com.google.gson.functional.PrimitiveTest.testShortSerialization":423,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":658,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":260,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":565,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":288,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":554,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":416,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":94,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":547,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":99,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":355,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":669,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":66,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":108,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":593,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":551,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":352,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":426,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":85,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":279,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":237,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":533,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":7,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":277,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":429,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":652,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":319,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":78,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":143,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":179,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":192,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":31,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":249,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":361,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":150,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":20,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":181,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":641,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":147,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":123,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":357,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":213,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":360,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":67,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":93,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":445,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":576,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":228,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":381,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":631,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":240,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":372,"com.google.gson.stream.JsonWriterTest.testNullStringValue":457,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":235,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":531,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":189,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":607,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":624,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":567,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":410,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":427,"com.google.gson.stream.JsonWriterTest.testEmptyObject":473,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":14,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":231,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":354,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":162,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":28,"com.google.gson.functional.MapTest.testGeneralMapField":62,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":121,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":291,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":654,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":16,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":174,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":446,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":388,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":362,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":402,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":443,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":417,"com.google.gson.MixedStreamTest.testReadMixedStreamed":6,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":671,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":406,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":524,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":598,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":239,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":350,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":488,"com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles":476,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":112,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":644,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":287,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":12,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":96,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":599,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":328,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":592,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":428,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":435,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":25,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":35,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":461,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":637,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":278,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":379,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":616,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":170,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":519,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":610,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":581,"com.google.gson.functional.ObjectTest.testNestedDeserialization":148,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":439,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":315,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":400,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":159,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":183,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":285,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":653,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":165,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":75,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":500,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":600,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":45,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":421,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":212,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":86,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":107,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":351,"com.google.gson.functional.ObjectTest.testNullSerialization":397,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":215,"com.google.gson.stream.JsonWriterTest.testDoubles":480,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":511,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":594,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":61,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":622,"com.google.gson.functional.MapTest.testInterfaceTypeMap":60,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":477,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":493,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":448,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":188,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":625,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":72,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":318,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":219,"com.google.gson.MixedStreamTest.testReadClosed":583,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":661,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":363,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":283,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":633,"com.google.gson.MixedStreamTest.testWriteClosed":5,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":161,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":347,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":122,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":191,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":538,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":51,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":187,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":168,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":145,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":164,"com.google.gson.stream.JsonWriterTest.testLongs":459,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":98,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":125,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":194,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":346,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":36,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":677,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":645,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":38,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":217,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":349,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":384,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":574,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":151,"com.google.gson.stream.JsonWriterTest.testNumbers":482,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":572,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":405,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":522,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":204,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":289,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":167,"com.google.gson.functional.CollectionTest.testQueueDeserialization":613,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":407,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":557,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":503,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":430,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":37,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":391,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":58,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":139,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":472,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":374,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":146,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":225,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":343,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":2,"com.google.gson.functional.MapTest.testRawMapSerialization":339,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":612,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":618,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":320,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":134,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":210,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":30,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":261,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":262,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":264,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":293,"com.google.gson.functional.PrimitiveTest.testByteSerialization":420,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":440,"com.google.gson.ObjectTypeAdapterTest.testSerialize":242,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":258,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":223,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":630,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":268,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":105,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":298,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":100,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":52,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":501,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":665,"com.google.gson.functional.MapTest.testMapWithQuotes":333,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":366,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":550,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":502,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":431,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":662,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":438,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":71,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":651,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":364,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":40,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":467,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":580,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":43,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":144,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":23,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":371,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":413,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":539,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":126,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":299,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":97,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":367,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":34,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":106,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":373,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":649,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":257,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":513,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":490,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":251,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":290,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":389,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":214,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":171,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":509,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":110,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":579,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":510,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":544,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":317,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":436,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":133,"com.google.gson.functional.ObjectTest.testNestedSerialization":135,"com.google.gson.JsonObjectTest.testAddingStringProperties":676,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":15,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":404,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":442,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":505,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":316,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":253,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":29,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":19,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":248,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":272,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":484,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":129,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":656,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":570,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":190,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":111,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":95,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":271,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":634,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":664,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":91,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":136,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":33,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":321,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":313,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":250,"com.google.gson.functional.CollectionTest.testSetSerialization":70,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":175,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":182,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":303,"com.google.gson.functional.StringTest.testStringValueSerialization":314,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":226,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":77,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":152,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":608,"com.google.gson.MixedStreamTest.testWriteInvalidState":4,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":587,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":255,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":635,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":18,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":552,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":9,"com.google.gson.stream.JsonWriterTest.testBooleans":456,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":370,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":101,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":199,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":672,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":172,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":276,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":282,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":385,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":444,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":595,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":469,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":295,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":586},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29c808dc-3f44-11e6-8365-8f7431a6c720","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:45","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.TypeAdapter<T>;\n    java.lang.reflect.Type java.lang.reflect.Type = getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, value);\n    if (runtimeType != (java.lang.reflect.Type)) {\n        com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(runtimeType));\n        if (!(runtimeTypeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = runtimeTypeAdapter;\n        } else if (!((com.google.gson.TypeAdapter<T>) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = com.google.gson.TypeAdapter<T>;\n        } else {\n            chosen = runtimeTypeAdapter;\n        }\n    } \n    chosen.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:437","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"29c87e0d-3f44-11e6-8365-97559baf5a56","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:401","type":"CtMethodImpl","sourcecode":"private void rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotLeft;\n            if (pivotLeft != null) {\n                pivotLeft.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((left != null ? left.int : 0), (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotRight != null ? pivotRight.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pivotRight":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl"},"failures":[1],"tindex":"29c8cc2e-3f44-11e6-8365-cff4b915b3d1","method":{"position":"com.google.gson.stream.JsonWriter:385","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name == null) {\n        {\n            if (name == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (name == null) {\n                        throw new java.lang.NullPointerException(\"name == null\");\n                    } \n                    if ((java.lang.String) != null) {\n                        throw new java.lang.IllegalStateException();\n                    } \n                    if ((int) == 0) {\n                        throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n                    } \n                    java.lang.String = name;\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29c8cc2f-3f44-11e6-8365-877f658088c1","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29c8f340-3f44-11e6-8365-65574f00fad4","method":{"position":"com.google.gson.Gson:278","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29c8f341-3f44-11e6-8365-53ad8b42daf2","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            if (!(isLenient())) {\n                double double = value.doubleValue();\n                if ((java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))) {\n                    throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n                } \n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29c91a52-3f44-11e6-8365-656b1c51d1fe","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Time value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:226","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29c91a53-3f44-11e6-8365-af9900645b9a","method":{"position":"com.google.gson.internal.LinkedTreeMap:373","type":"CtMethodImpl","sourcecode":"private void rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if ((root != null) && (root != null)) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotLeft;\n            if (pivotLeft != null) {\n                pivotLeft.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((left != null ? left.int : 0), (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotRight != null ? pivotRight.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root","right":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29c94164-3f44-11e6-8365-2b2a2de90085","method":{"position":"com.google.gson.JsonObject:111","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Character value) {\n    if (property == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29c94165-3f44-11e6-8365-91c091ac1ec8","method":{"position":"com.google.gson.internal.bind.TypeAdapters:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    switch (jsonToken) {\n        case NULL :\n            in.nextNull();\n            return null;\n        case NUMBER :\n            return new com.google.gson.internal.LazilyParsedNumber(in.nextString());\n        default :\n            throw new com.google.gson.JsonSyntaxException((\"Expecting number, got: \" + jsonToken));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29c96876-3f44-11e6-8365-73eb010d823f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:406","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuilder read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuilder(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29c96877-3f44-11e6-8365-b1c428510ef2","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if ((property.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:179","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29c98f88-3f44-11e6-8365-53896873170e","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:512","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:136","type":"CtInvocationImpl"},"failures":[],"tindex":"29c98f89-3f44-11e6-8365-9d829cba773f","method":{"position":"com.google.gson.DefaultDateTypeAdapter:94","type":"CtMethodImpl","sourcecode":"private java.util.Date deserializeToDate(com.google.gson.JsonElement json) {\n    synchronized(java.text.DateFormat) {\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException ignored) {\n        }\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException ignored) {\n        }\n        try {\n            return java.text.DateFormat.parse(json.getAsString());\n        } catch (java.text.ParseException e) {\n            throw new com.google.gson.JsonSyntaxException(json.getAsString() , e);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:537","type":"CtFieldReadImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"29c9b69a-3f44-11e6-8365-09da55eff792","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:58","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field f, boolean serialize) {\n    if (serialize) {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(f, serialize, com.google.gson.internal.Excluder);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:958","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29c9b69b-3f44-11e6-8365-b517e153ec76","method":{"position":"com.google.gson.FieldNamingPolicy:163","type":"CtMethodImpl","sourcecode":"private static java.lang.String modifyString(char firstCharacter, java.lang.String srcString, int indexOfSubstring) {\n    if (indexOfSubstring == indexOfSubstring) {\n        {\n            return indexOfSubstring < (srcString.length()) ? firstCharacter + (srcString.substring(indexOfSubstring)) : java.lang.String.valueOf(firstCharacter);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"indexOfSubstring","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"indexOfSubstring"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29c9b69c-3f44-11e6-8365-9739c7ca1de1","method":{"position":"com.google.gson.GsonBuilder:382","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(java.lang.String pattern) {\n    if (pattern == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.java.lang.String = pattern;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"pattern"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29c9ddad-3f44-11e6-8365-3be6dfc2a3af","method":{"position":"com.google.gson.stream.JsonWriter:385","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name == null) {\n        {\n            if (name == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    if (name == null) {\n                        throw new java.lang.NullPointerException(\"name == null\");\n                    } \n                    if ((java.lang.String) != null) {\n                        throw new java.lang.IllegalStateException();\n                    } \n                    if ((int) == 0) {\n                        throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n                    } \n                    java.lang.String = name;\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"name"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl"},"failures":[],"tindex":"29c9ddae-3f44-11e6-8365-c721fc4f0150","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (value.isNumber()) {\n        {\n            if (value == null) {\n                value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:356","type":"CtVariableReadImpl"},"failures":[2,3,246,4,247,248,5,249,250,24,251,252,58,253,64,104,105,254,106,107,255,156,157,160,167,168,256,183,184,185,189,190,195,257,205,206,207,208,258,228,259,231,232,234,260,235,261,236,262,263,264],"tindex":"29c9ddaf-3f44-11e6-8365-f95bf1273fc6","method":{"position":"com.google.gson.stream.JsonWriter:268","type":"CtMethodImpl","sourcecode":"public final void setSerializeNulls(boolean serializeNulls) {\n    if (serializeNulls) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = serializeNulls;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serializeNulls"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29ca04c0-3f44-11e6-8365-5d022cc75279","method":{"position":"com.google.gson.internal.$Gson$Types:431","type":"CtMethodImpl","sourcecode":"private static void checkNotPrimitive(java.lang.reflect.Type type) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(((!(type instanceof java.lang.Class<?>)) || (!(((java.lang.Class<?>)(type)).isPrimitive()))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29ca04c1-3f44-11e6-8365-5747f4373dac","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29ca04c2-3f44-11e6-8365-49c71c73057a","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:43","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (b != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a.compareTo(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:549","type":"CtBinaryOperatorImpl"},"failures":[2,3,246,4,247,248,5,265,266,267,268,269,270,271,272,8,273,274,275,276,277,278,279,249,9,10,280,281,282,283,284,285,286,287,288,14,15,289,290,291,292,293,294,295,296,250,297,298,16,18,299,300,19,301,302,21,22,303,304,305,23,306,307,308,309,310,311,312,313,314,24,315,316,25,27,29,317,318,319,320,321,322,323,324,325,326,31,34,35,38,39,327,40,41,42,43,251,45,46,47,48,49,51,52,53,55,57,328,329,330,252,331,332,58,333,334,335,336,337,60,338,61,62,253,339,63,340,341,342,64,65,343,66,344,345,346,347,348,67,349,69,350,70,351,352,71,353,354,355,356,72,357,358,359,360,74,76,78,80,81,87,90,361,362,363,364,365,366,367,368,369,370,94,371,372,373,374,375,376,377,378,379,96,380,381,382,383,384,385,386,387,388,97,389,390,391,392,98,393,394,395,99,100,101,102,103,108,109,110,396,113,115,116,119,122,125,255,127,397,129,398,399,132,134,135,400,137,140,142,143,145,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,151,152,153,154,155,156,430,158,160,163,164,165,166,169,170,171,173,174,176,177,431,432,180,433,181,182,434,435,436,437,438,439,186,187,188,193,194,440,197,441,257,198,199,200,201,202,204,206,209,210,211,213,214,215,218,220,223,442,443,224,225,226,258,444,445,446,447,448,227,449,228,259,450,231,232,234,260,235,261,236,238,240,241,451,242,452,453,454,455,456,457,458,459,460,1,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,243,244,485,486,245,487,488],"tindex":"29ca2bd3-3f44-11e6-8365-bd973f4431e1","method":{"position":"com.google.gson.stream.JsonWriter:375","type":"CtMethodImpl","sourcecode":"private void replaceTop(int topOfStack) {\n    if (topOfStack == topOfStack) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            int[][((int) - 1)] = topOfStack;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonScope.CLOSED":"topOfStack","peekStack":"topOfStack"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"29ca2bd4-3f44-11e6-8365-3f450fd56b04","method":{"position":"com.google.gson.FieldNamingPolicy:113","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"-\").toLowerCase();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29ca2bd5-3f44-11e6-8365-f79192447e2f","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:69","type":"CtMethodImpl","sourcecode":"private synchronized java.util.Date deserializeToDate(java.lang.String json) {\n    if (json != null) {\n        {\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException e) {\n                throw new com.google.gson.JsonSyntaxException(json , e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29ca52e6-3f44-11e6-8365-d39931dd9f52","method":{"position":"com.google.gson.internal.bind.TypeAdapters:744","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    out.value((value == null ? null : java.util.Map<T, java.lang.String>.get(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29ca52e7-3f44-11e6-8365-a5f6a4774442","method":{"position":"com.google.gson.internal.bind.TypeAdapters:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:83","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29ca52e8-3f44-11e6-8365-a30d98d92de2","method":{"position":"com.google.gson.reflect.TypeToken:253","type":"CtMethodImpl","sourcecode":"private static java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type token, java.lang.Class<?>... expected) {\n    if (!(token instanceof java.lang.reflect.ParameterizedType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (token == token) {\n                {\n                    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"Unexpected type. Expected one of: \");\n                    for (java.lang.Class<?> java.lang.Class<?> : expected) {\n                        exceptionMessage.append(clazz.getName()).append(\", \");\n                    }\n                    exceptionMessage.append(\"but got: \").append(token.getClass().getName()).append(\", for type token: \").append(token.toString()).append('.');\n                    return new java.lang.AssertionError(exceptionMessage.toString());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"token","java.util.Date.class":"token"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl"},"failures":[94],"tindex":"29ca52e9-3f44-11e6-8365-478ebb62824f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    out.value(value);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:243","type":"CtBinaryOperatorImpl"},"failures":[31,32,33,35,36,38],"tindex":"29ca52ea-3f44-11e6-8365-4d39ed629146","method":{"position":"com.google.gson.internal.Excluder:242","type":"CtMethodImpl","sourcecode":"private boolean isValidUntil(com.google.gson.annotations.Until annotation) {\n    if (annotation != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (annotation != null) {\n                double double = annotation.value();\n                if (annotationVersion <= (double)) {\n                    return false;\n                } \n            } \n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.internal.$Gson$Types:370","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29ca52eb-3f44-11e6-8365-d7968253210c","method":{"position":"com.google.gson.DefaultDateTypeAdapter:77","type":"CtMethodImpl","sourcecode":"public java.util.Date deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT, com.google.gson.JsonDeserializationContext context) throws com.google.gson.JsonParseException {\n    if (typeOfT instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    } else {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                throw new com.google.gson.JsonParseException(\"The date should be a string value\");\n            } \n            java.util.Date java.util.Date = deserializeToDate(json);\n            if (typeOfT == (java.util.Date.java.util.Date.java.lang.Class)) {\n                return date;\n            } else if (typeOfT == (java.sql.Timestamp.java.sql.Timestamp.java.lang.Class)) {\n                return new java.sql.Timestamp(date.getTime());\n            } else if (typeOfT == (java.sql.Date.java.sql.Date.java.lang.Class)) {\n                return new java.sql.Date(date.getTime());\n            } else {\n                throw new java.lang.IllegalArgumentException((((getClass()) + \" cannot deserialize to \") + typeOfT));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:398","type":"CtBinaryOperatorImpl"},"failures":[2,3,4,5,6,7,265,266,267,272,8,9,10,11,12,13,489,281,282,283,284,285,286,287,288,14,15,490,491,492,493,494,16,17,18,495,496,497,19,20,21,22,23,498,307,309,499,500,501,502,503,504,505,506,24,315,316,25,507,26,27,28,29,508,30,31,32,33,34,35,36,37,38,509,39,40,41,42,43,44,251,45,46,47,48,49,50,51,52,53,54,55,510,56,57,511,512,58,59,60,61,62,63,64,65,66,67,513,68,69,70,514,71,355,356,515,72,73,358,516,517,518,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,519,362,520,91,92,521,522,523,368,93,524,525,94,526,95,527,528,529,96,380,382,530,531,384,532,533,534,97,389,391,98,535,536,537,538,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,539,130,131,132,133,134,135,136,137,138,139,540,541,140,141,142,143,144,145,146,147,148,149,542,543,544,545,546,547,403,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,150,567,568,569,570,571,572,151,152,153,154,155,156,157,158,573,159,160,161,162,163,164,165,166,167,168,169,170,574,171,172,173,174,175,176,177,178,575,179,180,181,576,182,577,438,183,184,185,186,187,188,189,190,191,192,193,194,195,440,196,197,578,579,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,443,224,225,226,445,446,448,227,449,228,229,230,580,231,232,233,234,235,581,236,237,238,239,240,241,242,243,244,245,487,488],"tindex":"29ca79fc-3f44-11e6-8365-d12061edd54c","method":{"position":"com.google.gson.internal.Primitives:60","type":"CtMethodImpl","sourcecode":"private static void add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>> forward, java.util.Map<java.lang.Class<?>, java.lang.Class<?>> backward, java.lang.Class<?> key, java.lang.Class<?> value) {\n    if (key == null) {\n        {\n            forward.put(key, value);\n            backward.put(value, key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredByRaw":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl"},"failures":[2,582,583,3,246,4,247,584,248,5,6,7,265,266,267,270,271,272,585,8,9,10,280,586,11,12,13,489,281,282,283,284,285,286,287,288,14,15,289,290,587,291,292,293,294,295,490,491,296,250,297,492,588,493,298,494,16,17,18,495,299,496,300,497,19,20,301,302,21,22,303,304,305,23,498,306,307,308,309,310,499,500,311,501,312,502,503,504,313,505,506,314,24,315,589,316,25,507,26,27,28,29,508,30,326,31,32,33,34,35,36,37,38,509,39,327,40,41,42,43,44,251,45,46,47,48,49,50,51,52,53,54,55,510,56,57,511,328,590,329,512,591,592,330,252,593,594,331,595,332,596,58,597,598,599,600,333,334,335,601,59,336,337,602,60,338,61,62,253,339,603,63,340,604,341,605,606,342,64,65,343,66,344,607,608,609,345,346,347,348,67,610,611,349,513,68,69,350,612,70,351,514,352,613,353,354,355,356,614,515,72,73,357,358,359,516,517,360,518,74,75,76,77,78,79,80,81,82,83,84,85,86,615,616,617,87,88,89,90,519,361,362,363,520,91,92,364,521,365,366,522,367,523,368,369,93,524,370,525,94,526,371,372,373,374,375,95,376,527,377,378,528,379,529,96,380,381,382,530,383,618,531,384,532,385,386,533,387,388,534,97,389,390,391,392,98,535,536,393,394,537,395,538,99,100,101,102,103,104,105,254,106,107,108,109,110,396,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,255,126,619,127,128,397,129,539,130,398,131,399,132,133,134,135,400,136,137,138,139,540,541,140,141,142,143,144,145,146,147,148,149,620,621,542,401,543,622,623,624,625,544,545,402,546,547,403,626,627,628,629,630,631,548,632,404,633,634,549,550,635,405,551,636,406,637,552,407,553,554,638,555,408,639,640,641,409,410,556,642,643,411,644,557,558,645,559,560,561,562,412,646,413,647,414,415,563,564,416,565,648,417,566,418,649,150,567,419,420,421,422,423,424,650,568,569,651,425,570,426,652,571,653,427,428,654,429,572,655,156,430,157,158,573,159,160,161,162,163,164,165,166,167,168,656,169,170,574,171,172,173,256,174,175,176,177,431,178,432,575,657,179,180,433,181,576,182,434,435,658,436,577,437,438,439,183,184,185,186,187,188,189,190,191,192,193,194,195,659,440,196,197,441,578,579,660,257,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,442,443,224,225,226,258,444,445,446,447,448,227,449,661,228,229,230,259,580,450,231,232,233,234,260,235,261,581,236,237,238,662,239,240,241,663,243,244,664,485,486,665,245,666,487,488],"tindex":"29caa10d-3f44-11e6-8365-81723b58008b","method":{"position":"com.google.gson.Gson:305","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> longAdapter(com.google.gson.LongSerializationPolicy longSerializationPolicy) {\n    if (longSerializationPolicy == longSerializationPolicy) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (longSerializationPolicy == (com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy.com.google.gson.LongSerializationPolicy)) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return in.nextLong();\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    out.value(value.toString());\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"longSerializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"longSerializationPolicy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:735","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29caa10e-3f44-11e6-8365-db53552b5906","method":{"position":"com.google.gson.JsonArray:105","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(int index) {\n    if ((index == index) || (last == index)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"index","last":"index","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.$Gson$Types:141","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29caa10f-3f44-11e6-8365-ad27df95ddb1","method":{"position":"com.google.gson.Gson:801","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.stream.JsonReader reader, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            boolean boolean = true;\n            boolean boolean = reader.isLenient();\n            reader.setLenient(true);\n            try {\n                reader.peek();\n                isEmpty = false;\n                com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(typeOfT)));\n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = getAdapter(typeToken);\n                T T = typeAdapter.read(reader);\n                return object;\n            } catch (java.io.EOFException e) {\n                if (isEmpty) {\n                    return null;\n                } \n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.lang.IllegalStateException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } finally {\n                reader.setLenient(oldLenient);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:118","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cac820-3f44-11e6-8365-89349ff90454","method":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:50","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic com.google.gson.TypeAdapter<?> getTypeAdapter(com.google.gson.internal.ConstructorConstructor constructorConstructor, com.google.gson.Gson gson, com.google.gson.reflect.TypeToken<?> fieldType, com.google.gson.annotations.JsonAdapter annotation) {\n    if (annotation != null) {\n        {\n            java.lang.Class<?> java.lang.Class<?> = annotation.value();\n            if (com.google.gson.TypeAdapter.com.google.gson.TypeAdapter.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapter<?>> java.lang.Class<com.google.gson.TypeAdapter<?>> = ((java.lang.Class<com.google.gson.TypeAdapter<?>>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapter)).construct();\n            } \n            if (com.google.gson.TypeAdapterFactory.com.google.gson.TypeAdapterFactory.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapterFactory> java.lang.Class<com.google.gson.TypeAdapterFactory> = ((java.lang.Class<com.google.gson.TypeAdapterFactory>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapterFactory)).construct().create(gson, fieldType);\n            } \n            throw new java.lang.IllegalArgumentException(\"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29cac821-3f44-11e6-8365-ff06f4186c6c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:98","type":"CtBinaryOperatorImpl"},"failures":[667,668,669,670,207,671,262,672,673,674,675,676],"tindex":"29cac822-3f44-11e6-8365-6bc4c4ce9c89","method":{"position":"com.google.gson.internal.LinkedTreeMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.ParameterizedType) {\n        {\n            return (findByObject(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cac823-3f44-11e6-8365-b52a36be5f12","method":{"position":"com.google.gson.internal.$Gson$Types:287","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Collection.java.util.Collection.java.lang.Class);\n    if (collectionType instanceof java.lang.reflect.WildcardType) {\n        collectionType = ((java.lang.reflect.WildcardType)(collectionType)).getUpperBounds()[0];\n    } \n    if (collectionType instanceof java.lang.reflect.ParameterizedType) {\n        return ((java.lang.reflect.ParameterizedType)(collectionType)).getActualTypeArguments()[0];\n    } \n    return java.lang.Object.java.lang.Object.java.lang.Class;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29cac824-3f44-11e6-8365-1bd1a868d449","method":{"position":"com.google.gson.internal.bind.TypeAdapters:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextLong();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29caef35-3f44-11e6-8365-850f921cb74e","method":{"position":"com.google.gson.Gson:895","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    com.google.gson.TypeAdapter<T>.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29caef36-3f44-11e6-8365-7db8e062889f","method":{"position":"com.google.gson.TreeTypeAdapter:103","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class<?> hierarchyType, java.lang.Object typeAdapter) {\n    return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , null , false , hierarchyType);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:649","type":"CtFieldReadImpl"},"failures":[],"tindex":"29caef37-3f44-11e6-8365-eb4881a2778f","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prettyPrinting":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl"},"failures":[250,299,58,60,61,64,348,94,97,152,186,188,194,228,259,231,232,261,236,457],"tindex":"29caef38-3f44-11e6-8365-a971f09e6778","method":{"position":"com.google.gson.stream.JsonWriter:413","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            beforeValue(false);\n            string(value);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29caef39-3f44-11e6-8365-5162211a59e6","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (!(boolean))\n        return false;\n    \n    java.lang.Object java.lang.Object = field.get(value);\n    return fieldValue != value;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1240","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29caef3a-3f44-11e6-8365-0144e5e60462","method":{"position":"com.google.gson.internal.Streams:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int i) throws java.io.IOException {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.Appendable.append(((char)(i)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_BEGIN_ARRAY":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb164b-3f44-11e6-8365-2f5a83160e7c","method":{"position":"com.google.gson.internal.LinkedTreeMap:609","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object key) {\n    if (key == null) {\n        {\n            return (removeInternalByKey(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29cb164c-3f44-11e6-8365-2baddcbbbad1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb164d-3f44-11e6-8365-594ab3d44ff2","method":{"position":"com.google.gson.JsonParser:56","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.io.Reader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            try {\n                com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                com.google.gson.JsonElement com.google.gson.JsonElement = parse(jsonReader);\n                if ((!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonSyntaxException(\"Did not consume the entire document.\");\n                } \n                return element;\n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } catch (java.lang.NumberFormatException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:817","type":"CtVariableReadImpl"},"failures":[8,16,22,23,25,34,49,65,67,69,110,113,119,129,132,135,140,142,145,406,407,169,170,193,197,198,206,226,241,456,461,462,464,469,470],"tindex":"29cb164e-3f44-11e6-8365-49f8fc1e8121","method":{"position":"com.google.gson.stream.JsonWriter:447","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write((value ? \"true\" : \"false\"));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29cb164f-3f44-11e6-8365-d3e96aac3966","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:45","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.TypeAdapter<T>;\n    java.lang.reflect.Type java.lang.reflect.Type = getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, value);\n    if (runtimeType != (java.lang.reflect.Type)) {\n        com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(runtimeType));\n        if (!(runtimeTypeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = runtimeTypeAdapter;\n        } else if (!((com.google.gson.TypeAdapter<T>) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = com.google.gson.TypeAdapter<T>;\n        } else {\n            chosen = runtimeTypeAdapter;\n        }\n    } \n    chosen.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb1650-3f44-11e6-8365-618b3da9c226","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29cb3d61-3f44-11e6-8365-d129794c81c9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:75","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb3d62-3f44-11e6-8365-97c97191fa0e","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"toFind","value":"toFind","java.lang.Object.class":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb3d63-3f44-11e6-8365-3f6badcd0a92","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb3d64-3f44-11e6-8365-092219275950","method":{"position":"com.google.gson.internal.LinkedTreeMap:574","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"o","value":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:168","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29cb3d65-3f44-11e6-8365-616fab5f0df5","method":{"position":"com.google.gson.reflect.TypeToken:253","type":"CtMethodImpl","sourcecode":"private static java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type token, java.lang.Class<?>... expected) {\n    if (!(token instanceof java.lang.reflect.ParameterizedType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (token == token) {\n                {\n                    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"Unexpected type. Expected one of: \");\n                    for (java.lang.Class<?> java.lang.Class<?> : expected) {\n                        exceptionMessage.append(clazz.getName()).append(\", \");\n                    }\n                    exceptionMessage.append(\"but got: \").append(token.getClass().getName()).append(\", for type token: \").append(token.toString()).append('.');\n                    return new java.lang.AssertionError(exceptionMessage.toString());\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"token"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:383","type":"CtBinaryOperatorImpl"},"failures":[387,389],"tindex":"29cb3d66-3f44-11e6-8365-132f9b08abba","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == style) {\n        {\n            if (style == style) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.GsonBuilder.this.int = style;\n                    com.google.gson.GsonBuilder.this.java.lang.String = null;\n                    return com.google.gson.GsonBuilder.this;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"style","com.google.gson.stream.JsonReader.PEEKED_BEGIN_OBJECT":"style"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:459","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb6477-3f44-11e6-8365-67f2f82dd939","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src instanceof com.google.gson.TypeAdapter<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29cb6478-3f44-11e6-8365-e38d97526c0a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:607","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Locale read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(locale , \"_\");\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    if (tokenizer.hasMoreElements()) {\n        language = tokenizer.nextToken();\n    } \n    if (tokenizer.hasMoreElements()) {\n        country = tokenizer.nextToken();\n    } \n    if (tokenizer.hasMoreElements()) {\n        variant = tokenizer.nextToken();\n    } \n    if ((country == null) && (variant == null)) {\n        return new java.util.Locale(language);\n    } else if (variant == null) {\n        return new java.util.Locale(language , country);\n    } else {\n        return new java.util.Locale(language , country , variant);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:162","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb6479-3f44-11e6-8365-7d64f0c7f019","method":{"position":"com.google.gson.internal.$Gson$Types:65","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type componentType) {\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(componentType);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericComponentType":"componentType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:334","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb647a-3f44-11e6-8365-c3c1d3a140c6","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key instanceof java.lang.Number) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = removeInternalByKey(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"key","value":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb647b-3f44-11e6-8365-f3db42c6798b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            } else {\n                {\n                    out.value(value);\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb8b8c-3f44-11e6-8365-5bbe7fa8d7b5","method":{"position":"com.google.gson.TypeAdapter:254","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.io.Reader in) throws java.io.IOException {\n    if (in == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(in);\n            return read(reader);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:455","type":"CtBinaryOperatorImpl"},"failures":[265,266,267,586,11,12,13,489,281,282,285,288,318,319,677,50,54,510,512,74,75,76,77,78,79,80,81,380,384,533,392,149,199,201,447,678],"tindex":"29cb8b8d-3f44-11e6-8365-3d4138f24978","method":{"position":"com.google.gson.GsonBuilder:447","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type type, java.lang.Object typeAdapter) {\n    if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument(((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.InstanceCreator<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n                java.util.Map<java.lang.reflect.Type, com.google.gson.InstanceCreator<?>>.put(type, ((com.google.gson.InstanceCreator)(typeAdapter)));\n            } \n            if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                com.google.gson.reflect.TypeToken<?> com.google.gson.reflect.TypeToken<?> = com.google.gson.reflect.TypeToken.get(type);\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(type), ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29cb8b8e-3f44-11e6-8365-198ce9f415f0","method":{"position":"com.google.gson.internal.bind.TypeAdapters:348","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.toString(in.nextBoolean());\n    } \n    return in.nextString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:882","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb8b8f-3f44-11e6-8365-bf8fd87a4c83","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == style) {\n        {\n            if (style == style) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    com.google.gson.GsonBuilder.this.int = style;\n                    com.google.gson.GsonBuilder.this.java.lang.String = null;\n                    return com.google.gson.GsonBuilder.this;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"style","com.google.gson.stream.JsonReader.PEEKED_NULL":"style"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cb8b90-3f44-11e6-8365-d77d071c4c1c","method":{"position":"com.google.gson.internal.LinkedTreeMap:41","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (a == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a.compareTo(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:364","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cbb2a1-3f44-11e6-8365-af6da432aa5a","method":{"position":"com.google.gson.JsonArray:81","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement set(int index, com.google.gson.JsonElement element) {\n    if (index == index) {\n        {\n            return java.util.List<com.google.gson.JsonElement>.set(index, element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"index","com.google.gson.stream.JsonReader.PEEKED_END_ARRAY":"index"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cbb2a2-3f44-11e6-8365-a95a395ad179","method":{"position":"com.google.gson.GsonBuilder:447","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type type, java.lang.Object typeAdapter) {\n    if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument(((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.InstanceCreator<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n                java.util.Map<java.lang.reflect.Type, com.google.gson.InstanceCreator<?>>.put(type, ((com.google.gson.InstanceCreator)(typeAdapter)));\n            } \n            if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                com.google.gson.reflect.TypeToken<?> com.google.gson.reflect.TypeToken<?> = com.google.gson.reflect.TypeToken.get(type);\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(type), ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"typeAdapter","value":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"29cbb2a3-3f44-11e6-8365-035de904b6cc","method":{"position":"com.google.gson.stream.JsonReader:1448","type":"CtMethodImpl","sourcecode":"private boolean skipTo(java.lang.String toFind) throws java.io.IOException {\n    if (toFind != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            outer : for ( ; (((int) + (toFind.length())) <= (int)) || (fillBuffer(toFind.length())) ; (int)++) {\n                if ((char[][int]) == '\\n') {\n                    (int)++;\n                    int = (int) + 1;\n                    continue;\n                } \n                for (int int = 0 ; c < (toFind.length()) ; c++) {\n                    if ((char[][((int) + c)]) != (toFind.charAt(c))) {\n                        continue outer;\n                    } \n                }\n                return true;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:602","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"29cbb2a4-3f44-11e6-8365-a14db9fb1cf5","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (!deserialization) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467345935644/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"deserialization"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":73,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}