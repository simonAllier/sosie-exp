{"failureDictionary":{"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":146,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":10,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":22,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":15,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":103,"com.google.gson.internal.LinkedHashTreeMapTest.testIterationOrder":165,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":128,"com.google.gson.functional.MapTest.testComplexKeysSerialization":154,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":32,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":144,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":79,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":6,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":52,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":100,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":122,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":107,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":108,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":53,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":78,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":34,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":102,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":116,"com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides":161,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":149,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize":19,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":42,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":71,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":23,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":129,"com.google.gson.functional.ObjectTest.testSingletonLists":76,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":90,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":58,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":61,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":93,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":51,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":73,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":1,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":30,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":86,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":106,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":27,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":37,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":157,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":20,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":25,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":66,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":94,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":81,"com.google.gson.ObjectTypeAdapterTest.testSerialize":159,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":38,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":59,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":135,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":123,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":9,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":153,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":44,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":5,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":91,"com.google.gson.internal.LinkedHashTreeMapTest.testClear":162,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":64,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":130,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":140,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":142,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":56,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":74,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":148,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":118,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":8,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":13,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":39,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":92,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":105,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":80,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":98,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":84,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":47,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":54,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":83,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":126,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":151,"com.google.gson.MixedStreamTest.testReadMixedStreamed":0,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":50,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":41,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":85,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":89,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":63,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":124,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":127,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":60,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":68,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":31,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":136,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":3,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":145,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":163,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":55,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":62,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":57,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":75,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":18,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":138,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":169,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":87,"com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode":168,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField":16,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":119,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":65,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":29,"com.google.gson.functional.ObjectTest.testNestedDeserialization":95,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":26,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":77,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":11,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":114,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":40,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":99,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":72,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":82,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":110,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":121,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":67,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":115,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":131,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":164,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":49,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":48,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":88,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":134,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":21,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":147,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":125,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":104,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":24,"com.google.gson.functional.CollectionTest.testSetSerialization":158,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":137,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":28,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":111,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":160,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":2,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":101,"com.google.gson.functional.CollectionTest.testSetDeserialization":109,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":150,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":112,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":14,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":155,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":33,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":7,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":120,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":97,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":4,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":70,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":141,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":12,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":36,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":35,"com.google.gson.internal.LinkedHashTreeMapTest.testPutNonComparableKeyFails":166,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse":167,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":43,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":152,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject":17,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":139,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":143,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":45,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":117,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":156,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":133,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":113,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":132,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":46},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.GsonBuilder:455","type":"CtBinaryOperatorImpl","sourcecode":"(typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"210f85ad-3e80-11e6-91a9-192e5787c991","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if ((value instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262875844/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:178","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"211021ee-3e80-11e6-91a9-19f1997b3d96","method":{"position":"com.google.gson.Gson:617","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {\n    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n    toJson(jsonElement, writer);\n    return writer.toString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"211021ef-3e80-11e6-91a9-2d4b9aded7cb","method":{"position":"com.google.gson.internal.bind.TypeAdapters:736","type":"CtMethodImpl","sourcecode":"public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.Map<java.lang.String, T>.get(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"21104900-3e80-11e6-91a9-bd3fa07c1c3f","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:63","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Time value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:141","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"21104901-3e80-11e6-91a9-499dab66de9d","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262875844/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                return null;\n            } \n            java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n            T T = ((T)(fromJson(reader, typeOfT)));\n            return target;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"21107012-3e80-11e6-91a9-915c3f9efba4","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (value == null) {\n        value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.ParameterizedType"},"failures":[2,6,111,7,8,9,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,26,127,128,129,28,29,130,131,132,30,133,134,135,136,137,31,32,34,35,138,139,140,36,37,141,142,48,143,144,49,145,146,147,148,149,150,151,56,152,153,154,83,155,156,157,97,98,99,100,101,102,106,107,109,158,159],"tindex":"21107013-3e80-11e6-91a9-19602968b029","method":{"position":"com.google.gson.internal.ConstructorConstructor:200","type":"CtMethodImpl","sourcecode":"private <T>com.google.gson.internal.ObjectConstructor<T> newUnsafeAllocator(final java.lang.reflect.Type type, final java.lang.Class<? super T> rawType) {\n    if (type instanceof java.lang.reflect.ParameterizedType) {\n        {\n            return new com.google.gson.internal.ObjectConstructor<T>() {\n                private final com.google.gson.internal.UnsafeAllocator unsafeAllocator = com.google.gson.internal.UnsafeAllocator.create();\n\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                public T construct() {\n                    try {\n                        java.lang.Object java.lang.Object = com.google.gson.internal.UnsafeAllocator.newInstance(rawType);\n                        return ((T)(newInstance));\n                    } catch (java.lang.Exception e) {\n                        throw new java.lang.RuntimeException((((\"Unable to invoke no-args constructor for \" + type) + \". \") + \"Register an InstanceCreator with Gson for this type may fix this problem.\") , e);\n                    }\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262875844/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"type"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:116","type":"CtBinaryOperatorImpl","sourcecode":"(!skipSerialize) && (!skipDeserialize)"},"failures":[160,161,162,163,164,165,166,167,168,169],"tindex":"21109724-3e80-11e6-91a9-1d9222cf9bdf","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:131","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> find(K key, boolean create) {\n    if ((!create) && (!create)) {\n        {\n            java.util.Comparator<? super K> java.util.Comparator<? super K> = com.google.gson.internal.LinkedHashTreeMap.this.java.util.Comparator<? super K>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[];\n            int int = com.google.gson.internal.LinkedHashTreeMap.secondaryHash(key.hashCode());\n            int int = hash & ((table.int) - 1);\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = table[index];\n            int int = 0;\n            if (nearest != null) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>) ? ((java.lang.Comparable<java.lang.Object>)(key)) : null;\n                while (true) {\n                    comparison = comparableKey != null ? comparableKey.compareTo(nearest.K) : comparator.compare(key, nearest.K);\n                    if (comparison == 0) {\n                        return nearest;\n                    } \n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = comparison < 0 ? nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> : nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    if (child == null) {\n                        break;\n                    } \n                    nearest = child;\n                }\n            } \n            if (!create) {\n                return null;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            if (nearest == null) {\n                if ((comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n                    throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n                } \n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                table[index] = created;\n            } else {\n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                if (comparison < 0) {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                } else {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                }\n                rebalance(nearest, true);\n            }\n            if (((int)++) > (int)) {\n                doubleCapacity();\n            } \n            (int)++;\n            return created;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262875844/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"skipDeserialize":"create","skipSerialize":"create"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:482","type":"CtBinaryOperatorImpl","sourcecode":"(peekStack == (com.google.gson.stream.JsonScope.EMPTY_OBJECT)) || (peekStack == (com.google.gson.stream.JsonScope.NONEMPTY_OBJECT))"},"failures":[],"tindex":"21110c55-3e80-11e6-91a9-5b207fe06f15","method":{"position":"com.google.gson.stream.JsonReader:1268","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if ((newTop == newTop) || (peekStack == newTop)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467262875844/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                int[] int[] = new int[(int) * 2];\n                java.lang.String[] java.lang.String[] = new java.lang.String[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                java.lang.System.arraycopy(int[], 0, newPathIndices, 0, int);\n                java.lang.System.arraycopy(java.lang.String[], 0, newPathNames, 0, int);\n                int[] = newStack;\n                int[] = newPathIndices;\n                java.lang.String[] = newPathNames;\n            } \n            int[][((int)++)] = newTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"newTop","com.google.gson.stream.JsonScope.EMPTY_OBJECT":"newTop","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":9,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}