{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":425,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":578,"com.google.gson.functional.StringTest.testStringValueDeserialization":576,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":635,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":189,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":283,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":531,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":247,"com.google.gson.stream.JsonWriterTest.testRepeatedName":627,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":0,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":361,"com.google.gson.MixedStreamTest.testWriteLenient":17,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":141,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":327,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":540,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":115,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":90,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":107,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":325,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":291,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":54,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":472,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":382,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":256,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":67,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":203,"com.google.gson.functional.ObjectTest.testSingletonLists":323,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":475,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":532,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":240,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":579,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":608,"com.google.gson.stream.JsonWriterTest.testStrings":648,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":135,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":39,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":112,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":550,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":340,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":34,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":294,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":558,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":656,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":592,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":366,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":284,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":404,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":640,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":171,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":20,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":232,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":396,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":170,"com.google.gson.functional.EnumTest.testEnumCaseMapping":53,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":577,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":603,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":231,"com.google.gson.functional.JsonTreeTest.testToJsonTree":489,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":409,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":553,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":229,"com.google.gson.stream.JsonWriterTest.testNulls":624,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":75,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":506,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":14,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":454,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":242,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":524,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":206,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":100,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":369,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":589,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":336,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":304,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":651,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":248,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":341,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":394,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":195,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":349,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":650,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":380,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":496,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":554,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":199,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":309,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":308,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":636,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":549,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":15,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":288,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":6,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":315,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":505,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":352,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":450,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":267,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":530,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":142,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":163,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":281,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":85,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":521,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":485,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":610,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":121,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":185,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":148,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":289,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":282,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":348,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":444,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":28,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":331,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":569,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":643,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":59,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":181,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":252,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":476,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":220,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":66,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":403,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":123,"com.google.gson.stream.JsonWriterTest.testEmptyArray":617,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":36,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":187,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":417,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":538,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":400,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":523,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":194,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":372,"com.google.gson.functional.CollectionTest.testSetDeserialization":106,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":383,"com.google.gson.functional.EnumTest.testEnumSet":44,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":335,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":478,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":273,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":3,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":122,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":158,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":511,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":342,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":19,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":65,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":286,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":402,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":296,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":639,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":43,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":391,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":297,"com.google.gson.functional.MapTest.testHashMapDeserialization":152,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":245,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":536,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":427,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":570,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":76,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":423,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":42,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":481,"com.google.gson.functional.MapTest.testSortedMap":174,"com.google.gson.functional.MapTest.testMapSerialization":169,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":426,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":279,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":413,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":457,"com.google.gson.functional.MapTest.testSerializeMaps":155,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":574,"com.google.gson.functional.MapTest.testComplexKeysSerialization":182,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":477,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":186,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":609,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":464,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":51,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":371,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":215,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":88,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":652,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":49,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":407,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":662,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":1,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":351,"com.google.gson.functional.MapTest.testStringKeyDeserialization":184,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":461,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":127,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":311,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":188,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":251,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":246,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":386,"com.google.gson.functional.PrettyPrintingTest.testMap":405,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":93,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":40,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":429,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":501,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":16,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":33,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":463,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":582,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":586,"com.google.gson.functional.CollectionTest.testQueueSerialization":97,"com.google.gson.functional.MapTest.testMapSerializationEmpty":183,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":518,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":274,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":644,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":646,"com.google.gson.functional.MapTest.testMapOfMapSerialization":168,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":5,"com.google.gson.JavaSerializationTest.testMapIsSerializable":31,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":526,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":103,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":619,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":276,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":378,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":136,"com.google.gson.functional.FieldNamingTest.testIdentity":575,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":580,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":124,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":433,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":630,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":353,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":2,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":117,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":322,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":488,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":622,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":234,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":21,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":191,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":581,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":271,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":363,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":542,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":27,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":513,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":377,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":520,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":552,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":149,"com.google.gson.functional.MapTest.testMapSubclassSerialization":154,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":307,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":74,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":420,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":480,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":265,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":388,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":556,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":597,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":143,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":321,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":500,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":38,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":64,"com.google.gson.functional.EnumTest.testEnumSubclass":47,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":285,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":35,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":338,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":233,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":190,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":290,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":126,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":83,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":236,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":365,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":631,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":269,"com.google.gson.stream.JsonWriterTest.testTwoNames":618,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":364,"com.google.gson.stream.JsonWriterTest.testNullName":625,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":218,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":26,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":453,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":275,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":334,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":58,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":268,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":633,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":629,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":545,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":324,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":151,"com.google.gson.MixedStreamTest.testWriteNulls":659,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":452,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":628,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":146,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":446,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":61,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":370,"com.google.gson.CommentsTest.testParseComments":605,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":131,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":209,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":326,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":287,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":459,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":469,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":412,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":173,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":584,"com.google.gson.MixedStreamTest.testReadInvalidState":596,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":379,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":72,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":306,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":547,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":414,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":606,"com.google.gson.JsonParserTest.testParseMixedArray":616,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":244,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":465,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":466,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":4,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":376,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":301,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":528,"com.google.gson.functional.MapTest.testMapDeserialization":161,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":449,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":522,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":410,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":150,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":202,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":661,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":160,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":227,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":208,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":204,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":89,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":48,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":487,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":498,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":339,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":354,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":78,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":389,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":219,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":507,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":71,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":87,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":362,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":172,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":406,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":24,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":551,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":230,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":133,"com.google.gson.functional.PrimitiveTest.testShortSerialization":305,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":211,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":293,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":398,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":266,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":292,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":243,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":512,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":571,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":46,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":92,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":419,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":156,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":260,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":113,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":313,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":144,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":614,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":216,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":539,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":602,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":612,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":319,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":314,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":11,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":57,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":125,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":226,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":355,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":493,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":557,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":615,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":299,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":491,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":128,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":270,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":359,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":330,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":52,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":80,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":479,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":101,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":508,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":384,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":129,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":201,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":210,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":529,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":250,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":484,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":515,"com.google.gson.stream.JsonWriterTest.testNullStringValue":621,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":212,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":534,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":94,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":223,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":237,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":300,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":272,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":317,"com.google.gson.stream.JsonWriterTest.testEmptyObject":638,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":139,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":45,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":207,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":431,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":415,"com.google.gson.functional.MapTest.testGeneralMapField":178,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":328,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":443,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":318,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":192,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":385,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":458,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":541,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":176,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":198,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":241,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":494,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":295,"com.google.gson.MixedStreamTest.testReadMixedStreamed":601,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":164,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":509,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":22,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":108,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":483,"com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles":641,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":474,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":277,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":397,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":30,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":401,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":527,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":165,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":567,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":153,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":8,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":132,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":439,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":561,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":626,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":262,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":613,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":525,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":147,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":434,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":492,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":214,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":138,"com.google.gson.functional.ObjectTest.testNestedDeserialization":360,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":346,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":367,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":428,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":217,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":395,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":316,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":468,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":55,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":166,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":583,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":63,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":303,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":79,"com.google.gson.JavaSerializationTest.testListIsSerializable":32,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":119,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":145,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":111,"com.google.gson.functional.ObjectTest.testNullSerialization":655,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":82,"com.google.gson.stream.JsonWriterTest.testDoubles":645,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":566,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":157,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":177,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":235,"com.google.gson.functional.MapTest.testInterfaceTypeMap":175,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":455,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":642,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":387,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":222,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":238,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":10,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":50,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":86,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":390,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":495,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":393,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":254,"com.google.gson.MixedStreamTest.testWriteClosed":600,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":99,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":430,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":225,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":329,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":555,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":68,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":221,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":471,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":357,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":467,"com.google.gson.stream.JsonWriterTest.testLongs":623,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":548,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":228,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":332,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":98,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":562,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":280,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":564,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":84,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":535,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":435,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":320,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":374,"com.google.gson.stream.JsonWriterTest.testNumbers":647,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":259,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":486,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":503,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":373,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":440,"com.google.gson.functional.CollectionTest.testQueueDeserialization":114,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":470,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":264,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":278,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":588,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":424,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":546,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":563,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":162,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":350,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":637,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":517,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":200,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":358,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":91,"com.google.gson.functional.MapTest.testRawMapSerialization":180,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":595,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":533,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":12,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":77,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":344,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":418,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":213,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":23,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":25,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":37,"com.google.gson.functional.PrimitiveTest.testByteSerialization":302,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":445,"com.google.gson.ObjectTypeAdapterTest.testSerialize":607,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":657,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":196,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":249,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":660,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":116,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":456,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":572,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":18,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":69,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":585,"com.google.gson.functional.MapTest.testMapWithQuotes":167,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":502,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":587,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":120,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":482,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":137,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":422,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":310,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":499,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":381,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":632,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":205,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":60,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":356,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":411,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":7,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":514,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":333,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":462,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":543,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":504,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":516,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":560,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":298,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":653,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":105,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":448,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":62,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":441,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":544,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":81,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":436,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":565,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":421,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":41,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":73,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":239,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":9,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":134,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":343,"com.google.gson.functional.ObjectTest.testNestedSerialization":345,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":140,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":197,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":253,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":591,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":438,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":179,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":416,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":490,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":29,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":599,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":649,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":337,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":432,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":312,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":224,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":473,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":519,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":255,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":604,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":347,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":497,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":559,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":13,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":590,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":451,"com.google.gson.functional.CollectionTest.testSetSerialization":110,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":193,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":130,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":408,"com.google.gson.functional.StringTest.testStringValueSerialization":593,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":594,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":56,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":95,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":375,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":442,"com.google.gson.MixedStreamTest.testWriteInvalidState":598,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":654,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":258,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":263,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":460,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":568,"com.google.gson.stream.JsonWriterTest.testBooleans":620,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":510,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":573,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":368,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":437,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":392,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":611,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":537,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":658,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":159,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":634,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":399,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":447},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:459","type":"CtBinaryOperatorImpl","sourcecode":"typeAdapter instanceof com.google.gson.TypeAdapter<?>"},"failures":[],"tindex":"8443b710-3e43-11e6-9a10-932d03d34afd","method":{"position":"com.google.gson.reflect.TypeToken:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.TypeAdapter<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof com.google.gson.reflect.TypeToken<?>) && (com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.Type, ((com.google.gson.reflect.TypeToken<?>)(o)).java.lang.reflect.Type));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"84440531-3e43-11e6-9a10-91dde112e401","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:88","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Collection<E> collection) throws java.io.IOException {\n    if (collection == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginArray();\n    for (E E : collection) {\n        com.google.gson.TypeAdapter<E>.write(out, element);\n    }\n    out.endArray();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"84442c42-3e43-11e6-9a10-41de32a382d6","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"84442c43-3e43-11e6-9a10-4f94b421fa6e","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            double double = value.doubleValue();\n            checkValidFloatingPoint(doubleValue);\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"84445354-3e43-11e6-9a10-f1076f8f3ff5","method":{"position":"com.google.gson.JsonObject:171","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonArray getAsJsonArray(java.lang.String memberName) {\n    if (memberName != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((com.google.gson.JsonArray)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:188","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"84445355-3e43-11e6-9a10-cd837c5a068c","method":{"position":"com.google.gson.reflect.TypeToken:122","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.reflect.Type from) {\n    if (from instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (java.lang.reflect.Type.equals(from)) {\n                return true;\n            } \n            if ((java.lang.reflect.Type) instanceof java.lang.Class<?>) {\n                return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from));\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.ParameterizedType) {\n                return com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.GenericArrayType) {\n                return (java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from))) && (com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))));\n            } else {\n                throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class.java.lang.Class.java.lang.Class, java.lang.reflect.ParameterizedType.java.lang.reflect.ParameterizedType.java.lang.Class, java.lang.reflect.GenericArrayType.java.lang.reflect.GenericArrayType.java.lang.Class);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"84447a66-3e43-11e6-9a10-e7d20cbfcc22","method":{"position":"com.google.gson.internal.bind.TypeAdapters:424","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuffer(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,55,1,56,57,58,2,59,60,61,62,63,64,65,66,3,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,4,261,262,263,264,265,266,5,267,268,6,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,7,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,8,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,17,599,600,601,602,603,604,605],"tindex":"84447a67-3e43-11e6-9a10-eb986e340902","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"8444a178-3e43-11e6-9a10-ef450e2846c6","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:54","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    switch (token) {\n        case BEGIN_ARRAY :\n            java.util.List<java.lang.Object> java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object>();\n            in.beginArray();\n            while (in.hasNext()) {\n                list.add(read(in));\n            }\n            in.endArray();\n            return list;\n        case BEGIN_OBJECT :\n            java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new com.google.gson.internal.LinkedTreeMap<java.lang.String, java.lang.Object>();\n            in.beginObject();\n            while (in.hasNext()) {\n                map.put(in.nextName(), read(in));\n            }\n            in.endObject();\n            return map;\n        case STRING :\n            return in.nextString();\n        case NUMBER :\n            return in.nextDouble();\n        case BOOLEAN :\n            return in.nextBoolean();\n        case NULL :\n            in.nextNull();\n            return null;\n        default :\n            throw new java.lang.IllegalStateException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[606,607,608],"tindex":"8444a179-3e43-11e6-9a10-8737211af26d","method":{"position":"com.google.gson.TypeAdapter:140","type":"CtMethodImpl","sourcecode":"public final void toJson(java.io.Writer out, T value) throws java.io.IOException {\n    if (out == null) {\n        {\n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(out);\n            write(writer, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"out"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:709","type":"CtBinaryOperatorImpl","sourcecode":"last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT)"},"failures":[],"tindex":"8444c88a-3e43-11e6-9a10-1139f955d33f","method":{"position":"com.google.gson.GsonBuilder:423","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int dateStyle, int timeStyle) {\n    if (timeStyle == dateStyle) {\n        {\n            com.google.gson.GsonBuilder.this.int = dateStyle;\n            com.google.gson.GsonBuilder.this.int = timeStyle;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"timeStyle","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"dateStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl","sourcecode":"primitive.isNumber()"},"failures":[],"tindex":"8444c88b-3e43-11e6-9a10-316c8e12c6b6","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element.isNumber()) {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:919","type":"CtBinaryOperatorImpl","sourcecode":"p != (com.google.gson.stream.JsonReader.PEEKED_BUFFERED)"},"failures":[609,610,611,612,613,614,615,19,21,22,26,27,606,607,608,28,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,29,33,34,35,37,39,652,653,43,44,45,46,47,50,52,53,54,0,1,57,2,59,60,62,63,64,65,66,3,68,69,70,72,75,76,77,78,80,81,82,85,87,90,91,92,93,97,98,99,100,101,104,107,108,110,111,113,120,122,126,127,128,130,131,132,134,136,137,138,139,140,150,154,155,158,160,162,167,168,169,172,173,175,176,177,178,179,180,182,183,185,188,189,190,192,194,195,196,197,198,199,200,201,204,206,207,208,210,211,212,213,215,220,221,222,227,228,233,241,244,253,259,261,264,268,271,272,276,285,7,288,289,292,295,297,301,302,303,304,305,306,311,313,317,8,319,322,323,326,329,332,654,335,655,337,339,341,342,344,345,346,348,352,354,355,357,362,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,9,10,11,12,13,14,15,16,656,404,405,406,407,408,409,410,411,414,416,419,420,421,422,423,424,426,429,433,434,436,438,439,440,441,443,444,445,446,447,450,451,452,456,458,460,462,464,466,467,468,469,472,475,479,481,484,485,487,490,493,494,495,499,501,502,504,506,507,510,512,514,515,516,517,518,520,522,523,525,527,528,529,530,532,535,537,538,540,541,543,544,545,546,547,548,551,552,554,556,557,560,561,564,567,568,569,570,571,572,573,574,575,577,578,579,580,581,584,586,590,593,594,657,658,595,597,659,598,17,599,600,660,661,603,604],"tindex":"8444ef9c-3e43-11e6-9a10-47b2851e0f22","method":{"position":"com.google.gson.stream.JsonWriter:375","type":"CtMethodImpl","sourcecode":"private void replaceTop(int topOfStack) {\n    if (topOfStack != topOfStack) {\n        {\n            int[][((int) - 1)] = topOfStack;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"topOfStack","com.google.gson.stream.JsonReader.PEEKED_BUFFERED":"topOfStack"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl","sourcecode":"primitive.isNumber()"},"failures":[],"tindex":"8444ef9d-3e43-11e6-9a10-bd574c4ecf15","method":{"position":"com.google.gson.Gson:136","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src.isNumber()) {\n        {\n            return toJsonTree(src, typeOfSrc);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:178","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"844516ae-3e43-11e6-9a10-adeb8d0fbfdb","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n        type = value.getClass();\n    } \n    return type;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtBinaryOperatorImpl","sourcecode":"ptype != null"},"failures":[],"tindex":"844516af-3e43-11e6-9a10-a35d28d4f9ae","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:303","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ptype":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[512],"tindex":"844516b0-3e43-11e6-9a10-cf60f6823ce1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:223","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:370","type":"CtVariableReadImpl","sourcecode":"requiresThreadLocalCleanup"},"failures":[19,20,21,22,23,24,25,26,27,28,650,651,29,33,34,35,37,39,652,653,43,44,45,46,47,50,52,53,54,0,1,57,2,59,60,62,63,64,65,66,3,68,69,70,72,75,76,77,78,80,81,82,85,87,90,91,92,93,97,98,99,100,101,104,107,108,110,111,113,115,116,117,118,119,120,122,126,127,128,130,131,132,134,136,137,138,139,140,150,154,155,158,160,162,167,168,169,172,173,175,176,177,178,179,180,182,183,185,188,189,190,191,192,194,195,196,197,198,199,200,201,204,206,207,208,210,211,212,213,215,217,218,219,220,221,222,223,224,227,228,229,233,235,241,244,252,253,259,4,261,264,5,268,6,271,272,276,285,7,288,289,292,295,297,301,302,303,304,305,306,307,311,313,317,8,319,322,323,326,329,332,654,335,655,337,339,341,342,344,345,346,348,352,354,355,357,362,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,10,404,405,406,407,408,409,410,411,414,416,419,420,421,422,423,424,425,426,429,433,434,436,438,439,440,441,443,444,445,446,447,450,451,452,456,458,460,462,464,466,467,468,469,470,471,472,475,479,481,484,485,486,487,488,489,490,493,494,495,499,501,502,504,506,507,510,512,514,515,516,517,518,520,522,523,525,527,528,529,530,532,535,537,538,540,541,543,544,545,546,547,548,551,552,554,556,557,560,561,564,567,568,569,570,571,572,573,574,575,577,578,579,580,581,584,586,590,593,594,657,658,595,597,659,598,17,599,600,603,604],"tindex":"844516b1-3e43-11e6-9a10-87f19684f73d","method":{"position":"com.google.gson.stream.JsonWriter:252","type":"CtMethodImpl","sourcecode":"public final void setHtmlSafe(boolean htmlSafe) {\n    if (htmlSafe) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = htmlSafe;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"requiresThreadLocalCleanup":"htmlSafe"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"84453dc2-3e43-11e6-9a10-7fa61540c575","method":{"position":"com.google.gson.JsonParser:56","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.io.Reader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            try {\n                com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                com.google.gson.JsonElement com.google.gson.JsonElement = parse(jsonReader);\n                if ((!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonSyntaxException(\"Did not consume the entire document.\");\n                } \n                return element;\n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } catch (java.lang.NumberFormatException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtInvocationImpl","sourcecode":"from.getRawType().equals(to.getRawType())"},"failures":[],"tindex":"84453dc3-3e43-11e6-9a10-51b3d53205cc","method":{"position":"com.google.gson.reflect.TypeToken:238","type":"CtMethodImpl","sourcecode":"private static boolean typeEquals(java.lang.reflect.ParameterizedType from, java.lang.reflect.ParameterizedType to, java.util.Map<java.lang.String, java.lang.reflect.Type> typeVarMap) {\n    if (to.getRawType().equals(to.getRawType())) {\n        {\n            if (from.getRawType().equals(to.getRawType())) {\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = from.getActualTypeArguments();\n                java.lang.reflect.Type[] java.lang.reflect.Type[] = to.getActualTypeArguments();\n                for (int int = 0 ; i < (fromArgs.int) ; i++) {\n                    if (!(com.google.gson.reflect.TypeToken.matches(fromArgs[i], toArgs[i], typeVarMap))) {\n                        return false;\n                    } \n                }\n                return true;\n            } \n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"to","to":"to"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"844564d4-3e43-11e6-9a10-37c418680344","method":{"position":"com.google.gson.internal.LinkedTreeMap:41","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if ((b != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            return a.compareTo(b);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:817","type":"CtVariableReadImpl","sourcecode":"isEmpty"},"failures":[],"tindex":"844564d5-3e43-11e6-9a10-013773c1b096","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"844564d6-3e43-11e6-9a10-2396b82cfb65","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:309","type":"CtBinaryOperatorImpl","sourcecode":"context == (java.util.Properties.class)"},"failures":[662,144],"tindex":"844564d7-3e43-11e6-9a10-819d8e0ac286","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key == key) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Properties.class":"key","context":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl","sourcecode":"value.isJsonNull()"},"failures":[],"tindex":"844564d8-3e43-11e6-9a10-29d4a3fd7a5e","method":{"position":"com.google.gson.Gson:576","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src.isJsonNull()) {\n        {\n            try {\n                com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                toJson(src, typeOfSrc, jsonWriter);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"84458be9-3e43-11e6-9a10-e919fc71346b","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.GenericArrayType) {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467236604037/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":26,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}