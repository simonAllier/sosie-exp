{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":67,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":328,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":378,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":143,"com.google.gson.stream.JsonWriterTest.testRepeatedName":375,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":300,"com.google.gson.MixedStreamTest.testWriteLenient":10,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":100,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":168,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":285,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":295,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":119,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":351,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":250,"com.google.gson.functional.ObjectTest.testSingletonLists":227,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":96,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":120,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":329,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":365,"com.google.gson.stream.JsonWriterTest.testStrings":384,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":212,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":15,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":395,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":307,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":217,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":24,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":257,"com.google.gson.functional.EnumTest.testEnumCaseMapping":350,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":0,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":327,"com.google.gson.functional.JsonTreeTest.testToJsonTree":205,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":222,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":284,"com.google.gson.stream.JsonWriterTest.testNulls":373,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":79,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":184,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":392,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":314,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":292,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":186,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":3,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":56,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":236,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":255,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":362,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":2,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":110,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":209,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":379,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":48,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":393,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":42,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":153,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":242,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":95,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":342,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":273,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":366,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":141,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":49,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":149,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":241,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":13,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":325,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":34,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":304,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":277,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":99,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":90,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":361,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":251,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":232,"com.google.gson.functional.EnumTest.testEnumSet":344,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":179,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":191,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":125,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":237,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":23,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":177,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":215,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":252,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":52,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":326,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":65,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":336,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":271,"com.google.gson.functional.MapTest.testMapSerialization":130,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":68,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":114,"com.google.gson.functional.MapTest.testSerializeMaps":124,"com.google.gson.functional.MapTest.testComplexKeysSerialization":139,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":160,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":188,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":321,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":213,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":220,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":301,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":193,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":60,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":142,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":163,"com.google.gson.functional.PrettyPrintingTest.testMap":218,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":288,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":76,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":14,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":394,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":333,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":87,"com.google.gson.functional.MapTest.testMapSerializationEmpty":140,"com.google.gson.functional.CollectionTest.testQueueSerialization":289,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":380,"com.google.gson.functional.MapTest.testMapOfMapSerialization":129,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":40,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":45,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":356,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":199,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":18,"com.google.gson.functional.FieldNamingTest.testIdentity":115,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":330,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":309,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":170,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":204,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":226,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":303,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":25,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":331,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":359,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":43,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":5,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":109,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":355,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":59,"com.google.gson.functional.MapTest.testMapSubclassSerialization":123,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":28,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":7,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":165,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":266,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":176,"com.google.gson.functional.EnumTest.testEnumSubclass":347,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":46,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":16,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":30,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":358,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":192,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":306,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":275,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":4,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":41,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":376,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":104,"com.google.gson.MixedStreamTest.testWriteNulls":8,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":155,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":151,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":187,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":196,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":228,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":263,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":132,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":332,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":247,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":183,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":58,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":106,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":144,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":363,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":33,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":260,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":37,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":354,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":93,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":89,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":223,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":122,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":387,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":126,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":282,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":316,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":313,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":203,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":235,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":243,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":338,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":166,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":276,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":80,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":305,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":343,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":131,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":219,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":20,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":108,"com.google.gson.functional.PrimitiveTest.testShortSerialization":57,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":318,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":17,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":259,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":50,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":82,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":111,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":346,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":287,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":27,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":61,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":299,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":368,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":64,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":389,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":302,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":244,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":72,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":267,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":369,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":194,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":349,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":216,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":339,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":293,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":161,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":312,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":94,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":317,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":84,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":272,"com.google.gson.stream.JsonWriterTest.testNullStringValue":371,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":319,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":280,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":44,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":62,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":322,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":315,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":345,"com.google.gson.functional.MapTest.testGeneralMapField":136,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":148,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":157,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":162,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":360,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":101,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":134,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":32,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":73,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":208,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":51,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":38,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":26,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":296,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":258,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":92,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":121,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":63,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":197,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":71,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":269,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":374,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":91,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":310,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":201,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":240,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":308,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":274,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":256,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":262,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":175,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":55,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":172,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":298,"com.google.gson.functional.ObjectTest.testNullSerialization":233,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":341,"com.google.gson.stream.JsonWriterTest.testDoubles":381,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":31,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":135,"com.google.gson.functional.MapTest.testInterfaceTypeMap":133,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":164,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":279,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":348,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":357,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":167,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":74,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":254,"com.google.gson.MixedStreamTest.testWriteClosed":12,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":291,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":229,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":180,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":278,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":265,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":245,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":261,"com.google.gson.stream.JsonWriterTest.testLongs":372,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":107,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":230,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":283,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":290,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":270,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":294,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":97,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":352,"com.google.gson.stream.JsonWriterTest.testNumbers":383,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":36,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":202,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":146,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":189,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":264,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":39,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":66,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":105,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":127,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":86,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":210,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":286,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":6,"com.google.gson.functional.MapTest.testRawMapSerialization":138,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":390,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":238,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":337,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":320,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":19,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":21,"com.google.gson.functional.PrimitiveTest.testByteSerialization":54,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":150,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":211,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":117,"com.google.gson.ObjectTypeAdapterTest.testSerialize":364,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":206,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":386,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":169,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":156,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":112,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":181,"com.google.gson.functional.MapTest.testMapWithQuotes":128,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":77,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":190,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":200,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":246,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":75,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":249,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":173,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":224,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":47,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":83,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":159,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":85,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":171,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":268,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":214,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":103,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":147,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":174,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":340,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":311,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":29,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":198,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":388,"com.google.gson.functional.ObjectTest.testNestedSerialization":239,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":323,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":35,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":207,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":70,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":137,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":145,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":225,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":11,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":22,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":385,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":234,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":281,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":1,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":391,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":334,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":154,"com.google.gson.functional.CollectionTest.testSetSerialization":297,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":195,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":221,"com.google.gson.functional.StringTest.testStringValueSerialization":335,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":116,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":353,"com.google.gson.MixedStreamTest.testWriteInvalidState":9,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":231,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":158,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":324,"com.google.gson.stream.JsonWriterTest.testBooleans":370,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":81,"com.google.gson.stream.JsonWriterTest.testWrongTopLevelType":382,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":113,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":185,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":253,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":367,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":182,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":98,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":118,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":377,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":152},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:167","type":"CtUnaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"cf87bfde-3f37-11e6-abe2-912ce0e64c51","method":{"position":"com.google.gson.stream.JsonWriter:234","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (!lenient) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341745689/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = lenient;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"create":"lenient"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:98","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cf89e2bf-3f37-11e6-abe2-e7480828c357","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl"},"failures":[45,49,55],"tindex":"cf89e2c0-3f37-11e6-abe2-c97768ee341d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:282","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341745689/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:350","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cf8a09d1-3f37-11e6-abe2-c9506f5c0d4b","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341745689/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ongoingCall":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"cf8a09d2-3f37-11e6-abe2-e78a3a174154","method":{"position":"com.google.gson.internal.bind.TypeAdapters:509","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.UUID value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:107","type":"CtBinaryOperatorImpl"},"failures":[363,364,365,116,124,148,157,234,247,249,250,251,286,293,295,297],"tindex":"cf8a30e3-3f37-11e6-abe2-25950a67e9af","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (value instanceof com.google.gson.JsonArray) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341745689/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtInvocationImpl"},"failures":[],"tindex":"cf8a57f4-3f37-11e6-abe2-b3d78970f1dc","method":{"position":"com.google.gson.DefaultDateTypeAdapter:77","type":"CtMethodImpl","sourcecode":"public java.util.Date deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT, com.google.gson.JsonDeserializationContext context) throws com.google.gson.JsonParseException {\n    if (json.isNumber()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341745689/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    } else {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                throw new com.google.gson.JsonParseException(\"The date should be a string value\");\n            } \n            java.util.Date java.util.Date = deserializeToDate(json);\n            if (typeOfT == (java.util.Date.java.util.Date.java.lang.Class)) {\n                return date;\n            } else if (typeOfT == (java.sql.Timestamp.java.sql.Timestamp.java.lang.Class)) {\n                return new java.sql.Timestamp(date.getTime());\n            } else if (typeOfT == (java.sql.Date.java.sql.Date.java.lang.Class)) {\n                return new java.sql.Date(date.getTime());\n            } else {\n                throw new java.lang.IllegalArgumentException((((getClass()) + \" cannot deserialize to \") + typeOfT));\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"cf8a7f05-3f37-11e6-abe2-4dba9750647e","method":{"position":"com.google.gson.internal.LinkedTreeMap:81","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (!(key instanceof com.google.gson.JsonPrimitive)) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341745689/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.Excluder:163","type":"CtFieldReadImpl"},"failures":[0,1,2,3,4,5,364,365,6,7,8,10,11,13,14,15,16,366,367,368,369,22,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,23,25,26,386,387,27,28,29,30,32,33,35,36,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,135,136,137,138,139,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,266,267,268,269,270,271,272,273,277,278,279,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,388,357,389,390,391,392,393,394,395],"tindex":"cf8aa616-3f37-11e6-abe2-0961b7fb252e","method":{"position":"com.google.gson.stream.JsonWriter:599","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"fallthrough\")\nprivate void beforeValue(boolean root) throws java.io.IOException {\n    if (root) {\n        {\n            switch (peek()) {\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    if (!(boolean)) {\n                        throw new java.lang.IllegalStateException(\"JSON must have only one top-level value.\");\n                    } \n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    if ((!(boolean)) && (!root)) {\n                        throw new java.lang.IllegalStateException(\"JSON must start with an array or an object.\");\n                    } \n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    newline();\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    java.io.Writer.append(',');\n                    newline();\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    java.io.Writer.append(java.lang.String);\n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    break;\n                default :\n                    throw new java.lang.IllegalStateException(\"Nesting problem.\");\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341745689/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"requireExpose":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:618","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"cf8c2cb7-3f37-11e6-abe2-b7a313612c74","method":{"position":"com.google.gson.stream.JsonReader:755","type":"CtMethodImpl","sourcecode":"private boolean isLiteral(char c) throws java.io.IOException {\n    if ((c == 'f') || (c == 'F')) {\n        {\n            switch (c) {\n                case '/' :\n                case '\\\\' :\n                case ';' :\n                case '#' :\n                case '=' :\n                    checkLenient();\n                case '{' :\n                case '}' :\n                case '[' :\n                case ']' :\n                case ':' :\n                case ',' :\n                case ' ' :\n                case '\\t' :\n                case '\\f' :\n                case '\\r' :\n                case '\\n' :\n                    return false;\n                default :\n                    return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467341745689/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":10,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}