{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":19,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":620,"com.google.gson.functional.StringTest.testStringValueDeserialization":618,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":20,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":391,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":355,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":205,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":181,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":144,"com.google.gson.MixedStreamTest.testWriteLenient":265,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":152,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":335,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":465,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":21,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":199,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":150,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":203,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":399,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":477,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":643,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":185,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":364,"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":297,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":115,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":221,"com.google.gson.functional.ObjectTest.testSingletonLists":148,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":458,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":348,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":621,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":319,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":557,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":50,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":52,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":473,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":163,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":323,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":402,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":6,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":634,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":40,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":392,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":571,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":94,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":329,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":340,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":282,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":499,"com.google.gson.functional.EnumTest.testEnumCaseMapping":642,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":317,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":619,"com.google.gson.functional.JsonTreeTest.testToJsonTree":28,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":339,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":574,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":39,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":3,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":122,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":438,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":276,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":529,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":350,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":452,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":613,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":47,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":597,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":124,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":631,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":160,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":411,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":356,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":280,"com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities":294,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":281,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":258,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":170,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":583,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":475,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":135,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":416,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":415,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":472,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":277,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":396,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":268,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":313,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":422,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":172,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":525,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":375,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":457,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":145,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":389,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":492,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":315,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":242,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":449,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":33,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":304,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":129,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":509,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":397,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":578,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":390,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":169,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":519,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":45,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":156,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":232,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":210,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":261,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":360,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":506,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":92,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":192,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":113,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":337,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":549,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":511,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":562,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":463,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":514,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":63,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":451,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":257,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":311,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":127,"com.google.gson.functional.CollectionTest.testSetDeserialization":202,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":186,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":159,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":568,"com.google.gson.functional.EnumTest.testEnumSet":636,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":381,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":114,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":548,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":441,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":488,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":164,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":62,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":112,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":394,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":65,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":404,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":138,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":584,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":405,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNullKeyIsAlwaysFalse":262,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":353,"com.google.gson.functional.MapTest.testHashMapDeserialization":482,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":593,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":462,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":264,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":617,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":70,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":233,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":31,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":566,"com.google.gson.functional.MapTest.testSortedMap":502,"com.google.gson.functional.MapTest.testMapSerialization":498,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":71,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":99,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":387,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":532,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":86,"com.google.gson.functional.MapTest.testSerializeMaps":485,"com.google.gson.functional.MapTest.testComplexKeysSerialization":98,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":567,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":14,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":510,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":536,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":126,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":248,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":227,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":42,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":245,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":640,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":41,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":140,"com.google.gson.internal.bind.JsonElementReaderTest.testWrongType":298,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":206,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":582,"com.google.gson.functional.MapTest.testStringKeyDeserialization":508,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":533,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":551,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":418,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":359,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":512,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":354,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":540,"com.google.gson.functional.PrettyPrintingTest.testMap":572,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":590,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":73,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":435,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":564,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":278,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":322,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":535,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":624,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":628,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":447,"com.google.gson.functional.MapTest.testMapSerializationEmpty":507,"com.google.gson.functional.CollectionTest.testQueueSerialization":594,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":382,"com.google.gson.functional.MapTest.testMapOfMapSerialization":497,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":267,"com.google.gson.JavaSerializationTest.testMapIsSerializable":333,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":454,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":599,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":253,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":384,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":558,"com.google.gson.functional.FieldNamingTest.testIdentity":87,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":622,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":550,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":215,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":173,"com.google.gson.internal.bind.JsonElementReaderTest.testNestedArrays":301,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":27,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":147,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":209,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":544,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":342,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":330,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":623,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":644,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":212,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":379,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":467,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":54,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":442,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":448,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":480,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":414,"com.google.gson.functional.MapTest.testMapSubclassSerialization":484,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":67,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":121,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":570,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":4,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":57,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":107,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":373,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":51,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":428,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":434,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":137,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":111,"com.google.gson.functional.EnumTest.testEnumSubclass":638,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":393,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":162,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":324,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":341,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":254,"com.google.gson.internal.bind.JsonElementReaderTest.testArray":295,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":398,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":131,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":240,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":344,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":214,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":377,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":213,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":35,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":53,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":528,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":383,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":579,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":208,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":376,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":469,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":149,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":481,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":527,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":576,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":521,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":109,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":125,"com.google.gson.CommentsTest.testParseComments":316,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":151,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":224,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":553,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":105,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":190,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":395,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":513,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":501,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":626,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":286,"com.google.gson.MixedStreamTest.testReadInvalidState":320,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":183,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":120,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":413,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":471,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":100,"com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose":296,"com.google.gson.JsonParserTest.testParseMixedArray":289,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":352,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":259,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":537,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":1,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":187,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":306,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":266,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":251,"com.google.gson.JsonArrayTest.testRemove":310,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":408,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":455,"com.google.gson.functional.MapTest.testMapDeserialization":491,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":524,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":450,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":575,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":314,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":220,"com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers":300,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":197,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":490,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":223,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":611,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":246,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":26,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":639,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":77,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":174,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":580,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":235,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":542,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":36,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":439,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":119,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings":299,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":211,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":244,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":139,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":500,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":325,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":474,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":338,"com.google.gson.functional.PrimitiveTest.testShortSerialization":412,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":555,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":614,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":401,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":284,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":374,"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":48,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":400,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":0,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":351,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":83,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":287,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":200,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":66,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":486,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":368,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":420,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":605,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":43,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":307,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":228,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":464,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":15,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":61,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":426,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":421,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":273,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":608,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":130,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":175,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":196,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":5,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":17,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":431,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":69,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":143,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":132,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":378,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":179,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":155,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":641,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":237,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":569,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":78,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":201,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":538,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":552,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":219,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":225,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":456,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":358,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":32,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":444,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":226,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":460,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":37,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":591,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":345,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":407,"com.google.gson.JsonArrayTest.testSet":308,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":380,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":424,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":229,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":222,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":637,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":49,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":101,"com.google.gson.functional.MapTest.testGeneralMapField":97,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":153,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbers":302,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":518,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":425,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":104,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":255,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":539,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":466,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":503,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":349,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":432,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":561,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":403,"com.google.gson.MixedStreamTest.testReadMixedStreamed":60,"com.google.gson.JsonObjectTest.testDeepCopy":288,"com.google.gson.internal.bind.JsonElementReaderTest.testBooleans":292,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":369,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":440,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":493,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":191,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":331,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":602,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":90,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":385,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":283,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":332,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":64,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":80,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":494,"com.google.gson.JsonArrayTest.testDeepCopy":309,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":479,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":483,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":270,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":554,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":75,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":9,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":370,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":16,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":453,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":577,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":216,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":430,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":598,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":616,"com.google.gson.functional.ObjectTest.testNestedDeserialization":180,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":559,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":285,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":581,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":72,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":34,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":587,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":423,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":189,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":290,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":495,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":607,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":625,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":110,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":410,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":236,"com.google.gson.JavaSerializationTest.testListIsSerializable":334,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":24,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":146,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":604,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":239,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":478,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":487,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":96,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":343,"com.google.gson.functional.MapTest.testInterfaceTypeMap":95,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":530,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":541,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":194,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":346,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":247,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":272,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":243,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":543,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":433,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":586,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":362,"com.google.gson.MixedStreamTest.testWriteClosed":59,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":74,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":596,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":154,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":195,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":476,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":116,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":193,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":30,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":177,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":188,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":82,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":157,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":198,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":595,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":10,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":388,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":12,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":241,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":600,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":293,"com.google.gson.internal.bind.JsonElementReaderTest.testStrings":303,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":461,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":610,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":249,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":427,"com.google.gson.JsonParserTest.testParseInvalidJson":291,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":367,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":25,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":436,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":128,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":515,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":29,"com.google.gson.functional.CollectionTest.testQueueDeserialization":606,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":372,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":386,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":630,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":263,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":11,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":470,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":93,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":171,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":446,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":136,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":178,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":589,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":56,"com.google.gson.functional.MapTest.testRawMapSerialization":505,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":603,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":459,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":274,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":166,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":234,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":103,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":615,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":18,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":326,"com.google.gson.functional.PrimitiveTest.testByteSerialization":409,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":520,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":563,"com.google.gson.ObjectTypeAdapterTest.testSerialize":55,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":645,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":134,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes":44,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":357,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":22,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":531,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":84,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":117,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":328,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":627,"com.google.gson.functional.MapTest.testMapWithQuotes":496,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":365,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":629,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":547,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":588,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":279,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":182,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":417,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":312,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":184,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":612,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":108,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":176,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":141,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":269,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":443,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":158,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":534,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":81,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":437,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":8,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":23,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":445,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":406,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":601,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":523,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":468,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":516,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":545,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":238,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":217,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":13,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":260,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":2,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":68,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":565,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":347,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":546,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":271,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":556,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":165,"com.google.gson.internal.LinkedTreeMapTest.testClear":46,"com.google.gson.functional.ObjectTest.testNestedSerialization":167,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":230,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":361,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":560,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":633,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":429,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":504,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":102,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":142,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":321,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":327,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":161,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":609,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":419,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":38,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":79,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":318,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":363,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":76,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":168,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":7,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":275,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":632,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":526,"com.google.gson.functional.CollectionTest.testSetSerialization":204,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":256,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":133,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":573,"com.google.gson.functional.StringTest.testStringValueSerialization":635,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":88,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":207,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":250,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":592,"com.google.gson.MixedStreamTest.testWriteInvalidState":58,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":517,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":366,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":106,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":371,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":231,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":85,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":123,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":218,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":305,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":585,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":118,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":646,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":489,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":336,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":522},"transformations":[{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7afaeb5-3f56-11e6-866c-09248cced1b6","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (jsonElement.isJsonNull()) {\n        {\n            if (jsonElement == null) {\n                {\n                    boolean boolean = writer.isLenient();\n                    writer.setLenient(true);\n                    boolean boolean = writer.isHtmlSafe();\n                    writer.setHtmlSafe(boolean);\n                    boolean boolean = writer.getSerializeNulls();\n                    writer.setSerializeNulls(boolean);\n                    try {\n                        com.google.gson.internal.Streams.write(jsonElement, writer);\n                    } catch (java.io.IOException e) {\n                        throw new com.google.gson.JsonIOException(e);\n                    } finally {\n                        writer.setLenient(oldLenient);\n                        writer.setHtmlSafe(oldHtmlSafe);\n                        writer.setSerializeNulls(oldSerializeNulls);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"b7b07206-3f56-11e6-866c-3d382a33e74e","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            java.lang.String java.lang.String = java.text.DateFormat.format(value);\n            out.value(dateFormatAsString);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b09917-3f56-11e6-866c-9b20a02709e6","method":{"position":"com.google.gson.internal.bind.TypeAdapters:473","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URI value) throws java.io.IOException {\n    out.value((value == null ? null : value.toASCIIString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:243","type":"CtBinaryOperatorImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"b7b09918-3f56-11e6-866c-b18d78fb9af2","method":{"position":"com.google.gson.internal.Excluder:228","type":"CtMethodImpl","sourcecode":"private boolean isValidVersion(com.google.gson.annotations.Since since, com.google.gson.annotations.Until until) {\n    if (until != null) {\n        {\n            return (isValidSince(since)) && (isValidUntil(until));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"until"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:280","type":"CtInvocationImpl"},"failures":[],"tindex":"b7b0c029-3f56-11e6-866c-515e824c8fca","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"standardPrimitive":"supertype","classOfPrimitive":"contextRawType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:293","type":"CtInvocationImpl"},"failures":[],"tindex":"b7b0c02a-3f56-11e6-866c-bd07a2b496ac","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:51","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b0e73b-3f56-11e6-866c-07811697dc07","method":{"position":"com.google.gson.internal.$Gson$Types:151","type":"CtMethodImpl","sourcecode":"static boolean equal(java.lang.Object a, java.lang.Object b) {\n    return (a == b) || ((a != null) && (a.equals(b)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"a","com.google.gson.stream.JsonToken.NULL":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b0e73c-3f56-11e6-866c-617bf186856a","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b10e4d-3f56-11e6-866c-d39a4e0527c1","method":{"position":"com.google.gson.Gson:278","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b10e4e-3f56-11e6-866c-a10d7662247c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:188","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        int int = in.nextInt();\n        return ((byte)(intValue));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b10e4f-3f56-11e6-866c-ab9b94e92915","method":{"position":"com.google.gson.internal.bind.TypeAdapters:442","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.URL read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    return \"null\".equals(nextString) ? null : new java.net.URL(nextString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b13560-3f56-11e6-866c-7b01ffccd9de","method":{"position":"com.google.gson.internal.bind.TypeAdapters:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URL value) throws java.io.IOException {\n    out.value((value == null ? null : value.toExternalForm()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl"},"failures":[],"tindex":"b7b13561-3f56-11e6-866c-4f738a84a19f","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (jsonElement.isJsonNull()) {\n        {\n            if (jsonElement == null) {\n                {\n                    boolean boolean = writer.isLenient();\n                    writer.setLenient(true);\n                    boolean boolean = writer.isHtmlSafe();\n                    writer.setHtmlSafe(boolean);\n                    boolean boolean = writer.getSerializeNulls();\n                    writer.setSerializeNulls(boolean);\n                    try {\n                        com.google.gson.internal.Streams.write(jsonElement, writer);\n                    } catch (java.io.IOException e) {\n                        throw new com.google.gson.JsonIOException(e);\n                    } finally {\n                        writer.setLenient(oldLenient);\n                        writer.setHtmlSafe(oldHtmlSafe);\n                        writer.setSerializeNulls(oldSerializeNulls);\n                    }\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"b7b15c72-3f56-11e6-866c-d7fa540e2edf","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((java.util.List<com.google.gson.JsonElement>.isEmpty()) || ((java.lang.String) != null)) {\n                throw new java.lang.IllegalStateException();\n            } \n            com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n            if (element instanceof com.google.gson.JsonObject) {\n                java.lang.String = name;\n                return com.google.gson.internal.bind.JsonTreeWriter.this;\n            } \n            throw new java.lang.IllegalStateException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:287","type":"CtBinaryOperatorImpl"},"failures":[41,42,43],"tindex":"b7b18383-3f56-11e6-866c-1beab264c6bd","method":{"position":"com.google.gson.internal.LinkedTreeMap:284","type":"CtMethodImpl","sourcecode":"private void replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V> node, com.google.gson.internal.LinkedTreeMap.Node<K, V> replacement) {\n    if (replacement != null) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            node.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null;\n            if (replacement != null) {\n                replacement.com.google.gson.internal.LinkedTreeMap.Node<K, V> = parent;\n            } \n            if (parent != null) {\n                if ((parent.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == node) {\n                    parent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n                } else {\n                    assert (parent.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == node;\n                    parent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n                }\n            } else {\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"replacement"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl"},"failures":[44],"tindex":"b7b1aa94-3f56-11e6-866c-739cef15641a","method":{"position":"com.google.gson.reflect.TypeToken:111","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.Class<?> cls) {\n    if (cls.isInterface()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isAssignableFrom(((java.lang.reflect.Type)(cls)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b1aa95-3f56-11e6-866c-d537d9c162e4","method":{"position":"com.google.gson.internal.Excluder:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if (skipDeserialize) {\n        in.skipValue();\n        return null;\n    } \n    return delegate().read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:242","type":"CtBinaryOperatorImpl"},"failures":[45,46,47,48,42,19,49,25,26,27,28,50,51,43,52,40],"tindex":"b7b1aa96-3f56-11e6-866c-b57389344547","method":{"position":"com.google.gson.internal.LinkedTreeMap:401","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58,59,60,61,45,62,63,64,65,66,67,68,69,70,19,71,72,73,74,49,75,76,77,78,0,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,20,99,100,101,102,103,104,105,106,107,21,22,23,24,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,25,26,27,28,134,135,136,137,50,138,139,140,141,142,143,144,145,51,43,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,29,30,5,6,7,8,9,10,11,12,31,191,32,33,34,35,36,192,193,194,37,38,195,196,197,198,39,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,40,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"b7b1d1a7-3f56-11e6-866c-c547926051c0","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl"},"failures":[259,260,261,262],"tindex":"b7b1f8b8-3f56-11e6-866c-5df65feb5482","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (key instanceof java.lang.reflect.GenericArrayType) {\n                {\n                    return (findByObject(key)) != null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:547","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b21fc9-3f56-11e6-866c-c10f95062972","method":{"position":"com.google.gson.FieldNamingPolicy:163","type":"CtMethodImpl","sourcecode":"private static java.lang.String modifyString(char firstCharacter, java.lang.String srcString, int indexOfSubstring) {\n    if (firstCharacter == '\\u2029') {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return indexOfSubstring < (srcString.length()) ? firstCharacter + (srcString.substring(indexOfSubstring)) : java.lang.String.valueOf(firstCharacter);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"firstCharacter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b21fca-3f56-11e6-866c-2149e2174d25","method":{"position":"com.google.gson.Gson:254","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Double read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return in.nextDouble();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:467","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b21fcb-3f56-11e6-866c-9dbce7b09c14","method":{"position":"com.google.gson.internal.Streams:108","type":"CtMethodImpl","sourcecode":"public char charAt(int i) {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (i == i) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return char[][i];\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"i","com.google.gson.stream.JsonScope.EMPTY_ARRAY":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b246dc-3f56-11e6-866c-3b5566996ecd","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b246dd-3f56-11e6-866c-27e7ee5b1a62","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:43","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (b == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a.compareTo(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:116","type":"CtBinaryOperatorImpl"},"failures":[70,263,19,71,264,72,73,74,49],"tindex":"b7b246de-3f56-11e6-866c-1383662b9659","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if ((!deserialization) && (!serialization)) {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"skipDeserialize":"serialization","skipSerialize":"deserialization"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:511","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b26def-3f56-11e6-866c-6fef036f672a","method":{"position":"com.google.gson.internal.Streams:111","type":"CtMethodImpl","sourcecode":"public java.lang.CharSequence subSequence(int start, int end) {\n    if (end == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return new java.lang.String(char[] , start , (end - start));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stackSize":"end"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b26df0-3f56-11e6-866c-f9895794094d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:462","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b26df1-3f56-11e6-866c-db6bf1e88dab","method":{"position":"com.google.gson.GsonBuilder:103","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setVersion(double ignoreVersionsAfter) {\n    if ((java.lang.Double.isNaN(ignoreVersionsAfter)) || (java.lang.Double.isInfinite(value))) {\n        {\n            com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.withVersion(ignoreVersionsAfter);\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl"},"failures":[265,266,267,268,269,270,114,205,206,209,271,272,273,274,275,276,277,278],"tindex":"b7b26df2-3f56-11e6-866c-ef8edc94dde9","method":{"position":"com.google.gson.Gson:261","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            double double = value.doubleValue();\n            checkValidFloatingPoint(doubleValue);\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b29503-3f56-11e6-866c-375fd48abeba","method":{"position":"com.google.gson.internal.bind.TypeAdapters:255","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextLong();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b29504-3f56-11e6-866c-7706b39f0e72","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b29505-3f56-11e6-866c-a1cc9fa0405e","method":{"position":"com.google.gson.reflect.TypeToken:253","type":"CtMethodImpl","sourcecode":"private static java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type token, java.lang.Class<?>... expected) {\n    if (!(token instanceof java.lang.reflect.GenericArrayType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"Unexpected type. Expected one of: \");\n            for (java.lang.Class<?> java.lang.Class<?> : expected) {\n                exceptionMessage.append(clazz.getName()).append(\", \");\n            }\n            exceptionMessage.append(\"but got: \").append(token.getClass().getName()).append(\", for type token: \").append(token.toString()).append('.');\n            return new java.lang.AssertionError(exceptionMessage.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"token"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b2bc16-3f56-11e6-866c-819a4597a97e","method":{"position":"com.google.gson.internal.Excluder:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if (skipDeserialize) {\n        in.skipValue();\n        return null;\n    } \n    return delegate().read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:159","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b2bc17-3f56-11e6-866c-b35817eb96be","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (typeOfT == typeOfT) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                return null;\n            } \n            java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n            T T = ((T)(fromJson(reader, typeOfT)));\n            return target;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"typeOfT","b":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b2bc18-3f56-11e6-866c-69ad3addd850","method":{"position":"com.google.gson.JsonParser:44","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.lang.String json) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            return parse(new java.io.StringReader(json));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:136","type":"CtBinaryOperatorImpl"},"failures":[62,279,280,281,282,283,284,40,285,286,287],"tindex":"b7b2e329-3f56-11e6-866c-2547d8e95950","method":{"position":"com.google.gson.GsonBuilder:493","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class<?> baseType, java.lang.Object typeAdapter) {\n    if (typeAdapter instanceof java.lang.reflect.TypeVariable) {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if ((typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(0, com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(baseType, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(baseType, ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b2e32a-3f56-11e6-866c-bbe4c880a810","method":{"position":"com.google.gson.JsonParser:56","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement parse(java.io.Reader json) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            try {\n                com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                com.google.gson.JsonElement com.google.gson.JsonElement = parse(jsonReader);\n                if ((!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonSyntaxException(\"Did not consume the entire document.\");\n                } \n                return element;\n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } catch (java.lang.NumberFormatException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"b7b2e32b-3f56-11e6-866c-43a843e441e4","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:116","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getFieldAdapter(com.google.gson.Gson gson, java.lang.reflect.Field field, com.google.gson.reflect.TypeToken<?> fieldType) {\n    if (field.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.annotations.JsonAdapter com.google.gson.annotations.JsonAdapter = field.getAnnotation(com.google.gson.annotations.JsonAdapter.com.google.gson.annotations.JsonAdapter.java.lang.Class);\n            if (annotation != null) {\n                com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, gson, fieldType, annotation);\n                if (adapter != null)\n                    return adapter;\n                \n            } \n            return gson.getAdapter(fieldType);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:482","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b30a3c-3f56-11e6-866c-2701e6e25c0f","method":{"position":"com.google.gson.stream.JsonWriter:375","type":"CtMethodImpl","sourcecode":"private void replaceTop(int topOfStack) {\n    if ((topOfStack == topOfStack) || (peekStack == topOfStack)) {\n        {\n            int[][((int) - 1)] = topOfStack;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"topOfStack","com.google.gson.stream.JsonScope.EMPTY_OBJECT":"topOfStack","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"topOfStack"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b30a3d-3f56-11e6-866c-c9b4c128b7b0","method":{"position":"com.google.gson.internal.bind.TypeAdapters:736","type":"CtMethodImpl","sourcecode":"public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.Map<java.lang.String, T>.get(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl"},"failures":[288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,21,144,51,146,35,37,40,315],"tindex":"b7b30a3e-3f56-11e6-866c-f9654e09c99d","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element.isJsonNull()) {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:178","type":"CtInvocationImpl"},"failures":[],"tindex":"b7b3314f-3f56-11e6-866c-896e806f0a09","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (value == null) {\n        value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:309","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b33150-3f56-11e6-866c-eff79460c6ca","method":{"position":"com.google.gson.internal.$Gson$Types:93","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type canonicalize(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class) {\n        java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n        return c.isArray() ? new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(com.google.gson.internal.$Gson$Types.canonicalize(c.getComponentType())) : c;\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(p.getOwnerType() , p.getRawType() , p.getActualTypeArguments());\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(type));\n        return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(g.getGenericComponentType());\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n        return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(w.getUpperBounds() , w.getLowerBounds());\n    } else {\n        return type;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.util.Properties.class":"type","context":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b35761-3f56-11e6-866c-9104510597c9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:385","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigInteger read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigInteger(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b35762-3f56-11e6-866c-13cbbd4c30ee","method":{"position":"com.google.gson.internal.bind.TypeAdapters:736","type":"CtMethodImpl","sourcecode":"public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.Map<java.lang.String, T>.get(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b35763-3f56-11e6-866c-cd7d0d42a6c9","method":{"position":"com.google.gson.internal.Excluder:69","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withVersion(double ignoreVersionsAfter) {\n    if ((java.lang.Double.isNaN(ignoreVersionsAfter)) || (java.lang.Double.isInfinite(d))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            result.double = ignoreVersionsAfter;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b37e74-3f56-11e6-866c-47cb8ebf4d38","method":{"position":"com.google.gson.GsonBuilder:382","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(java.lang.String pattern) {\n    if (pattern != null) {\n        {\n            com.google.gson.GsonBuilder.this.java.lang.String = pattern;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"pattern"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b37e75-3f56-11e6-866c-7bc02650bd45","method":{"position":"com.google.gson.internal.bind.TypeAdapters:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    switch (jsonToken) {\n        case NULL :\n            in.nextNull();\n            return null;\n        case NUMBER :\n            return new com.google.gson.internal.LazilyParsedNumber(in.nextString());\n        default :\n            throw new com.google.gson.JsonSyntaxException((\"Expecting number, got: \" + jsonToken));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b37e76-3f56-11e6-866c-752137ce9505","method":{"position":"com.google.gson.internal.bind.TypeAdapters:473","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URI value) throws java.io.IOException {\n    out.value((value == null ? null : value.toASCIIString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b3a587-3f56-11e6-866c-e728eb6ceebf","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if ((property != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:163","type":"CtFieldReadImpl"},"failures":[316,317,318,53,54,55,319,56,320,57,58,265,321,59,60,61,45,322,323,324,18,325,326,327,328,62,329,330,331,332,333,334,335,336,63,64,65,337,66,67,68,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,266,369,370,371,372,373,374,267,375,376,268,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,269,395,396,397,398,399,400,401,402,403,404,405,406,69,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,270,425,426,427,428,70,263,19,71,264,72,73,74,49,429,75,430,431,432,433,76,77,434,435,436,437,438,439,78,440,441,0,442,443,444,445,446,447,79,448,449,450,451,452,453,454,80,455,456,457,458,459,460,461,462,463,464,465,466,467,81,468,469,470,471,82,472,473,474,475,476,83,84,85,86,87,88,477,89,90,91,92,478,479,480,314,481,482,483,484,485,486,487,488,489,490,491,93,492,493,494,495,496,497,498,499,94,500,501,502,95,503,96,97,504,505,506,98,507,508,509,510,511,512,20,513,99,100,101,102,514,103,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,104,105,106,533,534,535,536,537,538,539,540,541,107,542,543,21,22,544,23,24,108,109,545,110,111,112,113,114,115,116,117,118,119,120,546,121,122,123,124,125,126,127,128,547,129,548,549,550,130,131,551,132,552,133,553,554,555,556,557,558,279,559,25,26,27,28,134,560,561,135,136,562,563,137,50,564,565,566,138,567,568,569,570,571,572,139,140,573,574,575,141,142,143,144,145,51,43,146,576,577,578,147,148,149,150,151,152,153,154,155,156,157,158,579,159,160,161,162,580,163,280,164,165,166,167,581,168,169,170,171,582,172,173,174,175,176,177,178,179,180,181,182,183,583,184,185,186,584,585,586,281,587,282,283,284,187,188,189,190,29,30,4,5,6,7,8,9,10,11,12,13,31,588,191,32,33,34,35,36,192,193,194,37,38,195,196,197,198,39,199,589,200,590,591,592,593,594,595,596,597,201,598,599,600,601,202,203,602,603,204,604,52,605,606,205,607,206,207,608,208,209,210,211,212,213,214,40,285,609,215,216,610,217,218,219,220,221,611,612,613,222,223,224,225,614,226,615,616,227,228,229,230,231,232,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,233,234,235,236,237,238,239,240,241,242,243,244,245,246,636,637,287,638,639,640,247,248,641,642,643,249,250,251,252,253,254,644,255,256,257,258],"tindex":"b7b3cc98-3f56-11e6-866c-dbf3dda9c349","method":{"position":"com.google.gson.internal.Excluder:191","type":"CtMethodImpl","sourcecode":"public boolean excludeClass(java.lang.Class<?> clazz, boolean serialize) {\n    if (serialize) {\n        {\n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(clazz.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), clazz.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if ((!(boolean)) && (isInnerClass(clazz))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(clazz)) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                if (exclusionStrategy.shouldSkipClass(clazz)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"requireExpose":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:179","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b4de09-3f56-11e6-866c-979b529ed24e","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:90","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (key instanceof java.lang.reflect.GenericArrayType) {\n                {\n                    return (findByObject(key)) != null;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"b7b5051a-3f56-11e6-866c-b5fd236105f8","method":{"position":"com.google.gson.internal.bind.TypeAdapters:491","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.InetAddress value) throws java.io.IOException {\n    out.value((value == null ? null : value.getHostAddress()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:817","type":"CtVariableReadImpl"},"failures":[],"tindex":"b7b5051b-3f56-11e6-866c-a137ed1cb91f","method":{"position":"com.google.gson.internal.$Gson$Preconditions:40","type":"CtMethodImpl","sourcecode":"public static void checkArgument(boolean condition) {\n    if (!condition) {\n        throw new java.lang.IllegalArgumentException();\n    } \n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"condition"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:428","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b52c2c-3f56-11e6-866c-5117faa5e35f","method":{"position":"com.google.gson.internal.Streams:108","type":"CtMethodImpl","sourcecode":"public char charAt(int i) {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (i == i) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return char[][i];\n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_NONE":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl"},"failures":[],"tindex":"b7b52c2d-3f56-11e6-866c-e7446694b22c","method":{"position":"com.google.gson.DefaultDateTypeAdapter:77","type":"CtMethodImpl","sourcecode":"public java.util.Date deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT, com.google.gson.JsonDeserializationContext context) throws com.google.gson.JsonParseException {\n    if (!(json instanceof com.google.gson.JsonPrimitive)) {\n        throw new com.google.gson.JsonParseException(\"The date should be a string value\");\n    } \n    java.util.Date java.util.Date = deserializeToDate(json);\n    if (typeOfT == (java.util.Date.java.util.Date.java.lang.Class)) {\n        return date;\n    } else if (typeOfT == (java.sql.Timestamp.java.sql.Timestamp.java.lang.Class)) {\n        return new java.sql.Timestamp(date.getTime());\n    } else if (typeOfT == (java.sql.Date.java.sql.Date.java.lang.Class)) {\n        return new java.sql.Date(date.getTime());\n    } else {\n        throw new java.lang.IllegalArgumentException((((getClass()) + \" cannot deserialize to \") + typeOfT));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:645","type":"CtFieldReadImpl"},"failures":[265,384,396,397,410,418,424],"tindex":"b7b52c2e-3f56-11e6-866c-0d4e497a8fb5","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"generateNonExecutableJson":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b5533f-3f56-11e6-866c-6972819d71c4","method":{"position":"com.google.gson.internal.$Gson$Types:394","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.reflect.TypeVariable<?> unknown) {\n    java.lang.Class<?> java.lang.Class<?> = com.google.gson.internal.$Gson$Types.declaringClassOf(unknown);\n    if (declaredByRaw == null) {\n        return unknown;\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, declaredByRaw);\n    if (declaredBy instanceof java.lang.reflect.ParameterizedType) {\n        int int = com.google.gson.internal.$Gson$Types.indexOf(declaredByRaw.getTypeParameters(), unknown);\n        return ((java.lang.reflect.ParameterizedType)(declaredBy)).getActualTypeArguments()[index];\n    } \n    return unknown;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b55340-3f56-11e6-866c-5b7c7a1bfd8d","method":{"position":"com.google.gson.JsonObject:111","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Character value) {\n    if (property != null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl"},"failures":[645,646],"tindex":"b7b57a51-3f56-11e6-866c-a922d8e56676","method":{"position":"com.google.gson.JsonObject:78","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.String value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1527","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b57a52-3f56-11e6-866c-f56c48caae6d","method":{"position":"com.google.gson.stream.JsonReader:999","type":"CtMethodImpl","sourcecode":"private java.lang.String nextQuotedValue(char quote) throws java.io.IOException {\n    if ((quote >= '0') && (c <= '9')) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            while (true) {\n                int int = int;\n                int int = int;\n                int int = p;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        return builder.toString();\n                    } else if (c == '\\\\') {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        builder.append(readEscapeCharacter());\n                        p = int;\n                        l = int;\n                        start = p;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                builder.append(buffer, start, (p - start));\n                int = p;\n                if (!(fillBuffer(1))) {\n                    throw syntaxError(\"Unterminated string\");\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:409","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b57a53-3f56-11e6-866c-dbf9e530b30a","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:686","type":"CtMethodImpl","sourcecode":"void add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node) {\n    if (node != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            node.int = 1;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node;\n            (int)++;\n            if (((int) > 0) && (((int) & 1) == 0)) {\n                (int)++;\n                (int)--;\n                (int)++;\n            } \n            for (int int = 4 ; ((int) & (scale - 1)) == (scale - 1) ; scale *= 2) {\n                if ((int) == 0) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                } else if ((int) == 1) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    center.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right;\n                    center.int = (right.int) + 1;\n                    right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = center;\n                    int = 0;\n                } else if ((int) == 2) {\n                    int = 0;\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pivotLeft":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:274","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b5c874-3f56-11e6-866c-136a04ccaeb7","method":{"position":"com.google.gson.JsonObject:121","type":"CtMethodImpl","sourcecode":"private com.google.gson.JsonElement createJsonElement(java.lang.Object value) {\n    if (value instanceof java.lang.String) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return value == null ? com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull : new com.google.gson.JsonPrimitive(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"target":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"b7b5ef85-3f56-11e6-866c-09f3f1a53e87","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V get(java.lang.Object key) {\n    if (key instanceof com.google.gson.JsonObject) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n            return node != null ? node.V : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467353988280/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":65,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}