{"failureDictionary":{"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":238,"com.google.gson.functional.StringTest.testStringValueDeserialization":237,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":38,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":152,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":77,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":42,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":198,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":31,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":189,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":23,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":69,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":170,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":256,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":209,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":210,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":15,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":169,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":41,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":98,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":26,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":28,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":134,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":232,"com.google.gson.functional.ObjectTest.testSingletonLists":167,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":21,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":153,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":82,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":236,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":219,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":87,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":178,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":2,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":43,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":150,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":208,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":199,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":45,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":165,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":187,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":247,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":172,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":226,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":39,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":66,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":127,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":151,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":18,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":196,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":105,"com.google.gson.functional.EnumTest.testEnumCaseMapping":261,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":79,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":88,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":211,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":46,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":65,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":120,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":22,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":73,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":255,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":113,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":171,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":142,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":128,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":245,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":58,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":156,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":194,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":67,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":102,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":6,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":204,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":59,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":48,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":91,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":157,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":47,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":197,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":7,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":86,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":12,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":103,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":50,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":64,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":97,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":32,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":76,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":56,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":36,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":101,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":166,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":72,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":57,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":206,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":214,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":235,"com.google.gson.functional.ObjectTest.testNestedDeserialization":188,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":147,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":227,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":53,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":195,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":37,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":173,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":104,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":107,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":221,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":241,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":92,"com.google.gson.JavaSerializationTest.testListIsSerializable":9,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":14,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":148,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":109,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":93,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":115,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":99,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":11,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":121,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":129,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":145,"com.google.gson.functional.CollectionTest.testSetDeserialization":217,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":266,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":163,"com.google.gson.functional.EnumTest.testEnumSet":254,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":33,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":251,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":68,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":193,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":13,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":44,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":54,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":191,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":89,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":207,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":135,"com.google.gson.functional.MapTest.testHashMapDeserialization":96,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":213,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":81,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":52,"com.google.gson.functional.MapTest.testSortedMap":106,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":201,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":35,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":111,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":122,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":250,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":162,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":80,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":230,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":51,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":262,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":144,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":260,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":62,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":146,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":252,"com.google.gson.functional.CollectionTest.testQueueDeserialization":220,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":34,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":244,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":259,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":85,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":202,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":182,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":183,"com.google.gson.functional.MapTest.testStringKeyDeserialization":108,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":124,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":158,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":186,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":25,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":218,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":78,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":248,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":160,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":1,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":116,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":125,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":240,"com.google.gson.JavaSerializationTest.testMapIsSerializable":8,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":155,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromRawTypes":268,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":74,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":215,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":265,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":239,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":136,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":242,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":149,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":229,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":184,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":27,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":243,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":19,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":154,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":5,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":190,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":224,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":83,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":70,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":233,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":264,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":94,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":131,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":185,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":16,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":140,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":176,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":164,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":174,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":30,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":61,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":159,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":133,"com.google.gson.functional.EnumTest.testEnumSubclass":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":63,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":3,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":177,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":40,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":216,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":84,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":249,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":203,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":17,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":225,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":161,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":20,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":139,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":119,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":179,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":246,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":55,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":223,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":114,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":168,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":95,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":4,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":228,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":49,"com.google.gson.CommentsTest.testParseComments":0,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":132,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":143,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":234,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":90,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":123,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":71,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":60,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":180,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":200,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":112,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":267,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":212,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":222,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":24,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":126,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":29,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":263,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":75,"com.google.gson.functional.MapTest.testMapDeserialization":100,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":118,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":141,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":231,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":253,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":258,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":192,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":137,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":130,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":10,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":138},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:332","type":"CtVariableReadImpl"},"failures":[],"tindex":"9a75e65d-3f20-11e6-b7b0-55c5f77c93aa","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:157","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331749950/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:98","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"tindex":"9a78575e-3f20-11e6-b7b0-bf896df868b5","method":{"position":"com.google.gson.Gson:780","type":"CtMethodImpl","sourcecode":"private static void assertFullConsumption(java.lang.Object obj, com.google.gson.stream.JsonReader reader) {\n    if (obj instanceof java.lang.reflect.ParameterizedType) {\n        {\n            try {\n                if ((obj != null) && ((reader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonIOException(\"JSON document was not fully consumed.\");\n                } \n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331749950/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtInvocationImpl"},"failures":[268],"tindex":"9a78a57f-3f20-11e6-b7b0-83cf784747f5","method":{"position":"com.google.gson.reflect.TypeToken:111","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.Class<?> cls) {\n    if (cls.isAssignableFrom(cls)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331749950/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return isAssignableFrom(((java.lang.reflect.Type)(cls)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"cls","rawSupertype":"cls"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:541","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9a78a580-3f20-11e6-b7b0-97bcbdf8f9fb","method":{"position":"com.google.gson.GsonBuilder:423","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int dateStyle, int timeStyle) {\n    if (timeStyle == timeStyle) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331749950/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.int = dateStyle;\n            com.google.gson.GsonBuilder.this.int = timeStyle;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"timeStyle","com.google.gson.stream.JsonScope.NONEMPTY_DOCUMENT":"timeStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"9a78cc91-3f20-11e6-b7b0-013860ca5657","method":{"position":"com.google.gson.internal.bind.TypeAdapters:274","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonPrimitive:316","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9a78f3a2-3f20-11e6-b7b0-a943bb45487f","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n    boolean boolean = writer.isLenient();\n    writer.setLenient(true);\n    boolean boolean = writer.isHtmlSafe();\n    writer.setHtmlSafe(boolean);\n    boolean boolean = writer.getSerializeNulls();\n    writer.setSerializeNulls(boolean);\n    try {\n        ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } finally {\n        writer.setLenient(oldLenient);\n        writer.setHtmlSafe(oldHtmlSafe);\n        writer.setSerializeNulls(oldSerializeNulls);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"src","this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"9a791ab3-3f20-11e6-b7b0-8dfa291713ae","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:88","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Collection<E> collection) throws java.io.IOException {\n    if (collection == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginArray();\n    for (E E : collection) {\n        com.google.gson.TypeAdapter<E>.write(out, element);\n    }\n    out.endArray();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9a791ab4-3f20-11e6-b7b0-5918557e6787","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if ((json.length()) == 0) {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331749950/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9a7941c5-3f20-11e6-b7b0-958bfc233350","method":{"position":"com.google.gson.GsonBuilder:103","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setVersion(double ignoreVersionsAfter) {\n    if ((java.lang.Double.isNaN(ignoreVersionsAfter)) || (java.lang.Double.isInfinite(d))) {\n        {\n            com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.withVersion(ignoreVersionsAfter);\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331749950/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"9a7941c6-3f20-11e6-b7b0-d317e5592fd0","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:132","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter name(java.lang.String name) throws java.io.IOException {\n    if (name != null) {\n        {\n            if ((java.util.List<com.google.gson.JsonElement>.isEmpty()) || ((java.lang.String) != null)) {\n                throw new java.lang.IllegalStateException();\n            } \n            com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n            if (element instanceof com.google.gson.JsonObject) {\n                java.lang.String = name;\n                return com.google.gson.internal.bind.JsonTreeWriter.this;\n            } \n            throw new java.lang.IllegalStateException();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467331749950/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"name"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"9a7968d7-3f20-11e6-b7b0-b9147e788354","method":{"position":"com.google.gson.Gson:888","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"9a7968d8-3f20-11e6-b7b0-530f15fa0615","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Date read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        final long long = java.text.DateFormat.parse(in.nextString()).getTime();\n        return new java.sql.Date(utilDate);\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":12,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}