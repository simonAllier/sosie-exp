{"failureDictionary":{"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":1,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":18,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":133,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":100,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":9,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":108,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":147,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":42,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":86,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":51,"com.google.gson.MixedStreamTest.testWriteLenient":143,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":69,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":95,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":28,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":92,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":4,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":46,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":47,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":21,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":68,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":112,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":44,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":94,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":19,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":34,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":60,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize":104,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":134,"com.google.gson.functional.ObjectTest.testSingletonLists":66,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":80,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":54,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":58,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":83,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":141,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":27,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":62,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":136,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":40,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":76,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":111,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":50,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":64,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":131,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":145,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":65,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":127,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":0,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":2,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":84,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":71,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":17,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":56,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":5,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":98,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":137,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":36,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":119,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":81,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":125,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":6,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":23,"com.google.gson.functional.JsonTreeTest.testToJsonTree":24,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":14,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":16,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":115,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":151,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":10,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":87,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":142,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":97,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":31,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":118,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":82,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":110,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":70,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":90,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":74,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":39,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":113,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":73,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":144,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":53,"com.google.gson.MixedStreamTest.testReadMixedStreamed":135,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":26,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":33,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":75,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":79,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":7,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":124,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":57,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":122,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":3,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":41,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":106,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":138,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":148,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":114,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":150,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":120,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":52,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":88,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":146,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":12,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":103,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":77,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField":101,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":126,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":30,"com.google.gson.functional.ObjectTest.testNestedDeserialization":85,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":49,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":67,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":116,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":11,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":139,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":32,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":91,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":61,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":15,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":25,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":72,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":130,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":123,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":140,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":78,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":128,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":132,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":8,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":109,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":55,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":29,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":105,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":93,"com.google.gson.functional.CollectionTest.testSetDeserialization":48,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":149,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":99,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":43,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":96,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":89,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":59,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":107,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":117,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":63,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":45,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":22,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":35,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":129,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":37,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":20,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":13,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":38},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"345b505f-3e64-11e6-addf-01b43fe8aa9a","method":{"position":"com.google.gson.internal.bind.TypeAdapters:348","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.toString(in.nextBoolean());\n    } \n    return in.nextString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonObject:54","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"345b9e80-3e64-11e6-addf-a90e4bd377d4","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        {\n            com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.get();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250914508/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.internal.$Gson$Types:188","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.WildcardType"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,17,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,18,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"345bc591-3e64-11e6-addf-09e74df5f48d","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.reflect.WildcardType) {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250914508/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:430","type":"CtFieldReadImpl","sourcecode":"serializeNulls"},"failures":[137,138,139,140,141,142,143],"tindex":"345bc592-3e64-11e6-addf-95c3cbe17e8d","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250914508/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeNulls":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:233","type":"CtBinaryOperatorImpl","sourcecode":"annotation != null"},"failures":[144,145,131,132,146,133,147,148,149,150,151],"tindex":"345beca3-3e64-11e6-addf-4f5f56f901df","method":{"position":"com.google.gson.internal.Excluder:228","type":"CtMethodImpl","sourcecode":"private boolean isValidVersion(com.google.gson.annotations.Since since, com.google.gson.annotations.Until until) {\n    if (since != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250914508/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (isValidSince(since)) && (isValidUntil(until));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"since"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1435","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\n'"},"failures":[],"tindex":"345beca4-3e64-11e6-addf-9bfab059380c","method":{"position":"com.google.gson.stream.JsonReader:999","type":"CtMethodImpl","sourcecode":"private java.lang.String nextQuotedValue(char quote) throws java.io.IOException {\n    if (quote == '\\n') {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250914508/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            while (true) {\n                int int = int;\n                int int = int;\n                int int = p;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        return builder.toString();\n                    } else if (c == '\\\\') {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        builder.append(readEscapeCharacter());\n                        p = int;\n                        l = int;\n                        start = p;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                builder.append(buffer, start, (p - start));\n                int = p;\n                if (!(fillBuffer(1))) {\n                    throw syntaxError(\"Unterminated string\");\n                } \n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"345c13b5-3e64-11e6-addf-53cd9a31108b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250914508/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":7,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}