{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":325,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":285,"com.google.gson.functional.StringTest.testStringValueDeserialization":553,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":94,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":499,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":541,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":19,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":383,"com.google.gson.MixedStreamTest.testWriteLenient":332,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":350,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":366,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":259,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":307,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":44,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":54,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":365,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":502,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":18,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":225,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":165,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":487,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":298,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":339,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":358,"com.google.gson.functional.ObjectTest.testSingletonLists":131,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":226,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":256,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":286,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":483,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":304,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":476,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":10,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":473,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":548,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":373,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":7,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":453,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":324,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":407,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":561,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":150,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":183,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":500,"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":416,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":355,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":480,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":179,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":447,"com.google.gson.functional.EnumTest.testEnumCaseMapping":17,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":284,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":294,"com.google.gson.GenericArrayTypeTest.testNotEquals":417,"com.google.gson.functional.JsonTreeTest.testToJsonTree":329,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":188,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":549,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":316,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":240,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":306,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":321,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":458,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":484,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":538,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":107,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":51,"com.google.gson.functional.ObjectTest.testNullDeserialization":513,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":153,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":559,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":371,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":138,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":177,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":99,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":376,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":163,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":269,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":530,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":103,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":507,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":506,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":547,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":322,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":509,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":533,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":144,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":213,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":255,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":493,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":351,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":443,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":497,"com.google.gson.ParameterizedTypeTest.testNotEquals":466,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":42,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":537,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":230,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":348,"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":465,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":92,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":498,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":143,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":209,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":4,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":277,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":369,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":23,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":449,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":400,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":115,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":29,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":456,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":474,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":421,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":452,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":258,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":515,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":251,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":387,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":98,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":386,"com.google.gson.functional.CollectionTest.testSetDeserialization":347,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":166,"com.google.gson.functional.EnumTest.testEnumSet":11,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":135,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":527,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":494,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":30,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":60,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":76,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":535,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":139,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":0,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":28,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":389,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":504,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":174,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":305,"com.google.gson.functional.MapTest.testHashMapDeserialization":437,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":427,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":544,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":278,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":516,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":35,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":197,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":228,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":422,"com.google.gson.functional.MapTest.testSortedMap":448,"com.google.gson.functional.MapTest.testMapSerialization":81,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":199,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":390,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":496,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":522,"com.google.gson.functional.MapTest.testSerializeMaps":75,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":282,"com.google.gson.functional.MapTest.testComplexKeysSerialization":90,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":526,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":451,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":220,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":155,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":335,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":114,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":345,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":470,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":186,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":299,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":20,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":512,"com.google.gson.functional.MapTest.testStringKeyDeserialization":450,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":523,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":62,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":93,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":486,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":169,"com.google.gson.functional.PrettyPrintingTest.testMap":184,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":47,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":200,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":237,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":468,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":6,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":323,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":524,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":290,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":554,"com.google.gson.functional.CollectionTest.testQueueSerialization":48,"com.google.gson.functional.MapTest.testMapSerializationEmpty":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":248,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":300,"com.google.gson.functional.MapTest.testMapOfMapSerialization":80,"com.google.gson.JavaSerializationTest.testMapIsSerializable":419,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":539,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":429,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":161,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":68,"com.google.gson.functional.FieldNamingTest.testIdentity":283,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":287,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":432,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":201,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":378,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":22,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":130,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":302,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":481,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":467,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":96,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":288,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":384,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":546,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":3,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":536,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":160,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":249,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":268,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":436,"com.google.gson.functional.MapTest.testMapSubclassSerialization":74,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":194,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":341,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":528,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":171,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":270,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":331,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":491,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":352,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":531,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":334,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":27,"com.google.gson.functional.EnumTest.testEnumSubclass":14,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":8,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":372,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":95,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":501,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":61,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":342,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":149,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":385,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":312,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":2,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":520,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":454,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":337,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":263,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":364,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":477,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":215,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":434,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":211,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":154,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":338,"com.google.gson.CommentsTest.testParseComments":464,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":65,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":132,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":359,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":224,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":397,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":514,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":83,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":289,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":162,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":34,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":127,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":265,"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":463,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":191,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":121,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":525,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":221,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":159,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":540,"com.google.gson.functional.MapTest.testMapDeserialization":442,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":519,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":250,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":189,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":73,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":357,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":77,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":118,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":109,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":106,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":346,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":231,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":423,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":404,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":137,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":145,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":37,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":172,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":313,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":241,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":340,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":43,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":148,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":82,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":185,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":415,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":267,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":433,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":111,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":503,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":181,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":492,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":126,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":243,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":485,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":279,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":13,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":46,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":193,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":439,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":489,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":58,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":128,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":353,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":360,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":545,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":414,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":318,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":21,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":146,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":349,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":362,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":233,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":271,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":363,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":402,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":63,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":381,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":368,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":16,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":39,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":227,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":52,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":405,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":167,"com.google.gson.functional.TreeTypeAdaptersTest.initializationError":460,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":475,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":105,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":254,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":245,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":112,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":542,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":314,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":425,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":505,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":71,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":12,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":108,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":395,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":391,"com.google.gson.functional.MapTest.testGeneralMapField":87,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":367,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":208,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":97,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":168,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":217,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":260,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":85,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":102,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":120,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":234,"com.google.gson.MixedStreamTest.testReadMixedStreamed":413,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":124,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":444,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":534,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":1,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":55,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":401,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":399,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":180,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":418,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":388,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":253,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":445,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":275,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":438,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":66,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":129,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":205,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":273,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":252,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":435,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":202,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":428,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":529,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":479,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":70,"com.google.gson.functional.ObjectTest.testNestedDeserialization":382,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":142,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":151,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":393,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":311,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":178,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":223,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":446,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":471,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":555,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":26,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":38,"com.google.gson.JavaSerializationTest.testListIsSerializable":420,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":310,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":354,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":57,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":41,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":552,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":440,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":86,"com.google.gson.functional.MapTest.testInterfaceTypeMap":84,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":521,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":170,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":117,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":15,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":182,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":173,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":344,"com.google.gson.MixedStreamTest.testReadClosed":462,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":235,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":176,"com.google.gson.MixedStreamTest.testWriteClosed":412,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":50,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":394,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":133,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":361,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":550,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":31,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":116,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":327,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":147,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":222,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":266,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":119,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":134,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":49,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":409,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":274,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":343,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":543,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":517,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":157,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":510,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":123,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":328,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":532,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":156,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":206,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":326,"com.google.gson.functional.CollectionTest.testQueueDeserialization":431,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":125,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":495,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":558,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":264,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":410,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":78,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":377,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":247,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":104,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":380,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":45,"com.google.gson.functional.MapTest.testRawMapSerialization":89,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":330,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":430,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":461,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":319,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":36,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":140,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":392,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":113,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":296,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":9,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":210,"com.google.gson.ObjectTypeAdapterTest.testSerialize":303,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":100,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":308,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":216,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":280,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":32,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":556,"com.google.gson.functional.MapTest.testMapWithQuotes":79,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":238,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":488,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":557,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":59,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":459,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":69,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":196,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":236,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":164,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":478,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":24,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":379,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":190,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":244,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":511,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":219,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":370,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":239,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":246,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":272,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":309,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":472,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":518,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":25,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":207,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":262,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":40,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":203,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":551,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":195,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":469,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":424,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":482,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":67,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":317,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":374,"com.google.gson.functional.ObjectTest.testNestedSerialization":141,"com.google.gson.JsonObjectTest.testAddingStringProperties":301,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":72,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":101,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":122,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":560,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":204,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":88,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":192,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":232,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":5,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":333,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":136,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":457,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":508,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":315,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":398,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":406,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":295,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":375,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":403,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":408,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":320,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":291,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":214,"com.google.gson.functional.CollectionTest.testSetSerialization":56,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":356,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":64,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":187,"com.google.gson.functional.StringTest.testStringValueSerialization":292,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":293,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":158,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":336,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":426,"com.google.gson.MixedStreamTest.testWriteInvalidState":411,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":218,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":490,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":276,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":242,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":281,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":152,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":297,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":396,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":175,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":257,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":441,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":212,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":455},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"27e05bc1-3e41-11e6-bf29-1796db59c321","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (src == null) {\n        return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    return toJsonTree(src, src.getClass());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:297","type":"CtBinaryOperatorImpl","sourcecode":"(value) instanceof java.lang.Number"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"tindex":"27e0a9e2-3e41-11e6-bf29-8b8bf58435ff","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src instanceof java.lang.Number) {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.GenericArrayType)"},"failures":[],"tindex":"27e0d0f3-3e41-11e6-bf29-2b2d026e3029","method":{"position":"com.google.gson.internal.$Gson$Types:277","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type array) {\n    return array instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(array)).getGenericComponentType() : ((java.lang.Class<?>)(array)).getComponentType();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[146,244,246,247,264],"tindex":"27e0d0f4-3e41-11e6-bf29-49b4b94d651e","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            java.lang.String java.lang.String = java.text.DateFormat.format(value);\n            out.value(dateFormatAsString);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[296,297,298,299,300,301,302],"tindex":"27e0f805-3e41-11e6-bf29-752c21f3317c","method":{"position":"com.google.gson.JsonObject:141","type":"CtMethodImpl","sourcecode":"public boolean has(java.lang.String memberName) {\n    if (memberName != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.containsKey(memberName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"memberName"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[243],"tindex":"27e0f806-3e41-11e6-bf29-f99cf1780e20","method":{"position":"com.google.gson.internal.bind.TypeAdapters:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"27e0f807-3e41-11e6-bf29-7f83688d4b9a","method":{"position":"com.google.gson.FieldNamingPolicy:37","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return f.getName();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"27e11f18-3e41-11e6-bf29-e1bd946cdc61","method":{"position":"com.google.gson.internal.bind.TypeAdapters:424","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuffer read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuffer(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:417","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"27e11f19-3e41-11e6-bf29-27eae769ad9a","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == style) {\n        {\n            com.google.gson.GsonBuilder.this.int = style;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"style","com.google.gson.stream.JsonReader.PEEKED_NONE":"style"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:958","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NUMBER)"},"failures":[],"tindex":"27e11f1a-3e41-11e6-bf29-7dfcf2d70222","method":{"position":"com.google.gson.internal.Streams:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chars, int offset, int length) throws java.io.IOException {\n    if (offset == offset) {\n        {\n            com.google.gson.internal.Streams.AppendableWriter.CurrentWrite.char[] = chars;\n            java.lang.Appendable.append(com.google.gson.internal.Streams.AppendableWriter.CurrentWrite, offset, (offset + length));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"offset","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"offset"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"27e1462b-3e41-11e6-bf29-ebcf439559c7","method":{"position":"com.google.gson.Gson:895","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    com.google.gson.TypeAdapter<T>.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[0,296,2,3,303,304,4,10,305,11,12,13,14,15,16,19,20,22,23,24,26,27,28,29,30,31,32,33,34,306,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,307,308,309,310,59,60,61,63,64,65,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,98,99,100,101,102,103,104,105,106,108,109,110,112,114,311,312,313,115,116,117,314,315,118,119,316,122,124,126,127,128,129,130,131,132,133,134,135,136,139,140,141,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,317,182,318,319,320,321,322,323,324,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,325,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,326,327,226,228,229,230,328,231,302,329,232,239,248,253,258,260,261,266,271,272,273,274,276,277,279,280,281,282,283,289,293,330,331,332,333,294,295],"tindex":"27e1e26c-3e41-11e6-bf29-3ff8013a09a1","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:74","type":"CtMethodImpl","sourcecode":"private java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type type, java.lang.Object value) {\n    if (value instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if ((value != null) && (((type == (java.lang.Object.java.lang.Object.java.lang.Class)) || (type instanceof java.lang.reflect.TypeVariable<?>)) || (type instanceof java.lang.Class<?>))) {\n                type = value.getClass();\n            } \n            return type;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:292","type":"CtBinaryOperatorImpl","sourcecode":"(parent.left) == node"},"failures":[],"tindex":"27e2097d-3e41-11e6-bf29-a1f242d3626e","method":{"position":"com.google.gson.internal.LinkedTreeMap:373","type":"CtMethodImpl","sourcecode":"private void rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if (root == root) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotLeft;\n            if (pivotLeft != null) {\n                pivotLeft.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((left != null ? left.int : 0), (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotRight != null ? pivotRight.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"parent":"root","node":"root","left":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"27e2097e-3e41-11e6-bf29-fd2ef59aa9b2","method":{"position":"com.google.gson.internal.bind.TypeAdapters:406","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.StringBuilder read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return new java.lang.StringBuilder(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"27e2308f-3e41-11e6-bf29-e7093e2e2e59","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:63","type":"CtMethodImpl","sourcecode":"public java.lang.Object read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        list.add(instance);\n    }\n    in.endArray();\n    java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(java.lang.Class<E>, list.size());\n    for (int int = 0 ; i < (list.size()) ; i++) {\n        java.lang.reflect.Array.set(array, i, list.get(i));\n    }\n    return array;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:96","type":"CtVariableReadImpl","sourcecode":"isObject"},"failures":[0,2,3,303,4,334,10,305,15,335,19,20,336,337,22,23,24,338,26,27,28,29,30,339,31,32,33,340,34,341,306,35,36,37,38,39,40,41,342,343,42,344,43,345,346,44,46,52,347,54,56,307,308,309,310,348,349,61,63,64,71,72,350,351,352,353,354,78,355,84,86,87,90,94,95,97,356,98,99,100,103,104,105,357,358,108,109,359,110,112,114,360,311,312,313,115,116,117,314,315,361,362,118,119,316,363,130,131,364,365,132,366,367,133,368,369,134,370,135,371,136,372,373,139,374,140,141,375,143,376,377,144,378,145,146,379,147,380,381,382,383,148,384,385,149,150,152,153,154,155,386,156,157,158,159,160,161,162,164,165,166,171,387,388,389,185,186,190,390,191,391,192,392,193,194,195,196,197,325,199,393,200,394,395,201,202,203,396,205,217,397,218,221,222,223,224,326,327,398,399,226,400,228,401,229,230,328,231,302,329,232,402,403,404,405,243,406,253,261,266,271,407,408,272,273,409,410,274,276,277,279,280,281,282,283,293,330,331,411,412,413,414],"tindex":"27e23090-3e41-11e6-bf29-e5fffaff76af","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:86","type":"CtMethodImpl","sourcecode":"private com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField createBoundField(final com.google.gson.Gson context, final java.lang.reflect.Field field, final java.lang.String name, final com.google.gson.reflect.TypeToken<?> fieldType, boolean serialize, boolean deserialize) {\n    if (serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            final boolean boolean = com.google.gson.internal.Primitives.isPrimitive(fieldType.getRawType());\n            return new com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\n                final com.google.gson.TypeAdapter<?> typeAdapter = getFieldAdapter(context, field, fieldType);\n\n                @java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\n                @java.lang.Override\n                void write(com.google.gson.stream.JsonWriter writer, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n                    java.lang.Object java.lang.Object = field.get(value);\n                    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = new com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper(context , this.com.google.gson.TypeAdapter<?> , fieldType.getType());\n                    t.write(writer, fieldValue);\n                }\n\n                @java.lang.Override\n                void read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n                    java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n                    if ((fieldValue != null) || (!isPrimitive)) {\n                        field.set(value, fieldValue);\n                    } \n                }\n\n                public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n                    if (!(boolean))\n                        return false;\n                    \n                    java.lang.Object java.lang.Object = field.get(value);\n                    return fieldValue != value;\n                }\n            };\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isObject":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[296,415,416,417,418,419,420,421,422,11,12,13,14,423,16,24,338,25,26,27,28,30,339,31,32,33,340,34,424,341,306,45,425,426,427,48,49,51,428,429,53,347,55,430,57,58,431,60,432,433,70,434,435,436,437,438,439,440,76,441,77,442,443,444,445,446,81,447,355,82,448,85,88,449,90,91,450,92,451,452,93,453,454,162,164,166,455,456,190,195,457,205,215,458,228,459,401,229,230,460,239,461,462,332,333,463,464,465,466],"tindex":"27e257a1-3e41-11e6-bf29-59c616edd234","method":{"position":"com.google.gson.reflect.TypeToken:81","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class<?> subclass) {\n    if (subclass.isInterface()) {\n        {\n            java.lang.reflect.Type java.lang.reflect.Type = subclass.getGenericSuperclass();\n            if (superclass instanceof java.lang.Class) {\n                throw new java.lang.RuntimeException(\"Missing type parameter.\");\n            } \n            java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(superclass));\n            return com.google.gson.internal.$Gson$Types.canonicalize(parameterized.getActualTypeArguments()[0]);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"subclass"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"27e257a2-3e41-11e6-bf29-21fb388c16b5","method":{"position":"com.google.gson.internal.$Gson$Types:303","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type context, java.lang.Class<?> contextRawType) {\n    if (context == (java.util.Properties.java.util.Properties.java.lang.Class)) {\n        return new java.lang.reflect.Type[]{ java.lang.String.java.lang.String.java.lang.Class , java.lang.String.java.lang.String.java.lang.Class };\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getSupertype(context, contextRawType, java.util.Map.java.util.Map.java.lang.Class);\n    if (mapType instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(mapType));\n        return mapParameterizedType.getActualTypeArguments();\n    } \n    return new java.lang.reflect.Type[]{ java.lang.Object.java.lang.Object.java.lang.Class , java.lang.Object.java.lang.Object.java.lang.Class };\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtBinaryOperatorImpl","sourcecode":"rawSupertype == toResolve"},"failures":[0,467,1,2,3,303,4,5,6,7,8,9,334,10,468,469,305,13,14,470,15,335,17,19,471,20,336,337,22,23,24,338,25,26,27,28,29,30,339,31,32,33,340,34,424,341,306,35,36,37,38,39,40,41,342,343,42,344,43,345,346,44,46,52,472,347,54,56,473,307,308,309,310,348,474,349,61,63,475,64,476,69,71,72,350,351,352,353,354,477,78,355,84,86,87,90,94,95,97,356,98,99,100,102,103,104,105,357,358,478,108,109,359,110,112,479,114,360,311,312,313,115,116,117,314,315,361,362,118,119,316,480,481,482,483,484,485,121,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,363,505,506,507,508,509,510,130,131,364,365,132,366,367,133,368,369,134,370,135,371,136,511,372,373,139,374,140,141,375,143,376,377,512,513,144,378,145,146,379,147,380,381,382,383,148,384,385,149,150,151,152,153,154,155,386,156,157,158,159,160,161,162,164,165,166,167,168,170,171,172,174,175,176,177,178,179,180,181,387,388,389,456,185,186,190,514,390,191,391,192,515,392,193,194,195,196,197,325,199,516,393,200,394,395,201,202,517,203,396,204,205,518,519,520,521,522,217,397,218,523,524,525,221,222,223,224,326,327,398,399,226,400,526,527,528,228,401,229,230,328,231,302,329,232,402,529,234,530,403,404,531,532,533,240,405,534,535,243,536,406,537,538,539,253,540,255,541,542,543,544,545,546,261,262,264,266,547,548,549,550,271,407,408,272,273,409,410,274,551,552,276,277,279,280,281,282,283,553,285,287,554,555,556,557,558,559,560,561,293,330,331,411,412,413,414],"tindex":"27e27eb3-3e41-11e6-bf29-db4de5f67cc1","method":{"position":"com.google.gson.internal.Primitives:60","type":"CtMethodImpl","sourcecode":"private static void add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>> forward, java.util.Map<java.lang.Class<?>, java.lang.Class<?>> backward, java.lang.Class<?> key, java.lang.Class<?> value) {\n    if (value == key) {\n        {\n            forward.put(key, value);\n            backward.put(value, key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"key","rawSupertype":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.FieldNamingPolicy:143","type":"CtInvocationImpl","sourcecode":"java.lang.Character.isLetter(firstCharacter)"},"failures":[],"tindex":"27e2a5c4-3e41-11e6-bf29-97f417ceac07","method":{"position":"com.google.gson.stream.JsonReader:1101","type":"CtMethodImpl","sourcecode":"private void skipQuotedValue(char quote) throws java.io.IOException {\n    if (java.lang.Character.isLetter(quote)) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            do {\n                int int = int;\n                int int = int;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        return ;\n                    } else if (c == '\\\\') {\n                        int = p;\n                        readEscapeCharacter();\n                        p = int;\n                        l = int;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                int = p;\n            } while (fillBuffer(1) );\n            throw syntaxError(\"Unterminated string\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"firstCharacter":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[],"tindex":"27e2a5c5-3e41-11e6-bf29-9ddade8075f3","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467235653212/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":21,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}