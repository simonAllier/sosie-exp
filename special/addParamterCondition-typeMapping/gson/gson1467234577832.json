{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":418,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":562,"com.google.gson.functional.StringTest.testStringValueDeserialization":560,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":598,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":177,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":274,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":235,"com.google.gson.stream.JsonWriterTest.testRepeatedName":595,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":46,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":354,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":3,"com.google.gson.MixedStreamTest.testWriteLenient":583,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":320,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":526,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipClasses":591,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":110,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":85,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":102,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":318,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":283,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":45,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":465,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":375,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":244,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":62,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":191,"com.google.gson.functional.ObjectTest.testSingletonLists":316,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":468,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":519,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":228,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":563,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":18,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":127,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":30,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":536,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":333,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":25,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":286,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":542,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":576,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":359,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":275,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":397,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":159,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":9,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":220,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":389,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":158,"com.google.gson.functional.EnumTest.testEnumCaseMapping":44,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":561,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":588,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":219,"com.google.gson.functional.JsonTreeTest.testToJsonTree":482,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":402,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":217,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":70,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":495,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":447,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":230,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":512,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":194,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":95,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":362,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":573,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":329,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":296,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":236,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":334,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":387,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":183,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":342,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":373,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":538,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":187,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":301,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":300,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":535,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":280,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":259,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":307,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":345,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":443,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":518,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":4,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":151,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":272,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":80,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":509,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":478,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":116,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":173,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":136,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":281,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":273,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":341,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":437,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":19,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":324,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":553,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":53,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":169,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":240,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":469,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":208,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":60,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":396,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":118,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":27,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":175,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":410,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":524,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":393,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":511,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":182,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":365,"com.google.gson.functional.CollectionTest.testSetDeserialization":101,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":376,"com.google.gson.functional.EnumTest.testEnumSet":35,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":328,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":471,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":264,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":61,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":117,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":146,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":499,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":335,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":8,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":59,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":277,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":395,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":288,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":34,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":384,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":289,"com.google.gson.functional.MapTest.testHashMapDeserialization":140,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":233,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":523,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":420,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":554,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":71,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":416,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":33,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":474,"com.google.gson.functional.MapTest.testSortedMap":162,"com.google.gson.functional.MapTest.testMapSerialization":157,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":419,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":270,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":406,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":450,"com.google.gson.functional.MapTest.testSerializeMaps":143,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":558,"com.google.gson.functional.MapTest.testComplexKeysSerialization":170,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":470,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":174,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":457,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":42,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":364,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":203,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":83,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":40,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":400,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":48,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":344,"com.google.gson.functional.MapTest.testStringKeyDeserialization":172,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":454,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":0,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":303,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":176,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":239,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":234,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":379,"com.google.gson.functional.PrettyPrintingTest.testMap":398,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":88,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":31,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":422,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":492,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":24,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":456,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":566,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":570,"com.google.gson.functional.CollectionTest.testQueueSerialization":92,"com.google.gson.functional.MapTest.testMapSerializationEmpty":171,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":506,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":265,"com.google.gson.functional.MapTest.testMapOfMapSerialization":156,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":256,"com.google.gson.JavaSerializationTest.testMapIsSerializable":22,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":514,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":98,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":267,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":371,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":128,"com.google.gson.functional.FieldNamingTest.testIdentity":559,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":564,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":119,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":426,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":346,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":52,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":112,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":315,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":481,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":222,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":10,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":179,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":565,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":262,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":356,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":528,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":16,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":501,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":370,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":508,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":137,"com.google.gson.functional.MapTest.testMapSubclassSerialization":142,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":299,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":69,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":413,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":473,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":254,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":381,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":540,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":581,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":5,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":314,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":491,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":29,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":58,"com.google.gson.functional.EnumTest.testEnumSubclass":38,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":276,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":26,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":331,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":221,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":178,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":282,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":121,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":78,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":224,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":358,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":260,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":357,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":206,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":15,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":446,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":266,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":327,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":51,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":258,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":596,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":531,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":317,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":139,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":445,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":134,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":439,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":55,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":363,"com.google.gson.CommentsTest.testParseComments":590,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":124,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":197,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":319,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":279,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":452,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":462,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":405,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":161,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":568,"com.google.gson.MixedStreamTest.testReadInvalidState":580,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":372,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":67,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":298,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":533,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":407,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":232,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":458,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":459,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":249,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":369,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":293,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":516,"com.google.gson.functional.MapTest.testMapDeserialization":149,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":442,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":510,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":403,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":138,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":190,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":148,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":215,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":196,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":192,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":84,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":39,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":480,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":490,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":332,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":347,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":73,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":382,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":207,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":496,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":66,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":82,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":355,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":160,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":399,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":13,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":537,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":218,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":126,"com.google.gson.functional.PrimitiveTest.testShortSerialization":297,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":199,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":285,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":391,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":255,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":284,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":231,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":500,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":555,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":37,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":87,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":412,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":144,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":248,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":108,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":305,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":133,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":204,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":525,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":587,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":312,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":306,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":50,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":120,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":214,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":348,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":486,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":541,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":291,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":484,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":1,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":261,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":352,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":323,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":43,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":75,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":472,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":497,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":377,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":122,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":189,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":517,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":238,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":477,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":503,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":200,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":521,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":89,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":211,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":225,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":292,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":263,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":309,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":131,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":36,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":195,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":424,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":408,"com.google.gson.functional.MapTest.testGeneralMapField":166,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":321,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":436,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":311,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":180,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":378,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":451,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":527,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":164,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":186,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":487,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":287,"com.google.gson.MixedStreamTest.testReadMixedStreamed":586,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":152,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":250,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":498,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":11,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":103,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":476,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":467,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":268,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":390,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":21,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":394,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":515,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":153,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":551,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":141,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":125,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":310,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":432,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":545,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":594,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":251,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":513,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":135,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":427,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":97,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":485,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":202,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":130,"com.google.gson.functional.ObjectTest.testNestedDeserialization":353,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":339,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":360,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":421,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":205,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":388,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":308,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":461,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":47,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":154,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":567,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":57,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":295,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":74,"com.google.gson.JavaSerializationTest.testListIsSerializable":23,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":6,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":114,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":106,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":77,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":550,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":145,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":165,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":223,"com.google.gson.functional.MapTest.testInterfaceTypeMap":163,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":448,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":380,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":210,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":226,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":41,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":81,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":383,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":488,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":386,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":242,"com.google.gson.MixedStreamTest.testWriteClosed":585,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":94,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":423,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":213,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":322,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":539,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":63,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":209,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":464,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":350,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":460,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":534,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":216,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":325,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":93,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":546,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":271,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":548,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":79,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":99,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":522,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":428,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":313,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":367,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":247,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":479,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":493,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":366,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":433,"com.google.gson.functional.CollectionTest.testQueueDeserialization":109,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":463,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":253,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":269,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":572,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":417,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":532,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":547,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":150,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":505,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":188,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":351,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":86,"com.google.gson.functional.MapTest.testRawMapSerialization":168,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":579,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":520,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":72,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":337,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":411,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":201,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":12,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":14,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":28,"com.google.gson.functional.PrimitiveTest.testByteSerialization":294,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":438,"com.google.gson.ObjectTypeAdapterTest.testSerialize":17,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":184,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":237,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":111,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":449,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":556,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":7,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":64,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":569,"com.google.gson.functional.MapTest.testMapWithQuotes":155,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":245,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":571,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":115,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":475,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":129,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":415,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":302,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":374,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":193,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":54,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":349,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":404,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":278,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":502,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":326,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":455,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":529,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":494,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":504,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":544,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":290,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":100,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":441,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":56,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":434,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":530,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":76,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":429,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":549,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":414,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":32,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":68,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":227,"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":592,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":2,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":336,"com.google.gson.functional.ObjectTest.testNestedSerialization":338,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":132,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":185,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":241,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":575,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":431,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":167,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":409,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":483,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":20,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":584,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":330,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":425,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":304,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":212,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":466,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":507,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":243,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":589,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":340,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":489,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":543,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":574,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":444,"com.google.gson.functional.CollectionTest.testSetSerialization":105,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":181,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":123,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":401,"com.google.gson.functional.StringTest.testStringValueSerialization":577,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":578,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":49,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":90,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":368,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":435,"com.google.gson.MixedStreamTest.testWriteInvalidState":582,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":246,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":252,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":453,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":552,"com.google.gson.stream.JsonWriterTest.testBooleans":593,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":557,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":361,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":430,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":385,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":65,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":147,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":597,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":392,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":440},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c9a7238d-3e3d-11e6-9817-ed75fd005419","method":{"position":"com.google.gson.internal.bind.TypeAdapters:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c9a74a9e-3e3d-11e6-9817-2b7b7635b2d4","method":{"position":"com.google.gson.internal.bind.TypeAdapters:156","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[0,1,2,3,4,5,6],"tindex":"c9a771af-3e3d-11e6-9817-b3d582bd0df1","method":{"position":"com.google.gson.JsonObject:89","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Number value) {\n    if (property == null) {\n        {\n            add(property, createJsonElement(value));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c9a771b0-3e3d-11e6-9817-271f5752cbb4","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:54","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Object read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    switch (token) {\n        case BEGIN_ARRAY :\n            java.util.List<java.lang.Object> java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object>();\n            in.beginArray();\n            while (in.hasNext()) {\n                list.add(read(in));\n            }\n            in.endArray();\n            return list;\n        case BEGIN_OBJECT :\n            java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new com.google.gson.internal.LinkedTreeMap<java.lang.String, java.lang.Object>();\n            in.beginObject();\n            while (in.hasNext()) {\n                map.put(in.nextName(), read(in));\n            }\n            in.endObject();\n            return map;\n        case STRING :\n            return in.nextString();\n        case NUMBER :\n            return in.nextDouble();\n        case BOOLEAN :\n            return in.nextBoolean();\n        case NULL :\n            in.nextNull();\n            return null;\n        default :\n            throw new java.lang.IllegalStateException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,0,1,122,123,124,125,126,2,127,128,129,130,131,132,3,4,5,133,6,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591],"tindex":"c9a798c1-3e3d-11e6-9817-c3b598955e07","method":{"position":"com.google.gson.internal.Excluder:191","type":"CtMethodImpl","sourcecode":"public boolean excludeClass(java.lang.Class<?> clazz, boolean serialize) {\n    if (serialize) {\n        {\n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(clazz.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), clazz.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if ((!(boolean)) && (isInnerClass(clazz))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(clazz)) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                if (exclusionStrategy.shouldSkipClass(clazz)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[],"tindex":"c9a7bfd2-3e3d-11e6-9817-41494e3d6f3c","method":{"position":"com.google.gson.FieldNamingPolicy:137","type":"CtMethodImpl","sourcecode":"private static java.lang.String upperCaseFirstLetter(java.lang.String name) {\n    if (name == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = 0;\n            char char = name.charAt(index);\n            while (index < ((name.length()) - 1)) {\n                if (java.lang.Character.isLetter(firstCharacter)) {\n                    break;\n                } \n                fieldNameBuilder.append(firstCharacter);\n                firstCharacter = name.charAt((++index));\n            }\n            if (index == (name.length())) {\n                return fieldNameBuilder.toString();\n            } \n            if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n                java.lang.String java.lang.String = com.google.gson.FieldNamingPolicy.modifyString(java.lang.Character.toUpperCase(firstCharacter), name, (++index));\n                return fieldNameBuilder.append(modifiedTarget).toString();\n            } else {\n                return name;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"name"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:356","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[592],"tindex":"c9a7e6e3-3e3d-11e6-9817-b7136441420a","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:338","type":"CtMethodImpl","sourcecode":"private void rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> unbalanced, boolean insert) {\n    if (insert) {\n        {\n            for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = unbalanced ; node != null ; node = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                int int = left != null ? left.int : 0;\n                int int = right != null ? right.int : 0;\n                int int = leftHeight - rightHeight;\n                if (delta == (-2)) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = rightRight != null ? rightRight.int : 0;\n                    int int = rightLeft != null ? rightLeft.int : 0;\n                    int int = rightLeftHeight - rightRightHeight;\n                    if ((rightDelta == (-1)) || ((rightDelta == 0) && (!insert))) {\n                        rotateLeft(node);\n                    } else {\n                        assert rightDelta == 1;\n                        rotateRight(right);\n                        rotateLeft(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 2) {\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    int int = leftRight != null ? leftRight.int : 0;\n                    int int = leftLeft != null ? leftLeft.int : 0;\n                    int int = leftLeftHeight - leftRightHeight;\n                    if ((leftDelta == 1) || ((leftDelta == 0) && (!insert))) {\n                        rotateRight(node);\n                    } else {\n                        assert leftDelta == (-1);\n                        rotateLeft(left);\n                        rotateRight(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 0) {\n                    node.int = leftHeight + 1;\n                    if (insert) {\n                        break;\n                    } \n                } else {\n                    assert (delta == (-1)) || (delta == 1);\n                    node.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                    if (!insert) {\n                        break;\n                    } \n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"insert"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"c9a80df4-3e3d-11e6-9817-1fac13e03213","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src != null) {\n        {\n            com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.get();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"c9a85c15-3e3d-11e6-9817-73c94c6b2029","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:175","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            if (!(isLenient())) {\n                double double = value.doubleValue();\n                if ((java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))) {\n                    throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n                } \n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c9a88326-3e3d-11e6-9817-af7a7a6ea687","method":{"position":"com.google.gson.internal.bind.TypeAdapters:397","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigInteger value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"c9a88327-3e3d-11e6-9817-e92b45ee2c1d","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (src == null) {\n        return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    return toJsonTree(src, src.getClass());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:261","type":"CtBinaryOperatorImpl","sourcecode":"left != null"},"failures":[],"tindex":"c9a88328-3e3d-11e6-9817-5f2babc6e50f","method":{"position":"com.google.gson.internal.LinkedTreeMap:401","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if (root != null) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:649","type":"CtFieldReadImpl","sourcecode":"prettyPrinting"},"failures":[416,418,419,420,424],"tindex":"c9a88329-3e3d-11e6-9817-598e40aeaf07","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (deserialization) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prettyPrinting":"deserialization"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[8,15,16,17,19,29,30,34,41,42,46,48,49,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,96,101,102,105,110,111,113,114,116,120,121,1,123,131,132,3,4,5,133,6,150,159,163,165,166,170,177,178,180,181,182,183,184,187,188,189,190,191,195,196,197,198,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,291,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,333,335,336,337,338,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,381,393,394,395,399,400,404,406,407,408,409,411,412,413,414,415,416,418,419,421,422,423,424,426,427,429,430,432,451,452,453,459,460,461,462,463,464,466,467,468,469,474,476,477,478,479,480,481,482,483,484,489,490,497,500,507,515,529,534,541,542,543,544,545,546,547,548,552,553,555,556,557,558,559,578,579,581,582,585,586,587],"tindex":"c9a8aa3a-3e3d-11e6-9817-dd7801985964","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:116","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getFieldAdapter(com.google.gson.Gson gson, java.lang.reflect.Field field, com.google.gson.reflect.TypeToken<?> fieldType) {\n    if (field.isSynthetic()) {\n        {\n            com.google.gson.annotations.JsonAdapter com.google.gson.annotations.JsonAdapter = field.getAnnotation(com.google.gson.annotations.JsonAdapter.com.google.gson.annotations.JsonAdapter.java.lang.Class);\n            if (annotation != null) {\n                com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, gson, fieldType, annotation);\n                if (adapter != null)\n                    return adapter;\n                \n            } \n            return gson.getAdapter(fieldType);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"c9a8aa3b-3e3d-11e6-9817-799ca302c26e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.lang.Boolean.valueOf(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c9a8aa3c-3e3d-11e6-9817-41ef8b840951","method":{"position":"com.google.gson.internal.bind.TypeAdapters:635","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.util.Locale value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:649","type":"CtFieldReadImpl","sourcecode":"prettyPrinting"},"failures":[19,593,594,595,596,597,598,30,34,61,85,96,102,215,250,253,319,330,335,338,345,347,350,400,404,414,426,427,432,451,468,478,480,544,578],"tindex":"c9a8d14d-3e3d-11e6-9817-9d93527775a3","method":{"position":"com.google.gson.stream.JsonWriter:447","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value) {\n                {\n                    writeDeferredName();\n                    beforeValue(false);\n                    java.io.Writer.write((value ? \"true\" : \"false\"));\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prettyPrinting":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:649","type":"CtFieldReadImpl","sourcecode":"prettyPrinting"},"failures":[],"tindex":"c9a8d14e-3e3d-11e6-9817-65d862d1f95e","method":{"position":"com.google.gson.stream.JsonWriter:447","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value) {\n                {\n                    writeDeferredName();\n                    beforeValue(false);\n                    java.io.Writer.write((value ? \"true\" : \"false\"));\n                    return com.google.gson.stream.JsonWriter.this;\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.io.IOException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prettyPrinting":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"c9a8d14f-3e3d-11e6-9817-03bec1ee52ba","method":{"position":"com.google.gson.JsonPrimitive:333","type":"CtMethodImpl","sourcecode":"private static boolean isIntegral(com.google.gson.JsonPrimitive primitive) {\n    if ((primitive.java.lang.Object) instanceof java.lang.Number) {\n        java.lang.Number java.lang.Number = ((java.lang.Number)(primitive.java.lang.Object));\n        return ((((number instanceof java.math.BigInteger) || (number instanceof java.lang.Long)) || (number instanceof java.lang.Integer)) || (number instanceof java.lang.Short)) || (number instanceof java.lang.Byte);\n    } \n    return false;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"primitive"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"c9a8d150-3e3d-11e6-9817-c980a2b7d1ed","method":{"position":"com.google.gson.internal.bind.TypeAdapters:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return ((short)(in.nextInt()));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:213","type":"CtBinaryOperatorImpl","sourcecode":"(indent.length()) == 0"},"failures":[],"tindex":"c9a8f861-3e3d-11e6-9817-4723cf1db1cb","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if ((json.length()) == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[75,79,556],"tindex":"c9a8f862-3e3d-11e6-9817-491dfb522555","method":{"position":"com.google.gson.FieldNamingPolicy:113","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \"-\").toLowerCase();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:181","type":"CtBinaryOperatorImpl","sourcecode":"(type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))"},"failures":[],"tindex":"c9a91f73-3e3d-11e6-9817-0dae7036cc74","method":{"position":"com.google.gson.internal.$Gson$Types:65","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type componentType) {\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(componentType);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.String.class":"componentType","type":"componentType"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:364","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_END_ARRAY)"},"failures":[],"tindex":"c9a91f74-3e3d-11e6-9817-093bf1a8ad94","method":{"position":"com.google.gson.GsonBuilder:423","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int dateStyle, int timeStyle) {\n    if (timeStyle == dateStyle) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.int = dateStyle;\n            com.google.gson.GsonBuilder.this.int = timeStyle;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"timeStyle","com.google.gson.stream.JsonReader.PEEKED_END_ARRAY":"dateStyle"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"c9a94685-3e3d-11e6-9817-e91ac0fab100","method":{"position":"com.google.gson.internal.bind.TypeAdapters:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Class read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else {\n        throw new java.lang.UnsupportedOperationException(\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\");\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"c9a94686-3e3d-11e6-9817-fdd0cb8940be","method":{"position":"com.google.gson.Gson:278","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[220,289,588,589],"tindex":"c9a94687-3e3d-11e6-9817-6969bd2d97a7","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:199","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.TypeVariable)"},"failures":[],"tindex":"c9a96d98-3e3d-11e6-9817-a59aeed9f54b","method":{"position":"com.google.gson.reflect.TypeToken:122","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.reflect.Type from) {\n    if (!(from instanceof java.lang.reflect.TypeVariable)) {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (java.lang.reflect.Type.equals(from)) {\n                return true;\n            } \n            if ((java.lang.reflect.Type) instanceof java.lang.Class<?>) {\n                return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from));\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.ParameterizedType) {\n                return com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.GenericArrayType) {\n                return (java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from))) && (com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))));\n            } else {\n                throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class.java.lang.Class.java.lang.Class, java.lang.reflect.ParameterizedType.java.lang.reflect.ParameterizedType.java.lang.Class, java.lang.reflect.GenericArrayType.java.lang.reflect.GenericArrayType.java.lang.Class);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c9a96d99-3e3d-11e6-9817-032077338a9f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[289,588],"tindex":"c9a96d9a-3e3d-11e6-9817-89180ee54913","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"c9a96d9b-3e3d-11e6-9817-bb973c291d00","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:45","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.TypeAdapter<T>;\n    java.lang.reflect.Type java.lang.reflect.Type = getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, value);\n    if (runtimeType != (java.lang.reflect.Type)) {\n        com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(runtimeType));\n        if (!(runtimeTypeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = runtimeTypeAdapter;\n        } else if (!((com.google.gson.TypeAdapter<T>) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = com.google.gson.TypeAdapter<T>;\n        } else {\n            chosen = runtimeTypeAdapter;\n        }\n    } \n    chosen.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:316","type":"CtBinaryOperatorImpl","sourcecode":"(com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))"},"failures":[],"tindex":"c9a994ac-3e3d-11e6-9817-a9e7292deebf","method":{"position":"com.google.gson.JsonArray:92","type":"CtMethodImpl","sourcecode":"public boolean remove(com.google.gson.JsonElement element) {\n    return java.util.List<com.google.gson.JsonElement>.remove(element);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"other":"element","this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonElement:87","type":"CtInvocationImpl","sourcecode":"isJsonObject()"},"failures":[],"tindex":"c9a994ad-3e3d-11e6-9817-ab1388678153","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    boolean boolean = writer.isLenient();\n    writer.setLenient(true);\n    boolean boolean = writer.isHtmlSafe();\n    writer.setHtmlSafe(boolean);\n    boolean boolean = writer.getSerializeNulls();\n    writer.setSerializeNulls(boolean);\n    try {\n        com.google.gson.internal.Streams.write(jsonElement, writer);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } finally {\n        writer.setLenient(oldLenient);\n        writer.setHtmlSafe(oldHtmlSafe);\n        writer.setSerializeNulls(oldSerializeNulls);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonPrimitive:176","type":"CtInvocationImpl","sourcecode":"isNumber()"},"failures":[],"tindex":"c9a994ae-3e3d-11e6-9817-8dac08f27884","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    boolean boolean = writer.isLenient();\n    writer.setLenient(true);\n    boolean boolean = writer.isHtmlSafe();\n    writer.setHtmlSafe(boolean);\n    boolean boolean = writer.getSerializeNulls();\n    writer.setSerializeNulls(boolean);\n    try {\n        com.google.gson.internal.Streams.write(jsonElement, writer);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } finally {\n        writer.setLenient(oldLenient);\n        writer.setHtmlSafe(oldHtmlSafe);\n        writer.setSerializeNulls(oldSerializeNulls);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1531","type":"CtBinaryOperatorImpl","sourcecode":"(c >= 'A') && (c <= 'F')"},"failures":[],"tindex":"c9a994af-3e3d-11e6-9817-073480a22cbc","method":{"position":"com.google.gson.stream.JsonReader:1101","type":"CtMethodImpl","sourcecode":"private void skipQuotedValue(char quote) throws java.io.IOException {\n    if ((quote >= 'A') && (c <= 'F')) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467234025140/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            do {\n                int int = int;\n                int int = int;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        return ;\n                    } else if (c == '\\\\') {\n                        int = p;\n                        readEscapeCharacter();\n                        p = int;\n                        l = int;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                int = p;\n            } while (fillBuffer(1) );\n            throw syntaxError(\"Unterminated string\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":35,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}