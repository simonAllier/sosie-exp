{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":31,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":168,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":242,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":172,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":136,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":38,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":283,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":250,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":293,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":367,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":375,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":159,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":216,"com.google.gson.functional.ObjectTest.testSingletonLists":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":361,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":376,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":50,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":370,"com.google.gson.stream.JsonWriterTest.testStrings":321,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":90,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":145,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":257,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":1,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":33,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":337,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":111,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":296,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":235,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":5,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":309,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":234,"com.google.gson.functional.EnumTest.testEnumCaseMapping":152,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":12,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":369,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":301,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":142,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":110,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":127,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":190,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":51,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":219,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":384,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":267,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":307,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":48,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":261,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":325,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":157,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":363,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":205,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":63,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":60,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":186,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":262,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":131,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":231,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":348,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":212,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":76,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":241,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":64,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":175,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":180,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":312,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":333,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":53,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":103,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":78,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":143,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":134,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":276,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":360,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":47,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":160,"com.google.gson.functional.EnumTest.testEnumSet":365,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":118,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":77,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":377,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":258,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":4,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":117,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":16,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":304,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":364,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":133,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":330,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":344,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":146,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":209,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":331,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":272,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":193,"com.google.gson.functional.MapTest.testSerializeMaps":228,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":281,"com.google.gson.functional.MapTest.testComplexKeysSerialization":239,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":200,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":150,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":269,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":223,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":299,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":317,"com.google.gson.functional.MapTest.testStringKeyDeserialization":240,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":197,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":82,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":70,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":163,"com.google.gson.functional.PrettyPrintingTest.testMap":297,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":286,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":352,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":0,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":199,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":372,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":357,"com.google.gson.functional.CollectionTest.testQueueSerialization":383,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":319,"com.google.gson.functional.MapTest.testMapOfMapSerialization":233,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":59,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":290,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":25,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":61,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":91,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":169,"com.google.gson.functional.FieldNamingTest.testIdentity":282,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":79,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":17,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":263,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":40,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":96,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":247,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":6,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":44,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":371,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":244,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":389,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":24,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":358,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":69,"com.google.gson.functional.MapTest.testMapSubclassSerialization":227,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":123,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":154,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":9,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":368,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":116,"com.google.gson.functional.EnumTest.testEnumSubclass":148,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":2,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":256,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":43,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":81,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":246,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":245,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":101,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":189,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":388,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":362,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":249,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":225,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":188,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":173,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":182,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":268,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":86,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":251,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":28,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":195,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":271,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":170,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":156,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":68,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":140,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":273,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":315,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":52,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":201,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":26,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":55,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":23,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":130,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":185,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":359,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":302,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":224,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":387,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":108,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":229,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":221,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":217,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":167,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":345,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":165,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":353,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":99,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":243,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":298,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":314,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":141,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":88,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":222,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":311,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":65,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":129,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":278,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":147,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":285,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":153,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":72,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":295,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":318,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":135,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":11,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":335,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":80,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":107,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":381,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":32,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":350,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":214,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":83,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":151,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":346,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":386,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":289,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":161,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":84,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":215,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":211,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":105,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":66,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":73,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":328,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":220,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":366,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":274,"com.google.gson.functional.MapTest.testGeneralMapField":238,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":253,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":179,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":45,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":162,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":194,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":137,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":124,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":204,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":341,"com.google.gson.MixedStreamTest.testReadMixedStreamed":10,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":128,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":7,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":210,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":385,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":310,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":15,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":232,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":95,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":226,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":74,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":87,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":208,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":35,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":174,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":326,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":93,"com.google.gson.functional.ObjectTest.testNestedDeserialization":265,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":112,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":100,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":308,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":27,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":115,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":67,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":42,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":94,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":49,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":237,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":191,"com.google.gson.functional.MapTest.testInterfaceTypeMap":236,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":164,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":104,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":149,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":334,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":98,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":351,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":306,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":288,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":380,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":119,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":349,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":30,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":327,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":382,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":109,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":254,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":287,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":36,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":291,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":132,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":18,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":21,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":342,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":176,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":270,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":29,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":58,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":139,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":230,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":356,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":206,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":284,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":8,"com.google.gson.functional.MapTest.testRawMapSerialization":379,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":336,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":97,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":259,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":277,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":313,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":144,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":181,"com.google.gson.ObjectTypeAdapterTest.testSerialize":316,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":339,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":202,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":39,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":192,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":279,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":3,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":120,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":171,"com.google.gson.functional.MapTest.testMapWithQuotes":378,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":125,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":75,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":92,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":166,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":158,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":218,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":113,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":264,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":303,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":62,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":354,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":126,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":41,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":355,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":292,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":184,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":114,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":138,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":177,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":347,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":19,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":155,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":122,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":89,"com.google.gson.functional.ObjectTest.testNestedSerialization":260,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":329,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":54,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":203,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":207,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":275,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":213,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":323,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":324,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":322,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":255,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":71,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":106,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":13,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":34,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":373,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":187,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":46,"com.google.gson.functional.CollectionTest.testSetSerialization":294,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":85,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":300,"com.google.gson.functional.StringTest.testStringValueSerialization":374,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":37,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":22,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":178,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":57,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":196,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":332,"com.google.gson.stream.JsonWriterTest.testWrongTopLevelType":320,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":280,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":266,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":20,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":305,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":121,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":340,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":183},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:136","type":"CtInvocationImpl","sourcecode":"isJsonNull()"},"failures":[],"tindex":"7956b296-3e66-11e6-9751-3b13ccf98d2c","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:109","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonPrimitive"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"795727c7-3e66-11e6-9751-6903fdde04e8","method":{"position":"com.google.gson.reflect.TypeToken:283","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic final boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonPrimitive) {\n        {\n            return (o instanceof com.google.gson.reflect.TypeToken<?>) && (com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.Type, ((com.google.gson.reflect.TypeToken<?>)(o)).java.lang.reflect.Type));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"79574ed8-3e66-11e6-9751-d52566fa0036","method":{"position":"com.google.gson.JsonObject:186","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    return (o == (com.google.gson.JsonObject.this)) || ((o instanceof com.google.gson.JsonObject) && (((com.google.gson.JsonObject)(o)).com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.equals(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"79574ed9-3e66-11e6-9751-6906c274bf82","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"795775ea-3e66-11e6-9751-e9b6df81cbf0","method":{"position":"com.google.gson.internal.bind.TypeAdapters:744","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    out.value((value == null ? null : java.util.Map<T, java.lang.String>.get(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"795775eb-3e66-11e6-9751-9be7bcf604f6","method":{"position":"com.google.gson.internal.bind.TypeAdapters:72","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Class read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else {\n        throw new java.lang.UnsupportedOperationException(\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\");\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[317,318],"tindex":"795775ec-3e66-11e6-9751-118a5ac67b1d","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if (property != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"795775ed-3e66-11e6-9751-cb332020b03c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:736","type":"CtMethodImpl","sourcecode":"public T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.Map<java.lang.String, T>.get(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"79579cfe-3e66-11e6-9751-2d5081cfb625","method":{"position":"com.google.gson.internal.bind.TypeAdapters:367","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigDecimal read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigDecimal(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:54","type":"CtBinaryOperatorImpl","sourcecode":"runtimeType != (type)"},"failures":[],"tindex":"79579cff-3e66-11e6-9751-4b07dbc2f0a7","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:120","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic V remove(java.lang.Object key) {\n    if (key != key) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = removeInternalByKey(key);\n            return node != null ? node.V : null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"runtimeType":"key","type":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:198","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.TypeVariable"},"failures":[],"tindex":"79579d00-3e66-11e6-9751-11220520feb0","method":{"position":"com.google.gson.internal.$Gson$Types:54","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type ownerType, java.lang.reflect.Type rawType, java.lang.reflect.Type... typeArguments) {\n    return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(ownerType , rawType , typeArguments);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"ownerType"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[319,320,321,322,0,4,7,323,8,9,324,325,12,17,326,21,22,23,24,25,26,327,328,329,330,331,332,333,334,335,336,337,338,37,339,340,341,52,342,343,75,77,81,86,87,93,95,344,345,346,347,348,103,349,104,108,109,111,112,114,118,350,124,351,352,125,126,127,353,354,355,356,357,358,359,360,130,361,132,134,136,137,138,362,139,140,141,363,144,145,364,365,366,147,148,149,151,152,367,154,155,161,162,163,164,368,165,166,167,369,168,370,169,371,170,372,373,374,176,177,181,182,186,187,192,194,198,202,203,204,205,206,207,208,211,212,213,375,376,217,227,228,377,229,230,378,233,236,237,238,379,239,241,242,243,246,248,251,380,254,255,258,260,262,381,382,266,267,268,269,270,273,275,283,284,383,288,384,289,291,293,385,295,299,303,304,305,306,307,308,309,310,311,386,312,387,388,389],"tindex":"7957c411-3e66-11e6-9751-a7b56a412b04","method":{"position":"com.google.gson.stream.JsonWriter:413","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if (value != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            beforeValue(false);\n            string(value);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:350","type":"CtBinaryOperatorImpl","sourcecode":"ongoingCall != null"},"failures":[],"tindex":"7957c412-3e66-11e6-9751-eba5518719c3","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"ongoingCall":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[],"tindex":"7957c413-3e66-11e6-9751-6fdfad801226","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"7957eb24-3e66-11e6-9751-a78dfad0dcfa","method":{"position":"com.google.gson.internal.bind.TypeAdapters:680","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, com.google.gson.JsonElement value) throws java.io.IOException {\n    if ((value == null) || (value.isJsonNull())) {\n        out.nullValue();\n    } else if (value.isJsonPrimitive()) {\n        com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = value.getAsJsonPrimitive();\n        if (primitive.isNumber()) {\n            out.value(primitive.getAsNumber());\n        } else if (primitive.isBoolean()) {\n            out.value(primitive.getAsBoolean());\n        } else {\n            out.value(primitive.getAsString());\n        }\n    } else if (value.isJsonArray()) {\n        out.beginArray();\n        for (com.google.gson.JsonElement com.google.gson.JsonElement : value.getAsJsonArray()) {\n            write(out, e);\n        }\n        out.endArray();\n    } else if (value.isJsonObject()) {\n        out.beginObject();\n        for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> : value.getAsJsonObject().entrySet()) {\n            out.name(e.getKey());\n            write(out, e.getValue());\n        }\n        out.endObject();\n    } else {\n        throw new java.lang.IllegalArgumentException((\"Couldn't write \" + (value.getClass())));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7957eb25-3e66-11e6-9751-9938d7178461","method":{"position":"com.google.gson.internal.bind.TypeAdapters:348","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.toString(in.nextBoolean());\n    } \n    return in.nextString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:261","type":"CtBinaryOperatorImpl","sourcecode":"left != null"},"failures":[],"tindex":"7957eb26-3e66-11e6-9751-cf87444e5148","method":{"position":"com.google.gson.internal.LinkedTreeMap:401","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V> root) {\n    if (root != null) {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:123","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"79581237-3e66-11e6-9751-5b15bbc1ee45","method":{"position":"com.google.gson.internal.$Gson$Types:267","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type getSupertype(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.Class<?> supertype) {\n    com.google.gson.internal.$Gson$Preconditions.checkArgument(supertype.isAssignableFrom(contextRawType));\n    return com.google.gson.internal.$Gson$Types.resolve(context, contextRawType, com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, supertype));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"79581238-3e66-11e6-9751-831a768f11fc","method":{"position":"com.google.gson.internal.$Gson$Types:471","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.ParameterizedType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"79583949-3e66-11e6-9751-fb91f8b2c789","method":{"position":"com.google.gson.TreeTypeAdapter:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.JsonSerializer<T>) == null) {\n        delegate().write(out, value);\n        return ;\n    } \n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.JsonSerializer<T>.serialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonSerializationContext);\n    com.google.gson.internal.Streams.write(tree, out);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.Class<?>"},"failures":[],"tindex":"7958394a-3e66-11e6-9751-0d4e0b656eba","method":{"position":"com.google.gson.internal.$Gson$Types:93","type":"CtMethodImpl","sourcecode":"public static java.lang.reflect.Type canonicalize(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class) {\n        java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(type));\n        return c.isArray() ? new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(com.google.gson.internal.$Gson$Types.canonicalize(c.getComponentType())) : c;\n    } else if (type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(type));\n        return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(p.getOwnerType() , p.getRawType() , p.getActualTypeArguments());\n    } else if (type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(type));\n        return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(g.getGenericComponentType());\n    } else if (type instanceof java.lang.reflect.WildcardType) {\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(type));\n        return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(w.getUpperBounds() , w.getLowerBounds());\n    } else {\n        return type;\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"7958394b-3e66-11e6-9751-c536bcb3d9c1","method":{"position":"com.google.gson.JsonObject:186","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    return (o == (com.google.gson.JsonObject.this)) || ((o instanceof com.google.gson.JsonObject) && (((com.google.gson.JsonObject)(o)).com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.equals(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7958605c-3e66-11e6-9751-d529096fe6ae","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:512","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof java.util.Map.Entry) {\n        java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n        return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n    } \n    return false;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:618","type":"CtBinaryOperatorImpl","sourcecode":"(c == 'f') || (c == 'F')"},"failures":[],"tindex":"7958605d-3e66-11e6-9751-0549705545e1","method":{"position":"com.google.gson.stream.JsonReader:999","type":"CtMethodImpl","sourcecode":"private java.lang.String nextQuotedValue(char quote) throws java.io.IOException {\n    if ((quote == 'f') || (c == 'F')) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            while (true) {\n                int int = int;\n                int int = int;\n                int int = p;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        return builder.toString();\n                    } else if (c == '\\\\') {\n                        int = p;\n                        builder.append(buffer, start, ((p - start) - 1));\n                        builder.append(readEscapeCharacter());\n                        p = int;\n                        l = int;\n                        start = p;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                builder.append(buffer, start, (p - start));\n                int = p;\n                if (!(fillBuffer(1))) {\n                    throw syntaxError(\"Unterminated string\");\n                } \n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[],"tindex":"7958876e-3e66-11e6-9751-6fa8b2661044","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467251573296/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":25,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}