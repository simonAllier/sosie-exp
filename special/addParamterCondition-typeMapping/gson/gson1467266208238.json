{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":51,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":183,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":90,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":220,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":304,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":322,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":102,"com.google.gson.functional.PrimitiveTest.testShortSerialization":155,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":119,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":216,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":26,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":278,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":316,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":20,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":296,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":52,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":54,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":62,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":228,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":25,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":260,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":200,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":66,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":159,"com.google.gson.functional.ObjectTest.testSingletonLists":164,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":292,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":323,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":14,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":162,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":11,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":28,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":268,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":308,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":71,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":185,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":218,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":23,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":47,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":262,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":60,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":202,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":113,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":1,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":118,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":214,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":290,"com.google.gson.functional.EnumTest.testEnumCaseMapping":24,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":321,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":333,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":264,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":280,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":120,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":223,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":42,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":142,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":275,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":160,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":79,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":115,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":19,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":116,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":59,"com.google.gson.functional.MapTest.testGeneralMapField":95,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":243,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":188,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":105,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":203,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":297,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":93,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":8,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":110,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":130,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":154,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":269,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":149,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":173,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":212,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":107,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":136,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":3,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":7,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":63,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":306,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":111,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":215,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":146,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":288,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":140,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":312,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":74,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":161,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":179,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":291,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":240,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":310,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":287,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":50,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":237,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":265,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":78,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":177,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":186,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":100,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":147,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":213,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":258,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":178,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":244,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":6,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":314,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":30,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":132,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":33,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":153,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":46,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":123,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":36,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":65,"com.google.gson.functional.ObjectTest.testNullSerialization":170,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":49,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":295,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":94,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":129,"com.google.gson.functional.MapTest.testInterfaceTypeMap":92,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":286,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":106,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":205,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":125,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":201,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":22,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":217,"com.google.gson.functional.EnumTest.testEnumSet":18,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":169,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":208,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":37,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":68,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":270,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":84,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":211,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":174,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":0,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":35,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":17,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":58,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":209,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":150,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":166,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":38,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":124,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":182,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":257,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":315,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":43,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":232,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":263,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":303,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":127,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":167,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":57,"com.google.gson.functional.MapTest.testMapSerialization":89,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":234,"com.google.gson.functional.MapTest.testSerializeMaps":83,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":319,"com.google.gson.functional.MapTest.testComplexKeysSerialization":98,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":311,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":61,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":293,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":255,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":192,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":190,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":122,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":134,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":191,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":241,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":137,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":15,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":233,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":221,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":301,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":27,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":86,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":282,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":70,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":112,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":53,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":158,"com.google.gson.functional.MapTest.testRawMapSerialization":97,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":101,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":204,"com.google.gson.functional.PrettyPrintingTest.testMap":219,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":44,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":55,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":175,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":235,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":272,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":10,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":327,"com.google.gson.functional.CollectionTest.testQueueSerialization":56,"com.google.gson.functional.MapTest.testMapSerializationEmpty":99,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":283,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":121,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":13,"com.google.gson.functional.PrimitiveTest.testByteSerialization":152,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":245,"com.google.gson.functional.MapTest.testMapOfMapSerialization":88,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":331,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":138,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":108,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":143,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":196,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":76,"com.google.gson.functional.FieldNamingTest.testIdentity":320,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":324,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":251,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":317,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":39,"com.google.gson.functional.MapTest.testMapWithQuotes":87,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":236,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":273,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":29,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":163,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":67,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":77,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":2,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":231,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":271,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":325,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":141,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":199,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":5,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":195,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":284,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":305,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":31,"com.google.gson.functional.MapTest.testMapSubclassSerialization":82,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":157,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":225,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":145,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":279,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":254,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":206,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":307,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":298,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":34,"com.google.gson.functional.EnumTest.testEnumSubclass":21,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":144,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":274,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":12,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":128,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":103,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":281,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":309,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":16,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":69,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":32,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":242,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":299,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":48,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":238,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":184,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":230,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":75,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":4,"com.google.gson.functional.ObjectTest.testNestedSerialization":176,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":80,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":109,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":133,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":139,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":239,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":96,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":227,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":300,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":267,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":250,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":9,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":246,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":171,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":189,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":73,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":165,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":259,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":91,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":326,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":334,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":197,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":328,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":41,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":156,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":302,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":249,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":226,"com.google.gson.functional.CollectionTest.testSetSerialization":64,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":72,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":222,"com.google.gson.functional.StringTest.testStringValueSerialization":329,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":330,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":193,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":131,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":168,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":256,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":135,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":194,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":253,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":151,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":289,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":313,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":277,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":285,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":318,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":187,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":224,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":81,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":85,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":126,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":117,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":114,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":266,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":210,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":40,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":172,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":180,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":294,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":45,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":332,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":207,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":276,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":247},"transformations":[{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"6ed9e755-3e87-11e6-9c4e-a73ffd76f00a","method":{"position":"com.google.gson.Gson:576","type":"CtMethodImpl","sourcecode":"public void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (src == null) {\n        {\n            try {\n                com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                toJson(src, typeOfSrc, jsonWriter);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"6eda5c86-3e87-11e6-9c4e-416bee0267ce","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:198","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Map<K, V> map) throws java.io.IOException {\n    if (map == null) {\n        out.nullValue();\n        return ;\n    } \n    if (!(boolean)) {\n        out.beginObject();\n        for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n            out.name(java.lang.String.valueOf(entry.getKey()));\n            com.google.gson.TypeAdapter<V>.write(out, entry.getValue());\n        }\n        out.endObject();\n        return ;\n    } \n    boolean boolean = false;\n    java.util.List<com.google.gson.JsonElement> java.util.List<com.google.gson.JsonElement> = new java.util.ArrayList<com.google.gson.JsonElement>(map.size());\n    java.util.List<V> java.util.List<V> = new java.util.ArrayList<V>(map.size());\n    for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n        com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.TypeAdapter<K>.toJsonTree(entry.getKey());\n        keys.add(keyElement);\n        values.add(entry.getValue());\n        hasComplexKeys |= (keyElement.isJsonArray()) || (keyElement.isJsonObject());\n    }\n    if (hasComplexKeys) {\n        out.beginArray();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            out.beginArray();\n            com.google.gson.internal.Streams.write(keys.get(i), out);\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n            out.endArray();\n        }\n        out.endArray();\n    } else {\n        out.beginObject();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            com.google.gson.JsonElement com.google.gson.JsonElement = keys.get(i);\n            out.name(keyToString(keyElement));\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n        }\n        out.endObject();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[],"tindex":"6edbbc17-3e87-11e6-9c4e-6bd5b7ddb78f","method":{"position":"com.google.gson.JsonObject:67","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(java.lang.String property) {\n    if (property == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.remove(property);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"property"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:64","type":"CtBinaryOperatorImpl","sourcecode":"(in.peek()) == (com.google.gson.stream.JsonToken.NULL)"},"failures":[],"tindex":"6edbe328-3e87-11e6-9c4e-7517f7f22b87","method":{"position":"com.google.gson.internal.LinkedTreeMap:207","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if ((b.peek()) == a) {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"b","com.google.gson.stream.JsonToken.NULL":"a"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"6edc3149-3e87-11e6-9c4e-b5ebf91e4fd6","method":{"position":"com.google.gson.Gson:468","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src) {\n    if (src == null) {\n        return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    return toJsonTree(src, src.getClass());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"6edc585a-3e87-11e6-9c4e-eb980be2b210","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if ((src != null) && (!(\"\".equals(datePattern.trim())))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.get();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:179","type":"CtBinaryOperatorImpl","sourcecode":"a instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"6edc7f6b-3e87-11e6-9c4e-ffdb981bd9d7","method":{"position":"com.google.gson.internal.$Gson$Types:394","type":"CtMethodImpl","sourcecode":"static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type context, java.lang.Class<?> contextRawType, java.lang.reflect.TypeVariable<?> unknown) {\n    java.lang.Class<?> java.lang.Class<?> = com.google.gson.internal.$Gson$Types.declaringClassOf(unknown);\n    if (declaredByRaw == null) {\n        return unknown;\n    } \n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getGenericSupertype(context, contextRawType, declaredByRaw);\n    if (declaredBy instanceof java.lang.reflect.ParameterizedType) {\n        int int = com.google.gson.internal.$Gson$Types.indexOf(declaredByRaw.getTypeParameters(), unknown);\n        return ((java.lang.reflect.ParameterizedType)(declaredBy)).getActualTypeArguments()[index];\n    } \n    return unknown;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"context"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:198","type":"CtBinaryOperatorImpl","sourcecode":"out == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334],"tindex":"6edc7f6c-3e87-11e6-9c4e-490ebceec3c2","method":{"position":"com.google.gson.Gson:644","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer writer) throws java.io.IOException {\n    if (writer == null) {\n        {\n            if (boolean) {\n                writer.write(com.google.gson.Gson.com.google.gson.Gson.java.lang.String);\n            } \n            com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(writer);\n            if (boolean) {\n                jsonWriter.setIndent(\"  \");\n            } \n            jsonWriter.setSerializeNulls(boolean);\n            return jsonWriter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"out":"writer"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:547","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\u2029'"},"failures":[],"tindex":"6edd42bd-3e87-11e6-9c4e-afac8c3ee0bd","method":{"position":"com.google.gson.stream.JsonReader:755","type":"CtMethodImpl","sourcecode":"private boolean isLiteral(char c) throws java.io.IOException {\n    if (c == '\\u2029') {\n        {\n            switch (c) {\n                case '/' :\n                case '\\\\' :\n                case ';' :\n                case '#' :\n                case '=' :\n                    checkLenient();\n                case '{' :\n                case '}' :\n                case '[' :\n                case ']' :\n                case ':' :\n                case ',' :\n                case ' ' :\n                case '\\t' :\n                case '\\f' :\n                case '\\r' :\n                case '\\n' :\n                    return false;\n                default :\n                    return true;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:602","type":"CtUnaryOperatorImpl","sourcecode":"!(lenient)"},"failures":[],"tindex":"6edd42be-3e87-11e6-9c4e-b5dda2a841e5","method":{"position":"com.google.gson.internal.LinkedTreeMap:310","type":"CtMethodImpl","sourcecode":"private void rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V> unbalanced, boolean insert) {\n    if (!insert) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            for (com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = unbalanced ; node != null ; node = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>) {\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                int int = left != null ? left.int : 0;\n                int int = right != null ? right.int : 0;\n                int int = leftHeight - rightHeight;\n                if (delta == (-2)) {\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = right.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    int int = rightRight != null ? rightRight.int : 0;\n                    int int = rightLeft != null ? rightLeft.int : 0;\n                    int int = rightLeftHeight - rightRightHeight;\n                    if ((rightDelta == (-1)) || ((rightDelta == 0) && (!insert))) {\n                        rotateLeft(node);\n                    } else {\n                        assert rightDelta == 1;\n                        rotateRight(right);\n                        rotateLeft(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 2) {\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = left.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n                    int int = leftRight != null ? leftRight.int : 0;\n                    int int = leftLeft != null ? leftLeft.int : 0;\n                    int int = leftLeftHeight - leftRightHeight;\n                    if ((leftDelta == 1) || ((leftDelta == 0) && (!insert))) {\n                        rotateRight(node);\n                    } else {\n                        assert leftDelta == (-1);\n                        rotateLeft(left);\n                        rotateRight(node);\n                    }\n                    if (insert) {\n                        break;\n                    } \n                } else if (delta == 0) {\n                    node.int = leftHeight + 1;\n                    if (insert) {\n                        break;\n                    } \n                } else {\n                    assert (delta == (-1)) || (delta == 1);\n                    node.int = (java.lang.Math.max(leftHeight, rightHeight)) + 1;\n                    if (!insert) {\n                        break;\n                    } \n                }\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"lenient":"insert"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:51","type":"CtBinaryOperatorImpl","sourcecode":"(in.peek()) == (com.google.gson.stream.JsonToken.NULL)"},"failures":[],"tindex":"6eddb7ef-3e87-11e6-9c4e-dfe209602327","method":{"position":"com.google.gson.Gson:510","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src) {\n    if ((src.peek()) == src) {\n        {\n            if (src == null) {\n                return toJson(com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull);\n            } \n            return toJson(src, src.getClass());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"src","com.google.gson.stream.JsonToken.NULL":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:168","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.ParameterizedType)"},"failures":[],"tindex":"6ede7b40-3e87-11e6-9c4e-c387f32e5cc2","method":{"position":"com.google.gson.internal.LinkedTreeMap:481","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"rawtypes\")\n@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (!(o instanceof java.lang.reflect.ParameterizedType)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (o instanceof java.util.Map.Entry) {\n                java.util.Map.Entry java.util.Map.Entry = ((java.util.Map.Entry)(o));\n                return ((K) == null ? (other.getKey()) == null : K.equals(other.getKey())) && ((V) == null ? (other.getValue()) == null : V.equals(other.getValue()));\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:608","type":"CtBinaryOperatorImpl","sourcecode":"(!(lenient)) && (!root)"},"failures":[],"tindex":"6edea251-3e87-11e6-9c4e-edaaec7ad4c0","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if ((!lenient) && (!lenient)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"root":"lenient","lenient":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[],"tindex":"6edea252-3e87-11e6-9c4e-f984f7c58d11","method":{"position":"com.google.gson.Gson:591","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic void toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    if (src == src) {\n        {\n            com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = getAdapter(com.google.gson.reflect.TypeToken.get(typeOfSrc));\n            boolean boolean = writer.isLenient();\n            writer.setLenient(true);\n            boolean boolean = writer.isHtmlSafe();\n            writer.setHtmlSafe(boolean);\n            boolean boolean = writer.getSerializeNulls();\n            writer.setSerializeNulls(boolean);\n            try {\n                ((com.google.gson.TypeAdapter<java.lang.Object>)(adapter)).write(writer, src);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            } finally {\n                writer.setLenient(oldLenient);\n                writer.setHtmlSafe(oldHtmlSafe);\n                writer.setSerializeNulls(oldSerializeNulls);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"src","com.google.gson.LongSerializationPolicy.DEFAULT":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"6edec963-3e87-11e6-9c4e-7f9742989155","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:817","type":"CtVariableReadImpl","sourcecode":"isEmpty"},"failures":[],"tindex":"6edec964-3e87-11e6-9c4e-19ec0b9a6d96","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:62","type":"CtMethodImpl","sourcecode":"static boolean excludeField(java.lang.reflect.Field f, boolean serialize, com.google.gson.internal.Excluder excluder) {\n    if (serialize) {\n        {\n            return (!(excluder.excludeClass(f.getType(), serialize))) && (!(excluder.excludeField(f, serialize)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467265933968/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"serialize"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":16,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}