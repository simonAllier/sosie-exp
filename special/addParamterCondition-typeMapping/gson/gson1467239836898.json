{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":32,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":393,"com.google.gson.functional.StringTest.testStringValueDeserialization":391,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":63,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":193,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":331,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":154,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":255,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":551,"com.google.gson.MixedStreamTest.testWriteLenient":26,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":409,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":514,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":340,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":35,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":570,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":512,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":587,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":202,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":375,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":456,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":382,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":163,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":70,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":290,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":462,"com.google.gson.functional.ObjectTest.testSingletonLists":510,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":332,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":459,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":147,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":394,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":249,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":359,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":592,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":350,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":529,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":15,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":205,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":122,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":407,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":47,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":194,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":595,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":488,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":81,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":139,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":608,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":487,"com.google.gson.functional.EnumTest.testEnumCaseMapping":374,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":92,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":392,"com.google.gson.functional.JsonTreeTest.testToJsonTree":53,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":138,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":600,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":353,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":46,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":296,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":310,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":430,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":149,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":327,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":464,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":74,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":580,"com.google.gson.functional.ObjectTest.testNullDeserialization":541,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":553,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":404,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":523,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":91,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":215,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":155,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":530,"com.google.gson.JsonArrayTest.testEqualsOnEmptyArray":1,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":75,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":606,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":136,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":538,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":90,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":380,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":301,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":354,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":220,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":445,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":219,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":349,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":199,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":178,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":0,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":226,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":427,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":542,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":20,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":176,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":191,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":410,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":480,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":272,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":324,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":453,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":235,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":501,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":200,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":416,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":192,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":421,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":537,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":118,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":518,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":615,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":159,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":262,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":497,"com.google.gson.metrics.PerformanceTest.testDummy":77,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":460,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":277,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":288,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":98,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":237,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":356,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":503,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":338,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":563,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":95,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":326,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":135,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":2,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":556,"com.google.gson.functional.CollectionTest.testSetDeserialization":586,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":383,"com.google.gson.functional.EnumTest.testEnumSet":365,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":522,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":612,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":183,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":289,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":236,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":315,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":476,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":531,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":5,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":80,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":196,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":97,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":207,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":364,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":603,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":208,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":152,"com.google.gson.functional.MapTest.testHashMapDeserialization":471,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":576,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":336,"com.google.gson.MixedStreamTest.testReadNulls":87,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":113,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":119,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":31,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":263,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":363,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":449,"com.google.gson.functional.MapTest.testSortedMap":491,"com.google.gson.functional.MapTest.testMapSerialization":486,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":112,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":189,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":559,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":433,"com.google.gson.functional.MapTest.testSerializeMaps":60,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":568,"com.google.gson.functional.MapTest.testComplexKeysSerialization":498,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":611,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":502,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":440,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":372,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":555,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":11,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":275,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":360,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":370,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":71,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":598,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":257,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":540,"com.google.gson.functional.MapTest.testStringKeyDeserialization":500,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":437,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":241,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":222,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":158,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":504,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":153,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":386,"com.google.gson.functional.PrettyPrintingTest.testMap":596,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":573,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":33,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":306,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":361,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":78,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":439,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":397,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":401,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":21,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":321,"com.google.gson.functional.MapTest.testMapSerializationEmpty":499,"com.google.gson.functional.CollectionTest.testQueueSerialization":577,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":184,"com.google.gson.functional.MapTest.testMapOfMapSerialization":485,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":175,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":328,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":583,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":186,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":250,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":395,"com.google.gson.functional.FieldNamingTest.testIdentity":569,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":238,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":100,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":543,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":37,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":52,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":261,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":509,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":141,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":82,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":40,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":396,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":181,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":506,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":342,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":618,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":317,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":323,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":352,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":468,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":218,"com.google.gson.functional.MapTest.testMapSubclassSerialization":473,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":295,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":377,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":614,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":23,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":120,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":173,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":388,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":233,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":305,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":411,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":358,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":4,"com.google.gson.functional.EnumTest.testEnumSubclass":368,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":195,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":16,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":527,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":140,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":132,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":201,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":240,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":270,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":143,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":508,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":179,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":507,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":42,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":429,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":617,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":185,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":521,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":177,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":260,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":345,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":511,"com.google.gson.MixedStreamTest.testWriteNulls":24,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":470,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":428,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":414,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":423,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":286,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":554,"com.google.gson.CommentsTest.testParseComments":616,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":245,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":465,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":513,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":108,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":198,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":435,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":558,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":399,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":490,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":285,"com.google.gson.MixedStreamTest.testReadInvalidState":85,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":379,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":293,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":217,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":347,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":560,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":151,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":441,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":105,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":168,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":212,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":330,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":426,"com.google.gson.functional.MapTest.testMapDeserialization":479,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":325,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":601,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":469,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":461,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":282,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":478,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":10,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":55,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":276,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":51,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":369,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":303,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":528,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":544,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":265,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":389,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":43,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":311,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":292,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":274,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":505,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":489,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":597,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":66,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":351,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":137,"com.google.gson.functional.PrimitiveTest.testShortSerialization":216,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":247,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":57,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":204,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":610,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":174,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":203,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":150,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":316,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":565,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":367,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":76,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":572,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":376,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":474,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":167,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":224,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":593,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":412,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":339,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":467,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":89,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":231,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":225,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":259,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":239,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":281,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":545,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":68,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":298,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":210,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":455,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":180,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":242,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":549,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":517,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":373,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":267,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":613,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":312,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":581,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":384,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":243,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":8,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":19,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":56,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":157,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":17,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":452,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":58,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":334,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":44,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":574,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":144,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":211,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":182,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":228,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":109,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":9,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":366,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":116,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":561,"com.google.gson.functional.MapTest.testGeneralMapField":495,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":515,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":420,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":230,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":133,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":385,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":434,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":341,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":493,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":299,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":444,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":206,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":73,"com.google.gson.MixedStreamTest.testReadMixedStreamed":88,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":313,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":481,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":83,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":451,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":588,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":458,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":187,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":609,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":329,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":482,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":254,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":472,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":229,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":246,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":448,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":125,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":13,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":170,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":18,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":415,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":101,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":297,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":582,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":466,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":252,"com.google.gson.functional.ObjectTest.testNestedDeserialization":550,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":284,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":535,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":114,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":41,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":607,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":227,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":107,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":256,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":398,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":483,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":287,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":214,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":266,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":39,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":413,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":591,"com.google.gson.functional.ObjectTest.testNullSerialization":524,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":269,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":253,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":475,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":142,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":494,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":431,"com.google.gson.functional.MapTest.testInterfaceTypeMap":492,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":387,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":279,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":145,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":371,"com.google.gson.MixedStreamTest.testReadClosed":86,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":273,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":390,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":300,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":605,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":161,"com.google.gson.MixedStreamTest.testWriteClosed":28,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":115,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":579,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":280,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":355,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":516,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":291,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":278,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":30,"com.google.gson.stream.JsonWriterTest.testLongs":12,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":106,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":547,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":348,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":283,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":519,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":578,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":126,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":190,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":128,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":271,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":584,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":335,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":102,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":232,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":166,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":50,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":308,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":417,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":557,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":29,"com.google.gson.functional.CollectionTest.testQueueDeserialization":594,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":172,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":188,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":403,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":111,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":127,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":346,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":61,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":539,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":320,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":446,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":548,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":571,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":22,"com.google.gson.functional.MapTest.testRawMapSerialization":496,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":589,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":333,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":264,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":533,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":564,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":59,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":65,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":67,"com.google.gson.functional.PrimitiveTest.testByteSerialization":213,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":357,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":422,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":34,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":442,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":156,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":36,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":432,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":566,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":6,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":79,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":400,"com.google.gson.functional.MapTest.testMapWithQuotes":484,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":164,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":307,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":402,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":234,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":450,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":251,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":221,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":304,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":381,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":463,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":3,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":546,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":602,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":197,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":318,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":526,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":438,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":520,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":343,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":309,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":38,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":124,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":319,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":209,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":49,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":585,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":425,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":48,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":344,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":418,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":268,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":103,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":129,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":378,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":362,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":146,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":294,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":248,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":532,"com.google.gson.JsonObjectTest.testAddingStringProperties":72,"com.google.gson.functional.ObjectTest.testNestedSerialization":534,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":110,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":160,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":406,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":443,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":447,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":62,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":562,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":454,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":27,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":84,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":99,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":525,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":223,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":45,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":457,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":322,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":93,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":162,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":619,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":302,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":536,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":123,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":405,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":54,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":134,"com.google.gson.functional.CollectionTest.testSetSerialization":590,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":244,"com.google.gson.functional.StringTest.testStringValueSerialization":408,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":599,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":130,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":258,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":575,"com.google.gson.MixedStreamTest.testWriteInvalidState":25,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":419,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":64,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":165,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":171,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":436,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":314,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":567,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":552,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":69,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":104,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":604,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":7,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":337,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":131,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":477,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":94,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":424},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[0,1,2],"tindex":"084d3bbb-3e4a-11e6-9539-f97d4d8214a1","method":{"position":"com.google.gson.JsonArray:329","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    if (o instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o == (com.google.gson.JsonArray.this)) || ((o instanceof com.google.gson.JsonArray) && (((com.google.gson.JsonArray)(o)).java.util.List<com.google.gson.JsonElement>.equals(java.util.List<com.google.gson.JsonElement>)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"o"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.reflect.TypeToken:199","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"084d89dc-3e4a-11e6-9539-3bbcbf6564b7","method":{"position":"com.google.gson.Gson:773","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.io.Reader json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            T T = ((T)(fromJson(jsonReader, typeOfT)));\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return object;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"084d89dd-3e4a-11e6-9539-8f3195106122","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[3,4,5,6,7,8,9,10,11],"tindex":"084db0ee-3e4a-11e6-9539-93314461636d","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if (array != null) {\n        {\n            if (array == null) {\n                out.nullValue();\n                return ;\n            } \n            out.beginArray();\n            for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n                E E = ((E)(java.lang.reflect.Array.get(array, i)));\n                com.google.gson.TypeAdapter<E>.write(out, value);\n            }\n            out.endArray();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"array"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:153","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.STRING)) && (token != (com.google.gson.stream.JsonToken.NUMBER))"},"failures":[],"tindex":"084db0ef-3e4a-11e6-9539-c96e56d1f083","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:137","type":"CtMethodImpl","sourcecode":"private void expect(com.google.gson.stream.JsonToken expected) throws java.io.IOException {\n    if ((expected != expected) && (token != expected)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if ((peek()) != expected) {\n                throw new java.lang.IllegalStateException((((\"Expected \" + expected) + \" but was \") + (peek())));\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"expected","token":"expected","com.google.gson.stream.JsonToken.NUMBER":"expected"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[12,13,14,15,16,17,18,19,20],"tindex":"084db0f0-3e4a-11e6-9539-c79d6a90f2c2","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:107","type":"CtBinaryOperatorImpl","sourcecode":"type instanceof java.lang.reflect.WildcardType"},"failures":[],"tindex":"084dd801-3e4a-11e6-9539-0d31bf705bf8","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (typeOfT instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            if (json == null) {\n                return null;\n            } \n            java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n            T T = ((T)(fromJson(reader, typeOfT)));\n            return target;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"084dd802-3e4a-11e6-9539-45fcac5add75","method":{"position":"com.google.gson.internal.bind.TypeAdapters:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    switch (jsonToken) {\n        case NULL :\n            in.nextNull();\n            return null;\n        case NUMBER :\n            return new com.google.gson.internal.LazilyParsedNumber(in.nextString());\n        default :\n            throw new com.google.gson.JsonSyntaxException((\"Expecting number, got: \" + jsonToken));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:542","type":"CtBinaryOperatorImpl","sourcecode":"replacement == null"},"failures":[],"tindex":"084dff13-3e4a-11e6-9539-9726b074022c","method":{"position":"com.google.gson.JsonObject:141","type":"CtMethodImpl","sourcecode":"public boolean has(java.lang.String memberName) {\n    if (memberName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.containsKey(memberName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1249","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_END_OBJECT)"},"failures":[],"tindex":"084dff14-3e4a-11e6-9539-01a0f5099e87","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:233","type":"CtMethodImpl","sourcecode":"private static int secondaryHash(int h) {\n    if (h == h) {\n        {\n            h ^= (h >>> 20) ^ (h >>> 12);\n            return (h ^ (h >>> 7)) ^ (h >>> 4);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"h","com.google.gson.stream.JsonReader.PEEKED_END_OBJECT":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:192","type":"CtInvocationImpl","sourcecode":"to.equals(from)"},"failures":[],"tindex":"084dff15-3e4a-11e6-9539-998bf8ff56b0","method":{"position":"com.google.gson.internal.$Gson$Types:511","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object o) {\n    return (o instanceof java.lang.reflect.GenericArrayType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl.this, ((java.lang.reflect.GenericArrayType)(o))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"o","to":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:123","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"084dff16-3e4a-11e6-9539-93398e03a434","method":{"position":"com.google.gson.internal.$Gson$Types:563","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.WildcardType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.WildcardTypeImpl.this, ((java.lang.reflect.WildcardType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"084e2627-3e4a-11e6-9539-1fc8aa4f2b5a","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n            java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n            com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"084e2628-3e4a-11e6-9539-6fe286d869a3","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"084e2629-3e4a-11e6-9539-8b683046d623","method":{"position":"com.google.gson.Gson:888","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"084e262a-3e4a-11e6-9539-7583406bbc7d","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:455","type":"CtBinaryOperatorImpl","sourcecode":"(typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)"},"failures":[],"tindex":"084e262b-3e4a-11e6-9539-6db5e80d8b20","method":{"position":"com.google.gson.internal.LinkedTreeMap:570","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if ((o instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[21],"tindex":"084e4d3c-3e4a-11e6-9539-1f60dd8190bd","method":{"position":"com.google.gson.JsonObject:100","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Boolean value) {\n    if (property != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"084e4d3d-3e4a-11e6-9539-15dd73eeb8ca","method":{"position":"com.google.gson.internal.bind.TypeAdapters:432","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuffer value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Preconditions:41","type":"CtUnaryOperatorImpl","sourcecode":"!condition"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,8,55,9,10,56,57,58,59,11,60,61,62,63,64,65,66,67,68],"tindex":"084e4d3e-3e4a-11e6-9539-e57e8b2c0bbf","method":{"position":"com.google.gson.stream.JsonWriter:268","type":"CtMethodImpl","sourcecode":"public final void setSerializeNulls(boolean serializeNulls) {\n    if (!serializeNulls) {\n        {\n            com.google.gson.stream.JsonWriter.this.boolean = serializeNulls;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"condition":"serializeNulls"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonParser:60","type":"CtBinaryOperatorImpl","sourcecode":"(!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.END_DOCUMENT))"},"failures":[],"tindex":"084e4d3f-3e4a-11e6-9539-41005bbb34a4","method":{"position":"com.google.gson.GsonBuilder:447","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type type, java.lang.Object typeAdapter) {\n    if ((!(typeAdapter.isJsonNull())) && ((typeAdapter.peek()) != typeAdapter)) {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument(((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.InstanceCreator<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if (typeAdapter instanceof com.google.gson.InstanceCreator<?>) {\n                java.util.Map<java.lang.reflect.Type, com.google.gson.InstanceCreator<?>>.put(type, ((com.google.gson.InstanceCreator)(typeAdapter)));\n            } \n            if ((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n                com.google.gson.reflect.TypeToken<?> com.google.gson.reflect.TypeToken<?> = com.google.gson.reflect.TypeToken.get(type);\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactoryWithMatchRawType(typeToken, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(type), ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"typeAdapter","jsonReader":"typeAdapter","element":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"084e7450-3e4a-11e6-9539-b3697b483e59","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:69","type":"CtMethodImpl","sourcecode":"private synchronized java.util.Date deserializeToDate(java.lang.String json) {\n    if (json != null) {\n        {\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException e) {\n                throw new com.google.gson.JsonSyntaxException(json , e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonParser:60","type":"CtBinaryOperatorImpl","sourcecode":"(!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.END_DOCUMENT))"},"failures":[],"tindex":"084e7451-3e4a-11e6-9539-196c794d836c","method":{"position":"com.google.gson.internal.$Gson$Types:471","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.ParameterizedType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"other","jsonReader":"other","element":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"084e7452-3e4a-11e6-9539-c58d4131f56e","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl","sourcecode":"src == null"},"failures":[69,70,71,21,72,52,65,73,74,75,76],"tindex":"084e7453-3e4a-11e6-9539-c54a24f903c3","method":{"position":"com.google.gson.internal.LinkedTreeMap:86","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean containsKey(java.lang.Object key) {\n    if (key == null) {\n        {\n            return (findByObject(key)) != null;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.reflect.TypeToken:166","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.Class<?>"},"failures":[],"tindex":"084e9b64-3e4a-11e6-9539-39e1f8babff8","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"084e9b65-3e4a-11e6-9539-ddbc403d7297","method":{"position":"com.google.gson.internal.bind.TypeAdapters:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    switch (jsonToken) {\n        case NULL :\n            in.nextNull();\n            return null;\n        case NUMBER :\n            return new com.google.gson.internal.LazilyParsedNumber(in.nextString());\n        default :\n            throw new com.google.gson.JsonSyntaxException((\"Expecting number, got: \" + jsonToken));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:218","type":"CtVariableReadImpl","sourcecode":"unlink"},"failures":[77,78,15,16,79,80,81,82,83,84,22,85,86,23,24,25,26,87,27,28,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,29,30,109,110,31,111,32,112,113,114,33,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,34,131,35,36,37,38,39,132,40,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,41,42,43,277,278,279,44,45,280,281,282,283,46,47,284,285,3,286,48,287,4,5,288,289,290,291,6,7,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,0,310,311,312,313,314,315,316,317,318,17,319,320,321,322,323,324,325,326,327,18,328,329,330,19,20,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,49,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,50,51,52,53,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,54,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,8,461,462,55,463,464,9,10,465,56,57,58,59,466,11,467,468,469,470,471,472,473,60,474,475,476,477,478,479,61,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,62,496,497,498,499,500,501,502,503,504,63,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,64,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619],"tindex":"084e9b66-3e4a-11e6-9539-45f3d5a4300a","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467239309348/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unlink":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":28,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}