{"failureDictionary":{"com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext":342,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":408,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":294,"com.google.gson.functional.StringTest.testStringValueDeserialization":672,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":133,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":513,"com.google.gson.JsonPrimitiveTest.testDeepCopy":402,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":550,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":486,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":268,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":638,"com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose":363,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":437,"com.google.gson.MixedStreamTest.testWriteLenient":461,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":615,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":11,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":421,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":253,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":263,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":614,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":518,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":109,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":318,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":226,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":493,"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":356,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":593,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":668,"com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails":344,"com.google.gson.functional.ObjectTest.testSingletonLists":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":91,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":110,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":295,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":481,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":698,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":432,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":193,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":656,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":557,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":626,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":20,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":520,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":639,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":680,"com.google.gson.DefaultDateTypeAdapterTest.testDatePattern":4,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":275,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":195,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":514,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":576,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":24,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":475,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":233,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":575,"com.google.gson.functional.EnumTest.testEnumCaseMapping":317,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":14,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":293,"com.google.gson.functional.JsonTreeTest.testToJsonTree":435,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":474,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":200,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":412,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":449,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":10,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":596,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":585,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":482,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":548,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":1,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":260,"com.google.gson.functional.ObjectTest.testNullDeserialization":632,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":170,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":678,"com.google.gson.JsonPrimitiveTest.testParsingStringAsBoolean":391,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":622,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":56,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":338,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":487,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":212,"com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities":353,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":231,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":328,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":629,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":332,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":224,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":102,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":410,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":190,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":525,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":524,"com.google.gson.JsonParserTest.testParseString":346,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":556,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":48,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":42,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":411,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":529,"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":7,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":143,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":218,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":90,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":501,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":438,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":511,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":571,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":452,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":309,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":547,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":247,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":365,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":598,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":131,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":49,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":612,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":512,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":139,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":217,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":18,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":291,"com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes":406,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":618,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":34,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":272,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":578,"com.google.gson.metrics.PerformanceTest.testDummy":454,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":561,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":248,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":163,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":472,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":427,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":580,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":599,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":94,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":419,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":85,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":469,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":327,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":597,"com.google.gson.functional.CollectionTest.testSetDeserialization":654,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":227,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":209,"com.google.gson.functional.EnumTest.testEnumSet":311,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":608,"com.google.gson.JsonStreamParserTest.testIterator":343,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":504,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":164,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":175,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":115,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":544,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":213,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":23,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":162,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":515,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":471,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":521,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":228,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":606,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":52,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":484,"com.google.gson.functional.MapTest.testHashMapDeserialization":565,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":650,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":553,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":292,"com.google.gson.MixedStreamTest.testReadNulls":462,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":534,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":65,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":302,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale":381,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":245,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":604,"com.google.gson.functional.MapTest.testSortedMap":577,"com.google.gson.functional.MapTest.testMapSerialization":120,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":67,"com.google.gson.internal.bind.JsonElementReaderTest.testObject":360,"com.google.gson.JsonPrimitiveTest.testByteEqualsShort":403,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":417,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":509,"com.google.gson.JsonPrimitiveTest.testByteEqualsBigInteger":392,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":587,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":106,"com.google.gson.functional.MapTest.testSerializeMaps":114,"com.google.gson.functional.MapTest.testComplexKeysSerialization":129,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":607,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":364,"com.google.gson.JsonPrimitiveTest.testLongEqualsBigInteger":394,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":415,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":150,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":172,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":688,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":287,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":684,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":601,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":687,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":198,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":334,"com.google.gson.internal.bind.JsonElementReaderTest.testWrongType":357,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":269,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":631,"com.google.gson.functional.MapTest.testStringKeyDeserialization":579,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":589,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":177,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":60,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":132,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":490,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":153,"com.google.gson.functional.PrettyPrintingTest.testMap":196,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":485,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":256,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":68,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":74,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":602,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":19,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":590,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":299,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":673,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":82,"com.google.gson.functional.MapTest.testMapSerializationEmpty":130,"com.google.gson.functional.CollectionTest.testQueueSerialization":257,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":335,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":505,"com.google.gson.functional.MapTest.testMapOfMapSerialization":119,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":40,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":549,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":652,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":45,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":323,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":183,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":369,"com.google.gson.functional.FieldNamingTest.testIdentity":107,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":296,"com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput":340,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":428,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":277,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":633,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":204,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":271,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":423,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":434,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":476,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":25,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":297,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":326,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":43,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":661,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":555,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":17,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":545,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":83,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":101,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":322,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":563,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":59,"com.google.gson.functional.MapTest.testMapSubclassSerialization":113,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":28,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":595,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":609,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":155,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":240,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":459,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":499,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":439,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":533,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":540,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":600,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":161,"com.google.gson.functional.EnumTest.testEnumSubclass":314,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":46,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":21,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":625,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":30,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":325,"com.google.gson.internal.bind.JsonElementReaderTest.testArray":354,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":517,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":176,"com.google.gson.JsonPrimitiveTest.testShortEqualsInteger":398,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":681,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":477,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":274,"com.google.gson.JsonPrimitiveTest.testByteEqualsLong":385,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":502,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":662,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":445,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":16,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":584,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":506,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":621,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":41,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":660,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":693,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":97,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":613,"com.google.gson.MixedStreamTest.testWriteNulls":339,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":564,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":145,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":610,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":141,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":171,"com.google.gson.CommentsTest.testParseComments":453,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":592,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":331,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":180,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":206,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":669,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":239,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":516,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":588,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":416,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":122,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":298,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSubTypeFirstAllowed":663,"com.google.gson.MixedStreamTest.testReadInvalidState":457,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":223,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":168,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":58,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":99,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":134,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":697,"com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose":355,"com.google.gson.JsonParserTest.testParseMixedArray":348,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale":382,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":33,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":591,"com.google.gson.JsonPrimitiveTest.testDoubleEqualsBigDecimal":387,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":236,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":370,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":37,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":321,"com.google.gson.JsonArrayTest.testRemove":380,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":88,"com.google.gson.functional.MapTest.testMapDeserialization":570,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":583,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":84,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":201,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":112,"com.google.gson.internal.bind.JsonElementReaderTest.testStringsFromNumbers":359,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":390,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":667,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":116,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":251,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":282,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":280,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":685,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":186,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":686,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":539,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":211,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":219,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":304,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":156,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":446,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":76,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":594,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings":358,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":273,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":310,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":121,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":197,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":376,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":13,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":473,"com.google.gson.functional.PrimitiveTest.testShortSerialization":57,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":431,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":284,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":519,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":235,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":367,"com.google.gson.JsonParserTest.testParseEmptyString":349,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":500,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":50,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":0,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":483,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":103,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":313,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":255,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":27,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":567,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":496,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":61,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":267,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInFr":6,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":440,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":373,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":554,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":671,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":371,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":466,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":64,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":528,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":270,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":220,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":429,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":647,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":71,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":241,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":374,"com.google.gson.JsonPrimitiveTest.testStringsAndChar":399,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":523,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":436,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":178,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":503,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":636,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":617,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":316,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":194,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":306,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":261,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":542,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":151,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":430,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":279,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":89,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":283,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":489,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":79,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":246,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":285,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":552,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":447,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":648,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":478,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":407,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":44,"com.google.gson.JsonArrayTest.testSet":378,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":62,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":288,"com.google.gson.JsonPrimitiveTest.testEquals":401,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":281,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":312,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":409,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":418,"com.google.gson.functional.MapTest.testGeneralMapField":126,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":616,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":138,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbers":361,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":531,"com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization":3,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":147,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":152,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":689,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":95,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":124,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":8,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":32,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":189,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":51,"com.google.gson.MixedStreamTest.testReadMixedStreamed":465,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":695,"com.google.gson.JsonObjectTest.testDeepCopy":336,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":38,"com.google.gson.internal.bind.JsonElementReaderTest.testBooleans":351,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":543,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":572,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":26,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":264,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":645,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":560,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":507,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":234,"com.google.gson.internal.bind.JsonTreeWriterTest.testEmptyWriter":368,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":470,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":87,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":573,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":111,"com.google.gson.JsonArrayTest.testDeepCopy":379,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":566,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":63,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":181,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":70,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":243,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":692,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":497,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":372,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":86,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":611,"com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes":400,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":278,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":537,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":651,"com.google.gson.JsonPrimitiveTest.testFloatEqualsDouble":393,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":670,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":185,"com.google.gson.functional.ObjectTest.testNestedDeserialization":637,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":216,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":276,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":535,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":444,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":232,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":530,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":238,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":350,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":574,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":658,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":674,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":160,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":55,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":305,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":425,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":441,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":266,"com.google.gson.functional.ObjectTest.testNullSerialization":623,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":308,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization":330,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":562,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":568,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":31,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":125,"com.google.gson.functional.MapTest.testInterfaceTypeMap":123,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":586,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":154,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":250,"com.google.gson.FieldAttributesTest.testModifiers":2,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":479,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":315,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":324,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":157,"com.google.gson.MixedStreamTest.testReadClosed":458,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":683,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":72,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":230,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":491,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsLong":396,"com.google.gson.MixedStreamTest.testWriteClosed":464,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":259,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":536,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":207,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":558,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":646,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":165,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":249,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":443,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":221,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":237,"com.google.gson.LongSerializationPolicyTest.testStringLongSerialization":329,"com.google.gson.stream.JsonWriterTest.testLongs":691,"com.google.gson.JsonPrimitiveTest.testShortEqualsLong":389,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":100,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":208,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":252,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":258,"com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger":384,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":641,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":510,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":244,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":682,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":262,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs":5,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":352,"com.google.gson.internal.bind.JsonElementReaderTest.testStrings":362,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":92,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":450,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":319,"com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber":405,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":532,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":36,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":433,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":541,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":136,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":173,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":442,"com.google.gson.functional.CollectionTest.testQueueDeserialization":657,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":39,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":508,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":677,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":66,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":98,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":642,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":117,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":630,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":81,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":191,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":635,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":254,"com.google.gson.functional.MapTest.testRawMapSerialization":128,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":456,"com.google.gson.JsonParserTest.testParseReader":345,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":655,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":551,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":214,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":303,"com.google.gson.JsonPrimitiveTest.testExponential":404,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":420,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":286,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":375,"com.google.gson.functional.PrimitiveTest.testByteSerialization":54,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":140,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":192,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":377,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":413,"com.google.gson.ObjectTypeAdapterTest.testSerialize":694,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":187,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":488,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":386,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":422,"com.google.gson.JsonPrimitiveTest.testFloatEqualsBigDecimal":383,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":146,"com.google.gson.JsonPrimitiveTest.testByteEqualsInteger":395,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":104,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":166,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":467,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":675,"com.google.gson.functional.MapTest.testMapWithQuotes":118,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":75,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":494,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":676,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":174,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":644,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":184,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":222,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":526,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":73,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":225,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":451,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":158,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":634,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":202,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":47,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":78,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":624,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":149,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":620,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":96,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":9,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":80,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":242,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":424,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":522,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":605,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":653,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":582,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":12,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":137,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":159,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":307,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":665,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsBigInteger":397,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":643,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":29,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":603,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":426,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":480,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":182,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":627,"com.google.gson.functional.ObjectTest.testNestedSerialization":215,"com.google.gson.JsonObjectTest.testAddingStringProperties":337,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":289,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":35,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":188,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":679,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":69,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":127,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":135,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":203,"com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails":347,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":22,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":463,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":210,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":664,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":527,"com.google.gson.JsonPrimitiveTest.testBoolean":388,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":448,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":559,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":546,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":15,"com.google.gson.GsonBuilderTest.testCreatingMoreThanOnce":455,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":492,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":538,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":628,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":640,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":300,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":144,"com.google.gson.functional.CollectionTest.testSetSerialization":265,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":690,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":179,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":199,"com.google.gson.functional.StringTest.testStringValueSerialization":301,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":108,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":320,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":649,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":659,"com.google.gson.MixedStreamTest.testWriteInvalidState":460,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":581,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":619,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":495,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":148,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":498,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":290,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":77,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":105,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":696,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":169,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":333,"com.google.gson.JsonStreamParserTest.testParseTwoStrings":341,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":666,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":229,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":366,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":167,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":93,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":414,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":569,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":142,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":468},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1079","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"a24ad795-3f0c-11e6-ad90-3fa7b957ef0b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:414","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuilder value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value((value == null ? null : value.toString()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:318","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24b9ae6-3f0c-11e6-ad90-77491f3387b6","method":{"position":"com.google.gson.internal.Streams:93","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(int i) throws java.io.IOException {\n    if (i == (-2)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            java.lang.Appendable.append(((char)(i)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"delta":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1079","type":"CtBinaryOperatorImpl"},"failures":[1],"tindex":"a24b9ae7-3f0c-11e6-ad90-4b88c89b1973","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"builder":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:119","type":"CtInvocationImpl"},"failures":[],"tindex":"a24bc1f8-3f0c-11e6-ad90-af341db8e463","method":{"position":"com.google.gson.Gson:617","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {\n    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n    toJson(jsonElement, writer);\n    return writer.toString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:152","type":"CtBinaryOperatorImpl"},"failures":[2],"tindex":"a24bc1f9-3f0c-11e6-ad90-3f7c8d33215b","method":{"position":"com.google.gson.FieldAttributes:134","type":"CtMethodImpl","sourcecode":"public boolean hasModifier(int modifier) {\n    if (modifier == 0) {\n        {\n            return ((java.lang.reflect.Field.getModifiers()) & modifier) != 0;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"comparison":"modifier"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24bc1fa-3f0c-11e6-ad90-fb638a507add","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:170","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24be90b-3f0c-11e6-ad90-57df766a709d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:348","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.String read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    if (peek == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.toString(in.nextBoolean());\n    } \n    return in.nextString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:431","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24c101c-3f0c-11e6-ad90-cd5bbe927fe2","method":{"position":"com.google.gson.Gson:422","type":"CtMethodImpl","sourcecode":"public <T>com.google.gson.TypeAdapter<T> getDelegateAdapter(com.google.gson.TypeAdapterFactory skipPast, com.google.gson.reflect.TypeToken<T> type) {\n    if (skipPast == skipPast) {\n        {\n            boolean boolean = false;\n            if (!(java.util.List<com.google.gson.TypeAdapterFactory>.contains(skipPast)))\n                skipPastFound = true;\n            \n            for (com.google.gson.TypeAdapterFactory com.google.gson.TypeAdapterFactory : java.util.List<com.google.gson.TypeAdapterFactory>) {\n                if (!skipPastFound) {\n                    if (factory == skipPast) {\n                        skipPastFound = true;\n                    } \n                    continue;\n                } \n                com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = factory.create(com.google.gson.Gson.this, type);\n                if (candidate != null) {\n                    return candidate;\n                } \n            }\n            throw new java.lang.IllegalArgumentException((\"GSON cannot serialize \" + type));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"factory":"skipPast","skipPast":"skipPast"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24c101d-3f0c-11e6-ad90-3f264b5dd1c7","method":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:198","type":"CtMethodImpl","sourcecode":"public void write(com.google.gson.stream.JsonWriter out, java.util.Map<K, V> map) throws java.io.IOException {\n    if (map == null) {\n        out.nullValue();\n        return ;\n    } \n    if (!(boolean)) {\n        out.beginObject();\n        for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n            out.name(java.lang.String.valueOf(entry.getKey()));\n            com.google.gson.TypeAdapter<V>.write(out, entry.getValue());\n        }\n        out.endObject();\n        return ;\n    } \n    boolean boolean = false;\n    java.util.List<com.google.gson.JsonElement> java.util.List<com.google.gson.JsonElement> = new java.util.ArrayList<com.google.gson.JsonElement>(map.size());\n    java.util.List<V> java.util.List<V> = new java.util.ArrayList<V>(map.size());\n    for (java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : map.entrySet()) {\n        com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.TypeAdapter<K>.toJsonTree(entry.getKey());\n        keys.add(keyElement);\n        values.add(entry.getValue());\n        hasComplexKeys |= (keyElement.isJsonArray()) || (keyElement.isJsonObject());\n    }\n    if (hasComplexKeys) {\n        out.beginArray();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            out.beginArray();\n            com.google.gson.internal.Streams.write(keys.get(i), out);\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n            out.endArray();\n        }\n        out.endArray();\n    } else {\n        out.beginObject();\n        for (int int = 0 ; i < (keys.size()) ; i++) {\n            com.google.gson.JsonElement com.google.gson.JsonElement = keys.get(i);\n            out.name(keyToString(keyElement));\n            com.google.gson.TypeAdapter<V>.write(out, values.get(i));\n        }\n        out.endObject();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24c372e-3f0c-11e6-ad90-71680974a67f","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:198","type":"CtBinaryOperatorImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13],"tindex":"a24c5e3f-3f0c-11e6-ad90-4bdf0cea6347","method":{"position":"com.google.gson.DefaultDateTypeAdapter:70","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.util.Date src, java.lang.reflect.Type typeOfSrc, com.google.gson.JsonSerializationContext context) {\n    if (typeOfSrc instanceof java.lang.reflect.TypeVariable) {\n        {\n            synchronized(java.text.DateFormat) {\n                java.lang.String java.lang.String = java.text.DateFormat.format(src);\n                return new com.google.gson.JsonPrimitive(dateFormatAsString);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"typeOfSrc"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:192","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,8,72,73,74,75,9,10,76,77,0,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,11,95,96,12,97,98,99,100,13,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,1,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"tindex":"a24c8550-3f0c-11e6-ad90-a706b30dcdb1","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src.isBoolean()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src.equals(typeOfSrc)) {\n                {\n                    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n                    toJson(src, typeOfSrc, writer);\n                    return writer.toString();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeOfSrc","to":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:164","type":"CtBinaryOperatorImpl"},"failures":[329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,18,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,3,4,5,381,6,7,382,24,25,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,8,410,73,75,9,411,10,77,11,12,13,412,413,414,112,123,126,415,133,416,417,134,418,135,419,420,152,154,421,422,423,424,425,159,426,174,175,427,428,429,176,177,178,430,179,180,181,431,182,432,183,184,185,433,186,434,435,192,193,203,436,437,438,439,440,441,222,228,230,231,233,442,443,245,246,247,444,445,446,447,448,449,267,275,276,450,451,313,452,326],"tindex":"a24cac61-3f0c-11e6-ad90-91fffb25d542","method":{"position":"com.google.gson.JsonPrimitive:93","type":"CtMethodImpl","sourcecode":"void setValue(java.lang.Object primitive) {\n    if (primitive instanceof java.lang.reflect.GenericArrayType) {\n        {\n            if (primitive instanceof java.lang.Character) {\n                char char = ((java.lang.Character)(primitive)).charValue();\n                com.google.gson.JsonPrimitive.this.java.lang.Object = java.lang.String.valueOf(c);\n            } else {\n                com.google.gson.internal.$Gson$Preconditions.checkArgument(((primitive instanceof java.lang.Number) || (com.google.gson.JsonPrimitive.isPrimitiveOrString(primitive))));\n                com.google.gson.JsonPrimitive.this.java.lang.Object = primitive;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"primitive"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24cd372-3f0c-11e6-ad90-173d01906944","method":{"position":"com.google.gson.JsonArray:92","type":"CtMethodImpl","sourcecode":"public boolean remove(com.google.gson.JsonElement element) {\n    if (element == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl"},"failures":[0],"tindex":"a24cfa83-3f0c-11e6-ad90-3998e7d11ed9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24cfa84-3f0c-11e6-ad90-9dbc708fa70b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:274","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return ((float)(in.nextDouble()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:459","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24cfa85-3f0c-11e6-ad90-7946a1ff61d3","method":{"position":"com.google.gson.internal.LinkedTreeMap:605","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o instanceof com.google.gson.TypeAdapter<?>) {\n        {\n            return containsKey(o);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24cfa86-3f0c-11e6-ad90-9fbfe774413a","method":{"position":"com.google.gson.internal.Primitives:79","type":"CtMethodImpl","sourcecode":"public static boolean isWrapperType(java.lang.reflect.Type type) {\n    if (type instanceof java.lang.Class) {\n        {\n            return com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(com.google.gson.internal.$Gson$Preconditions.checkNotNull(type));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:218","type":"CtVariableReadImpl"},"failures":[453,14,15,454,332,338,16,17,455,456,457,458,459,339,460,461,462,463,464,465,466,18,19,20,21,22,467,23,24,25,26,468,469,470,471,472,27,28,29,473,474,475,30,476,31,477,478,479,480,481,32,482,483,33,484,485,486,487,488,489,490,34,35,491,492,493,494,495,36,496,37,38,497,498,39,499,500,40,501,41,42,502,503,43,44,504,505,506,45,507,508,509,510,511,512,513,514,46,515,47,516,48,49,517,518,50,519,520,51,521,52,522,523,407,53,54,55,56,57,58,59,524,525,526,60,527,61,528,529,530,62,63,531,64,532,533,65,66,408,67,534,535,68,536,409,69,70,537,71,8,72,410,538,539,73,540,74,75,541,9,411,10,76,542,543,77,544,0,545,78,79,80,81,82,546,83,547,84,85,548,86,549,87,88,89,90,550,91,551,552,92,553,93,94,554,11,95,555,96,12,97,98,99,100,556,557,13,101,412,102,558,103,104,105,106,107,108,413,414,109,559,560,110,561,562,111,563,112,564,565,566,113,114,567,568,115,569,116,570,117,571,572,573,574,118,119,120,575,576,121,122,577,123,124,125,126,127,128,578,129,130,579,131,415,580,132,133,416,417,134,418,135,419,420,136,137,581,138,139,140,141,142,582,583,143,144,145,584,585,586,146,587,147,588,148,589,149,590,150,591,151,152,153,154,155,156,157,421,422,423,424,425,158,592,159,160,161,162,163,164,593,165,166,167,594,168,426,595,596,169,170,171,172,597,173,174,598,175,427,428,429,176,177,178,430,179,180,181,431,182,432,183,184,185,433,186,434,435,187,188,189,190,191,599,192,600,193,601,602,603,604,605,606,607,608,194,609,195,196,197,198,199,200,201,202,203,436,437,438,439,440,441,610,611,612,204,205,613,614,206,615,616,207,617,618,208,619,620,621,209,622,623,210,624,625,211,626,212,213,627,214,215,216,628,217,629,630,631,632,218,633,219,220,634,221,635,636,637,638,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,442,443,240,241,639,640,242,243,641,642,244,643,245,644,645,246,247,444,445,446,248,249,250,447,448,646,647,251,252,449,253,254,255,256,648,649,650,257,258,259,260,261,651,652,262,653,654,263,264,655,265,266,656,267,657,268,658,269,659,270,660,271,272,273,661,662,274,275,276,663,664,277,278,450,665,666,279,667,668,280,451,1,281,282,669,283,284,285,286,670,287,671,288,289,290,291,292,672,293,294,295,296,297,673,674,298,675,299,676,677,678,300,679,680,301,302,303,304,305,306,307,308,681,682,309,683,310,684,685,311,312,313,314,686,687,315,688,316,317,318,325,326,689,690,327,328],"tindex":"a24d2197-3f0c-11e6-ad90-677f0cea7029","method":{"position":"com.google.gson.Gson:273","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<java.lang.Number> floatAdapter(boolean serializeSpecialFloatingPointValues) {\n    if (serializeSpecialFloatingPointValues) {\n        {\n            if (serializeSpecialFloatingPointValues) {\n                return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<java.lang.Number>;\n            } \n            return new com.google.gson.TypeAdapter<java.lang.Number>() {\n                @java.lang.Override\n                public java.lang.Float read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n                    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n                        in.nextNull();\n                        return null;\n                    } \n                    return ((float)(in.nextDouble()));\n                }\n\n                @java.lang.Override\n                public void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n                    if (value == null) {\n                        out.nullValue();\n                        return ;\n                    } \n                    float float = value.floatValue();\n                    checkValidFloatingPoint(floatValue);\n                    out.value(value);\n                }\n            };\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"unlink":"serializeSpecialFloatingPointValues"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl"},"failures":[20,21,691,692,693,79,86,89,90],"tindex":"a24d6fb8-3f0c-11e6-ad90-d7d559689e68","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1397","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24d6fb9-3f0c-11e6-ad90-8df3ecbac2a9","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:35","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] buffer, int offset, int counter) {\n    if (counter == '#') {\n        {\n            throw new java.lang.AssertionError();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"counter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:51","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24d6fba-3f0c-11e6-ad90-19dce049db5b","method":{"position":"com.google.gson.TreeTypeAdapter:84","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    if ((typeAdapter.peek()) == typeAdapter) {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , false , null);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"typeAdapter","com.google.gson.stream.JsonToken.NULL":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:380","type":"CtBinaryOperatorImpl"},"failures":[380],"tindex":"a24d96cb-3f0c-11e6-ad90-497dc28bfeb0","method":{"position":"com.google.gson.JsonArray:105","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement remove(int index) {\n    if (index == index) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.remove(index);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"index","com.google.gson.stream.JsonReader.PEEKED_NONE":"index"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:77","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24d96cc-3f0c-11e6-ad90-df495dc9e553","method":{"position":"com.google.gson.JsonObject:121","type":"CtMethodImpl","sourcecode":"private com.google.gson.JsonElement createJsonElement(java.lang.Object value) {\n    return value == null ? com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull : new com.google.gson.JsonPrimitive(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value","value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtInvocationImpl"},"failures":[],"tindex":"a24d96cd-3f0c-11e6-ad90-e7e9b8d57d0b","method":{"position":"com.google.gson.Gson:532","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src.isBoolean()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (src.equals(typeOfSrc)) {\n                {\n                    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n                    toJson(src, typeOfSrc, writer);\n                    return writer.toString();\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.reflect.TypeToken:188","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24dbdde-3f0c-11e6-ad90-cdf963dfadd1","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (!(typeOfT instanceof java.lang.reflect.ParameterizedType)) {\n        {\n            if (typeOfT == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            } else {\n                {\n                    if (json == null) {\n                        return null;\n                    } \n                    java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n                    T T = ((T)(fromJson(reader, typeOfT)));\n                    return target;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24dbddf-3f0c-11e6-ad90-4b50292cffeb","method":{"position":"com.google.gson.Gson:695","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.lang.String json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    if (json != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    } else {\n        {\n            java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n            return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl"},"failures":[16,17,694,456,459,460,464,465,466,18,19,20,21,22,23,25,26,469,470,471,472,27,28,29,475,476,480,481,482,483,33,490,493,494,496,498,499,500,501,504,508,509,511,512,513,514,517,518,519,521,523,407,524,525,527,529,532,65,408,67,534,535,68,536,409,69,70,537,8,410,538,539,540,541,411,10,542,543,544,0,545,546,547,548,549,87,88,90,550,552,92,553,554,555,96,12,98,100,556,557,412,558,103,104,105,106,107,108,559,560,110,561,562,564,117,576,123,125,126,129,133,416,417,134,418,135,419,420,582,583,584,586,587,147,588,148,589,590,591,151,152,154,155,156,421,422,424,425,158,592,159,160,161,162,163,164,593,165,166,167,594,168,426,595,596,169,170,171,172,597,173,598,427,429,176,178,430,179,432,184,433,186,434,435,187,189,190,191,192,600,193,602,603,606,607,608,609,197,198,202,203,436,437,438,439,440,441,204,205,613,614,206,615,616,207,617,618,208,620,209,622,210,624,625,626,213,627,214,215,628,217,629,630,631,632,218,633,219,220,634,221,635,636,637,638,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,442,443,241,639,640,242,243,641,642,244,643,245,645,246,247,444,445,446,248,249,250,447,448,646,647,251,252,449,253,255,261,653,654,263,265,656,268,658,269,659,660,271,272,273,661,662,274,275,276,277,278,450,665,666,279,667,668,451,281,282,669,283,285,670,287,671,288,289,290,291,672,294,296,673,674,675,676,677,678,679,680,302,303,304,305,306,307,308,681,682,309,683,310,684,685,313,314,687,315,688,317,319,320,321,322,323,325,689,690,327,328],"tindex":"a24de4f0-3f0c-11e6-ad90-71d55a17e497","method":{"position":"com.google.gson.internal.Primitives:60","type":"CtMethodImpl","sourcecode":"private static void add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>> forward, java.util.Map<java.lang.Class<?>, java.lang.Class<?>> backward, java.lang.Class<?> key, java.lang.Class<?> value) {\n    if (value.isInterface()) {\n        {\n            forward.put(key, value);\n            backward.put(value, key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24e0c01-3f0c-11e6-ad90-4f45fdd34a2b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl"},"failures":[695,696],"tindex":"a24e0c02-3f0c-11e6-ad90-5bd967dc8ee9","method":{"position":"com.google.gson.TypeAdapter:268","type":"CtMethodImpl","sourcecode":"public final T fromJson(java.lang.String json) throws java.io.IOException {\n    if (json == null) {\n        {\n            return fromJson(new java.io.StringReader(json));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"json"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24e0c03-3f0c-11e6-ad90-75963ea32219","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:804","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean contains(java.lang.Object o) {\n    if (o == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (o instanceof java.util.Map.Entry) && ((findByEntry(((java.util.Map.Entry<?, ?>)(o)))) != null);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24e3314-3f0c-11e6-ad90-874db158c55c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:338","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Character value) throws java.io.IOException {\n    out.value((value == null ? null : java.lang.String.valueOf(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:107","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24e3315-3f0c-11e6-ad90-0f375042cd34","method":{"position":"com.google.gson.internal.LinkedTreeMap:207","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (b instanceof java.lang.reflect.WildcardType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtBinaryOperatorImpl"},"failures":[697,694,698,108,114,138,147,210,223,225,226,227,254,261,263,265],"tindex":"a24e3316-3f0c-11e6-ad90-779643fa6324","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (value instanceof java.lang.Class<?>) {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl"},"failures":[],"tindex":"a24e5a27-3f0c-11e6-ad90-89eff14fdc97","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (value == null) {\n        value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n    } \n    com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:145","type":"CtBinaryOperatorImpl"},"failures":[537,544,98],"tindex":"a24e5a28-3f0c-11e6-ad90-a5329619f4ff","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:69","type":"CtMethodImpl","sourcecode":"private synchronized java.util.Date deserializeToDate(java.lang.String json) {\n    if (json == null) {\n        {\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException ignored) {\n            }\n            try {\n                return java.text.DateFormat.parse(json);\n            } catch (java.text.ParseException e) {\n                throw new com.google.gson.JsonSyntaxException(json , e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"json"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:136","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24e5a29-3f0c-11e6-ad90-61e5081b08c0","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:200","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\ncom.google.gson.internal.LinkedHashTreeMap.Node<K, V> findByObject(java.lang.Object key) {\n    if (key instanceof java.lang.reflect.TypeVariable) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            try {\n                return key != null ? find(((K)(key)), false) : null;\n            } catch (java.lang.ClassCastException e) {\n                return null;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:469","type":"CtBinaryOperatorImpl"},"failures":[375,376,377,408,133,421,422,423,424,425,159,433,186,434,435,442,443,444,445,446,447,448,449,275,326],"tindex":"a24e813a-3f0c-11e6-ad90-95c566bee882","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    if (src == null) {\n        {\n            com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n            toJson(src, typeOfSrc, writer);\n            return writer.get();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"src":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24e813b-3f0c-11e6-ad90-0319398be7a4","method":{"position":"com.google.gson.internal.bind.TypeAdapters:233","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return in.nextInt();\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:746","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24e813c-3f0c-11e6-ad90-6366b6150b08","method":{"position":"com.google.gson.stream.JsonWriter:324","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter open(int empty, java.lang.String openBracket) throws java.io.IOException {\n    if (((empty == empty) || (last == empty)) || (last == empty)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            beforeValue(true);\n            push(empty);\n            java.io.Writer.write(openBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"empty","last":"empty","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"empty","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"empty"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:817","type":"CtVariableReadImpl"},"failures":[16,17,694,456,459,460,464,465,466,18,23,469,470,471,27,28,29,523,65,408,67,535,68,536,409,70,538,539,542,0,546,87,96,100,103,104,105,106,107,108,559,560,110,561,117,576,123,125,126,129,133,417,134,418,135,420,147,588,148,155,421,422,424,425,158,592,160,161,162,163,164,593,165,166,167,594,168,595,596,169,170,171,172,597,173,598,429,176,178,179,433,186,434,435,187,190,191,600,193,606,197,198,202,203,436,437,438,439,440,441,204,205,613,614,206,615,616,207,617,618,208,620,209,622,210,625,626,213,627,214,215,628,217,629,630,218,633,219,220,634,221,635,636,637,638,222,223,225,226,227,236,237,238,239,442,443,241,639,640,242,243,641,642,244,245,645,246,247,444,445,446,248,249,250,447,448,646,647,251,252,449,253,255,261,654,263,265,268,658,269,659,270,660,271,272,273,661,662,274,275,277,278,665,666,279,667,668,281,282,669,283,285,287,671,288,289,290,291,302,303,304,305,306,307,308,681,682,309,683,310,684,685,315,688,319,320,321,322,323,325,689,690,327,328],"tindex":"a24ea84d-3f0c-11e6-ad90-97db35fa8e3b","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:62","type":"CtMethodImpl","sourcecode":"static boolean excludeField(java.lang.reflect.Field f, boolean serialize, com.google.gson.internal.Excluder excluder) {\n    if (serialize) {\n        {\n            return (!(excluder.excludeClass(f.getType(), serialize))) && (!(excluder.excludeField(f, serialize)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"isEmpty":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24ea84e-3f0c-11e6-ad90-63888c37c43d","method":{"position":"com.google.gson.internal.bind.TypeAdapters:211","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return ((short)(in.nextInt()));\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:174","type":"CtInvocationImpl"},"failures":[],"tindex":"a24ecf5f-3f0c-11e6-ad90-577d1f7064c0","method":{"position":"com.google.gson.TreeTypeAdapter:92","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    boolean boolean = (exactType.getType()) == (exactType.getRawType());\n    return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , matchRawType , null);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"typeAdapter","this":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtInvocationImpl"},"failures":[],"tindex":"a24ecf60-3f0c-11e6-ad90-13420a6b0a9e","method":{"position":"com.google.gson.GsonBuilder:493","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"unchecked\" , \"rawtypes\" })\npublic com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class<?> baseType, java.lang.Object typeAdapter) {\n    if (typeAdapter.isJsonNull()) {\n        {\n            com.google.gson.internal.$Gson$Preconditions.checkArgument((((typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) || (typeAdapter instanceof com.google.gson.TypeAdapter<?>)));\n            if ((typeAdapter instanceof com.google.gson.JsonDeserializer) || (typeAdapter instanceof com.google.gson.JsonSerializer)) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(0, com.google.gson.TreeTypeAdapter.newTypeHierarchyFactory(baseType, typeAdapter));\n            } \n            if (typeAdapter instanceof com.google.gson.TypeAdapter<?>) {\n                java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newTypeHierarchyFactory(baseType, ((com.google.gson.TypeAdapter)(typeAdapter))));\n            } \n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:106","type":"CtBinaryOperatorImpl"},"failures":[365,366,373,112],"tindex":"a24ef671-3f0c-11e6-ad90-0533f146b1b0","method":{"position":"com.google.gson.internal.Streams:67","type":"CtMethodImpl","sourcecode":"public static void write(com.google.gson.JsonElement element, com.google.gson.stream.JsonWriter writer) throws java.io.IOException {\n    if (element instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.write(writer, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:332","type":"CtVariableReadImpl"},"failures":[65,408,67,534,409],"tindex":"a24ef672-3f0c-11e6-ad90-d14e35c7b288","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (serialization) {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"serialization"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:389","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24ef673-3f0c-11e6-ad90-996d7ad546d8","method":{"position":"com.google.gson.stream.JsonReader:1572","type":"CtMethodImpl","sourcecode":"private java.io.IOException syntaxError(java.lang.String message) throws java.io.IOException {\n    if (message != null) {\n        {\n            throw new com.google.gson.stream.MalformedJsonException(((((((message + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())) + \" path \") + (getPath())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"message"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:438","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24f1d84-3f0c-11e6-ad90-45f6d5a2775c","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"a24f1d85-3f0c-11e6-ad90-915fa40360c3","method":{"position":"com.google.gson.JsonObject:181","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonObject getAsJsonObject(java.lang.String memberName) {\n    if (memberName != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((com.google.gson.JsonObject)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:649","type":"CtFieldReadImpl"},"failures":[],"tindex":"a24f1d86-3f0c-11e6-ad90-d9dcfc6db20a","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prettyPrinting":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.internal.$Gson$Types:168","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24f4497-3f0c-11e6-ad90-77264c3f8aa4","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (!(typeOfT instanceof java.lang.reflect.ParameterizedType)) {\n        {\n            if (typeOfT == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonSyntaxException();\n            } else {\n                {\n                    if (json == null) {\n                        return null;\n                    } \n                    java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n                    T T = ((T)(fromJson(reader, typeOfT)));\n                    return target;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:189","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"a24f4498-3f0c-11e6-ad90-2f8a69a128c6","method":{"position":"com.google.gson.reflect.TypeToken:253","type":"CtMethodImpl","sourcecode":"private static java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type token, java.lang.Class<?>... expected) {\n    if (!(token instanceof java.lang.reflect.WildcardType)) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"Unexpected type. Expected one of: \");\n            for (java.lang.Class<?> java.lang.Class<?> : expected) {\n                exceptionMessage.append(clazz.getName()).append(\", \");\n            }\n            exceptionMessage.append(\"but got: \").append(token.getClass().getName()).append(\", for type token: \").append(token.toString()).append('.');\n            return new java.lang.AssertionError(exceptionMessage.toString());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467322441900/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"token"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":52,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}