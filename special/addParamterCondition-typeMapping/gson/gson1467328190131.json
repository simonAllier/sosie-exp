{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":129,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":225,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":39,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":90,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":291,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":268,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":102,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":241,"com.google.gson.stream.JsonWriterTest.testRepeatedName":260,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":124,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":173,"com.google.gson.MixedStreamTest.testWriteLenient":3,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":144,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":120,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":103,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":105,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":113,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":149,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":67,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":175,"com.google.gson.functional.ObjectTest.testSingletonLists":154,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":152,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":15,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":249,"com.google.gson.stream.JsonWriterTest.testStrings":281,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":210,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":13,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":290,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":53,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":126,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":168,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":16,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":59,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":60,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":200,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":46,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":37,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":123,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":221,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":111,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":234,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":273,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":236,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":138,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":240,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":6,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":134,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":245,"com.google.gson.stream.JsonWriterTest.testNullStringValue":254,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":242,"com.google.gson.functional.JsonTreeTest.testToJsonTree":294,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":42,"com.google.gson.stream.JsonWriterTest.testNulls":257,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":80,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":288,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":56,"com.google.gson.stream.JsonWriterTest.testEmptyObject":271,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":19,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":119,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":238,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":110,"com.google.gson.functional.MapTest.testGeneralMapField":95,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":23,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":213,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":32,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":193,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":141,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":93,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":170,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":228,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":286,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":195,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":172,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":114,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":285,"com.google.gson.stream.JsonWriterTest.testNonFiniteDoubles":274,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":65,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":229,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":269,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":57,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":137,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":28,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":166,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":176,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":139,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":48,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":62,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":259,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":136,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":224,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":190,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":246,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":11,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":204,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":164,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":100,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":187,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":24,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":165,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":8,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":18,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":276,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":128,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":71,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":205,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":74,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":116,"com.google.gson.stream.JsonWriterTest.testEmptyArray":250,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":223,"com.google.gson.stream.JsonWriterTest.testDoubles":278,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":140,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":94,"com.google.gson.functional.MapTest.testInterfaceTypeMap":92,"com.google.gson.stream.JsonWriterTest.testNonFiniteBoxedDoubles":275,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":194,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":207,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":68,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":52,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":122,"com.google.gson.functional.EnumTest.testEnumSet":118,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":159,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":75,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":197,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":84,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":161,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":73,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":287,"com.google.gson.MixedStreamTest.testWriteClosed":5,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":272,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":109,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":211,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":156,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":76,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":206,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":169,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":186,"com.google.gson.stream.JsonWriterTest.testLongs":256,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":182,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":218,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":244,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":143,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":157,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":209,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":108,"com.google.gson.functional.MapTest.testMapSerialization":89,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":183,"com.google.gson.functional.MapTest.testSerializeMaps":83,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":147,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":63,"com.google.gson.functional.MapTest.testComplexKeysSerialization":98,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":112,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":10,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":35,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":177,"com.google.gson.stream.JsonWriterTest.testNumbers":280,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":215,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":243,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":292,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":21,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":216,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":40,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":125,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":86,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":270,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":199,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":230,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":104,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":0,"com.google.gson.functional.MapTest.testRawMapSerialization":97,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":101,"com.google.gson.functional.PrettyPrintingTest.testMap":38,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":54,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":106,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":162,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":219,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":184,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":58,"com.google.gson.functional.MapTest.testMapSerializationEmpty":99,"com.google.gson.functional.CollectionTest.testQueueSerialization":107,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":135,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":277,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":25,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":279,"com.google.gson.functional.MapTest.testMapOfMapSerialization":88,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":232,"com.google.gson.ObjectTypeAdapterTest.testSerialize":248,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":226,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":252,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":181,"com.google.gson.functional.FieldNamingTest.testIdentity":148,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":31,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":145,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":77,"com.google.gson.functional.MapTest.testMapWithQuotes":87,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":189,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":263,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":127,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":153,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":293,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":196,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":255,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":117,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":131,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":66,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":284,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":265,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":180,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":69,"com.google.gson.functional.MapTest.testMapSubclassSerialization":82,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":44,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":150,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":34,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":1,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":235,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":142,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":72,"com.google.gson.functional.EnumTest.testEnumSubclass":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":132,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":289,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":192,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":61,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":198,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":22,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":70,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":222,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":191,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":130,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":151,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":264,"com.google.gson.stream.JsonWriterTest.testTwoNames":251,"com.google.gson.stream.JsonWriterTest.testNullName":258,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":51,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":203,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":283,"com.google.gson.functional.ObjectTest.testNestedSerialization":163,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":20,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":171,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":227,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":47,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":266,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":96,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":262,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":50,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":36,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":30,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":261,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":4,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":282,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":26,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":160,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":214,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":155,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":202,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":188,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":7,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":45,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":91,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":55,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":64,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":79,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":174,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":29,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":49,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":247,"com.google.gson.functional.CollectionTest.testSetSerialization":115,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":41,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":201,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":231,"com.google.gson.JsonParserTest.testParseMixedArray":9,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":178,"com.google.gson.MixedStreamTest.testWriteInvalidState":2,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":158,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":185,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":33,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":179,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":17,"com.google.gson.stream.JsonWriterTest.testBooleans":253,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":133,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":146,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":43,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":212,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":81,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":85,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":208,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":239,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":237,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":217,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":12,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":78,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":167,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":220,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":233,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":267,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":27},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287],"tindex":"beee888a-3f17-11e6-a073-b58082e17129","method":{"position":"com.google.gson.stream.JsonWriter:599","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"fallthrough\")\nprivate void beforeValue(boolean root) throws java.io.IOException {\n    if (root) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328070843/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            switch (peek()) {\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    if (!(boolean)) {\n                        throw new java.lang.IllegalStateException(\"JSON must have only one top-level value.\");\n                    } \n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    if ((!(boolean)) && (!root)) {\n                        throw new java.lang.IllegalStateException(\"JSON must start with an array or an object.\");\n                    } \n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    newline();\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    java.io.Writer.append(',');\n                    newline();\n                    break;\n                case com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int :\n                    java.io.Writer.append(java.lang.String);\n                    replaceTop(com.google.gson.stream.JsonScope.com.google.gson.stream.JsonScope.int);\n                    break;\n                default :\n                    throw new java.lang.IllegalStateException(\"Nesting problem.\");\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl"},"failures":[7,8,31,32,40,44,46,48,61,75,95,103,105,111,113,152,153,155,160,161,162,163,166,167,169,288,289,175,290,182,291,183,184,189,190,206,208,210,211,292,217,293,294,219,226,229,230,231],"tindex":"beeefdbb-3f17-11e6-a073-d7dad427f9b4","method":{"position":"com.google.gson.internal.bind.TypeAdapters:267","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328070843/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:833","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"beeefdbc-3f17-11e6-a073-a1ea10489b84","method":{"position":"com.google.gson.stream.JsonReader:1268","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop == newTop) {\n        {\n            if (newTop == newTop) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328070843/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((int) == (int[].int)) {\n                        int[] int[] = new int[(int) * 2];\n                        int[] int[] = new int[(int) * 2];\n                        java.lang.String[] java.lang.String[] = new java.lang.String[(int) * 2];\n                        java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                        java.lang.System.arraycopy(int[], 0, newPathIndices, 0, int);\n                        java.lang.System.arraycopy(java.lang.String[], 0, newPathNames, 0, int);\n                        int[] = newStack;\n                        int[] = newPathIndices;\n                        java.lang.String[] = newPathNames;\n                    } \n                    int[][((int)++)] = newTop;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328070843/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"newTop","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:709","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"beef24cd-3f17-11e6-a073-97fc1017b718","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328070843/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.get(i);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"i","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"i"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:725","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"beef24ce-3f17-11e6-a073-7d1f6fd779a3","method":{"position":"com.google.gson.stream.JsonReader:1268","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop == newTop) {\n        {\n            if (newTop == newTop) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328070843/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    if ((int) == (int[].int)) {\n                        int[] int[] = new int[(int) * 2];\n                        int[] int[] = new int[(int) * 2];\n                        java.lang.String[] java.lang.String[] = new java.lang.String[(int) * 2];\n                        java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                        java.lang.System.arraycopy(int[], 0, newPathIndices, 0, int);\n                        java.lang.System.arraycopy(java.lang.String[], 0, newPathNames, 0, int);\n                        int[] = newStack;\n                        int[] = newPathIndices;\n                        java.lang.String[] = newPathNames;\n                    } \n                    int[][((int)++)] = newTop;\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467328070843/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"newTop","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":5,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}