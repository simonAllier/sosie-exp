{"failureDictionary":{"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":32,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":63,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":4,"com.google.gson.functional.MapTest.testSortedMap":33,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":91,"com.google.gson.functional.MapTest.testMapSerialization":29,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":47,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":59,"com.google.gson.functional.MapTest.testComplexKeysSerialization":40,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":95,"com.google.gson.MixedStreamTest.testWriteLenient":1,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":44,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":112,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":116,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":109,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":86,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":76,"com.google.gson.functional.CollectionTest.testQueueDeserialization":102,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":20,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":101,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":25,"com.google.gson.functional.ObjectTest.testSingletonLists":69,"com.google.gson.functional.MapTest.testStringKeyDeserialization":42,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":73,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":87,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":46,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":98,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":100,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":13,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":72,"com.google.gson.functional.MapTest.testMapSerializationEmpty":41,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":66,"com.google.gson.functional.CollectionTest.testQueueSerialization":90,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":3,"com.google.gson.JavaSerializationTest.testMapIsSerializable":6,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":115,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":94,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":120,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":106,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":31,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":55,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":58,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":30,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":81,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":79,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":88,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":49,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":110,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":107,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":111,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":119,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":17,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":50,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":92,"com.google.gson.functional.MapTest.testGeneralMapField":37,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":64,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":10,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":16,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":35,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":12,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":52,"com.google.gson.functional.EnumTest.testEnumSubclass":113,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":15,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":123,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":26,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":121,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":80,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":96,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":5,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":27,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":11,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":19,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":14,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":83,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":68,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":70,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":82,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":93,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":38,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":60,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":65,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":43,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":48,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":2,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":67,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":105,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":71,"com.google.gson.CommentsTest.testParseComments":0,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":75,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":28,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":39,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":104,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":51,"com.google.gson.JavaSerializationTest.testListIsSerializable":7,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":99,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":9,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":122,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":45,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":61,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":89,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":103,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":117,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":21,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":36,"com.google.gson.functional.MapTest.testInterfaceTypeMap":34,"com.google.gson.functional.CollectionTest.testSetDeserialization":97,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":74,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":57,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":118,"com.google.gson.functional.MapTest.testMapDeserialization":24,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":22,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":53,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":18,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":108,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":85,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":54,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":114,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":84,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":56,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":77,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":23,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":8,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":62,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":78},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"415e913f-3f57-11e6-92b5-5de6d75fe1ec","method":{"position":"com.google.gson.internal.bind.TypeAdapters:379","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.math.BigDecimal value) throws java.io.IOException {\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"415f5490-3f57-11e6-92b5-6fd9060493a7","method":{"position":"com.google.gson.Gson:631","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, java.lang.Appendable writer) throws com.google.gson.JsonIOException {\n    if (jsonElement instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467355253493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonIOException();\n    } else {\n        {\n            try {\n                com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer));\n                toJson(jsonElement, jsonWriter);\n            } catch (java.io.IOException e) {\n                throw new java.lang.RuntimeException(e);\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:694","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"415f7ba1-3f57-11e6-92b5-dd35c26ddc9f","method":{"position":"com.google.gson.stream.JsonWriter:353","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop == newTop) {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                int[] = newStack;\n            } \n            int[][((int)++)] = newTop;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467355253493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"last":"newTop","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[],"tindex":"415fa2b2-3f57-11e6-92b5-a1fe5024f65a","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:70","type":"CtMethodImpl","sourcecode":"static java.lang.String getFieldName(com.google.gson.FieldNamingStrategy fieldNamingPolicy, java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467355253493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.annotations.SerializedName com.google.gson.annotations.SerializedName = f.getAnnotation(com.google.gson.annotations.SerializedName.com.google.gson.annotations.SerializedName.java.lang.Class);\n            return serializedName == null ? fieldNamingPolicy.translateName(f) : serializedName.value();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"415fa2b3-3f57-11e6-92b5-b392feeed90f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:501","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.UUID read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.util.UUID.fromString(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"415fc9c4-3f57-11e6-92b5-d5cd2cb8d76c","method":{"position":"com.google.gson.internal.Excluder:215","type":"CtMethodImpl","sourcecode":"private boolean isAnonymousOrLocal(java.lang.Class<?> clazz) {\n    if (clazz.isInterface()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467355253493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (!(java.lang.Enum.java.lang.Enum.java.lang.Class.isAssignableFrom(clazz))) && ((clazz.isAnonymousClass()) || (clazz.isLocalClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:192","type":"CtInvocationImpl"},"failures":[],"tindex":"41606605-3f57-11e6-92b5-e56d4120fe11","method":{"position":"com.google.gson.reflect.TypeToken:253","type":"CtMethodImpl","sourcecode":"private static java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type token, java.lang.Class<?>... expected) {\n    if (token.equals(token)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467355253493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"Unexpected type. Expected one of: \");\n            for (java.lang.Class<?> java.lang.Class<?> : expected) {\n                exceptionMessage.append(clazz.getName()).append(\", \");\n            }\n            exceptionMessage.append(\"but got: \").append(token.getClass().getName()).append(\", for type token: \").append(token.toString()).append('.');\n            return new java.lang.AssertionError(exceptionMessage.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"token","to":"token"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"41608d16-3f57-11e6-92b5-4f7078f88ab0","method":{"position":"com.google.gson.internal.bind.TypeAdapters:525","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.sql.Timestamp read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    java.util.Date java.util.Date = dateTypeAdapter.read(in);\n    return date != null ? new java.sql.Timestamp(date.getTime()) : null;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:649","type":"CtFieldReadImpl"},"failures":[],"tindex":"41608d17-3f57-11e6-92b5-dfac05b3f7ee","method":{"position":"com.google.gson.stream.JsonReader:325","type":"CtMethodImpl","sourcecode":"public final void setLenient(boolean lenient) {\n    if (lenient) {\n        {\n            com.google.gson.stream.JsonReader.this.boolean = lenient;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467355253493/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"prettyPrinting":"lenient"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":9,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}