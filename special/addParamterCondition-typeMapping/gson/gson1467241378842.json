{"failureDictionary":{"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":67,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":149,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":172,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":257,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":185,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":4,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":35,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":148,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":24,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":87,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":119,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":235,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":76,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":70,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":71,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":74,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":117,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":180,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":166,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":48,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":104,"com.google.gson.functional.ObjectTest.testSingletonLists":115,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":90,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":207,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":31,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":108,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":246,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":130,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":254,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":81,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":111,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":142,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":225,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":226,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":113,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":217,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":83,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":146,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":122,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":153,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":60,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":72,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":220,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":5,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":92,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":106,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":211,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":255,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":107,"com.google.gson.functional.JsonTreeTest.testToJsonTree":215,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":16,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":19,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":260,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":55,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":85,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":7,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":190,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":0,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":177,"com.google.gson.functional.MapTest.testGeneralMapField":93,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":120,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":155,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":96,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":196,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":127,"com.google.gson.MixedStreamTest.testReadMixedStreamed":245,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":99,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":137,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":210,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":101,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":206,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":170,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":222,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":139,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":256,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":195,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":88,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":229,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":265,"com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode":251,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":65,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":192,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":212,"com.google.gson.functional.ObjectTest.testNestedDeserialization":147,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":80,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":187,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":11,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":201,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":136,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":29,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":123,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":234,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":40,"com.google.gson.internal.LinkedHashTreeMapTest.testEmptyStringValues":250,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":43,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":208,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":59,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":14,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":46,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":79,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":91,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":62,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":3,"com.google.gson.functional.MapTest.testInterfaceTypeMap":2,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":169,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":98,"com.google.gson.JsonArrayTest.testEqualsNonEmptyArray":261,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":15,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":158,"com.google.gson.functional.CollectionTest.testSetDeserialization":73,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":167,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":33,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":126,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":66,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":47,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":131,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":25,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":45,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":171,"com.google.gson.MixedStreamTest.testWriteClosed":244,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":32,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":189,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":110,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":121,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":49,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":109,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":204,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":144,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":200,"com.google.gson.stream.JsonWriterTest.testLongs":253,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":266,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":56,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":184,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":209,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":224,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":18,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":124,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":230,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":186,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":175,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":238,"com.google.gson.functional.MapTest.testComplexKeysSerialization":94,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":232,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":64,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":263,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":160,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":34,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":157,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":10,"com.google.gson.JsonNullTest.testEqualsAndHashcode":259,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":213,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":68,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":159,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":203,"com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides":248,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":173,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":231,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":36,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":1,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":138,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":102,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":145,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":241,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":57,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":133,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":188,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":179,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":262,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":9,"com.google.gson.functional.PrimitiveTest.testByteSerialization":252,"com.google.gson.ObjectTypeAdapterTest.testSerialize":28,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":100,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":77,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":163,"com.google.gson.functional.FieldNamingTest.testIdentity":239,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":236,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":50,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":191,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":140,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":23,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":39,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":114,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":183,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":150,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":165,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":27,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":162,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":41,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":143,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":174,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":54,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":181,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":22,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":125,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":168,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":242,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":223,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":30,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":44,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":129,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":95,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":78,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":228,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":82,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":63,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":61,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":193,"com.google.gson.internal.LinkedHashTreeMapTest.testContainsNonComparableKeyReturnsFalse":249,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":152,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":182,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":151,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":12,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":26,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":132,"com.google.gson.functional.ObjectTest.testNestedSerialization":134,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":86,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":38,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":258,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":178,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":116,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":216,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":128,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":42,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":156,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":105,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":118,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":17,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":205,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":197,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":202,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":221,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":135,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":218,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":227,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":164,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":53,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":21,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":176,"com.google.gson.functional.CollectionTest.testSetSerialization":75,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":97,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":84,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":240,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":20,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":37,"com.google.gson.JsonParserTest.testParseMixedArray":264,"com.google.gson.MixedStreamTest.testWriteInvalidState":243,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":247,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":199,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":161,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":198,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":233,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":237,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":154,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":103,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":112,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":8,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":6,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":194,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":69,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":214,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":219,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":51,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":141,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":58,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":13,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":52},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:417","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"9f5ee925-3e4d-11e6-86e5-51abab4045e0","method":{"position":"com.google.gson.GsonBuilder:402","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setDateFormat(int style) {\n    if (style == style) {\n        {\n            com.google.gson.GsonBuilder.this.int = style;\n            com.google.gson.GsonBuilder.this.java.lang.String = null;\n            return com.google.gson.GsonBuilder.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"style","com.google.gson.stream.JsonReader.PEEKED_NONE":"style"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"9f5f3746-3e4d-11e6-86e5-7fe3441d0091","method":{"position":"com.google.gson.TreeTypeAdapter:61","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.JsonSerializer<T>) == null) {\n        delegate().write(out, value);\n        return ;\n    } \n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.JsonSerializer<T>.serialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonSerializationContext);\n    com.google.gson.internal.Streams.write(tree, out);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"9f5f5e57-3e4d-11e6-86e5-0b2159a1008c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:361","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.String value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1236","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"9f5f5e58-3e4d-11e6-86e5-27adb4b697a4","method":{"position":"com.google.gson.internal.Streams:88","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(char[] chars, int offset, int length) throws java.io.IOException {\n    if (offset == offset) {\n        {\n            com.google.gson.internal.Streams.AppendableWriter.CurrentWrite.char[] = chars;\n            java.lang.Appendable.append(com.google.gson.internal.Streams.AppendableWriter.CurrentWrite, offset, (offset + length));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"offset","com.google.gson.stream.JsonReader.PEEKED_NONE":"offset"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"9f5f8569-3e4d-11e6-86e5-eb14c548ac1b","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:45","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.TypeAdapter<T>;\n    java.lang.reflect.Type java.lang.reflect.Type = getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, value);\n    if (runtimeType != (java.lang.reflect.Type)) {\n        com.google.gson.TypeAdapter com.google.gson.TypeAdapter = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(runtimeType));\n        if (!(runtimeTypeAdapter instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = runtimeTypeAdapter;\n        } else if (!((com.google.gson.TypeAdapter<T>) instanceof com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter)) {\n            chosen = com.google.gson.TypeAdapter<T>;\n        } else {\n            chosen = runtimeTypeAdapter;\n        }\n    } \n    chosen.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,1,92,2,3,93,94,4,95,96,97,98,99,100,101,102,5,103,104,7,8,105,106,107,10,108,11,12,13,14,109,15,16,17,110,111,112,18,19,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,20,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,23,215,216,217,218,219,220,24,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246],"tindex":"9f5f856a-3e4d-11e6-86e5-7d6bbdb72c4e","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:116","type":"CtMethodImpl","sourcecode":"private com.google.gson.TypeAdapter<?> getFieldAdapter(com.google.gson.Gson gson, java.lang.reflect.Field field, com.google.gson.reflect.TypeToken<?> fieldType) {\n    if (field.isSynthetic()) {\n        {\n            com.google.gson.annotations.JsonAdapter com.google.gson.annotations.JsonAdapter = field.getAnnotation(com.google.gson.annotations.JsonAdapter.com.google.gson.annotations.JsonAdapter.java.lang.Class);\n            if (annotation != null) {\n                com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, gson, fieldType, annotation);\n                if (adapter != null)\n                    return adapter;\n                \n            } \n            return gson.getAdapter(fieldType);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"field"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"9f5fac7b-3e4d-11e6-86e5-ebe1fbf7852b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:607","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Locale read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.lang.String java.lang.String = in.nextString();\n    java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(locale , \"_\");\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    java.lang.String java.lang.String = null;\n    if (tokenizer.hasMoreElements()) {\n        language = tokenizer.nextToken();\n    } \n    if (tokenizer.hasMoreElements()) {\n        country = tokenizer.nextToken();\n    } \n    if (tokenizer.hasMoreElements()) {\n        variant = tokenizer.nextToken();\n    } \n    if ((country == null) && (variant == null)) {\n        return new java.util.Locale(language);\n    } else if (variant == null) {\n        return new java.util.Locale(language , country);\n    } else {\n        return new java.util.Locale(language , country , variant);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:430","type":"CtFieldReadImpl","sourcecode":"serializeNulls"},"failures":[247,248,249,250,251],"tindex":"9f5fac7c-3e4d-11e6-86e5-4d330699930a","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:131","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> find(K key, boolean create) {\n    if (create) {\n        {\n            java.util.Comparator<? super K> java.util.Comparator<? super K> = com.google.gson.internal.LinkedHashTreeMap.this.java.util.Comparator<? super K>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[];\n            int int = com.google.gson.internal.LinkedHashTreeMap.secondaryHash(key.hashCode());\n            int int = hash & ((table.int) - 1);\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = table[index];\n            int int = 0;\n            if (nearest != null) {\n                @java.lang.SuppressWarnings(value = \"unchecked\")\n                java.lang.Comparable<java.lang.Object> java.lang.Comparable<java.lang.Object> = comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>) ? ((java.lang.Comparable<java.lang.Object>)(key)) : null;\n                while (true) {\n                    comparison = comparableKey != null ? comparableKey.compareTo(nearest.K) : comparator.compare(key, nearest.K);\n                    if (comparison == 0) {\n                        return nearest;\n                    } \n                    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = comparison < 0 ? nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> : nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n                    if (child == null) {\n                        break;\n                    } \n                    nearest = child;\n                }\n            } \n            if (!create) {\n                return null;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            if (nearest == null) {\n                if ((comparator == (com.google.gson.internal.LinkedHashTreeMap.com.google.gson.internal.LinkedHashTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(key instanceof java.lang.Comparable))) {\n                    throw new java.lang.ClassCastException(((key.getClass().getName()) + \" is not Comparable\"));\n                } \n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                table[index] = created;\n            } else {\n                created = new com.google.gson.internal.LinkedHashTreeMap.Node<K, V>(nearest , key , hash , header , header.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n                if (comparison < 0) {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                } else {\n                    nearest.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = created;\n                }\n                rebalance(nearest, true);\n            }\n            if (((int)++) > (int)) {\n                doubleCapacity();\n            } \n            (int)++;\n            return created;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeNulls":"create"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:176","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[252],"tindex":"9f5ffa9d-3e4d-11e6-86e5-af419a7a63df","method":{"position":"com.google.gson.internal.bind.TypeAdapters:201","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        {\n            out.value(value);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Timestamp.class)"},"failures":[],"tindex":"9f6048be-3e4d-11e6-86e5-6d018a8dc6f8","method":{"position":"com.google.gson.internal.LinkedTreeMap:207","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (a == b) {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeOfT":"a","java.sql.Timestamp.class":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:726","type":"CtBinaryOperatorImpl","sourcecode":"value == 0"},"failures":[253,254,255,256],"tindex":"9f6048bf-3e4d-11e6-86e5-3b6090d5d408","method":{"position":"com.google.gson.stream.JsonWriter:476","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(long value) throws java.io.IOException {\n    if (value == 0) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write(java.lang.Long.toString(value));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"9f6048c0-3e4d-11e6-86e5-bdf1f5efc3e5","method":{"position":"com.google.gson.TreeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((com.google.gson.JsonDeserializer<T>) == null) {\n        return delegate().read(in);\n    } \n    com.google.gson.JsonElement com.google.gson.JsonElement = com.google.gson.internal.Streams.parse(in);\n    if (value.isJsonNull()) {\n        return null;\n    } \n    return com.google.gson.JsonDeserializer<T>.deserialize(value, com.google.gson.reflect.TypeToken<T>.getType(), com.google.gson.Gson.com.google.gson.JsonDeserializationContext);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[56,61,63,69,235,238],"tindex":"9f6048c1-3e4d-11e6-86e5-55b9cbbab081","method":{"position":"com.google.gson.FieldNamingPolicy:137","type":"CtMethodImpl","sourcecode":"private static java.lang.String upperCaseFirstLetter(java.lang.String name) {\n    if (name == null) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            int int = 0;\n            char char = name.charAt(index);\n            while (index < ((name.length()) - 1)) {\n                if (java.lang.Character.isLetter(firstCharacter)) {\n                    break;\n                } \n                fieldNameBuilder.append(firstCharacter);\n                firstCharacter = name.charAt((++index));\n            }\n            if (index == (name.length())) {\n                return fieldNameBuilder.toString();\n            } \n            if (!(java.lang.Character.isUpperCase(firstCharacter))) {\n                java.lang.String java.lang.String = com.google.gson.FieldNamingPolicy.modifyString(java.lang.Character.toUpperCase(firstCharacter), name, (++index));\n                return fieldNameBuilder.append(modifiedTarget).toString();\n            } else {\n                return name;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"name"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"9f606fd2-3e4d-11e6-86e5-092eee0fe5d0","method":{"position":"com.google.gson.TypeAdapter:194","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader reader) throws java.io.IOException {\n    if ((reader.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        reader.nextNull();\n        return null;\n    } \n    return com.google.gson.TypeAdapter.this.read(reader);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reader"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.JsonElement:103","type":"CtInvocationImpl","sourcecode":"isJsonArray()"},"failures":[],"tindex":"9f606fd3-3e4d-11e6-86e5-412a5344f48e","method":{"position":"com.google.gson.Gson:871","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        return null;\n    } \n    return ((T)(fromJson(new com.google.gson.internal.bind.JsonTreeReader(json), typeOfT)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.reflect.TypeToken:166","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.Class<?>"},"failures":[],"tindex":"9f606fd4-3e4d-11e6-86e5-9bb837fb9d12","method":{"position":"com.google.gson.Gson:127","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonParseException {\n    if (typeOfT instanceof java.lang.Class<?>) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    } else {\n        {\n            return ((T)(fromJson(json, typeOfT)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"9f606fd5-3e4d-11e6-86e5-ab2df47a4183","method":{"position":"com.google.gson.internal.Excluder:124","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if (skipDeserialize) {\n        in.skipValue();\n        return null;\n    } \n    return delegate().read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[35,39,41,45,50,51,257,258,24],"tindex":"9f6096e6-3e4d-11e6-86e5-bb3b4a49b3d5","method":{"position":"com.google.gson.internal.bind.TypeAdapters:245","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            out.value(value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:192","type":"CtInvocationImpl","sourcecode":"to.equals(from)"},"failures":[],"tindex":"9f6096e7-3e4d-11e6-86e5-d917ba45a58c","method":{"position":"com.google.gson.TreeTypeAdapter:103","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class<?> hierarchyType, java.lang.Object typeAdapter) {\n    if (typeAdapter.equals(typeAdapter)) {\n        {\n            return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , null , false , hierarchyType);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"typeAdapter","to":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"9f6096e8-3e4d-11e6-86e5-9ff4786ed922","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonNull"},"failures":[259,260,261],"tindex":"9f6096e9-3e4d-11e6-86e5-933f05592b06","method":{"position":"com.google.gson.JsonNull:60","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    if (other instanceof com.google.gson.JsonNull) {\n        {\n            return ((com.google.gson.JsonNull.this) == other) || (other instanceof com.google.gson.JsonNull);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"o":"other"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"9f60bdfa-3e4d-11e6-86e5-4f3c13acbab7","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            if (json == null) {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                    java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n                    com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:833","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NUMBER)"},"failures":[],"tindex":"9f60bdfb-3e4d-11e6-86e5-f7be85fa82aa","method":{"position":"com.google.gson.stream.JsonWriter:375","type":"CtMethodImpl","sourcecode":"private void replaceTop(int topOfStack) {\n    if (topOfStack == topOfStack) {\n        {\n            int[][((int) - 1)] = topOfStack;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"topOfStack","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"topOfStack"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:291","type":"CtBinaryOperatorImpl","sourcecode":"right != null"},"failures":[],"tindex":"9f60bdfc-3e4d-11e6-86e5-cfe3d7d9d51a","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:311","type":"CtMethodImpl","sourcecode":"private void replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> node, com.google.gson.internal.LinkedHashTreeMap.Node<K, V> replacement) {\n    if (node != null) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            node.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            if (replacement != null) {\n                replacement.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = parent;\n            } \n            if (parent != null) {\n                if ((parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == node) {\n                    parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = replacement;\n                } else {\n                    assert (parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == node;\n                    parent.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = replacement;\n                }\n            } else {\n                int int = (node.int) & ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[].int) - 1);\n                com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[][index] = replacement;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"right":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[262],"tindex":"9f60e50d-3e4d-11e6-86e5-41457023b250","method":{"position":"com.google.gson.JsonObject:100","type":"CtMethodImpl","sourcecode":"public void addProperty(java.lang.String property, java.lang.Boolean value) {\n    if (property != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            add(property, createJsonElement(value));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"property"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:86","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonArray"},"failures":[],"tindex":"9f60e50e-3e4d-11e6-86e5-ad8209911f86","method":{"position":"com.google.gson.Gson:617","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {\n    if (jsonElement instanceof com.google.gson.JsonArray) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n            toJson(jsonElement, writer);\n            return writer.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"9f60e50f-3e4d-11e6-86e5-0db242207c75","method":{"position":"com.google.gson.Gson:719","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\npublic <T>T fromJson(java.lang.String json, java.lang.reflect.Type typeOfT) throws com.google.gson.JsonSyntaxException {\n    if (json != null) {\n        {\n            if (json == null) {\n                return null;\n            } \n            java.io.StringReader java.io.StringReader = new java.io.StringReader(json);\n            T T = ((T)(fromJson(reader, typeOfT)));\n            return target;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonElement:119","type":"CtInvocationImpl","sourcecode":"isJsonPrimitive()"},"failures":[],"tindex":"9f60e510-3e4d-11e6-86e5-9568c7653f5f","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:75","type":"CtMethodImpl","sourcecode":"private void put(com.google.gson.JsonElement value) {\n    if ((java.lang.String) != null) {\n        if ((!(value.isJsonNull())) || (getSerializeNulls())) {\n            com.google.gson.JsonObject com.google.gson.JsonObject = ((com.google.gson.JsonObject)(peek()));\n            object.add(java.lang.String, value);\n        } \n        java.lang.String = null;\n    } else if (java.util.List<com.google.gson.JsonElement>.isEmpty()) {\n        com.google.gson.JsonElement = value;\n    } else {\n        com.google.gson.JsonElement com.google.gson.JsonElement = peek();\n        if (element instanceof com.google.gson.JsonArray) {\n            ((com.google.gson.JsonArray)(element)).add(value);\n        } else {\n            throw new java.lang.IllegalStateException();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:125","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[263,264,76,91,12,16,153,265,261],"tindex":"9f610c21-3e4d-11e6-86e5-6327c7e98186","method":{"position":"com.google.gson.JsonArray:57","type":"CtMethodImpl","sourcecode":"public void add(com.google.gson.JsonElement element) {\n    if (element instanceof com.google.gson.JsonObject) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (element == null) {\n                element = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            java.util.List<com.google.gson.JsonElement>.add(element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:76","type":"CtBinaryOperatorImpl","sourcecode":"(pendingName) != null"},"failures":[58,60,61,63,64,68,236,237,238],"tindex":"9f610c22-3e4d-11e6-86e5-37073cf76d69","method":{"position":"com.google.gson.FieldNamingPolicy:122","type":"CtMethodImpl","sourcecode":"private static java.lang.String separateCamelCase(java.lang.String name, java.lang.String separator) {\n    if (separator != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (int int = 0 ; i < (name.length()) ; i++) {\n                char char = name.charAt(i);\n                if ((java.lang.Character.isUpperCase(character)) && ((translation.length()) != 0)) {\n                    translation.append(separator);\n                } \n                translation.append(character);\n            }\n            return translation.toString();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"pendingName":"separator"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"9f610c23-3e4d-11e6-86e5-511144560829","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:180","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    T T = com.google.gson.internal.ObjectConstructor<T>.construct();\n    try {\n        in.beginObject();\n        while (in.hasNext()) {\n            java.lang.String java.lang.String = in.nextName();\n            com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField = java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>.get(name);\n            if ((field == null) || (!(field.boolean))) {\n                in.skipValue();\n            } else {\n                field.read(in, instance);\n            }\n        }\n    } catch (java.lang.IllegalStateException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.AssertionError(e);\n    }\n    in.endObject();\n    return instance;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:430","type":"CtFieldReadImpl","sourcecode":"serializeNulls"},"failures":[184,185,186,266,190],"tindex":"9f613334-3e4d-11e6-86e5-b389d4f2112d","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (deserialization) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeNulls":"deserialization"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.stream.JsonReader:290","type":"CtBinaryOperatorImpl","sourcecode":"in == null"},"failures":[],"tindex":"9f613335-3e4d-11e6-86e5-6105af5800a4","method":{"position":"com.google.gson.Gson:746","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(java.io.Reader json, java.lang.Class<T> classOfT) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException {\n    if (json == null) {\n        {\n            if (json == null) {\n                {\n                    com.google.gson.stream.JsonReader com.google.gson.stream.JsonReader = new com.google.gson.stream.JsonReader(json);\n                    java.lang.Object java.lang.Object = fromJson(jsonReader, classOfT);\n                    com.google.gson.Gson.assertFullConsumption(object, jsonReader);\n                    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new com.google.gson.JsonIOException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonSyntaxException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"in":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"9f613336-3e4d-11e6-86e5-230e2323262f","method":{"position":"com.google.gson.stream.JsonReader:1572","type":"CtMethodImpl","sourcecode":"private java.io.IOException syntaxError(java.lang.String message) throws java.io.IOException {\n    if (message == null) {\n        {\n            throw new com.google.gson.stream.MalformedJsonException(((((((message + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())) + \" path \") + (getPath())));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467240816911/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"message"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":34,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}