{"failureDictionary":{"com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext":253,"com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings":344,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":258,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":322,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":284,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":118,"com.google.gson.functional.StringTest.testStringValueDeserialization":117,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":301,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":40,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":86,"com.google.gson.JsonPrimitiveTest.testDeepCopy":317,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":231,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictNansAndInfinities":331,"com.google.gson.JsonParserTest.testParseEmptyString":309,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":79,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":291,"com.google.gson.internal.bind.JsonTreeWriterTest.testPrematureClose":327,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":179,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":103,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":283,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":263,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":212,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":213,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":109,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":178,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":162,"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":342,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":60,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":153,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":302,"com.google.gson.JsonParserTest.testParseUnquotedMultiWordStringFails":303,"com.google.gson.functional.ObjectTest.testSingletonLists":176,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInFr":241,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":294,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":337,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":41,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":286,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":90,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":157,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":222,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":335,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":347,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":95,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":187,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":1,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":32,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":38,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":54,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":24,"com.google.gson.JsonPrimitiveTest.testStringsAndChar":314,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":338,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":33,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":148,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":127,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":196,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":181,"com.google.gson.DefaultDateTypeAdapterTest.testDatePattern":238,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":55,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":76,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":112,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":39,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":229,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":169,"com.google.gson.functional.EnumTest.testEnumCaseMapping":108,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":146,"com.google.gson.functional.JsonTreeTest.testToJsonTree":290,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":96,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":214,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":278,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":280,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":75,"com.google.gson.JsonArrayTest.testSet":324,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":132,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":30,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":83,"com.google.gson.JsonPrimitiveTest.testEquals":316,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":102,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":259,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":208,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":180,"com.google.gson.functional.MapTest.testGeneralMapField":299,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":200,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":113,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":125,"com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization":237,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":184,"com.google.gson.JsonPrimitiveTest.testParsingStringAsBoolean":313,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":68,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":140,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":250,"com.google.gson.MixedStreamTest.testReadMixedStreamed":346,"com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities":341,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":227,"com.google.gson.JsonObjectTest.testDeepCopy":248,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":190,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":77,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":166,"com.google.gson.internal.bind.JsonElementReaderTest.testBooleans":339,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":6,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":145,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":245,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":69,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":141,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":150,"com.google.gson.JsonParserTest.testParseString":305,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":230,"com.google.gson.internal.bind.JsonTreeWriterTest.testEmptyWriter":332,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":3,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":94,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":10,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":167,"com.google.gson.JsonArrayTest.testDeepCopy":325,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":74,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":161,"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":242,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":273,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":85,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":144,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":165,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":292,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":260,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":336,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":128,"com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes":315,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullField":349,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":82,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":67,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":147,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":217,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":156,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":329,"com.google.gson.functional.ObjectTest.testNestedDeserialization":197,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":274,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":35,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":56,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":21,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":275,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":228,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":182,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":306,"com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes":320,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":44,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":121,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":168,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":171,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":310,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":151,"com.google.gson.JavaSerializationTest.testListIsSerializable":5,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":267,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":295,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":12,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":36,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":173,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":43,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":210,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":163,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":9,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":133,"com.google.gson.functional.MapTest.testInterfaceTypeMap":298,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":114,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":203,"com.google.gson.functional.CollectionTest.testSetDeserialization":220,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":23,"com.google.gson.functional.EnumTest.testEnumSet":101,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":233,"com.google.gson.JsonStreamParserTest.testIterator":254,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":50,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":270,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":78,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":226,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":11,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":22,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":224,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":53,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":97,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":61,"com.google.gson.functional.MapTest.testHashMapDeserialization":160,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":216,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":89,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":257,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":20,"com.google.gson.LongSerializationPolicyTest.testStringLongSerialization":255,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale":240,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":296,"com.google.gson.functional.MapTest.testSortedMap":170,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":26,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":348,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":206,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":134,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":49,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":232,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs":239,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":340,"com.google.gson.internal.bind.JsonElementReaderTest.testStrings":345,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":300,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":328,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":15,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":16,"com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber":319,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":107,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":202,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":287,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":72,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":51,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":204,"com.google.gson.functional.CollectionTest.testQueueDeserialization":223,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":256,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":124,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":106,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserialize":351,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":353,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":27,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":93,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":246,"com.google.gson.internal.bind.JsonElementReaderTest.testWrongType":343,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":191,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":192,"com.google.gson.functional.MapTest.testStringKeyDeserialization":172,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":136,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":142,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":195,"com.google.gson.JsonParserTest.testParseReader":304,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":221,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":87,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":47,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":99,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":354,"com.google.gson.JsonPrimitiveTest.testExponential":318,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":0,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":137,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":211,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":120,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":247,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":321,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":285,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":323,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":261,"com.google.gson.JavaSerializationTest.testMapIsSerializable":4,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":139,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":84,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":218,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":264,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":19,"com.google.gson.internal.bind.JsonTreeWriterTest.testStrictBoxedNansAndInfinities":333,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":119,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":62,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":122,"com.google.gson.JsonStreamParserTest.testCallingNextBeyondAvailableInput":251,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":37,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":14,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":193,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":282,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":123,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":265,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":289,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":269,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":42,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":116,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":268,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":174,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":91,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":80,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":154,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":18,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":57,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":158,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":194,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":66,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":110,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":185,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":183,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":71,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":293,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":98,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":59,"com.google.gson.functional.EnumTest.testEnumSubclass":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":73,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":2,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":186,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":266,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":219,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":129,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":271,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":48,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":92,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":281,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":28,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":111,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":175,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":100,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":65,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":276,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":131,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":188,"com.google.gson.JsonObjectTest.testAddingStringProperties":249,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":126,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":46,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":143,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":209,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":177,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":297,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":159,"com.google.gson.MixedStreamTest.testWriteNulls":236,"com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails":307,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":7,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":13,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":34,"com.google.gson.JsonPrimitiveTest.testBoolean":311,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":58,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":201,"com.google.gson.CommentsTest.testParseComments":235,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":244,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":155,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":272,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":279,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":149,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":135,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":81,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":70,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":189,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":25,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":207,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":29,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":45,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":215,"com.google.gson.JsonParserTest.testParseMixedArray":308,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale":243,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":31,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":138,"com.google.gson.internal.bind.JsonTreeWriterTest.testWriteAfterClose":334,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":17,"com.google.gson.JsonArrayTest.testRemove":326,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":130,"com.google.gson.functional.MapTest.testMapDeserialization":164,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":199,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":152,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":312,"com.google.gson.JsonStreamParserTest.testParseTwoStrings":252,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":52,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":105,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":288,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":225,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":330,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeNullObject":350,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":352,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":63,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":262,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":115,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":277,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":8,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":64},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))"},"failures":[],"tindex":"7d64c450-3e6a-11e6-a9e8-095200ccfbe5","method":{"position":"com.google.gson.internal.bind.JsonTreeWriter:162","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic com.google.gson.stream.JsonWriter value(double value) throws java.io.IOException {\n    if ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(d))) {\n        {\n            if ((!(isLenient())) && ((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value)))) {\n                throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + value));\n            } \n            put(new com.google.gson.JsonPrimitive(value));\n            return com.google.gson.internal.bind.JsonTreeWriter.this;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253493064/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"7d651271-3e6a-11e6-a9e8-e5df8a6387fe","method":{"position":"com.google.gson.JsonObject:171","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonArray getAsJsonArray(java.lang.String memberName) {\n    if (memberName != null) {\n        {\n            return ((com.google.gson.JsonArray)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253493064/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7d651272-3e6a-11e6-a9e8-c5b5d3e09f15","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginObject();\n    try {\n        for (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField : java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>.values()) {\n            if (boundField.writeField(value)) {\n                out.name(boundField.java.lang.String);\n                boundField.write(out, value);\n            } \n        }\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.AssertionError();\n    }\n    out.endObject();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:255","type":"CtBinaryOperatorImpl","sourcecode":"(left != null) && (right != null)"},"failures":[],"tindex":"7d653983-3e6a-11e6-a9e8-094c647ba673","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:626","type":"CtMethodImpl","sourcecode":"void reset(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if ((root != null) && (root != null)) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root ; n != null ; n = n.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n                n.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = stackTop;\n                stackTop = n;\n            }\n            com.google.gson.internal.LinkedHashTreeMap.AvlIterator.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = stackTop;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253493064/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"left":"root","right":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:334","type":"CtBinaryOperatorImpl","sourcecode":"(primitive.value) instanceof java.lang.Number"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"tindex":"7d653984-3e6a-11e6-a9e8-ef672c4500bd","method":{"position":"com.google.gson.Gson:780","type":"CtMethodImpl","sourcecode":"private static void assertFullConsumption(java.lang.Object obj, com.google.gson.stream.JsonReader reader) {\n    if (obj instanceof java.lang.Number) {\n        {\n            try {\n                if ((obj != null) && ((reader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n                    throw new com.google.gson.JsonIOException(\"JSON document was not fully consumed.\");\n                } \n            } catch (com.google.gson.stream.MalformedJsonException e) {\n                throw new com.google.gson.JsonSyntaxException(e);\n            } catch (java.io.IOException e) {\n                throw new com.google.gson.JsonIOException(e);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253493064/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"primitive":"obj","value":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7d656095-3e6a-11e6-a9e8-677aa1f55d93","method":{"position":"com.google.gson.internal.bind.TypeAdapters:482","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.InetAddress read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.net.InetAddress.getByName(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:872","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,15,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,37,271,272,273,40,41,274,275,276,277,278,279,280,55,56,281,65,68,282,73,75,283,92,284,96,285,286,103,113,114,116,287,288,289,290,291,292,293,294,295,296,146,147,297,154,298,299,300,301,205,206,207,208,209,210,211,302,224,226,227,229,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"7d6587a6-3e6a-11e6-a9e8-99eb5b5da2fd","method":{"position":"com.google.gson.JsonPrimitive:273","type":"CtMethodImpl","sourcecode":"private static boolean isPrimitiveOrString(java.lang.Object target) {\n    if (target == null) {\n        {\n            if (target instanceof java.lang.String) {\n                return true;\n            } \n            java.lang.Class<?> java.lang.Class<?> = target.getClass();\n            for (java.lang.Class<?> java.lang.Class<?> : com.google.gson.JsonPrimitive.com.google.gson.JsonPrimitive.java.lang.Class<?>[]) {\n                if (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\n                    return true;\n                } \n            }\n            return false;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253493064/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"target"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"7d6587a7-3e6a-11e6-a9e8-d51fdd2b5bfa","method":{"position":"com.google.gson.internal.bind.TypeAdapters:482","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.InetAddress read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    return java.net.InetAddress.getByName(in.nextString());\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.IllegalAccessException","condition":{"position":"com.google.gson.reflect.TypeToken:136","type":"CtBinaryOperatorImpl","sourcecode":"(type) instanceof java.lang.reflect.GenericArrayType"},"failures":[346,347,9,10,11,14,16,17,18,19,258,21,22,259,23,348,349,350,260,351,24,25,26,27,29,33,35,38,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,70,352,81,98,286,107,109,110,111,116,291,292,293,294,139,141,142,144,145,146,147,148,149,150,151,152,153,155,157,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,211,212,213,220,306],"tindex":"7d65aeb8-3e6a-11e6-a9e8-4761dd281f40","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:101","type":"CtMethodImpl","sourcecode":"@java.lang.Override\nvoid read(com.google.gson.stream.JsonReader reader, java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.reflect.GenericArrayType) {\n        {\n            java.lang.Object java.lang.Object = com.google.gson.TypeAdapter<?>.read(reader);\n            if ((fieldValue != null) || (!isPrimitive)) {\n                field.set(value, fieldValue);\n            } \n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253493064/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.IllegalAccessException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"type":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:702","type":"CtBinaryOperatorImpl","sourcecode":"(last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT)) || (last == (com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT))"},"failures":[],"tindex":"7d65aeb9-3e6a-11e6-a9e8-db936b52f2b5","method":{"position":"com.google.gson.internal.bind.JsonTreeReader:41","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic int read(char[] buffer, int offset, int count) throws java.io.IOException {\n    if ((offset == offset) || (last == count)) {\n        {\n            throw new java.lang.AssertionError();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253493064/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"count","last":"offset","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"offset"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"7d65aeba-3e6a-11e6-a9e8-e99ad235668d","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    java.lang.String java.lang.String = java.text.DateFormat.format(value);\n    out.value(dateFormatAsString);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:455","type":"CtBinaryOperatorImpl","sourcecode":"(typeAdapter instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)"},"failures":[],"tindex":"7d65d5cb-3e6a-11e6-a9e8-4916a2c9b15a","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if ((src instanceof com.google.gson.JsonSerializer<?>) || (typeAdapter instanceof com.google.gson.JsonDeserializer<?>)) {\n        {\n            return toJsonTree(src);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253493064/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"typeAdapter":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:250","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[353,21,354,22],"tindex":"7d65d5cc-3e6a-11e6-a9e8-cbe48814ea7e","method":{"position":"com.google.gson.internal.Excluder:96","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy exclusionStrategy, boolean serialization, boolean deserialization) {\n    if (serialization) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467253493064/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            if (serialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            if (deserialization) {\n                result.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>);\n                result.java.util.List<com.google.gson.ExclusionStrategy>.add(exclusionStrategy);\n            } \n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"serializeSpecialFloatingPointValues":"serialization"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:208","type":"CtBinaryOperatorImpl","sourcecode":"(peek()) == (com.google.gson.stream.JsonToken.NAME)"},"failures":[],"tindex":"7d65d5cd-3e6a-11e6-a9e8-c57aa29d050f","method":{"position":"com.google.gson.Gson:491","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement toJsonTree(java.lang.Object src, java.lang.reflect.Type typeOfSrc) {\n    com.google.gson.internal.bind.JsonTreeWriter com.google.gson.internal.bind.JsonTreeWriter = new com.google.gson.internal.bind.JsonTreeWriter();\n    toJson(src, typeOfSrc, writer);\n    return writer.get();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"src","com.google.gson.stream.JsonToken.NAME":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":14,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}