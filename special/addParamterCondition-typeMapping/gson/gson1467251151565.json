{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":152,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":322,"com.google.gson.functional.StringTest.testStringValueDeserialization":321,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":451,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":96,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":197,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":282,"com.google.gson.stream.JsonWriterTest.testRepeatedName":448,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":220,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":402,"com.google.gson.MixedStreamTest.testWriteLenient":3,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":332,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":373,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":171,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":102,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":371,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":423,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":200,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":309,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":185,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":126,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":255,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":357,"com.google.gson.functional.ObjectTest.testSingletonLists":97,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":354,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":180,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":217,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":298,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":293,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":385,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":128,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":22,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":162,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":331,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":249,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":198,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":80,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":177,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":431,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":79,"com.google.gson.functional.EnumTest.testEnumCaseMapping":305,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":442,"com.google.gson.functional.JsonTreeTest.testToJsonTree":320,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":294,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":248,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":260,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":269,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":53,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":181,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":277,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":445,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":108,"com.google.gson.functional.ObjectTest.testNullDeserialization":394,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":404,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":329,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":381,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":453,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":429,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":20,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":391,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":263,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":206,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":349,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":205,"com.google.gson.stream.JsonWriterTest.testValueWithoutName":452,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":292,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":208,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":268,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":395,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":191,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":281,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":195,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":333,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":276,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":59,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":210,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":92,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":196,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":99,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":160,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":377,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":437,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":28,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":88,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":355,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":241,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":253,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":6,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":211,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":41,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":94,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":414,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":140,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":176,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":407,"com.google.gson.functional.CollectionTest.testSetDeserialization":113,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":310,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":380,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":435,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":192,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":254,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":23,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":71,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":272,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":386,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":35,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":130,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":142,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":202,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":301,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":426,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":444,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":285,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":154,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":151,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":225,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":42,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":55,"com.google.gson.functional.MapTest.testSortedMap":82,"com.google.gson.functional.MapTest.testMapSerialization":78,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":153,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":194,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":410,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":340,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":419,"com.google.gson.functional.MapTest.testComplexKeysSerialization":89,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":434,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":93,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":304,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":406,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":65,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":237,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":302,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":124,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":425,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":222,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":393,"com.google.gson.functional.MapTest.testStringKeyDeserialization":91,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":344,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":95,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":184,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":156,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":299,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":127,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":345,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":324,"com.google.gson.functional.MapTest.testMapSerializationEmpty":90,"com.google.gson.functional.CollectionTest.testQueueSerialization":106,"com.google.gson.JavaSerializationTest.testMapIsSerializable":1,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":278,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":110,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":12,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":455,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":323,"com.google.gson.functional.FieldNamingTest.testIdentity":420,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":24,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":143,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":396,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":224,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":319,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":369,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":178,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":131,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":366,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":287,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":439,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":274,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":11,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":66,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":48,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":259,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":436,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":135,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":189,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":314,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":266,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":334,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":297,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":34,"com.google.gson.functional.EnumTest.testEnumSubclass":45,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":129,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":384,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":18,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":199,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":213,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":232,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":368,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":367,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":29,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":338,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":438,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":98,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":223,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":449,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":370,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":364,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":52,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":50,"com.google.gson.CommentsTest.testParseComments":121,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":251,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":405,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":359,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":372,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":14,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":342,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":409,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":457,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":307,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":257,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":411,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":183,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":346,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":13,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":10,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":280,"com.google.gson.functional.MapTest.testMapDeserialization":73,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":337,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":67,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":356,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":246,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":64,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":238,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":46,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":318,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":265,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":397,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":227,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":315,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":240,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":256,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":236,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":365,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":81,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":119,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":123,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":25,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":201,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":433,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":190,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":182,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":273,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":416,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":44,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":421,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":306,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":69,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":187,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":117,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":125,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":286,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":363,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":139,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":100,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":212,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":245,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":161,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":203,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":61,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":214,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":400,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":376,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":47,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":270,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":422,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":311,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":215,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":62,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":360,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":58,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":361,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":283,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":104,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":243,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":204,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":17,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":43,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":63,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":158,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":412,"com.google.gson.functional.MapTest.testGeneralMapField":86,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":374,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":175,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":312,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":341,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":40,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":84,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":21,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":262,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":348,"com.google.gson.MixedStreamTest.testReadMixedStreamed":138,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":75,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":271,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":57,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":132,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":353,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":432,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":0,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":141,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":279,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":76,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":68,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":54,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":165,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":447,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":51,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":144,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":109,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":261,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":362,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":26,"com.google.gson.functional.ObjectTest.testNestedDeserialization":401,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":250,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":155,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":239,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":430,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":149,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":77,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":221,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":325,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":33,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":228,"com.google.gson.JavaSerializationTest.testListIsSerializable":2,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":174,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":335,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":115,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":231,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":219,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":70,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":85,"com.google.gson.functional.MapTest.testInterfaceTypeMap":83,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":339,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":313,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":242,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":303,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":235,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":441,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":428,"com.google.gson.MixedStreamTest.testWriteClosed":137,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":157,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":31,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":295,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":375,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":36,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":30,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":16,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":148,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":399,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":291,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":247,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":378,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":107,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":166,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":168,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":233,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":111,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":284,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":145,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":8,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":209,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":317,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":267,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":408,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":15,"com.google.gson.functional.CollectionTest.testQueueDeserialization":118,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":193,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":454,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":328,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":167,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":290,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":74,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":392,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":101,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":350,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":103,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":134,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":114,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":226,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":388,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":415,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":122,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":296,"com.google.gson.ObjectTypeAdapterTest.testSerialize":440,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":347,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":172,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":417,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":37,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":326,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":186,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":456,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":327,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":56,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":218,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":316,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":308,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":358,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":32,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":398,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":120,"com.google.gson.functional.ObjectTest.testEmptyStringDeserialization":383,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":379,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":288,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":39,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":164,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":173,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":112,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":336,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":252,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":289,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":230,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":146,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":169,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":49,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":300,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":179,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":258,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":387,"com.google.gson.functional.ObjectTest.testNestedSerialization":389,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":150,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":330,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":351,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":87,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":413,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":60,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":4,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":133,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":7,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":382,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":207,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":244,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":352,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":275,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":443,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":264,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":390,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":163,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":19,"com.google.gson.functional.CollectionTest.testSetSerialization":424,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":216,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":170,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":9,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":27,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":105,"com.google.gson.MixedStreamTest.testWriteInvalidState":136,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":188,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":343,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":159,"com.google.gson.stream.JsonWriterTest.testBooleans":446,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":418,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":403,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":147,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":427,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":38,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":72,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":450,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":5},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"605f9fcc-3e64-11e6-912b-29223603d4c3","method":{"position":"com.google.gson.TreeTypeAdapter:92","type":"CtMethodImpl","sourcecode":"public static com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken<?> exactType, java.lang.Object typeAdapter) {\n    boolean boolean = (exactType.getType()) == (exactType.getRawType());\n    return new com.google.gson.TreeTypeAdapter.SingleTypeFactory(typeAdapter , exactType , matchRawType , null);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"typeAdapter"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"606014fd-3e64-11e6-912b-2375f225514d","method":{"position":"com.google.gson.internal.Streams:39","type":"CtMethodImpl","sourcecode":"public static com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader reader) throws com.google.gson.JsonParseException {\n    boolean boolean = true;\n    try {\n        reader.peek();\n        isEmpty = false;\n        return com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.read(reader);\n    } catch (java.io.EOFException e) {\n        if (isEmpty) {\n            return com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n        } \n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (com.google.gson.stream.MalformedJsonException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"reader"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:818","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"60603c0e-3e64-11e6-912b-41fdd17ed673","method":{"position":"com.google.gson.FieldNamingPolicy:163","type":"CtMethodImpl","sourcecode":"private static java.lang.String modifyString(char firstCharacter, java.lang.String srcString, int indexOfSubstring) {\n    if (indexOfSubstring != indexOfSubstring) {\n        {\n            if (indexOfSubstring == indexOfSubstring) {\n                {\n                    return indexOfSubstring < (srcString.length()) ? firstCharacter + (srcString.substring(indexOfSubstring)) : java.lang.String.valueOf(firstCharacter);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"indexOfSubstring","com.google.gson.stream.JsonReader.PEEKED_NONE":"indexOfSubstring"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl","sourcecode":"field.isSynthetic()"},"failures":[],"tindex":"60603c0f-3e64-11e6-912b-256437ccfeec","method":{"position":"com.google.gson.FieldNamingPolicy:72","type":"CtMethodImpl","sourcecode":"public java.lang.String translateName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.FieldNamingPolicy.upperCaseFirstLetter(com.google.gson.FieldNamingPolicy.separateCamelCase(f.getName(), \" \"));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.GenericArrayType"},"failures":[],"tindex":"60606320-3e64-11e6-912b-8b5c93b2b14e","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:808","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean remove(java.lang.Object o) {\n    if (o instanceof java.lang.reflect.GenericArrayType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (!(o instanceof java.util.Map.Entry)) {\n                return false;\n            } \n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByEntry(((java.util.Map.Entry<?, ?>)(o)));\n            if (node == null) {\n                return false;\n            } \n            removeInternal(node, true);\n            return true;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"o"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"60606321-3e64-11e6-912b-89bb26594507","method":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:39","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic T read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    return com.google.gson.TypeAdapter<T>.read(in);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"60608a32-3e64-11e6-912b-25288c107070","method":{"position":"com.google.gson.internal.bind.TypeAdapters:473","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URI value) throws java.io.IOException {\n    out.value((value == null ? null : value.toASCIIString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:181","type":"CtBinaryOperatorImpl","sourcecode":"(type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))"},"failures":[],"tindex":"60608a33-3e64-11e6-912b-573cd32c5f0d","method":{"position":"com.google.gson.reflect.TypeToken:122","type":"CtMethodImpl","sourcecode":"@java.lang.Deprecated\npublic boolean isAssignableFrom(java.lang.reflect.Type from) {\n    if ((from instanceof java.lang.reflect.ParameterizedType) && (!(from.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n        {\n            if (from == null) {\n                return false;\n            } \n            if (java.lang.reflect.Type.equals(from)) {\n                return true;\n            } \n            if ((java.lang.reflect.Type) instanceof java.lang.Class<?>) {\n                return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from));\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.ParameterizedType) {\n                return com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), new java.util.HashMap<java.lang.String, java.lang.reflect.Type>());\n            } else if ((java.lang.reflect.Type) instanceof java.lang.reflect.GenericArrayType) {\n                return (java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(from))) && (com.google.gson.reflect.TypeToken.isAssignableFrom(from, ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type))));\n            } else {\n                throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(java.lang.reflect.Type, java.lang.Class.java.lang.Class.java.lang.Class, java.lang.reflect.ParameterizedType.java.lang.reflect.ParameterizedType.java.lang.Class, java.lang.reflect.GenericArrayType.java.lang.reflect.GenericArrayType.java.lang.Class);\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.String.class":"from","type":"from"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:123","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"6060b144-3e64-11e6-912b-234cfed55037","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:223","type":"CtMethodImpl","sourcecode":"private boolean equal(java.lang.Object a, java.lang.Object b) {\n    if (b == null) {\n        {\n            return (a == b) || ((a != null) && (a.equals(b)));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"from":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:127","type":"CtInvocationImpl","sourcecode":"raw.isInterface()"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"6060b145-3e64-11e6-912b-7bbf8584b18c","method":{"position":"com.google.gson.internal.Excluder:215","type":"CtMethodImpl","sourcecode":"private boolean isAnonymousOrLocal(java.lang.Class<?> clazz) {\n    if (clazz.isInterface()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return (!(java.lang.Enum.java.lang.Enum.java.lang.Class.isAssignableFrom(clazz))) && ((clazz.isAnonymousClass()) || (clazz.isLocalClass()));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"raw":"clazz"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"6060b146-3e64-11e6-912b-adbd5dba1602","method":{"position":"com.google.gson.Gson:285","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    float float = value.floatValue();\n    checkValidFloatingPoint(floatValue);\n    out.value(value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:184","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.NUMBER)) && (token != (com.google.gson.stream.JsonToken.STRING))"},"failures":[],"tindex":"6060d857-3e64-11e6-912b-33379ac48af1","method":{"position":"com.google.gson.internal.$Gson$Types:471","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object other) {\n    return (other instanceof java.lang.reflect.ParameterizedType) && (com.google.gson.internal.$Gson$Types.equals(com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl.this, ((java.lang.reflect.ParameterizedType)(other))));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"other","token":"other","com.google.gson.stream.JsonToken.NUMBER":"other"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:274","type":"CtBinaryOperatorImpl","sourcecode":"target instanceof java.lang.String"},"failures":[124,125],"tindex":"6060d858-3e64-11e6-912b-0d7f47ab7ce2","method":{"position":"com.google.gson.internal.LinkedTreeMap:276","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (key instanceof java.lang.String) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"target":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonArray:58","type":"CtBinaryOperatorImpl","sourcecode":"element == null"},"failures":[126],"tindex":"6060d859-3e64-11e6-912b-394c61814b32","method":{"position":"com.google.gson.JsonObject:53","type":"CtMethodImpl","sourcecode":"public void add(java.lang.String property, com.google.gson.JsonElement value) {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (value == null) {\n                value = com.google.gson.JsonNull.com.google.gson.JsonNull.com.google.gson.JsonNull;\n            } \n            com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.put(property, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"element":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"6060ff6a-3e64-11e6-912b-511624209f3f","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Time read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.util.Date java.util.Date = java.text.DateFormat.parse(in.nextString());\n        return new java.sql.Time(date.getTime());\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.JsonPrimitive:132","type":"CtInvocationImpl","sourcecode":"isBoolean()"},"failures":[],"tindex":"6060ff6b-3e64-11e6-912b-c58a3c16b6d6","method":{"position":"com.google.gson.Gson:617","type":"CtMethodImpl","sourcecode":"public java.lang.String toJson(com.google.gson.JsonElement jsonElement) {\n    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n    toJson(jsonElement, writer);\n    return writer.toString();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtInvocationImpl","sourcecode":"toResolve.isInterface()"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,6,143,144,145,146,147,8,9,10,11,12,13,148,149,14,15,16,17,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,18,175,19,176,20,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,27,223,224,28,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,29,240,241,30,242,243,244,31,245,246,247,248,249,250,32,251,252,33,34,35,253,254,255,36,37,38,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,44,45,302,303,304,305,306,48,49,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,125,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,54,55,57,58,59,60,61,352,353,354,355,62,356,357,358,63,64,359,360,361,362,65,363,364,74,80,83,85,86,89,96,365,366,367,368,369,97,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,99,391,392,393,394,395,396,397,100,398,399,101,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,102,421,422,112,113,423,424,116,119,425,120,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"tindex":"6060ff6c-3e64-11e6-912b-d995ff7b50c4","method":{"position":"com.google.gson.internal.Primitives:60","type":"CtMethodImpl","sourcecode":"private static void add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>> forward, java.util.Map<java.lang.Class<?>, java.lang.Class<?>> backward, java.lang.Class<?> key, java.lang.Class<?> value) {\n    if (key.isInterface()) {\n        {\n            forward.put(key, value);\n            backward.put(value, key);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"key"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:162","type":"CtBinaryOperatorImpl","sourcecode":"toGenericComponentType instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"6061267d-3e64-11e6-912b-37f619b1d629","method":{"position":"com.google.gson.internal.$Gson$Types:411","type":"CtMethodImpl","sourcecode":"private static int indexOf(java.lang.Object[] array, java.lang.Object toFind) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        if (toFind.equals(array[i])) {\n            return i;\n        } \n    }\n    throw new java.util.NoSuchElementException();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toGenericComponentType":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtBinaryOperatorImpl","sourcecode":"toResolve instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"6061267e-3e64-11e6-912b-37118baec936","method":{"position":"com.google.gson.reflect.TypeToken:253","type":"CtMethodImpl","sourcecode":"private static java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type token, java.lang.Class<?>... expected) {\n    if (token instanceof java.lang.reflect.ParameterizedType) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"Unexpected type. Expected one of: \");\n            for (java.lang.Class<?> java.lang.Class<?> : expected) {\n                exceptionMessage.append(clazz.getName()).append(\", \");\n            }\n            exceptionMessage.append(\"but got: \").append(token.getClass().getName()).append(\", for type token: \").append(token.toString()).append('.');\n            return new java.lang.AssertionError(exceptionMessage.toString());\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"toResolve":"token"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"6061267f-3e64-11e6-912b-bb34662ed294","method":{"position":"com.google.gson.internal.bind.TypeAdapters:414","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.StringBuilder value) throws java.io.IOException {\n    out.value((value == null ? null : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:43","type":"CtBinaryOperatorImpl","sourcecode":"annotation == null"},"failures":[311,312,313,315,441,316,404,405,406,407,408],"tindex":"60612680-3e64-11e6-912b-7956588e7f14","method":{"position":"com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:50","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nstatic com.google.gson.TypeAdapter<?> getTypeAdapter(com.google.gson.internal.ConstructorConstructor constructorConstructor, com.google.gson.Gson gson, com.google.gson.reflect.TypeToken<?> fieldType, com.google.gson.annotations.JsonAdapter annotation) {\n    if (annotation == null) {\n        {\n            java.lang.Class<?> java.lang.Class<?> = annotation.value();\n            if (com.google.gson.TypeAdapter.com.google.gson.TypeAdapter.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapter<?>> java.lang.Class<com.google.gson.TypeAdapter<?>> = ((java.lang.Class<com.google.gson.TypeAdapter<?>>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapter)).construct();\n            } \n            if (com.google.gson.TypeAdapterFactory.com.google.gson.TypeAdapterFactory.java.lang.Class.isAssignableFrom(value)) {\n                java.lang.Class<com.google.gson.TypeAdapterFactory> java.lang.Class<com.google.gson.TypeAdapterFactory> = ((java.lang.Class<com.google.gson.TypeAdapterFactory>)(value));\n                return constructorConstructor.get(com.google.gson.reflect.TypeToken.get(typeAdapterFactory)).construct().create(gson, fieldType);\n            } \n            throw new java.lang.IllegalArgumentException(\"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.\");\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"annotation":"annotation"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtBinaryOperatorImpl","sourcecode":"(java.lang.Double.isNaN(d)) || (java.lang.Double.isInfinite(d))"},"failures":[],"tindex":"60614d91-3e64-11e6-912b-fd649405e72b","method":{"position":"com.google.gson.internal.Excluder:69","type":"CtMethodImpl","sourcecode":"public com.google.gson.internal.Excluder withVersion(double ignoreVersionsAfter) {\n    if ((java.lang.Double.isNaN(ignoreVersionsAfter)) || (java.lang.Double.isInfinite(d))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.Excluder com.google.gson.internal.Excluder = clone();\n            result.double = ignoreVersionsAfter;\n            return result;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"d":"ignoreVersionsAfter"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"60614d92-3e64-11e6-912b-19f49a266c18","method":{"position":"com.google.gson.internal.bind.TypeAdapters:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    out.value((value == null ? \"null\" : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:306","type":"CtBinaryOperatorImpl","sourcecode":"longSerializationPolicy == (com.google.gson.LongSerializationPolicy.DEFAULT)"},"failures":[442,443,177,444],"tindex":"60614d93-3e64-11e6-912b-11efb7c024a4","method":{"position":"com.google.gson.GsonBuilder:261","type":"CtMethodImpl","sourcecode":"public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy serializationPolicy) {\n    if (serializationPolicy == serializationPolicy) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.GsonBuilder.this.com.google.gson.LongSerializationPolicy = serializationPolicy;\n            return com.google.gson.GsonBuilder.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"longSerializationPolicy":"serializationPolicy","com.google.gson.LongSerializationPolicy.DEFAULT":"serializationPolicy"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"60614d94-3e64-11e6-912b-2f2c58bfc189","method":{"position":"com.google.gson.internal.bind.TypeAdapters:385","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigInteger read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigInteger(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"array == null"},"failures":[445],"tindex":"60614d95-3e64-11e6-912b-39a0a9be0620","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if (src == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return toJsonTree(src);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"array":"src"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:596","type":"CtBinaryOperatorImpl","sourcecode":"result != (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"606174a6-3e64-11e6-912b-4937173c2a02","method":{"position":"com.google.gson.FieldNamingPolicy:163","type":"CtMethodImpl","sourcecode":"private static java.lang.String modifyString(char firstCharacter, java.lang.String srcString, int indexOfSubstring) {\n    if (indexOfSubstring != indexOfSubstring) {\n        {\n            if (indexOfSubstring == indexOfSubstring) {\n                {\n                    return indexOfSubstring < (srcString.length()) ? firstCharacter + (srcString.substring(indexOfSubstring)) : java.lang.String.valueOf(firstCharacter);\n                }\n            } else {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"result":"indexOfSubstring","com.google.gson.stream.JsonReader.PEEKED_NONE":"indexOfSubstring"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:378","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[446,447,448,449,450,451,452,128,129,453,454,455,246,456,298,306,48,347,349,350,54,59,457,389,102,423,437],"tindex":"606174a7-3e64-11e6-912b-491912691cea","method":{"position":"com.google.gson.stream.JsonWriter:447","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(boolean value) throws java.io.IOException {\n    if (value) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            writeDeferredName();\n            beforeValue(false);\n            java.io.Writer.write((value ? \"true\" : \"false\"));\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"606174a8-3e64-11e6-912b-1be17fb9d451","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginObject();\n    try {\n        for (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField : java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>.values()) {\n            if (boundField.writeField(value)) {\n                out.name(boundField.java.lang.String);\n                boundField.write(out, value);\n            } \n        }\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.AssertionError();\n    }\n    out.endObject();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtBinaryOperatorImpl","sourcecode":"name == null"},"failures":[],"tindex":"606174a9-3e64-11e6-912b-6f97eb5280d0","method":{"position":"com.google.gson.JsonObject:141","type":"CtMethodImpl","sourcecode":"public boolean has(java.lang.String memberName) {\n    if (memberName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.containsKey(memberName);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"name":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:180","type":"CtUnaryOperatorImpl","sourcecode":"!(b instanceof java.lang.reflect.GenericArrayType)"},"failures":[],"tindex":"60619bba-3e64-11e6-912b-f5ef470df339","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:303","type":"CtMethodImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> removeInternalByKey(java.lang.Object key) {\n    if (!(key instanceof java.lang.reflect.GenericArrayType)) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = findByObject(key);\n            if (node != null) {\n                removeInternal(node, true);\n            } \n            return node;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"b":"key"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"60619bbb-3e64-11e6-912b-9d1f56861fd2","method":{"position":"com.google.gson.stream.JsonReader:1448","type":"CtMethodImpl","sourcecode":"private boolean skipTo(java.lang.String toFind) throws java.io.IOException {\n    if (toFind != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            outer : for ( ; (((int) + (toFind.length())) <= (int)) || (fillBuffer(toFind.length())) ; (int)++) {\n                if ((char[][int]) == '\\n') {\n                    (int)++;\n                    int = (int) + 1;\n                    continue;\n                } \n                for (int int = 0 ; c < (toFind.length()) ; c++) {\n                    if ((char[][((int) + c)]) != (toFind.charAt(c))) {\n                        continue outer;\n                    } \n                }\n                return true;\n            }\n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"toFind"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"60619bbc-3e64-11e6-912b-d5f5b91f594c","method":{"position":"com.google.gson.stream.JsonWriter:413","type":"CtMethodImpl","sourcecode":"public com.google.gson.stream.JsonWriter value(java.lang.String value) throws java.io.IOException {\n    if ((value != null) && (!(\"\".equals(datePattern.trim())))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                return nullValue();\n            } \n            writeDeferredName();\n            beforeValue(false);\n            string(value);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:384","type":"CtVariableReadImpl","sourcecode":"insert"},"failures":[],"tindex":"60619bbd-3e64-11e6-912b-ff3d16b655f6","method":{"position":"com.google.gson.stream.JsonReader:1331","type":"CtMethodImpl","sourcecode":"private int nextNonWhitespace(boolean throwOnEof) throws java.io.IOException {\n    if (throwOnEof) {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            int int = int;\n            int int = int;\n            while (true) {\n                if (p == l) {\n                    int = p;\n                    if (!(fillBuffer(1))) {\n                        break;\n                    } \n                    p = int;\n                    l = int;\n                } \n                int int = buffer[(p++)];\n                if (c == '\\n') {\n                    (int)++;\n                    int = p;\n                    continue;\n                } else if (((c == ' ') || (c == '\\r')) || (c == '\\t')) {\n                    continue;\n                } \n                if (c == '/') {\n                    int = p;\n                    if (p == l) {\n                        (int)--;\n                        boolean boolean = fillBuffer(2);\n                        (int)++;\n                        if (!charsLoaded) {\n                            return c;\n                        } \n                    } \n                    checkLenient();\n                    char char = buffer[int];\n                    switch (peek) {\n                        case '*' :\n                            (int)++;\n                            if (!(skipTo(\"*/\"))) {\n                                throw syntaxError(\"Unterminated comment\");\n                            } \n                            p = (int) + 2;\n                            l = int;\n                            continue;\n                        case '/' :\n                            (int)++;\n                            skipToEndOfLine();\n                            p = int;\n                            l = int;\n                            continue;\n                        default :\n                            return c;\n                    }\n                } else if (c == '#') {\n                    int = p;\n                    checkLenient();\n                    skipToEndOfLine();\n                    p = int;\n                    l = int;\n                } else {\n                    int = p;\n                    return c;\n                }\n            }\n            if (throwOnEof) {\n                throw new java.io.EOFException(((((\"End of input\" + \" at line \") + (getLineNumber())) + \" column \") + (getColumnNumber())));\n            } else {\n                return -1;\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467250502839/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"insert":"throwOnEof"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":34,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}