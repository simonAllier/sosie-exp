{"failureDictionary":{"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":107,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":238,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":43,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":177,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":86,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":96,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":114,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":102,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":119,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":140,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":124,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":87,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":88,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":91,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":128,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":138,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":63,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":72,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":248,"com.google.gson.functional.ObjectTest.testSingletonLists":136,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":105,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":133,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":217,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":255,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":29,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":151,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":163,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":199,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":212,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":53,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":54,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":170,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":42,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":201,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":167,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":143,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":46,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":231,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":89,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":113,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":246,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":81,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":252,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":258,"com.google.gson.functional.JsonTreeTest.testToJsonTree":21,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":253,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":19,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":209,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":215,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":79,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":36,"com.google.gson.JsonPrimitiveTest.testEquals":14,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":249,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":182,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":50,"com.google.gson.functional.MapTest.testGeneralMapField":84,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":141,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":220,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":38,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":194,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":148,"com.google.gson.MixedStreamTest.testReadMixedStreamed":28,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":197,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":158,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":257,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":17,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":132,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":242,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":34,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":116,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":18,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":160,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":47,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":103,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":57,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":236,"com.google.gson.JsonPrimitiveTest.testEqualsDoesNotEquateStringAndNonStringTypes":13,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":190,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":259,"com.google.gson.JsonPrimitiveTest.testFloatEqualsDouble":7,"com.google.gson.functional.ObjectTest.testNestedDeserialization":168,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":198,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":179,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":203,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":185,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":157,"com.google.gson.JsonPrimitiveTest.testEqualsAcrossTypes":16,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":30,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":32,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":144,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":101,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":67,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":134,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":230,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":206,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":70,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":106,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":127,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":233,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":83,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":33,"com.google.gson.functional.MapTest.testInterfaceTypeMap":82,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":196,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":208,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":223,"com.google.gson.functional.CollectionTest.testSetDeserialization":90,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":64,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":94,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":147,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":237,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":71,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":152,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":69,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":263,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsLong":10,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":35,"com.google.gson.MixedStreamTest.testWriteClosed":27,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":181,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":218,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":142,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":211,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":73,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":207,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":188,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":165,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":184,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":176,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":227,"com.google.gson.JsonPrimitiveTest.testShortEqualsLong":5,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":256,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":118,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":145,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":214,"com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger":1,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":58,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":178,"com.google.gson.JsonPrimitiveTest.testByteEqualsShort":15,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":48,"com.google.gson.JsonPrimitiveTest.testByteEqualsBigInteger":6,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":122,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":60,"com.google.gson.functional.MapTest.testComplexKeysSerialization":85,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":235,"com.google.gson.JsonPrimitiveTest.testLongEqualsBigInteger":8,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":171,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":95,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":222,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":254,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":20,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":224,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":239,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":187,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":23,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":44,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":59,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":97,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":80,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":159,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":166,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":243,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":24,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":154,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":228,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":180,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":52,"com.google.gson.ObjectTypeAdapterTest.testSerialize":260,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":241,"com.google.gson.JsonPrimitiveTest.testEqualsIntegerAndBigInteger":3,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":125,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":175,"com.google.gson.JsonPrimitiveTest.testFloatEqualsBigDecimal":0,"com.google.gson.functional.FieldNamingTest.testIdentity":123,"com.google.gson.JsonPrimitiveTest.testByteEqualsInteger":9,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":120,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":74,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":189,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":161,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":100,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":135,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":226,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":93,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":108,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":62,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":262,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":174,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":65,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":164,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":45,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":78,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":129,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":146,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":25,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":245,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":117,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":216,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":68,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":150,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":193,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":56,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":126,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":200,"com.google.gson.JsonPrimitiveTest.testShortEqualsInteger":12,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":234,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":232,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":191,"com.google.gson.JsonPrimitiveTest.testIntegerEqualsBigInteger":11,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":110,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":130,"com.google.gson.JsonPrimitiveTest.testByteEqualsLong":2,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":109,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":204,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":153,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":261,"com.google.gson.functional.ObjectTest.testNestedSerialization":155,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":37,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":99,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":51,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":41,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":137,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":149,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":66,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":221,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":139,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":251,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":210,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":131,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":39,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":186,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":115,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":111,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":156,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":55,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":61,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":77,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":49,"com.google.gson.functional.CollectionTest.testSetSerialization":92,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":195,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":202,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":244,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":98,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":172,"com.google.gson.MixedStreamTest.testWriteInvalidState":26,"com.google.gson.JsonPrimitiveTest.testDoubleEqualsBigDecimal":4,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":183,"com.google.gson.JsonArrayTest.testRemove":22,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":40,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":173,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":31,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":121,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":219,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":247,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":213,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":250,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":192,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":240,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":225,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":112,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":75,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":162,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":229,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":205,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":76},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"65898cd1-3efd-11e6-a108-2fabe0549cd1","method":{"position":"com.google.gson.internal.bind.TypeAdapters:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    out.value((value == null ? \"null\" : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:400","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"6589daf2-3efd-11e6-a108-71b38701f423","method":{"position":"com.google.gson.internal.LinkedTreeMap:41","type":"CtMethodImpl","sourcecode":"public int compare(java.lang.Comparable a, java.lang.Comparable b) {\n    if (b != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617715/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return a.compareTo(b);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deferredName":"b"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"6589daf3-3efd-11e6-a108-6b7caf868b42","method":{"position":"com.google.gson.internal.bind.TypeAdapters:546","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.util.Calendar read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    in.beginObject();\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    int int = 0;\n    while ((in.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        java.lang.String java.lang.String = in.nextName();\n        int int = in.nextInt();\n        if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            year = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            month = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            dayOfMonth = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            hourOfDay = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            minute = value;\n        } else if (com.google.gson.internal.bind.TypeAdapters.23.java.lang.String.equals(name)) {\n            second = value;\n        } \n    }\n    in.endObject();\n    return new java.util.GregorianCalendar(year , month , dayOfMonth , hourOfDay , minute , second);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.internal.$Gson$Types:403","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"658a0204-3efd-11e6-a108-4be6abbd899f","method":{"position":"com.google.gson.DefaultDateTypeAdapter:77","type":"CtMethodImpl","sourcecode":"public java.util.Date deserialize(com.google.gson.JsonElement json, java.lang.reflect.Type typeOfT, com.google.gson.JsonDeserializationContext context) throws com.google.gson.JsonParseException {\n    if (typeOfT instanceof java.lang.reflect.ParameterizedType) {\n        {\n            if (!(json instanceof com.google.gson.JsonPrimitive)) {\n                throw new com.google.gson.JsonParseException(\"The date should be a string value\");\n            } \n            java.util.Date java.util.Date = deserializeToDate(json);\n            if (typeOfT == (java.util.Date.java.util.Date.java.lang.Class)) {\n                return date;\n            } else if (typeOfT == (java.sql.Timestamp.java.sql.Timestamp.java.lang.Class)) {\n                return new java.sql.Timestamp(date.getTime());\n            } else if (typeOfT == (java.sql.Date.java.sql.Date.java.lang.Class)) {\n                return new java.sql.Date(date.getTime());\n            } else {\n                throw new java.lang.IllegalArgumentException((((getClass()) + \" cannot deserialize to \") + typeOfT));\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617715/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new com.google.gson.JsonParseException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredBy":"typeOfT"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:188","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"658a0205-3efd-11e6-a108-a17585c7d3eb","method":{"position":"com.google.gson.JsonPrimitive:305","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic boolean equals(java.lang.Object obj) {\n    if (obj instanceof java.lang.reflect.WildcardType) {\n        {\n            if ((com.google.gson.JsonPrimitive.this) == obj) {\n                return true;\n            } \n            if ((obj == null) || ((getClass()) != (obj.getClass()))) {\n                return false;\n            } \n            com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(obj));\n            if ((java.lang.Object) == null) {\n                return (other.java.lang.Object) == null;\n            } \n            if ((com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive.this)) && (com.google.gson.JsonPrimitive.isIntegral(other))) {\n                return (getAsNumber().longValue()) == (other.getAsNumber().longValue());\n            } \n            if (((java.lang.Object) instanceof java.lang.Number) && ((other.java.lang.Object) instanceof java.lang.Number)) {\n                double double = getAsNumber().doubleValue();\n                double double = other.getAsNumber().doubleValue();\n                return (a == b) || ((java.lang.Double.isNaN(a)) && (java.lang.Double.isNaN(b)));\n            } \n            return java.lang.Object.equals(other.java.lang.Object);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617715/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"a":"obj"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:556","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"658a2916-3efd-11e6-a108-5bf07e9aa500","method":{"position":"com.google.gson.internal.Streams:111","type":"CtMethodImpl","sourcecode":"public java.lang.CharSequence subSequence(int start, int end) {\n    if (start == start) {\n        {\n            return new java.lang.String(char[] , start , (end - start));\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617715/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"peekStack":"start","com.google.gson.stream.JsonScope.EMPTY_ARRAY":"start"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"658a2917-3efd-11e6-a108-0128b53bea77","method":{"position":"com.google.gson.internal.bind.TypeAdapters:451","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URL value) throws java.io.IOException {\n    out.value((value == null ? null : value.toExternalForm()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,20,225,226,21,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"658a2918-3efd-11e6-a108-c3adcaa0ac5a","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:66","type":"CtMethodImpl","sourcecode":"private java.lang.String getFieldName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy, f);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617715/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:574","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"658a5029-3efd-11e6-a108-a7b5532fccb2","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:233","type":"CtMethodImpl","sourcecode":"private static int secondaryHash(int h) {\n    if (h == 1) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617715/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            h ^= (h >>> 20) ^ (h >>> 12);\n            return (h ^ (h >>> 7)) ^ (h >>> 4);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"stackSize":"h"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.$Gson$Types:403","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"658a502a-3efd-11e6-a108-8955bf2b1770","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:108","type":"CtMethodImpl","sourcecode":"public boolean writeField(java.lang.Object value) throws java.io.IOException, java.lang.IllegalAccessException {\n    if (value instanceof java.lang.reflect.ParameterizedType) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467316617715/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (!(boolean))\n                return false;\n            \n            java.lang.Object java.lang.Object = field.get(value);\n            return fieldValue != value;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"declaredBy":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"658a502b-3efd-11e6-a108-337fdb5e3248","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:208","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if (value == null) {\n        out.nullValue();\n        return ;\n    } \n    out.beginObject();\n    try {\n        for (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField : java.util.Map<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField>.values()) {\n            if (boundField.writeField(value)) {\n                out.name(boundField.java.lang.String);\n                boundField.write(out, value);\n            } \n        }\n    } catch (java.lang.IllegalAccessException e) {\n        throw new java.lang.AssertionError();\n    }\n    out.endObject();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1030","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"658a773c-3efd-11e6-a108-7101687a8c3c","method":{"position":"com.google.gson.internal.bind.TypeAdapters:460","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.net.URI read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.lang.String java.lang.String = in.nextString();\n        return \"null\".equals(nextString) ? null : new java.net.URI(nextString);\n    } catch (java.net.URISyntaxException e) {\n        throw new com.google.gson.JsonIOException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":12,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}