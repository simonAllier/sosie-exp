{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":157,"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":369,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":66,"com.google.gson.stream.JsonWriterTest.testRepeatedName":361,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":76,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":149,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":82,"com.google.gson.MixedStreamTest.testWriteLenient":251,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":120,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":104,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":67,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":71,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":118,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":43,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":52,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":230,"com.google.gson.functional.ObjectTest.testSingletonLists":116,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":113,"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":250,"com.google.gson.stream.JsonWriterTest.testStrings":379,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":197,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":131,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":34,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeRecursive":289,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":26,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":274,"com.google.gson.stream.JsonWriterTest.testMultipleTopLevelValues":373,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":61,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":253,"com.google.gson.functional.JsonTreeTest.testToJsonTree":208,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":277,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":195,"com.google.gson.stream.JsonWriterTest.testNulls":359,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreBehindInVersion":388,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":59,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullField":286,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":311,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":200,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":128,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":382,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":177,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":138,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":381,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":290,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":224,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeNullObject":287,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testDifferentSerializeAndDeserializeField":390,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":140,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":268,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":328,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":83,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":218,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":241,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":256,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":178,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":305,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":137,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":264,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":10,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":12,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":124,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnFlush":374,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":81,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":114,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":186,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":50,"com.google.gson.stream.JsonWriterTest.testEmptyArray":353,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":329,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":13,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":176,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":203,"com.google.gson.functional.CollectionTest.testSetDeserialization":70,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":44,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":127,"com.google.gson.functional.EnumTest.testEnumSet":315,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":51,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":341,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":294,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":132,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":49,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":245,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":15,"com.google.gson.stream.JsonWriterTest.testBadNestingArray":372,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":198,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":156,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":209,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":238,"com.google.gson.functional.MapTest.testMapSerialization":298,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":158,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":28,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":102,"com.google.gson.functional.MapTest.testSerializeMaps":247,"com.google.gson.functional.MapTest.testComplexKeysSerialization":65,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":255,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":273,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":75,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":202,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":236,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":221,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":24,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":77,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":342,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":306,"com.google.gson.functional.PrettyPrintingTest.testMap":275,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":307,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":160,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeMap":288,"com.google.gson.functional.MapTest.testMapSerializationEmpty":304,"com.google.gson.functional.CollectionTest.testQueueSerialization":308,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":325,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnValue":375,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnName":377,"com.google.gson.functional.MapTest.testMapOfMapSerialization":297,"com.google.gson.stream.JsonWriterTest.testNameWithoutValue":354,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":155,"com.google.gson.functional.FieldNamingTest.testIdentity":103,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":169,"com.google.gson.stream.JsonWriterTest.testStrictWriterDoesNotPermitMultipleTopLevelValues":364,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":141,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":80,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":115,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":207,"com.google.gson.stream.JsonWriterTest.testDeepNestingArrays":357,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipNonAnnotatedFields":389,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":88,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":244,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":154,"com.google.gson.functional.MapTest.testMapSubclassSerialization":293,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":58,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":109,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":5,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":227,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":84,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":196,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":48,"com.google.gson.functional.EnumTest.testEnumSubclass":318,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":130,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":173,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":180,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":216,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":90,"com.google.gson.stream.JsonWriterTest.testWriterCloseIsIdempotent":365,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":89,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":184,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":243,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":79,"com.google.gson.stream.JsonWriterTest.testBadNestingObject":367,"com.google.gson.stream.JsonWriterTest.testObjectsInArrays":363,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":117,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":270,"com.google.gson.stream.JsonWriterTest.testClosedWriterThrowsOnStructure":362,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":266,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":46,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":201,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":119,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":233,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":343,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":19,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":166,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":279,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":300,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":41,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":57,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":337,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":29,"com.google.gson.ObjectTypeAdapterTest.testSerializeObject":249,"com.google.gson.JsonParserTest.testParseMixedArray":0,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":163,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAheadInVersion":386,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":153,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":278,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":292,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":229,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":193,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":295,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":232,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":351,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":222,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":206,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":92,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":142,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":211,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":185,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":56,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":87,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":220,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":23,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":299,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":352,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":336,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":94,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":99,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":317,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":68,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":108,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":338,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":85,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":260,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":237,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":9,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":258,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":283,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":320,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":143,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":179,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":192,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":33,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":261,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":150,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":22,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":181,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":147,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":123,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":319,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":213,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":69,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":93,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":350,"com.google.gson.InnerClassExclusionStrategyTest.testExcludeInnerClassField":383,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":228,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":234,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":327,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":240,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":324,"com.google.gson.stream.JsonWriterTest.testNullStringValue":356,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":235,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":189,"com.google.gson.JsonArrayTest.testSet":2,"com.google.gson.stream.JsonWriterTest.testEmptyObject":371,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":16,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":231,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":316,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":162,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":30,"com.google.gson.functional.MapTest.testGeneralMapField":64,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":121,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":246,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":18,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":174,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testSkipExplicitlySkippedFields":393,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":330,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":301,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":333,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":347,"com.google.gson.MixedStreamTest.testReadMixedStreamed":8,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":335,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":239,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":313,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":112,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":96,"com.google.gson.JsonArrayTest.testDeepCopy":3,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":339,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":27,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":37,"com.google.gson.stream.JsonWriterTest.testArraysInObjects":360,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":259,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":326,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":170,"com.google.gson.functional.ObjectTest.testNestedDeserialization":148,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":345,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":332,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":159,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":183,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":165,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":1,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":385,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":47,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":212,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":86,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":107,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":314,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":215,"com.google.gson.stream.JsonWriterTest.testDoubles":376,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":63,"com.google.gson.functional.MapTest.testInterfaceTypeMap":62,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":188,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":74,"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":282,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExplicitlyExposedAnnotatedFields":392,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":219,"com.google.gson.MixedStreamTest.testWriteClosed":7,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":161,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":310,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":122,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":191,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":53,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":187,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":168,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":145,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":164,"com.google.gson.stream.JsonWriterTest.testLongs":358,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":98,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":125,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":194,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":309,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":38,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":40,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":217,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":312,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":151,"com.google.gson.stream.JsonWriterTest.testNumbers":378,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":205,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":204,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":262,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":167,"com.google.gson.InnerClassExclusionStrategyTest.testIncludeStaticNestedClassField":384,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":39,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":60,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":139,"com.google.gson.stream.JsonWriterTest.testDeepNestingObjects":370,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":146,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":225,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":248,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":4,"com.google.gson.functional.MapTest.testRawMapSerialization":303,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize":284,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":134,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":210,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":32,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":265,"com.google.gson.ObjectTypeAdapterTest.testSerialize":242,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":348,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":223,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":105,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":271,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":100,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":54,"com.google.gson.functional.MapTest.testMapWithQuotes":296,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":340,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":73,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":321,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":42,"com.google.gson.stream.JsonWriterTest.testLenientWriterPermitsMultipleTopLevelValues":366,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":45,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":144,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":25,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":126,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":272,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":97,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":322,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":36,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":106,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":263,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":291,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":214,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":171,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":110,"com.google.gson.VersionExclusionStrategyTest.testClassAndFieldAreAtSameVersion":387,"com.google.gson.ExposeAnnotationExclusionStrategyTest.testNeverSkipExposedAnnotatedFields":391,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize2dArray":281,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":344,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":133,"com.google.gson.functional.ObjectTest.testNestedSerialization":135,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":17,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":334,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":346,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":280,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":302,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":31,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":21,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":252,"com.google.gson.stream.JsonWriterTest.testUnicodeLineBreaksEscaped":380,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":129,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":190,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":111,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":95,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":254,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":91,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":136,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":35,"com.google.gson.functional.StreamingTypeAdaptersTest.testSerialize1dArray":285,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":269,"com.google.gson.functional.CollectionTest.testSetSerialization":72,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":175,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":182,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":276,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":226,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":78,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":152,"com.google.gson.MixedStreamTest.testWriteInvalidState":6,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":331,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":20,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":11,"com.google.gson.stream.JsonWriterTest.testBooleans":355,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":323,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":101,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":199,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":172,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":257,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":55,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":349,"com.google.gson.stream.JsonWriterTest.testPrettyPrintArray":368,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":267},"transformations":[{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"f5c818b2-3f4a-11e6-bde5-4f1b323daca9","method":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:72","type":"CtMethodImpl","sourcecode":"public java.util.Collection<E> read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    java.util.Collection<E> java.util.Collection<E> = com.google.gson.internal.ObjectConstructor<? extends java.util.Collection<E>>.construct();\n    in.beginArray();\n    while (in.hasNext()) {\n        E E = com.google.gson.TypeAdapter<E>.read(in);\n        collection.add(instance);\n    }\n    in.endArray();\n    return collection;\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:793","type":"CtBinaryOperatorImpl"},"failures":[0,1,2,3],"tindex":"f5c866d3-3f4a-11e6-bde5-058acd2b254c","method":{"position":"com.google.gson.JsonArray:146","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement get(int i) {\n    if (i == i) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349900673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return java.util.List<com.google.gson.JsonElement>.get(i);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME":"i"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:159","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"f5c88de4-3f4a-11e6-bde5-d98356004eec","method":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:66","type":"CtMethodImpl","sourcecode":"private java.lang.String getFieldName(java.lang.reflect.Field f) {\n    if (f.isSynthetic()) {\n        {\n            return com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldName(com.google.gson.FieldNamingStrategy, f);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349900673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"field":"f"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"com.google.gson.JsonIOException","condition":{"position":"com.google.gson.JsonElement:119","type":"CtInvocationImpl"},"failures":[],"tindex":"f5c88de5-3f4a-11e6-bde5-cdbf12db7cf1","method":{"position":"com.google.gson.Gson:660","type":"CtMethodImpl","sourcecode":"public void toJson(com.google.gson.JsonElement jsonElement, com.google.gson.stream.JsonWriter writer) throws com.google.gson.JsonIOException {\n    boolean boolean = writer.isLenient();\n    writer.setLenient(true);\n    boolean boolean = writer.isHtmlSafe();\n    writer.setHtmlSafe(boolean);\n    boolean boolean = writer.getSerializeNulls();\n    writer.setSerializeNulls(boolean);\n    try {\n        com.google.gson.internal.Streams.write(jsonElement, writer);\n    } catch (java.io.IOException e) {\n        throw new com.google.gson.JsonIOException(e);\n    } finally {\n        writer.setLenient(oldLenient);\n        writer.setHtmlSafe(oldHtmlSafe);\n        writer.setSerializeNulls(oldSerializeNulls);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"jsonElement"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl"},"failures":[246,18,41,42,43,44,247,248,69,71,72,129,226,249,242,250],"tindex":"f5c88de6-3f4a-11e6-bde5-af96d10b8061","method":{"position":"com.google.gson.internal.bind.ObjectTypeAdapter:94","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object value) throws java.io.IOException {\n    if (!(value instanceof com.google.gson.JsonPrimitive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349900673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            com.google.gson.TypeAdapter<java.lang.Object> com.google.gson.TypeAdapter<java.lang.Object> = ((com.google.gson.TypeAdapter<java.lang.Object>)(com.google.gson.Gson.getAdapter(value.getClass())));\n            if (typeAdapter instanceof com.google.gson.internal.bind.ObjectTypeAdapter) {\n                out.beginObject();\n                out.endObject();\n                return ;\n            } \n            typeAdapter.write(out, value);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:857","type":"CtBinaryOperatorImpl"},"failures":[4,5,251,252,7,253,254,10,0,255,256,257,258,259,260,261,11,12,16,17,262,263,246,264,265,266,267,268,269,270,271,18,20,272,273,21,274,275,23,24,276,277,278,25,279,26,280,27,29,31,281,282,283,284,285,286,287,288,289,33,36,37,40,41,290,42,43,44,45,291,47,48,49,50,51,53,54,55,57,59,292,293,247,294,295,60,296,297,298,299,300,62,301,63,64,302,303,65,304,305,306,66,67,248,68,307,308,309,310,311,69,312,71,313,72,314,73,315,316,317,318,74,319,76,77,320,80,81,87,90,321,322,323,324,325,326,96,327,328,329,330,97,98,99,100,101,102,103,108,109,110,113,115,116,119,122,125,331,127,129,132,134,135,332,137,140,142,143,145,333,334,335,336,337,338,339,151,152,153,154,155,156,158,160,163,164,165,166,169,170,171,174,177,340,341,180,342,181,182,343,344,345,186,187,188,193,194,197,198,199,200,201,202,204,206,209,210,211,213,214,215,218,220,223,346,347,224,225,226,348,349,350,227,228,351,231,232,234,352,235,236,238,240,241,249,242,250,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,243,244,381,382,245],"tindex":"f5c8b4f7-3f4a-11e6-bde5-0991a71edbe6","method":{"position":"com.google.gson.stream.JsonWriter:335","type":"CtMethodImpl","sourcecode":"private com.google.gson.stream.JsonWriter close(int empty, int nonempty, java.lang.String closeBracket) throws java.io.IOException {\n    if (empty == empty) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349900673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            int int = peek();\n            if ((context != nonempty) && (context != empty)) {\n                throw new java.lang.IllegalStateException(\"Nesting problem.\");\n            } \n            if ((java.lang.String) != null) {\n                throw new java.lang.IllegalStateException((\"Dangling name: \" + (java.lang.String)));\n            } \n            (int)--;\n            if (context == nonempty) {\n                newline();\n            } \n            java.io.Writer.write(closeBracket);\n            return com.google.gson.stream.JsonWriter.this;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"empty","com.google.gson.stream.JsonReader.PEEKED_TRUE":"empty"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"f5c8dc08-3f4a-11e6-bde5-7d07ff6cbccf","method":{"position":"com.google.gson.internal.bind.TypeAdapters:530","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.sql.Timestamp value) throws java.io.IOException {\n    dateTypeAdapter.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"f5c8dc09-3f4a-11e6-bde5-2bc8bf69b559","method":{"position":"com.google.gson.internal.bind.TypeAdapters:178","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Boolean value) throws java.io.IOException {\n    out.value((value == null ? \"null\" : value.toString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"f5c8dc0a-3f4a-11e6-bde5-61e93d32c546","method":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:50","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized java.sql.Time read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        java.util.Date java.util.Date = java.text.DateFormat.parse(in.nextString());\n        return new java.sql.Time(date.getTime());\n    } catch (java.text.ParseException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"f5c8dc0b-3f4a-11e6-bde5-d9df19632e8f","method":{"position":"com.google.gson.internal.bind.TypeAdapters:473","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.net.URI value) throws java.io.IOException {\n    out.value((value == null ? null : value.toASCIIString()));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.Excluder:103","type":"CtVariableReadImpl"},"failures":[4,5,6,7,8,9,383,384,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,385,77,78,320,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,386,387,388,243,244,245,389,390,391,392,393],"tindex":"f5c9031c-3f4a-11e6-bde5-c54cf00f025b","method":{"position":"com.google.gson.internal.Excluder:149","type":"CtMethodImpl","sourcecode":"public boolean excludeField(java.lang.reflect.Field field, boolean serialize) {\n    if (serialize) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349900673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if (((int) & (field.getModifiers())) != 0) {\n                return true;\n            } \n            if (((double) != (com.google.gson.internal.Excluder.com.google.gson.internal.Excluder.double)) && (!(isValidVersion(field.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since.java.lang.Class), field.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until.java.lang.Class))))) {\n                return true;\n            } \n            if (field.isSynthetic()) {\n                return true;\n            } \n            if (boolean) {\n                com.google.gson.annotations.Expose com.google.gson.annotations.Expose = field.getAnnotation(com.google.gson.annotations.Expose.com.google.gson.annotations.Expose.java.lang.Class);\n                if ((annotation == null) || (serialize ? !(annotation.serialize()) : !(annotation.deserialize()))) {\n                    return true;\n                } \n            } \n            if ((!(boolean)) && (isInnerClass(field.getType()))) {\n                return true;\n            } \n            if (isAnonymousOrLocal(field.getType())) {\n                return true;\n            } \n            java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = serialize ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>;\n            if (!(list.isEmpty())) {\n                com.google.gson.FieldAttributes com.google.gson.FieldAttributes = new com.google.gson.FieldAttributes(field);\n                for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : list) {\n                    if (exclusionStrategy.shouldSkipField(fieldAttributes)) {\n                        return true;\n                    } \n                }\n            } \n            return false;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"deserialization":"serialize"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl"},"failures":[94],"tindex":"f5c92a2d-3f4a-11e6-bde5-ab7f2520b157","method":{"position":"com.google.gson.internal.bind.DateTypeAdapter:85","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.util.Date value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349900673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            java.lang.String java.lang.String = java.text.DateFormat.format(value);\n            out.value(dateFormatAsString);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl"},"failures":[],"tindex":"f5c92a2e-3f4a-11e6-bde5-ffa7270a65ff","method":{"position":"com.google.gson.internal.bind.TypeAdapters:385","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigInteger read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigInteger(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:547","type":"CtBinaryOperatorImpl"},"failures":[],"tindex":"f5c92a2f-3f4a-11e6-bde5-f17d959db961","method":{"position":"com.google.gson.stream.JsonReader:1101","type":"CtMethodImpl","sourcecode":"private void skipQuotedValue(char quote) throws java.io.IOException {\n    if (quote == '\\u2029') {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467349900673/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            char[] char[] = com.google.gson.stream.JsonReader.this.char[];\n            do {\n                int int = int;\n                int int = int;\n                while (p < l) {\n                    int int = buffer[(p++)];\n                    if (c == quote) {\n                        int = p;\n                        return ;\n                    } else if (c == '\\\\') {\n                        int = p;\n                        readEscapeCharacter();\n                        p = int;\n                        l = int;\n                    } else if (c == '\\n') {\n                        (int)++;\n                        int = p;\n                    } \n                }\n                int = p;\n            } while (fillBuffer(1) );\n            throw syntaxError(\"Unterminated string\");\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"c":"quote"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":14,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}