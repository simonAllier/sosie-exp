{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":416,"com.google.gson.functional.StringTest.testSingleQuoteInStringSerialization":569,"com.google.gson.functional.StringTest.testStringValueDeserialization":567,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":175,"com.google.gson.functional.PrimitiveTest.testBigIntegerDeserialization":272,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":522,"com.google.gson.functional.PrimitiveTest.testBigDecimalNaNDeserializationNotSupported":233,"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":37,"com.google.gson.functional.ObjectTest.testInnerClassDeserialization":352,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":127,"com.google.gson.MixedStreamTest.testWriteLenient":590,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored":318,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":531,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":101,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":76,"com.google.gson.functional.CollectionTest.testCollectionOfBagOfPrimitivesSerialization":93,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":316,"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":281,"com.google.gson.functional.EnumTest.testTopLevelEnumSerialization":36,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenSerialization":463,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":373,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerDeserialization":242,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":53,"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":189,"com.google.gson.functional.ObjectTest.testSingletonLists":314,"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":466,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateSerialization":523,"com.google.gson.functional.PrimitiveTest.testNumberDeserialization":226,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringSerialization":570,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":121,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":21,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":98,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarDeserialization":541,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsDeserialization":331,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":16,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":284,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilDeserialization":549,"com.google.gson.functional.StringTest.testEscapedBackslashInStringDeserialization":583,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":357,"com.google.gson.functional.PrimitiveTest.testBigDecimalNoFractAsStringRepresentationDeserialization":273,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":395,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":157,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterThrowsException":2,"com.google.gson.functional.PrimitiveTest.testLongAsStringDeserialization":218,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":387,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":156,"com.google.gson.functional.EnumTest.testEnumCaseMapping":35,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringSerialization":568,"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":595,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsLong":217,"com.google.gson.functional.JsonTreeTest.testToJsonTree":480,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitives":400,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveDeserialization":544,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":215,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":61,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":497,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":445,"com.google.gson.functional.PrimitiveTest.testUnquotedStringDeserializationFails":228,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferDeserialization":515,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullSerialization":192,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":601,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":86,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverClassAnnotation":360,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringDeserialization":580,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesDeserialization":327,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedSerialization":294,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":615,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsBigIntegerFails":234,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesCustomSerialization":332,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":385,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":181,"com.google.gson.functional.ObjectTest.testStringFieldWithNumberValueDeserialization":340,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":614,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":371,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":487,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":545,"com.google.gson.functional.EscapingTest.testEscapingObjectFields":185,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionDeserialization":299,"com.google.gson.functional.PrimitiveTest.testDoubleInfinityDeserialization":298,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":540,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerialization":278,"com.google.gson.functional.PrimitiveTest.testNegativeInfinitySerializationNotSupportedByDefault":257,"com.google.gson.functional.PrimitiveTest.testFloatInfinityDeserialization":305,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArrayDeserialization":496,"com.google.gson.functional.ObjectTest.testNullFieldsSerialization":343,"com.google.gson.functional.ArrayTest.testArrayElementsAreArrays":441,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityDeserialization":255,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":521,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":128,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":149,"com.google.gson.functional.PrimitiveTest.testDoubleNoFractAsStringRepresentationDeserialization":270,"com.google.gson.functional.NamingPolicyTest.testAtSignInSerializedName":71,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountryVariant":512,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":476,"com.google.gson.internal.bind.JsonTreeWriterTest.testLenientNansAndInfinities":607,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":107,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":171,"com.google.gson.functional.JsonParserTest.testParseInvalidJson":134,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerialization":279,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsDouble":271,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":339,"com.google.gson.functional.ArrayTest.testEmptyArraySerialization":435,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":10,"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":322,"com.google.gson.functional.FieldExclusionTest.testDefaultNestedStaticClassIncluded":560,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldSerialization":44,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":167,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerializationNotSupportedByDefault":238,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":467,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":206,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeSerialization":51,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":394,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":109,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":18,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":173,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":408,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesSerialization":529,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":391,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguage":514,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":180,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testJsonAdapterInvokedOnlyForAnnotatedFields":363,"com.google.gson.functional.CollectionTest.testSetDeserialization":92,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":374,"com.google.gson.functional.EnumTest.testEnumSet":26,"com.google.gson.functional.ObjectTest.testInnerClassSerialization":326,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":469,"com.google.gson.functional.PrimitiveTest.testBigDecimalAsStringRepresentationDeserialization":262,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":52,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":108,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":144,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampDeserialization":502,"com.google.gson.functional.ObjectTest.testArrayOfObjectsSerialization":333,"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":1,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":50,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBytePrimitive":275,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":393,"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":286,"com.google.gson.functional.ReadersWritersTest.testWriterForSerialization":25,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":382,"com.google.gson.functional.PrimitiveTest.testLongAsStringSerialization":287,"com.google.gson.functional.MapTest.testHashMapDeserialization":138,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsIntegerFails":231,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":82,"com.google.gson.functional.DefaultTypeAdaptersTest.testPropertiesDeserialization":527,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":418,"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":561,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicySerialization":62,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":414,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":24,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":472,"com.google.gson.functional.MapTest.testSortedMap":160,"com.google.gson.functional.MapTest.testMapSerialization":155,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":417,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedDeserialization":268,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":404,"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":448,"com.google.gson.functional.MapTest.testSerializeMaps":141,"com.google.gson.functional.FieldNamingTest.testUpperCamelCaseWithSpaces":565,"com.google.gson.functional.MapTest.testComplexKeysSerialization":168,"com.google.gson.functional.InternationalizationTest.testStringsWithRawChineseCharactersDeserialization":468,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":172,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsFalse":606,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsSerialization":455,"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":33,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterTakesPrecedenceOverDefault":362,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":201,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":604,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicyDeserialiation":74,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriter":616,"com.google.gson.functional.EnumTest.testTopLevelEnumDeserialization":31,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":398,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationSerialization":39,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsDeserialization":342,"com.google.gson.functional.MapTest.testStringKeyDeserialization":170,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":452,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":113,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerialization":301,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":174,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesDeserialization":237,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigInteger":232,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredAdapterOverridesJsonAdapter":377,"com.google.gson.functional.PrettyPrintingTest.testMap":396,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":79,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls":22,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":420,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeSerialization":492,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":15,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysDeserialization":454,"com.google.gson.functional.StringTest.testStringWithEscapedSlashDeserialization":573,"com.google.gson.functional.StringTest.testEscapedBackslashInStringSerialization":577,"com.google.gson.functional.CollectionTest.testQueueSerialization":83,"com.google.gson.functional.MapTest.testMapSerializationEmpty":169,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetSerialization":509,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsByteWrapper":263,"com.google.gson.functional.MapTest.testMapOfMapSerialization":154,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerializationNotSupportedByDefault":254,"com.google.gson.JavaSerializationTest.testMapIsSerializable":13,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguageCountry":517,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":89,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerialization":265,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":369,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializerInvokedForPrimitives":122,"com.google.gson.functional.FieldNamingTest.testIdentity":566,"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":571,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":110,"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":424,"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":344,"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":43,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":103,"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":313,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":479,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalDeserialization":220,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":3,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":177,"com.google.gson.functional.StringTest.testJavascriptKeywordsInStringSerialization":572,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigDecimalSerialization":260,"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":354,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimeDeserialization":533,"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":9,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidDeserialization":504,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":368,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriSerialization":511,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullJsonElementSerialization":543,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":135,"com.google.gson.functional.MapTest.testMapSubclassSerialization":140,"com.google.gson.functional.PrimitiveTest.testFloatInfinitySerializationNotSupportedByDefault":297,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":60,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":411,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":471,"com.google.gson.functional.PrimitiveTest.testBigDecimalDeserialization":252,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":379,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassSerialization":547,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":588,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":129,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsLongPrimitive":312,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleDeserializationWithLanguage":491,"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":20,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":49,"com.google.gson.functional.EnumTest.testEnumSubclass":29,"com.google.gson.functional.PrimitiveTest.testReallyLongValuesSerialization":274,"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":17,"com.google.gson.functional.ObjectTest.testNullArraysDeserialization":329,"com.google.gson.functional.PrimitiveTest.testBigDecimalPreservePrecisionSerialization":219,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":176,"com.google.gson.functional.PrimitiveTest.testFloatNaNDeserialization":280,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":112,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicyDeserialiation":69,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":222,"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":356,"com.google.gson.functional.PrimitiveTest.testBigDecimalNegativeInfinityDeserializationNotSupported":258,"com.google.gson.functional.ConcurrencyTest.testMultiThreadDeserialization":355,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":204,"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":8,"com.google.gson.functional.ArrayTest.testArrayOfNullDeserialization":444,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":603,"com.google.gson.functional.PrimitiveTest.testBigDecimalInfinityDeserializationNotSupported":264,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":325,"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":42,"com.google.gson.functional.PrimitiveTest.testSmallValueForBigIntegerSerialization":256,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountry":536,"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":315,"com.google.gson.functional.MapTest.testMapSubclassDeserialization":137,"com.google.gson.MixedStreamTest.testWriteNulls":622,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":443,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":132,"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":437,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":46,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":361,"com.google.gson.CommentsTest.testParseComments":597,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":117,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":195,"com.google.gson.functional.ObjectTest.testArrayOfArraysSerialization":317,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":277,"com.google.gson.functional.ArrayTest.testSingleNullInArrayDeserialization":450,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":460,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":403,"com.google.gson.functional.MapTest.testWriteMapsWithEmptyStringKey":159,"com.google.gson.functional.StringTest.testStringValueAsSingleElementArraySerialization":575,"com.google.gson.MixedStreamTest.testReadInvalidState":587,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":370,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":58,"com.google.gson.functional.PrimitiveTest.testPrimitiveIntegerAutoboxedInASingleElementArraySerialization":296,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassSerialization":538,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":405,"com.google.gson.JsonParserTest.testParseMixedArray":613,"com.google.gson.functional.PrimitiveTest.testQuotedStringSerializationAndDeserialization":230,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":598,"com.google.gson.functional.ArrayTest.testArrayOfStringsDeserialization":456,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":457,"com.google.gson.functional.PrimitiveTest.testDoubleNaNSerializationNotSupportedByDefault":247,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":367,"com.google.gson.functional.PrimitiveTest.testBigDecimalSerialization":291,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigIntegerTypeAdapter":519,"com.google.gson.functional.MapTest.testMapDeserialization":147,"com.google.gson.functional.ArrayTest.testEmptyArrayDeserialization":440,"com.google.gson.functional.DefaultTypeAdaptersTest.testUuidSerialization":513,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":401,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":136,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitDeserializationOfNulls":188,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":146,"com.google.gson.functional.InheritanceTest.testSubClassSerialization":213,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":194,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":190,"com.google.gson.functional.NamingPolicyTest.testGsonWithNonDefaultFieldNamingPolicyDeserialiation":75,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":30,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":478,"com.google.gson.functional.DefaultTypeAdaptersTest.testBadValueForBigDecimalDeserialization":489,"com.google.gson.functional.ObjectTest.testAnonymousLocalClassesSerialization":330,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersSerialization":345,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":64,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterFactoryInvoked":380,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderSerialization":498,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":57,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicySerialization":73,"com.google.gson.functional.ConcurrencyTest.testMultiThreadSerialization":353,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":158,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":397,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":6,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":542,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBigDecimal":216,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":119,"com.google.gson.functional.PrimitiveTest.testShortSerialization":295,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":197,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedDeserialization":283,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreamingHierarchical":389,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedDeserialization":253,"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":602,"com.google.gson.functional.PrimitiveTest.testBigIntegerInASingleElementArraySerialization":282,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsBigDecimal":229,"com.google.gson.functional.DefaultTypeAdaptersTest.testNullSerialization":503,"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":562,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":28,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":78,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":410,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":599,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":142,"com.google.gson.functional.PrimitiveTest.testLargeDoubleDeserialization":246,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":99,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedInASingleElementArraySerialization":303,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":130,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedArray":611,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":202,"com.google.gson.functional.DefaultTypeAdaptersTest.testClassDeserialization":530,"com.google.gson.MixedStreamTest.testReaderDoesNotMutateState":594,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":609,"com.google.gson.functional.PrimitiveTest.testPrimitiveLongAutoboxedSerialization":310,"com.google.gson.functional.PrimitiveTest.testDeserializingNonZeroDecimalPointValuesAsIntegerFails":304,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":41,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":111,"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":212,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":346,"com.google.gson.functional.DefaultTypeAdaptersTest.testLocaleSerializationWithLanguageCountryVariant":484,"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":548,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":612,"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":289,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":482,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":114,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsDoublePrimitive":259,"com.google.gson.functional.ObjectTest.testNullObjectFieldsDeserialization":350,"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":321,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":34,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicySerialization":66,"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":470,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":87,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":499,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":375,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializerInvokedForPrimitives":115,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":187,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":196,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarSerialization":520,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsInt":236,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":475,"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetSerialization":506,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":525,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":80,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":209,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsShortWrapper":223,"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":290,"com.google.gson.functional.PrimitiveTest.testNumberSerialization":261,"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":307,"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":125,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":27,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":193,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":422,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":406,"com.google.gson.functional.MapTest.testGeneralMapField":164,"com.google.gson.functional.ObjectTest.testArrayOfObjectsDeserialization":319,"com.google.gson.functional.ArrayTest.testArrayOfNullSerialization":434,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsShortPrimitive":309,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceIgnoredInSerialization":178,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredDeserializerOverridesJsonAdapter":376,"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":449,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":532,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":162,"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":184,"com.google.gson.functional.PrimitiveTest.testMoreSpecificSerialization":227,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":485,"com.google.gson.functional.PrimitiveTest.testBigIntegerSerialization":285,"com.google.gson.MixedStreamTest.testReadMixedStreamed":593,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":150,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedInASingleElementArraySerialization":248,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":500,"com.google.gson.GsonTypeAdapterTest.testTypeAdapterDoesNotAffectNonAdaptedTypes":4,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":94,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":474,"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":465,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBooleanPrimitive":266,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreamingHierarchical":388,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":12,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForTopLevelObject":392,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldSerialization":518,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":151,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":558,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":139,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":118,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedInASingleElementArraySerialization":308,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":430,"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":552,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsFloatPrimitive":249,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":610,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":516,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":133,"com.google.gson.functional.UncategorizedTest.testStaticFieldsAreNotSerialized":425,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":88,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserialization":483,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":200,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":124,"com.google.gson.functional.ObjectTest.testNestedDeserialization":351,"com.google.gson.functional.ObjectTest.testClassWithNoFieldsSerialization":337,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":358,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":419,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":203,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByStreaming":386,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsNumber":306,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testSubclassFields":459,"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":38,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":152,"com.google.gson.functional.StringTest.testSingleQuoteInStringDeserialization":574,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":48,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatSerialization":293,"com.google.gson.functional.NamingPolicyTest.testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization":65,"com.google.gson.JavaSerializationTest.testListIsSerializable":14,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":105,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":131,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":97,"com.google.gson.functional.ObjectTest.testNullSerialization":619,"com.google.gson.functional.NamingPolicyTest.testDeprecatedNamingStrategy":68,"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":557,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":143,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":163,"com.google.gson.functional.PrimitiveTest.testFloatNaNSerializationNotSupportedByDefault":221,"com.google.gson.functional.MapTest.testInterfaceTypeMap":161,"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":446,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":378,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod":208,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsDoubleWrapper":224,"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":32,"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":72,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testIncorrectTypeAdapterFails":381,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlSerialization":486,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":384,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsInteger":240,"com.google.gson.MixedStreamTest.testWriteClosed":592,"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":85,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":421,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":211,"com.google.gson.functional.ObjectTest.testClassWithObjectFieldSerialization":320,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlDateDeserialization":546,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":54,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":207,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":462,"com.google.gson.functional.ObjectTest.testBagOfPrimitivesSerialization":348,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":458,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldSerialization":539,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubForToJsonMethod":214,"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueSerialization":323,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":84,"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":553,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsBooleanWrapper":269,"com.google.gson.functional.VersioningTest.testVersionedUntilSerialization":555,"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":70,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":90,"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":526,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":426,"com.google.gson.functional.PrimitiveTest.testDoubleAsStringRepresentationDeserialization":311,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":365,"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":245,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":477,"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBuilderDeserialization":494,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":364,"com.google.gson.functional.ArrayTest.testArrayOfStringsSerialization":431,"com.google.gson.functional.CollectionTest.testQueueDeserialization":100,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":461,"com.google.gson.functional.PrimitiveTest.testPrimitiveBooleanAutoboxedSerialization":251,"com.google.gson.functional.PrimitiveTest.testByteDeserialization":267,"com.google.gson.functional.StringTest.testEscapedCtrlRInStringDeserialization":579,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerialization":415,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateDeserializationUsingBuilder":537,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":554,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":148,"com.google.gson.functional.ObjectTest.testJsonInSingleQuotesDeserialization":341,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerialization":508,"com.google.gson.functional.EscapingTest.testGsonDoubleDeserialization":186,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":349,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":77,"com.google.gson.functional.MapTest.testRawMapSerialization":166,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":586,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":95,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":524,"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":63,"com.google.gson.functional.ObjectTest.testPrimitiveArrayFieldSerialization":335,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":409,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":199,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":5,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":7,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":19,"com.google.gson.functional.PrimitiveTest.testByteSerialization":292,"com.google.gson.functional.ArrayTest.testMultidimenstionalArraysSerialization":436,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":620,"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":182,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsFloatWrapper":235,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":102,"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsSerialization":447,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithDashes":563,"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":0,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":55,"com.google.gson.functional.StringTest.testAssignmentCharDeserialization":576,"com.google.gson.functional.MapTest.testMapWithQuotes":153,"com.google.gson.functional.PrimitiveTest.testNegativeInfinityFloatDeserialization":243,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":493,"com.google.gson.functional.StringTest.testEscapingQuotesInStringDeserialization":578,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":106,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":473,"com.google.gson.functional.CustomTypeAdaptersTest.testRegisterHierarchyAdapterForDate":123,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":413,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsNumber":300,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":490,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":372,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":191,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":45,"com.google.gson.functional.ObjectTest.testNullFieldsDeserialization":347,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":402,"com.google.gson.functional.PrimitiveTest.testPrimitiveDoubleAutoboxedSerialization":276,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultDateSerializationUsingBuilder":505,"com.google.gson.functional.ObjectTest.testBagOfPrimitiveWrappersDeserialization":324,"com.google.gson.functional.ArrayTest.testNullsInArraySerialization":453,"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullSerialization":534,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":495,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":104,"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultJavaSqlTimestampSerialization":507,"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesSerialization":551,"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigInteger":288,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":617,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":91,"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":439,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":47,"com.google.gson.functional.ArrayTest.testMixingTypesInObjectArraySerialization":432,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":535,"com.google.gson.functional.NamingPolicyTest.testGsonWithUpperCamelCaseSpacesPolicySerialiation":67,"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":427,"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":556,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":412,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":23,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":59,"com.google.gson.functional.PrimitiveTest.testDeserializingBigDecimalAsFloat":225,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":120,"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":334,"com.google.gson.functional.ObjectTest.testNestedSerialization":336,"com.google.gson.internal.LinkedTreeMapTest.testClear":600,"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":126,"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":183,"com.google.gson.functional.PrimitiveTest.testBigDecimalInASingleElementArraySerialization":239,"com.google.gson.functional.StringTest.testEscapedCtrlNInStringDeserialization":582,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":429,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":165,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":407,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":481,"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":11,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":591,"com.google.gson.functional.ObjectTest.testArrayOfObjectsAsFields":328,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":423,"com.google.gson.functional.PrimitiveTest.testBooleanDeserialization":302,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":210,"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":464,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigDecimalFieldDeserialization":510,"com.google.gson.functional.PrimitiveTest.testDeserializingBigIntegerAsInteger":241,"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":596,"com.google.gson.functional.ObjectTest.testObjectFieldNamesWithoutQuotesDeserialization":338,"com.google.gson.functional.DefaultTypeAdaptersTest.testBigIntegerFieldDeserialization":488,"com.google.gson.functional.VersioningTest.testVersionedClassesDeserialization":550,"com.google.gson.functional.StringTest.testAssignmentCharSerialization":581,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":442,"com.google.gson.functional.CollectionTest.testSetSerialization":96,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":179,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":116,"com.google.gson.functional.PrettyPrintingTest.testMultipleArrays":399,"com.google.gson.functional.StringTest.testStringValueSerialization":584,"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":585,"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":40,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":81,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":366,"com.google.gson.functional.ArrayTest.testInvalidArrayDeserialization":433,"com.google.gson.MixedStreamTest.testWriteInvalidState":589,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":618,"com.google.gson.functional.PrimitiveTest.testBadValueForBigIntegerDeserialization":244,"com.google.gson.functional.PrimitiveTest.testValueVeryCloseToZeroIsZero":250,"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":451,"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":559,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":501,"com.google.gson.functional.FieldNamingTest.testLowerCaseWithUnderscores":564,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":605,"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":359,"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":428,"com.google.gson.functional.TypeAdapterPrecedenceTest.testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter":383,"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":608,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":56,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullSerialization":528,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":621,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":145,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":390,"com.google.gson.functional.ArrayTest.testMultiDimenstionalObjectArraysSerialization":438},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:305","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[],"tindex":"d17b6763-3e75-11e6-8cb9-0d42be9ed098","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:626","type":"CtMethodImpl","sourcecode":"void reset(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root != null) {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n            for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root ; n != null ; n = n.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n                n.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = stackTop;\n                stackTop = n;\n            }\n            com.google.gson.internal.LinkedHashTreeMap.AvlIterator.this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = stackTop;\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"node":"root"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:127","type":"CtInvocationImpl","sourcecode":"raw.isInterface()"},"failures":[],"tindex":"d17bb584-3e75-11e6-8cb9-a9cb9e00ffc6","method":{"position":"com.google.gson.internal.Excluder:224","type":"CtMethodImpl","sourcecode":"private boolean isStatic(java.lang.Class<?> clazz) {\n    if (clazz.isInterface()) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((clazz.getModifiers()) & (java.lang.reflect.Modifier.java.lang.reflect.Modifier.int)) != 0;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"raw":"clazz"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"d17bdc95-3e75-11e6-8cb9-4d652c7341af","method":{"position":"com.google.gson.Gson:895","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, T value) throws java.io.IOException {\n    if ((com.google.gson.TypeAdapter<T>) == null) {\n        throw new java.lang.IllegalStateException();\n    } \n    com.google.gson.TypeAdapter<T>.write(out, value);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:181","type":"CtBinaryOperatorImpl","sourcecode":"(type instanceof java.lang.reflect.ParameterizedType) && (!(java.lang.String.class.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))"},"failures":[],"tindex":"d17bdc96-3e75-11e6-8cb9-65fe95c0c605","method":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:84","type":"CtMethodImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\n@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Object array) throws java.io.IOException {\n    if ((array instanceof java.lang.reflect.ParameterizedType) && (!(array.isAssignableFrom(com.google.gson.reflect.TypeToken.get(((java.lang.reflect.ParameterizedType)(type)).getActualTypeArguments()[0]).getRawType())))) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (array == null) {\n                out.nullValue();\n                return ;\n            } \n            out.beginArray();\n            for (int int = 0, int int = java.lang.reflect.Array.getLength(array) ; i < length ; i++) {\n                E E = ((E)(java.lang.reflect.Array.get(array, i)));\n                com.google.gson.TypeAdapter<E>.write(out, value);\n            }\n            out.endArray();\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"java.lang.String.class":"array","type":"array"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[],"tindex":"d17bdc97-3e75-11e6-8cb9-abd7691ce30c","method":{"position":"com.google.gson.JsonObject:171","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonArray getAsJsonArray(java.lang.String memberName) {\n    if ((memberName != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            if (memberName == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return ((com.google.gson.JsonArray)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:153","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.STRING)) && (token != (com.google.gson.stream.JsonToken.NUMBER))"},"failures":[],"tindex":"d17c03a8-3e75-11e6-8cb9-09adc2c14e31","method":{"position":"com.google.gson.Gson:133","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonElement serialize(java.lang.Object src) {\n    if ((src != src) && (token != src)) {\n        {\n            return toJsonTree(src);\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"com.google.gson.stream.JsonToken.STRING":"src","token":"src","com.google.gson.stream.JsonToken.NUMBER":"src"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"d17c2ab9-3e75-11e6-8cb9-6f143ac6c43d","method":{"position":"com.google.gson.Gson:317","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic void write(com.google.gson.stream.JsonWriter out, java.lang.Number value) throws java.io.IOException {\n    if (value == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            if (value == null) {\n                out.nullValue();\n                return ;\n            } \n            out.value(value.toString());\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"value":"value"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1379","type":"CtUnaryOperatorImpl","sourcecode":"!(skipTo(\"*/\"))"},"failures":[],"tindex":"d17c2aba-3e75-11e6-8cb9-ab255aee276b","method":{"position":"com.google.gson.internal.bind.TypeAdapters:367","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.math.BigDecimal read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } \n    try {\n        return new java.math.BigDecimal(in.nextString());\n    } catch (java.lang.NumberFormatException e) {\n        throw new com.google.gson.JsonSyntaxException(e);\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597],"tindex":"d17c2abb-3e75-11e6-8cb9-17a64da7d8eb","method":{"position":"com.google.gson.Gson:881","type":"CtMethodImpl","sourcecode":"public void setDelegate(com.google.gson.TypeAdapter<T> typeAdapter) {\n    if (typeAdapter != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((com.google.gson.TypeAdapter<T>) != null) {\n                throw new java.lang.AssertionError();\n            } \n            com.google.gson.TypeAdapter<T> = typeAdapter;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"candidate":"typeAdapter"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:565","type":"CtBinaryOperatorImpl","sourcecode":"(indent) == null"},"failures":[],"tindex":"d17c78dc-3e75-11e6-8cb9-05605a388ff0","method":{"position":"com.google.gson.JsonObject:161","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String memberName) {\n    if (memberName == null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            return ((com.google.gson.JsonPrimitive)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"indent":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":0},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"d17c9fed-3e75-11e6-8cb9-ebb4363beda9","method":{"position":"com.google.gson.internal.bind.TypeAdapters:145","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Boolean read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        in.nextNull();\n        return null;\n    } else if ((in.peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n        return java.lang.Boolean.parseBoolean(in.nextString());\n    } \n    return in.nextBoolean();\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.GsonBuilder:554","type":"CtBinaryOperatorImpl","sourcecode":"(datePattern != null) && (!(\"\".equals(datePattern.trim())))"},"failures":[],"tindex":"d17c9fee-3e75-11e6-8cb9-61f747c033c5","method":{"position":"com.google.gson.JsonObject:171","type":"CtMethodImpl","sourcecode":"public com.google.gson.JsonArray getAsJsonArray(java.lang.String memberName) {\n    if ((memberName != null) && (!(\"\".equals(datePattern.trim())))) {\n        {\n            if (memberName == null) {\n                try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n                throw new java.lang.RuntimeException();\n            } else {\n                {\n                    return ((com.google.gson.JsonArray)(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.get(memberName)));\n                }\n            }\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"datePattern":"memberName"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:720","type":"CtBinaryOperatorImpl","sourcecode":"json == null"},"failures":[64,66,67,69,70,74,563,564,565],"tindex":"d17c9fef-3e75-11e6-8cb9-57e6d958d9f2","method":{"position":"com.google.gson.FieldNamingPolicy:122","type":"CtMethodImpl","sourcecode":"private static java.lang.String separateCamelCase(java.lang.String name, java.lang.String separator) {\n    if (separator == null) {\n        {\n            java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n            for (int int = 0 ; i < (name.length()) ; i++) {\n                char char = name.charAt(i);\n                if ((java.lang.Character.isUpperCase(character)) && ((translation.length()) != 0)) {\n                    translation.append(separator);\n                } \n                translation.append(character);\n            }\n            return translation.toString();\n        }\n    } else {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"separator"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:291","type":"CtBinaryOperatorImpl","sourcecode":"right != null"},"failures":[598],"tindex":"d17c9ff0-3e75-11e6-8cb9-ab5633dfc8f2","method":{"position":"com.google.gson.internal.LinkedHashTreeMap:429","type":"CtMethodImpl","sourcecode":"private void rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V> root) {\n    if (root != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivotRight;\n            if (pivotRight != null) {\n                pivotRight.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            } \n            replaceInParent(root, pivot);\n            pivot.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = root;\n            root.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = pivot;\n            root.int = (java.lang.Math.max((right != null ? right.int : 0), (pivotRight != null ? pivotRight.int : 0))) + 1;\n            pivot.int = (java.lang.Math.max(root.int, (pivotLeft != null ? pivotLeft.int : 0))) + 1;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"right":"root"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtUnaryOperatorImpl","sourcecode":"!(fillBuffer(1))"},"failures":[],"tindex":"d17d1521-3e75-11e6-8cb9-2d49774f739e","method":{"position":"com.google.gson.internal.bind.TypeAdapters:304","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic java.lang.Number read(com.google.gson.stream.JsonReader in) throws java.io.IOException {\n    com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = in.peek();\n    switch (jsonToken) {\n        case NULL :\n            in.nextNull();\n            return null;\n        case NUMBER :\n            return new com.google.gson.internal.LazilyParsedNumber(in.nextString());\n        default :\n            throw new com.google.gson.JsonSyntaxException((\"Expecting number, got: \" + jsonToken));\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"in"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtUnaryOperatorImpl","sourcecode":"!(isLenient())"},"failures":[],"tindex":"d17d1522-3e75-11e6-8cb9-5b91dc606d69","method":{"position":"com.google.gson.internal.bind.SqlDateTypeAdapter:64","type":"CtMethodImpl","sourcecode":"@java.lang.Override\npublic synchronized void write(com.google.gson.stream.JsonWriter out, java.sql.Date value) throws java.io.IOException {\n    out.value((value == null ? null : java.text.DateFormat.format(value)));\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"out"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:287","type":"CtBinaryOperatorImpl","sourcecode":"replacement != null"},"failures":[599,600,601,602,603,604,605,10,21,98,129,130,357,416,422,477,478,479,480],"tindex":"d17d1523-3e75-11e6-8cb9-4fa79db52102","method":{"position":"com.google.gson.internal.LinkedTreeMap:284","type":"CtMethodImpl","sourcecode":"private void replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V> node, com.google.gson.internal.LinkedTreeMap.Node<K, V> replacement) {\n    if (replacement != null) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = node.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n            node.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null;\n            if (replacement != null) {\n                replacement.com.google.gson.internal.LinkedTreeMap.Node<K, V> = parent;\n            } \n            if (parent != null) {\n                if ((parent.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == node) {\n                    parent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n                } else {\n                    assert (parent.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == node;\n                    parent.com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n                }\n            } else {\n                com.google.gson.internal.LinkedTreeMap.Node<K, V> = replacement;\n            }\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"replacement":"replacement"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"com.google.gson.JsonSyntaxException","condition":{"position":"com.google.gson.JsonElement:136","type":"CtInvocationImpl","sourcecode":"isJsonNull()"},"failures":[],"tindex":"d17d3c34-3e75-11e6-8cb9-cdfc5bc340ef","method":{"position":"com.google.gson.Gson:847","type":"CtMethodImpl","sourcecode":"public <T>T fromJson(com.google.gson.JsonElement json, java.lang.Class<T> classOfT) throws com.google.gson.JsonSyntaxException {\n    java.lang.Object java.lang.Object = fromJson(json, ((java.lang.reflect.Type)(classOfT)));\n    return com.google.gson.internal.Primitives.wrap(classOfT).cast(object);\n}"},"series":0,"name":"addParameterCondition","variableMap":{"this":"json"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:79","type":"CtUnaryOperatorImpl","sourcecode":"!(json instanceof com.google.gson.JsonPrimitive)"},"failures":[606,607,608,609,610,611,612,613,614,615,616,617,47,101,102,103,104,105,112,113,114,120,136,175,192,197,199,618,619,357,472,475,476,478,620,621,622],"tindex":"d17d3c35-3e75-11e6-8cb9-634112cc9b25","method":{"position":"com.google.gson.internal.Streams:67","type":"CtMethodImpl","sourcecode":"public static void write(com.google.gson.JsonElement element, com.google.gson.stream.JsonWriter writer) throws java.io.IOException {\n    if (!(element instanceof com.google.gson.JsonPrimitive)) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.io.IOException();\n    } else {\n        {\n            com.google.gson.internal.bind.TypeAdapters.com.google.gson.internal.bind.TypeAdapters.com.google.gson.TypeAdapter<com.google.gson.JsonElement>.write(writer, element);\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"json":"element"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1236","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"d17d3c36-3e75-11e6-8cb9-f7f67f9d7859","method":{"position":"com.google.gson.stream.JsonReader:1268","type":"CtMethodImpl","sourcecode":"private void push(int newTop) {\n    if (newTop == newTop) {\n        try {\njava.io.PrintWriter p = new java.io.PrintWriter(\"/root/diversify-statements/tmpDir/tmp_1467258296645/src/main/java/logThrowBranch\");\np.write(\"b\");\np.close();\n} catch (java.io.FileNotFoundException e) {};\n        throw new java.lang.RuntimeException();\n    } else {\n        {\n            if ((int) == (int[].int)) {\n                int[] int[] = new int[(int) * 2];\n                int[] int[] = new int[(int) * 2];\n                java.lang.String[] java.lang.String[] = new java.lang.String[(int) * 2];\n                java.lang.System.arraycopy(int[], 0, newStack, 0, int);\n                java.lang.System.arraycopy(int[], 0, newPathIndices, 0, int);\n                java.lang.System.arraycopy(java.lang.String[], 0, newPathNames, 0, int);\n                int[] = newStack;\n                int[] = newPathIndices;\n                java.lang.String[] = newPathNames;\n            } \n            int[][((int)++)] = newTop;\n        }\n    }\n}"},"series":0,"name":"addParameterCondition","variableMap":{"p":"newTop","com.google.gson.stream.JsonReader.PEEKED_NONE":"newTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}