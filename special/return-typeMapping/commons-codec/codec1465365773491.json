{"failureDictionary":{"org.apache.commons.codec.binary.HexTest.testCustomCharset":37,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":107,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":123,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":102,"org.apache.commons.codec.language.NysiisTest.testSnat":6,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":108,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":129,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":27,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":26,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":75,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":106,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":94,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":89,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":84,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":30,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":32,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":69,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":96,"org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks":33,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":52,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":114,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":47,"org.apache.commons.codec.language.NysiisTest.testCap":0,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":43,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":48,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":101,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":118,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":115,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":49,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":50,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":83,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":39,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":55,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":77,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":63,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":82,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":13,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":122,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":124,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":105,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":88,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":119,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":100,"org.apache.commons.codec.language.NysiisTest.testTranan":8,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":76,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":68,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":111,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":113,"org.apache.commons.codec.language.NysiisTest.testFal":3,"org.apache.commons.codec.language.NysiisTest.testSnad":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":126,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved":117,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":10,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":64,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":61,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":85,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":93,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":36,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":19,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":121,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":16,"org.apache.commons.codec.binary.Base64Test.testBase64":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":104,"org.apache.commons.codec.binary.Base64Test.testUUID":35,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":74,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":53,"org.apache.commons.codec.binary.Base64Test.testSingletons":58,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":71,"org.apache.commons.codec.binary.Base64Test.testPairs":44,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":99,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":65,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":125,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":42,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":7,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":34,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":87,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":20,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":120,"org.apache.commons.codec.language.NysiisTest.testBran":4,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":9,"org.apache.commons.codec.binary.Base64Test.testCodec68":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":95,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":29,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":80,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":91,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":56,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":66,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":40,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":57,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":98,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":24,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":72,"org.apache.commons.codec.language.NysiisTest.testDad":1,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":46,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":130,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":18,"org.apache.commons.codec.language.SoundexTest.testDifference":79,"org.apache.commons.codec.language.NysiisTest.testDan":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":109,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":41,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":23,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":103,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":54,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":128,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":127,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":110,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":116,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":81},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:532","type":"CtVariableReadImpl","sourcecode":"branching"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"a37b06f2-2d3e-11e6-aefb-6b164e3ab447","series":0,"name":"checkReturn","variableMap":{"branching":"strict"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.this.strict","position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.Metaphone:126","type":"CtBinaryOperatorImpl","sourcecode":"(inwd[1]) == 'R'"},"failures":[],"tindex":"a37b7c23-2d3e-11e6-aefb-1b73803a1e08","series":0,"name":"checkReturn","variableMap":{"inwd":"l_ascii"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.Soundex:259","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[11,12,13,14,15,16,17,18,19,20,21],"tindex":"a37b7c24-2d3e-11e6-aefb-6574e32220b1","series":0,"name":"checkReturn","variableMap":{"str":"cachedString"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return cachedString","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtBinaryOperatorImpl","sourcecode":"(key.length()) > 1"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"a37b7c25-2d3e-11e6-aefb-bd69f41387b2","series":0,"name":"checkReturn","variableMap":{"key":"phonemeText"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.phonemeText","position":"org.apache.commons.codec.language.bm.Rule:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","condition":{"position":"org.apache.commons.codec.digest.Sha2Crypt:456","type":"CtBinaryOperatorImpl","sourcecode":"blocksize == 32"},"failures":[34,35,36,37,38,39],"tindex":"a37ba336-2d3e-11e6-aefb-f54d0677ce4b","series":0,"name":"checkReturn","variableMap":{"blocksize":"digit"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return digit","position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.Metaphone:112","type":"CtBinaryOperatorImpl","sourcecode":"(inwd[1]) == 'N'"},"failures":[],"tindex":"a37c8d97-2d3e-11e6-aefb-492497f9439b","series":0,"name":"checkReturn","variableMap":{"inwd":"newData"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return newData","position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return newData"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtBinaryOperatorImpl","sourcecode":"b == '+'"},"failures":[],"tindex":"a37cb4a8-2d3e-11e6-aefb-5b693d03ebe8","series":0,"name":"checkReturn","variableMap":{"b":"index"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.net.QCodec:170","type":"CtBinaryOperatorImpl","sourcecode":"bytes == null"},"failures":[40,41,42,34,43,44,35,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"a37cb4a9-2d3e-11e6-aefb-b5e59edb68e8","series":0,"name":"checkReturn","variableMap":{"bytes":"result"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return result","position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtBinaryOperatorImpl","sourcecode":"i > name2Size"},"failures":[73,74,75,76,77,78],"tindex":"a37cb4aa-2d3e-11e6-aefb-7f15eb767a0d","series":0,"name":"checkReturn","variableMap":{"i":"index","name2Size":"index"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:733","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtUnaryOperatorImpl","sourcecode":"!(ph.endsWith(\"]\"))"},"failures":[79,80],"tindex":"a37cdbbb-2d3e-11e6-aefb-c7c4e6a58c7a","series":0,"name":"checkReturn","variableMap":{"ph":"str"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtBinaryOperatorImpl","sourcecode":"b == '+'"},"failures":[81,82,83,84],"tindex":"a37cdbbc-2d3e-11e6-aefb-29fbeff1481b","series":0,"name":"checkReturn","variableMap":{"b":"a"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return a","position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.Metaphone:112","type":"CtBinaryOperatorImpl","sourcecode":"(inwd[1]) == 'N'"},"failures":[85,86,87],"tindex":"a37cdbbd-2d3e-11e6-aefb-7f59d34efd79","series":0,"name":"checkReturn","variableMap":{"inwd":"l_ascii"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtBinaryOperatorImpl","sourcecode":"str == null"},"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"a37d02ce-2d3e-11e6-aefb-d3bf2e39dfe9","series":0,"name":"checkReturn","variableMap":{"str":"replacedName"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return replacedName","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.binary.Base32:291","type":"CtBinaryOperatorImpl","sourcecode":"lineSeparator == null"},"failures":[],"tindex":"a37d02cf-2d3e-11e6-aefb-999c50d0a90d","series":0,"name":"checkReturn","variableMap":{"lineSeparator":"l_raw"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return l_raw","position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":14,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}