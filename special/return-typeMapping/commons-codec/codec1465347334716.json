{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":98,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":116,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":93,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":132,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":24,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":99,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":123,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully":79,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":11,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully":100,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":134,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":87,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":8,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully":91,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":125,"org.apache.commons.codec.binary.Base64Test.testTriplets":141,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":81,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":140,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":176,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":76,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":2,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":47,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":57,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":0,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":3,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":131,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully":120,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":62,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":154,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":34,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":130,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":163,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":108,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":166,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":148,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":13,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":149,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":111,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":153,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":109,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":58,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":150,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":28,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":46,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":151,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":169,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":175,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":75,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":33,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":30,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":159,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":21,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":74,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":1,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":143,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":115,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":29,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":127,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":117,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":65,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":72,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":167,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":85,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully":104,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":66,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":106,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully":122,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":25,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":142,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":61,"org.apache.commons.codec.language.MetaphoneTest.testWhy":42,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":112,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":137,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":20,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":171,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":105,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":55,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":107,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":27,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":119,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":177,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully":82,"org.apache.commons.codec.language.MetaphoneTest.testTCH":41,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":138,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":165,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":168,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":16,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":86,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":156,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":69,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":7,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":49,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":164,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":48,"org.apache.commons.codec.language.NysiisTest.testDropBy":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":114,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":152,"org.apache.commons.codec.binary.Base64Test.testBase64":162,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":10,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":139,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":95,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":19,"org.apache.commons.codec.binary.Base64Test.testUUID":145,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":128,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":155,"org.apache.commons.codec.binary.Base64Test.testSingletons":158,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":22,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":136,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":161,"org.apache.commons.codec.binary.Base64Test.testPairs":144,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":35,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":59,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":135,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":36,"org.apache.commons.codec.binary.Base64Test.testCodec112":157,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":83,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":56,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":118,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":53,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay":68,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":113,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":170,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2":101,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":88,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":15,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":39,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":126,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":84,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull":17,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":172,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":54,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":174,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":43,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":38,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":44,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":133,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":90,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":129,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":9,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert":52,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":147,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":160,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully":96,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":124,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":26,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":102,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":37,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":173,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully":121,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":94,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully":80,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":146,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":103,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":110,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":73},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder:112","type":"CtUnaryOperatorImpl","sourcecode":"!(languages.isEmpty())"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"b51ec5af-2d13-11e6-8462-1d4daa90521a","series":0,"name":"checkReturn","variableMap":{"languages":"languages"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.languages","position":"org.apache.commons.codec.language.bm.Rule:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.Phoneme.this.org.apache.commons.codec.language.bm.Languages.LanguageSet"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.Metaphone:130","type":"CtBinaryOperatorImpl","sourcecode":"(inwd[1]) == 'H'"},"failures":[16,17],"tindex":"b51eecc0-2d13-11e6-8462-c982b0fbeeda","series":0,"name":"checkReturn","variableMap":{"inwd":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:362","type":"CtBinaryOperatorImpl","sourcecode":"pos > (-1)"},"failures":[18,19,20,21],"tindex":"b51f13d1-2d13-11e6-8462-a183b719f63f","series":0,"name":"checkReturn","variableMap":{"pos":"index"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"org.apache.commons.codec.DecoderException","condition":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:288","type":"CtBinaryOperatorImpl","sourcecode":"pos < (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH)"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"b51f13d2-2d13-11e6-8462-13ae02e03bd8","series":0,"name":"checkReturn","variableMap":{"pos":"i","org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH":"i"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return i","position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:450","type":"CtFieldReadImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.this.concat"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"b5202543-2d13-11e6-8462-2908492fd91a","series":0,"name":"checkReturn","variableMap":{"concat":"matches"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Rule:412","type":"CtVariableReadImpl","sourcecode":"inMultilineComment"},"failures":[39,40,41,43,44,46,47,48,49,50,51,53,54,55,56,58,60,62,65,67],"tindex":"b5202544-2d13-11e6-8462-692232ca691a","series":0,"name":"checkReturn","variableMap":{"inMultilineComment":"matches"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.binary.Base32:440","type":"CtBinaryOperatorImpl","sourcecode":"inAvail < 0"},"failures":[18,19,69,70,20,21,71,72],"tindex":"b5204c55-2d13-11e6-8462-896ea048efb9","series":0,"name":"checkReturn","variableMap":{"inAvail":"index"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:576","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.Metaphone:112","type":"CtBinaryOperatorImpl","sourcecode":"(inwd[1]) == 'N'"},"failures":[16,17],"tindex":"b5204c56-2d13-11e6-8462-37ae855c6c59","series":0,"name":"checkReturn","variableMap":{"inwd":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Languages$SomeLanguages:136","type":"CtBinaryOperatorImpl","sourcecode":"other == (org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE)"},"failures":[],"tindex":"b5204c57-2d13-11e6-8462-57e53f929734","series":0,"name":"checkReturn","variableMap":{"other":"other","org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE":"other"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return other","position":"org.apache.commons.codec.language.bm.Languages:239","type":"CtReturnImpl","sourcecode":"return other"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtBinaryOperatorImpl","sourcecode":"i < 0"},"failures":[73,74,75,76],"tindex":"b5204c58-2d13-11e6-8462-0f57ba834611","series":0,"name":"checkReturn","variableMap":{"i":"el"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return el","position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return el"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.binary.BaseNCodec:292","type":"CtBinaryOperatorImpl","sourcecode":"(context.buffer) != null"},"failures":[],"tindex":"b5204c59-2d13-11e6-8462-5591938c9b7c","series":0,"name":"checkReturn","variableMap":{"context":"context","buffer":"buffer"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return context.buffer","position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)"},"failures":[],"tindex":"b520736a-2d13-11e6-8462-a506c501d65d","series":0,"name":"checkReturn","variableMap":{"ascii":"buf"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.Metaphone:130","type":"CtBinaryOperatorImpl","sourcecode":"(inwd[1]) == 'H'"},"failures":[77],"tindex":"b520736b-2d13-11e6-8462-e968a1b152b8","series":0,"name":"checkReturn","variableMap":{"inwd":"org.apache.commons.codec.language.Nysiis.CHARS_FF"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.CHARS_FF","position":"org.apache.commons.codec.language.Nysiis:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.binary.Base64:337","type":"CtBinaryOperatorImpl","sourcecode":"inAvail < 0"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"b520736c-2d13-11e6-8462-11b13af597d6","series":0,"name":"checkReturn","variableMap":{"inAvail":"minRating"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return minRating","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Languages$SomeLanguages:116","type":"CtBinaryOperatorImpl","sourcecode":"other == (org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES)"},"failures":[],"tindex":"b520736d-2d13-11e6-8462-65b5c8080af8","series":0,"name":"checkReturn","variableMap":{"other":"other","org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES":"other"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return other","position":"org.apache.commons.codec.language.bm.Languages:117","type":"CtReturnImpl","sourcecode":"return other"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:159","type":"CtFieldReadImpl","sourcecode":"doEncode"},"failures":[39,40,41,45,53,55,65],"tindex":"b5209a7e-2d13-11e6-8462-ed1b013c6680","series":0,"name":"checkReturn","variableMap":{"doEncode":"matches"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return matches","position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.net.URLCodec:162","type":"CtBinaryOperatorImpl","sourcecode":"bytes == null"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"b5209a7f-2d13-11e6-8462-7f7615bc2f1a","series":0,"name":"checkReturn","variableMap":{"bytes":"buf"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return buf","position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.Metaphone:126","type":"CtBinaryOperatorImpl","sourcecode":"(inwd[1]) == 'R'"},"failures":[175,176,177],"tindex":"b5209a80-2d13-11e6-8462-677da83f161d","series":0,"name":"checkReturn","variableMap":{"inwd":"newData"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return newData","position":"org.apache.commons.codec.language.ColognePhonetic:243","type":"CtReturnImpl","sourcecode":"return newData"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":18,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}