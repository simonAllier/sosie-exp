{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing":25,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":44,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":8,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":31,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":12,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":45,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":20,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":3,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":18,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":9,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeEmpty":27,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative":48,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeNull":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":15,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":40,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testLocaleIndependence":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":17,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":46,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":33,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":38,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":30,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":1,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":19,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing":24,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":42,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":11,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":39,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":0,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":36,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":32,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":47},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.digest.Md5Crypt:264","type":"CtBinaryOperatorImpl","sourcecode":"(i % 3) != 0"},"failures":[0,1,2,3],"tindex":"db1c7f2a-2d20-11e6-be38-ef6dd3fae110","series":0,"name":"checkReturn","variableMap":{"i":"index"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return index","position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication:181","type":"CtBinaryOperatorImpl","sourcecode":"finalRules == null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"db1ccd4b-2d20-11e6-be38-f3ab0f538aed","series":0,"name":"checkReturn","variableMap":{"finalRules":"lines"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return lines","position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtInvocationImpl","sourcecode":"line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)"},"failures":[22,23,24,25,26,27,28],"tindex":"db1ddebc-2d20-11e6-be38-83c615b8daa1","series":0,"name":"checkReturn","variableMap":{"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","line":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-1},{"exception":"java.io.IOException","condition":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtBinaryOperatorImpl","sourcecode":"len == (org.apache.commons.codec.binary.BaseNCodec.EOF)"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"db1e05cd-2d20-11e6-be38-e96a148b7eb4","series":0,"name":"checkReturn","variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"org.apache.commons.codec.binary.BaseNCodec.EOF","len":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"special","returnInThen":false,"transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BaseNCodec.EOF","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtBinaryOperatorImpl","sourcecode":"b == ' '"},"failures":[4,5,6,7,8,11,12,13,14,15,18,19,20,21,48],"tindex":"db1ec91e-2d20-11e6-be38-db71eda0f9d0","series":0,"name":"checkReturn","variableMap":{"b":"c"},"type":"special","returnInThen":true,"transplantationPoint":{"toString":"return c","position":"org.apache.commons.codec.language.bm.Rule:94","type":"CtReturnImpl","sourcecode":"return c"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":5,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}