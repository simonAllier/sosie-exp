{"failureDictionary":{"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":119,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":139,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":11,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":213,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":47,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":171,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":10,"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":86,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":20,"com.google.gson.MixedStreamTest.testWriteLenient":220,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":175,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":55,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":85,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":191,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":193,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":81,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":111,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":38,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":94,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":162,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":207,"com.google.gson.functional.ObjectTest.testSingletonLists":186,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":23,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":26,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":68,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":78,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":189,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":209,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":80,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":63,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":48,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":178,"com.google.gson.functional.TreeTypeAdaptersTest.initializationError":155,"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":222,"com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse":87,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":103,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":138,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":43,"com.google.gson.GenericArrayTypeTest.testNotEquals":223,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":66,"com.google.gson.functional.JsonTreeTest.testToJsonTree":54,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":32,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":194,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":34,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":95,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":169,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":154,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":83,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":104,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":174,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":12,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":5,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":199,"com.google.gson.functional.MapTest.testGeneralMapField":144,"com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects":75,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":142,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":100,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":0,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":84,"com.google.gson.JsonObjectTest.testDeepCopy":98,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":114,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":135,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":92,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":180,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":204,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":27,"com.google.gson.JsonParserTest.testParseString":72,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":214,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":42,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":37,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":115,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":21,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":134,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":69,"com.google.gson.ParameterizedTypeTest.testNotEquals":212,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":79,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":116,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":67,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":200,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":172,"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":211,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":29,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":148,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":188,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":73,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":44,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":136,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":158,"com.google.gson.JavaSerializationTest.testListIsSerializable":215,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":24,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":58,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":206,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":152,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":59,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":117,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":149,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":7,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":39,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":143,"com.google.gson.functional.MapTest.testInterfaceTypeMap":141,"com.google.gson.JsonObjectTest.testAddingNullOrEmptyPropertyName":101,"com.google.gson.functional.CollectionTest.testSetDeserialization":203,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":110,"com.google.gson.functional.EnumTest.testEnumSet":173,"com.google.gson.MixedStreamTest.testReadClosed":219,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":161,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":170,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":216,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":131,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":160,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":124,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":163,"com.google.gson.functional.MapTest.testHashMapDeserialization":130,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":123,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":196,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":36,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":126,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":65,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":118,"com.google.gson.functional.MapTest.testSortedMap":140,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":198,"com.google.gson.functional.MapTest.testMapSerialization":137,"com.google.gson.internal.bind.JsonElementReaderTest.testObject":77,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":3,"com.google.gson.functional.MapTest.testComplexKeysSerialization":146,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":202,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":76,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":46,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":13,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":181,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":106,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":51,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":89,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":35,"com.google.gson.functional.CollectionTest.testQueueDeserialization":208,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":96,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":133,"com.google.gson.functional.MapTest.testStringKeyDeserialization":45,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":218,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":62,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":190,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":192,"com.google.gson.JsonParserTest.testParseReader":71,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":150,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":205,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":122,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":8,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":97,"com.google.gson.functional.MapTest.testMapSerializationEmpty":147,"com.google.gson.functional.CollectionTest.testQueueSerialization":197,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":74,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":17,"com.google.gson.JavaSerializationTest.testMapIsSerializable":90,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":201,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":56,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":185,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":164,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":60,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":53,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":179,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":19,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":16,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":109,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":9,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":184,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":128,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":156,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":120,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":14,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":168,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":22,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":159,"com.google.gson.functional.EnumTest.testEnumSubclass":176,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":121,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":112,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":57,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":61,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":49,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":15,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":50,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":30,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":64,"com.google.gson.internal.LinkedTreeMapTest.testClear":82,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":88,"com.google.gson.JsonObjectTest.testAddingStringProperties":99,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":187,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":145,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":6,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":153,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":25,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":221,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":107,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":157,"com.google.gson.CommentsTest.testParseComments":210,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":91,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":33,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":127,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":2,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":108,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":167,"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":102,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":4,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":113,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":182,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":195,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":217,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":125,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":183,"com.google.gson.functional.MapTest.testMapDeserialization":41,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":28,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":1,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":93,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":129,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":132,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":105,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap":70,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":52,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":177,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":165,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":18,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":40,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":31,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":151,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":166},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5e931b0a-3e55-11e6-945d-058b52be2d44","series":0,"name":"checkReturn","variableMap":{"candidate":"result"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:57","type":"CtReturnImpl","sourcecode":"return result"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:381","type":"CtBinaryOperatorImpl","sourcecode":"pivotLeft != null"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"5e93692b-3e55-11e6-945d-412454deecd4","series":0,"name":"checkReturn","variableMap":{"pivotLeft":"created"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:180","type":"CtReturnImpl","sourcecode":"return created"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:318","type":"CtBinaryOperatorImpl","sourcecode":"parent != null"},"failures":[],"tindex":"5e93903c-3e55-11e6-945d-038c73e544fe","series":0,"name":"checkReturn","variableMap":{"parent":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:540","type":"CtReturnImpl","sourcecode":"return node"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:336","type":"CtBinaryOperatorImpl","sourcecode":"cached != null"},"failures":[],"tindex":"5e93903d-3e55-11e6-945d-87140f30fb0c","series":0,"name":"checkReturn","variableMap":{"cached":"cached"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:337","type":"CtReturnImpl","sourcecode":"return ((com.google.gson.TypeAdapter<T>)(cached))"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:360","type":"CtBinaryOperatorImpl","sourcecode":"candidate != null"},"failures":[],"tindex":"5e93903e-3e55-11e6-945d-31ba2886496d","series":0,"name":"checkReturn","variableMap":{"candidate":"candidate"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.Gson:363","type":"CtReturnImpl","sourcecode":"return candidate"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.$Gson$Types:315","type":"CtBinaryOperatorImpl","sourcecode":"mapType instanceof java.lang.reflect.ParameterizedType"},"failures":[102,103,104,105,106,107,108,109,110,111,14,15,112,113,114,115,25,116,117,118,119,120,121,122,30,123,124,125,126,127,35,36,128,129,130,37,38,39,131,40,132,41,133,134,135,42,136,137,43,138,139,140,141,142,143,144,145,44,146,147,45,148,46,149,150,47,151,152,153,154,155,156,157,49,158,159,160,161,162,163,164,165,166,167,50,168,169,170,60,171,172,173,174,175,176,177,178,65,179,180,66,67,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,74,213,214,90,215,216,217,218,219,220,221,222,223],"tindex":"5e93b74f-3e55-11e6-945d-69cc0d218ac4","series":0,"name":"checkReturn","variableMap":{"mapType":"rawType"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:130","type":"CtReturnImpl","sourcecode":"return ((java.lang.Class<?>)(rawType))"},"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1022","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\n'"},"failures":[],"tindex":"5e93de60-3e55-11e6-945d-176bd99e9289","series":0,"name":"checkReturn","variableMap":{"c":"result"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:592","type":"CtReturnImpl","sourcecode":"return result"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:552","type":"CtBinaryOperatorImpl","sourcecode":"last < i"},"failures":[],"tindex":"5e93de61-3e55-11e6-945d-ef99b5bfa670","series":0,"name":"checkReturn","variableMap":{"last":"com.google.gson.stream.JsonReader.PEEKED_NONE","i":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:627","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.com.google.gson.stream.JsonReader.int"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:430","type":"CtUnaryOperatorImpl","sourcecode":"!skipPastFound"},"failures":[],"tindex":"5e93de62-3e55-11e6-945d-9bf977085211","series":0,"name":"checkReturn","variableMap":{"skipPastFound":"htmlSafe"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:261","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:961","type":"CtBinaryOperatorImpl","sourcecode":"(p == (com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED)) || (p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED))"},"failures":[],"tindex":"5e940573-3e55-11e6-945d-47e2d2e99ff4","series":0,"name":"checkReturn","variableMap":{"p":"size","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"size","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:559","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtBinaryOperatorImpl","sourcecode":"(deferredName) != null"},"failures":[],"tindex":"5e940574-3e55-11e6-945d-99a5bae85669","series":0,"name":"checkReturn","variableMap":{"deferredName":"result"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1098","type":"CtReturnImpl","sourcecode":"return result"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.Excluder:245","type":"CtBinaryOperatorImpl","sourcecode":"annotationVersion <= (version)"},"failures":[],"tindex":"5e942c85-3e55-11e6-945d-ef7357e21ec0","series":0,"name":"checkReturn","variableMap":{"version":"result","annotationVersion":"result"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:179","type":"CtReturnImpl","sourcecode":"return result"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":12,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}