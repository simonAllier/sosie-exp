{"failureDictionary":{"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":122,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":153,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":62,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":205,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":49,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":172,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":6,"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":80,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":66,"com.google.gson.MixedStreamTest.testWriteLenient":201,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":132,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":31,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":79,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":176,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":75,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":40,"com.google.gson.functional.RawSerializationTest.testCollectionOfObjects":194,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":95,"com.google.gson.functional.ObjectTest.testSingletonLists":166,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":69,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":4,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":61,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":87,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":165,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":169,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":89,"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":198,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":57,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":50,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":135,"com.google.gson.functional.CollectionTest.testRawCollectionSerialization":184,"com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse":81,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":113,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":152,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":45,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":28,"com.google.gson.functional.JsonTreeTest.testToJsonTree":18,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":24,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":179,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":26,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":96,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":119,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":77,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":114,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":131,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":63,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":11,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":183,"com.google.gson.functional.MapTest.testGeneralMapField":158,"com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects":84,"com.google.gson.functional.DefaultTypeAdaptersTest.testSetSerialization":137,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":156,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":101,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":73,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":78,"com.google.gson.JsonObjectTest.testDeepCopy":99,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":129,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":149,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":93,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":126,"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":193,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":35,"com.google.gson.JsonParserTest.testParseString":104,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":203,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":44,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":39,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":195,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":67,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":19,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":88,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":196,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":29,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":185,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":173,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":21,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":162,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":168,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":105,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":46,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":150,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":139,"com.google.gson.JavaSerializationTest.testListIsSerializable":204,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":34,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":70,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":191,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":53,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":111,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":163,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":13,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":41,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":157,"com.google.gson.functional.MapTest.testInterfaceTypeMap":155,"com.google.gson.JsonObjectTest.testAddingNullOrEmptyPropertyName":102,"com.google.gson.functional.CollectionTest.testSetDeserialization":189,"com.google.gson.functional.EnumTest.testEnumSet":130,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":171,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":146,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":141,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":121,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":142,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":120,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":60,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":27,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":112,"com.google.gson.functional.MapTest.testSortedMap":154,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":182,"com.google.gson.functional.MapTest.testMapSerialization":151,"com.google.gson.internal.bind.JsonElementReaderTest.testObject":86,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":9,"com.google.gson.functional.MapTest.testComplexKeysSerialization":160,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":187,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":85,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":48,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":7,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":106,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":116,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":15,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":83,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":59,"com.google.gson.functional.CollectionTest.testQueueDeserialization":192,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacity":3,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":97,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":148,"com.google.gson.functional.MapTest.testStringKeyDeserialization":47,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":56,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":170,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":177,"com.google.gson.JsonParserTest.testParseReader":103,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":164,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":190,"com.google.gson.functional.CollectionTest.testRawCollectionOfIntegersSerialization":178,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":14,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":98,"com.google.gson.functional.MapTest.testMapSerializationEmpty":161,"com.google.gson.functional.CollectionTest.testQueueSerialization":181,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":91,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":64,"com.google.gson.ObjectTypeAdapterTest.testSerialize":199,"com.google.gson.JavaSerializationTest.testMapIsSerializable":90,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":186,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":32,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":110,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":143,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":54,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":17,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":125,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":72,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":30,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":5,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":109,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":138,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":145,"com.google.gson.internal.LinkedHashTreeMapTest.testDoubleCapacityAllNodesOnLeft":0,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":124,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":51,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":68,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":140,"com.google.gson.functional.EnumTest.testEnumSubclass":133,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":136,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":127,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":33,"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":188,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":55,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":37,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":52,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":38,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":22,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":58,"com.google.gson.internal.LinkedTreeMapTest.testClear":76,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":82,"com.google.gson.JsonObjectTest.testAddingStringProperties":100,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":167,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":159,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":12,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":197,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":118,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":71,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":202,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":117,"com.google.gson.CommentsTest.testParseComments":200,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":92,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":25,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":175,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":8,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":10,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":128,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":107,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":180,"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":1,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":174,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":108,"com.google.gson.functional.MapTest.testMapDeserialization":43,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":36,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":74,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":123,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":94,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":147,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":115,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap":20,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":16,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":134,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":144,"com.google.gson.internal.LinkedHashTreeMapTest.testAvlWalker":2,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":65,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":42,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":23},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:188","type":"CtBinaryOperatorImpl","sourcecode":"from == null"},"failures":[],"tindex":"3688f351-3f05-11e6-aa74-5f57b302e0bc","series":0,"name":"checkReturn","variableMap":{"from":"type"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:113","type":"CtReturnImpl","sourcecode":"return type"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:291","type":"CtBinaryOperatorImpl","sourcecode":"right != null"},"failures":[0,1,2,3],"tindex":"36894172-3f05-11e6-aa74-05eeb34adef5","series":0,"name":"checkReturn","variableMap":{"right":"result"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:648","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:381","type":"CtBinaryOperatorImpl","sourcecode":"pivotLeft != null"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"36894173-3f05-11e6-aa74-95243a11d507","series":0,"name":"checkReturn","variableMap":{"pivotLeft":"created"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:180","type":"CtReturnImpl","sourcecode":"return created"},"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:194","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.NUMBER)) && (token != (com.google.gson.stream.JsonToken.STRING))"},"failures":[],"tindex":"36896884-3f05-11e6-aa74-39ace3ca1c3f","series":0,"name":"checkReturn","variableMap":{"com.google.gson.stream.JsonToken.STRING":"com.google.gson.stream.JsonToken.BOOLEAN","token":"com.google.gson.stream.JsonToken.BOOLEAN","com.google.gson.stream.JsonToken.NUMBER":"com.google.gson.stream.JsonToken.BOOLEAN"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:114","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:271","type":"CtBinaryOperatorImpl","sourcecode":"left != null"},"failures":[],"tindex":"36896885-3f05-11e6-aa74-0d3d78034afb","series":0,"name":"checkReturn","variableMap":{"left":"result"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:648","type":"CtReturnImpl","sourcecode":"return result"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:409","type":"CtBinaryOperatorImpl","sourcecode":"pivotLeft != null"},"failures":[],"tindex":"36898f96-3f05-11e6-aa74-9b156c2dc1c2","series":0,"name":"checkReturn","variableMap":{"pivotLeft":"result"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:648","type":"CtReturnImpl","sourcecode":"return result"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:255","type":"CtBinaryOperatorImpl","sourcecode":"(left != null) && (right != null)"},"failures":[],"tindex":"36898f97-3f05-11e6-aa74-d75ca711ebed","series":0,"name":"checkReturn","variableMap":{"left":"node","right":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:553","type":"CtReturnImpl","sourcecode":"return node"},"status":0},{"exception":"com.google.gson.JsonParseException","condition":{"position":"com.google.gson.internal.bind.DateTypeAdapter:86","type":"CtBinaryOperatorImpl","sourcecode":"value == null"},"failures":[],"tindex":"36898f98-3f05-11e6-aa74-179a253f739d","series":0,"name":"checkReturn","variableMap":{"value":"date"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.DefaultDateTypeAdapter:84","type":"CtReturnImpl","sourcecode":"return date"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.ConstructorConstructor:80","type":"CtBinaryOperatorImpl","sourcecode":"defaultConstructor != null"},"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,22,120,121,122,123,124,27,125,126,28,29,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,39,40,41,146,42,147,43,148,149,44,150,151,45,152,153,154,155,156,157,158,159,46,160,161,47,162,48,163,164,49,165,166,167,168,169,170,51,52,171,54,172,173,174,175,59,60,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,61,192,193,194,195,71,196,197,198,199,200,201,202,203,90,204,91,205],"tindex":"3689b6a9-3f05-11e6-aa74-dd4ab6e17088","series":0,"name":"checkReturn","variableMap":{"defaultConstructor":"defaultImplementation"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.ConstructorConstructor:86","type":"CtReturnImpl","sourcecode":"return defaultImplementation"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.reflect.TypeToken:199","type":"CtBinaryOperatorImpl","sourcecode":"from instanceof java.lang.reflect.ParameterizedType"},"failures":[],"tindex":"3689b6aa-3f05-11e6-aa74-0fc8bb724fc4","series":0,"name":"checkReturn","variableMap":{},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.JsonPrimitive:181","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.lang.Object))"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtBinaryOperatorImpl","sourcecode":"node != null"},"failures":[83],"tindex":"3689ddbb-3f05-11e6-aa74-374670969c93","series":0,"name":"checkReturn","variableMap":{"node":"node"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:509","type":"CtReturnImpl","sourcecode":"return node"},"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1118","type":"CtBinaryOperatorImpl","sourcecode":"c == '\\n'"},"failures":[],"tindex":"3689ddbc-3f05-11e6-aa74-81317dbdbb54","series":0,"name":"checkReturn","variableMap":{"c":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1369","type":"CtReturnImpl","sourcecode":"return c"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":12,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}