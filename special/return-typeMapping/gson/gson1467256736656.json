{"failureDictionary":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":10,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":41,"com.google.gson.internal.bind.JsonElementReaderTest.testObject":104,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":26,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElementsForArrayField":54,"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":5,"com.google.gson.functional.MapTest.testSerializeMaps":23,"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":112,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":103,"com.google.gson.MixedStreamTest.testWriteLenient":48,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForDeserializingCustomTree":67,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":85,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":62,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":8,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":34,"com.google.gson.internal.LinkedTreeMapTest.testEmptyStringValues":111,"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":30,"com.google.gson.internal.LinkedTreeMapTest.testPutOverrides":107,"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":115,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":21,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":77,"com.google.gson.JsonObjectTest.testAddingNullPropertyValue":120,"com.google.gson.JsonObjectTest.testAddingAndRemovingObjectProperties":122,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":24,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":70,"com.google.gson.functional.MapTest.testStringKeyDeserialization":84,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":90,"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":44,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":73,"com.google.gson.JsonParserTest.testParseReader":99,"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":96,"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":105,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":11,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":59,"com.google.gson.internal.bind.JsonTreeWriterTest.testSerializeNullsTrue":43,"com.google.gson.JsonObjectTest.testAddingBooleanProperties":123,"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":7,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterDoesNotAppliesToSubClasses":91,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":40,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapNoTypeSerialization":42,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":13,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":27,"com.google.gson.JavaSerializationTest.testMapIsSerializable":116,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":35,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":0,"com.google.gson.internal.LinkedTreeMapTest.testContainsNullKeyIsAlwaysFalse":113,"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberSerialization":4,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":88,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":82,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":94,"com.google.gson.functional.JsonTreeTest.testJsonTreeNull":32,"com.google.gson.functional.CustomSerializerTest.testSerializerReturnsNull":36,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":6,"com.google.gson.functional.JsonTreeTest.testToJsonTree":33,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":18,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":20,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":66,"com.google.gson.JsonObjectTest.testEqualsNonEmptyObject":121,"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":12,"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":60,"com.google.gson.internal.LinkedTreeMapTest.testLargeSetOfRandomKeys":109,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":2,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":61,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":56,"com.google.gson.internal.bind.JsonElementReaderTest.testNestedObjects":102,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":63,"com.google.gson.MixedStreamTest.testWriteMixedStreamed":45,"com.google.gson.JsonObjectTest.testWritePropertyWithEmptyStringName":126,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":69,"com.google.gson.ObjectTypeAdapterTest.testDeserializeNullValue":51,"com.google.gson.internal.LinkedTreeMapTest.testContainsNonComparableKeyReturnsFalse":110,"com.google.gson.JsonObjectTest.testDeepCopy":124,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":37,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":118,"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":14,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectDeserialization":74,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":89,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":29,"com.google.gson.JsonParserTest.testParseString":100,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":81,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":64,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":76,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":68,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":86,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":16,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":97,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":92,"com.google.gson.internal.bind.JsonTreeWriterTest.testNestedObject":106,"com.google.gson.internal.LinkedTreeMapTest.testClear":108,"com.google.gson.internal.LinkedTreeMapTest.testEqualsAndHashCode":114,"com.google.gson.JsonObjectTest.testAddingStringProperties":125,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":95,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":25,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":57,"com.google.gson.MixedStreamTest.testWriteNulls":46,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":15,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":49,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":72,"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":117,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":19,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":101,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":53,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":83,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":38,"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":71,"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":28,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":55,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":87,"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":58,"com.google.gson.MixedStreamTest.testWriteInvalidState":47,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":78,"com.google.gson.functional.ObjectTest.testJsonObjectSerialization":39,"com.google.gson.JsonObjectTest.testAddingNullOrEmptyPropertyName":127,"com.google.gson.functional.MapTest.testMapDeserialization":80,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":75,"com.google.gson.ObjectTypeAdapterTest.testDeserialize":52,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":119,"com.google.gson.MixedStreamTest.testWriteClosed":50,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":3,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingArraysWithNulls":1,"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeMap":98,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":31,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":22,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":65,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":79,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactSerialization":9,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":17,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":93},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:126","type":"CtBinaryOperatorImpl","sourcecode":"nearest != null"},"failures":[],"tindex":"615a67a5-3e71-11e6-98bd-17d22eeb94ea","series":0,"name":"checkReturn","variableMap":{"nearest":"node"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:509","type":"CtReturnImpl","sourcecode":"return node"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.Gson:274","type":"CtVariableReadImpl","sourcecode":"serializeSpecialFloatingPointValues"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"615a8eb6-3e71-11e6-98bd-71939df4a623","series":0,"name":"checkReturn","variableMap":{"serializeSpecialFloatingPointValues":"serializeNulls"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:277","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:153","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.STRING)) && (token != (com.google.gson.stream.JsonToken.NUMBER))"},"failures":[],"tindex":"615ab5c7-3e71-11e6-98bd-4f0f857a844f","series":0,"name":"checkReturn","variableMap":{"com.google.gson.stream.JsonToken.STRING":"com.google.gson.stream.JsonToken.NAME","token":"com.google.gson.stream.JsonToken.NAME","com.google.gson.stream.JsonToken.NUMBER":"com.google.gson.stream.JsonToken.NAME"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:97","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedTreeMap:292","type":"CtBinaryOperatorImpl","sourcecode":"(parent.left) == node"},"failures":[51,52,53,54,55,56,57,58,59,60,5,10,61,62,63,64,12,13,65,66,67,68,69,70,71,72,73,74,75,15,16,17,18,19,20,21,22,76,77,78,79,80,81,82,83,84,85,26,27,29,86,30,31,32,33,34,35,37,38,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,40,102,103,104,105,106,43,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127],"tindex":"615ab5c8-3e71-11e6-98bd-6dd877ef4bba","series":0,"name":"checkReturn","variableMap":{"parent":"created","node":"created","left":"created"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:180","type":"CtReturnImpl","sourcecode":"return created"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:174","type":"CtBinaryOperatorImpl","sourcecode":"nearest == null"},"failures":[],"tindex":"615adcd9-3e71-11e6-98bd-31e3829eaca6","series":0,"name":"checkReturn","variableMap":{"nearest":"stackTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:756","type":"CtReturnImpl","sourcecode":"return stackTop"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:1256","type":"CtBinaryOperatorImpl","sourcecode":"(p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED)) || (p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME))"},"failures":[],"tindex":"615adcda-3e71-11e6-98bd-7b3a95505289","series":0,"name":"checkReturn","variableMap":{"p":"size","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"size","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:793","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:596","type":"CtBinaryOperatorImpl","sourcecode":"result != (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"615b03eb-3e71-11e6-98bd-d366488ad6e5","series":0,"name":"checkReturn","variableMap":{"result":"c","com.google.gson.stream.JsonReader.PEEKED_NONE":"c"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1410","type":"CtReturnImpl","sourcecode":"return c"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1175","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_LONG)"},"failures":[],"tindex":"615b03ec-3e71-11e6-98bd-796096e1b665","series":0,"name":"checkReturn","variableMap":{"p":"com.google.gson.stream.JsonReader.PEEKED_NONE","com.google.gson.stream.JsonReader.PEEKED_LONG":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:720","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.com.google.gson.stream.JsonReader.int"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":8,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}