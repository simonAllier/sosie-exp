{"failureDictionary":{"com.google.gson.internal.bind.JsonElementReaderTest.testNumbersFromStrings":64,"com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext":67,"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":110,"com.google.gson.functional.MapTest.testMapSerializationWithNullValue":159,"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":47,"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":222,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPatternNotOverridenByTypeAdapter":27,"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":33,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":42,"com.google.gson.JsonParserTest.testParseEmptyString":90,"com.google.gson.MixedStreamTest.testWriteLenient":216,"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":19,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationWithPattern":25,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":15,"com.google.gson.functional.CollectionTest.testWildcardCollectionField":184,"com.google.gson.functional.CollectionTest.testFieldIsArrayList":186,"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":177,"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":145,"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":62,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithReaderDeserialization":133,"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":46,"com.google.gson.functional.ObjectTest.testSingletonLists":172,"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":52,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInFr":73,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArrayDeserializerAndInstanceCreator":43,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":1,"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":171,"com.google.gson.functional.ObjectTest.testDateAsMapObjectField":175,"com.google.gson.JsonPrimitiveTest.testStringsAndChar":79,"com.google.gson.DefaultDateTypeAdapterTest.testDatePattern":70,"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":34,"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":123,"com.google.gson.functional.TreeTypeAdaptersTest.initializationError":207,"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":223,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullArrayMembers":101,"com.google.gson.functional.MapTest.testComplexKeysDeserialization":158,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":56,"com.google.gson.functional.MapTest.testMapOfMapDeserialization":157,"com.google.gson.GenericArrayTypeTest.testNotEquals":224,"com.google.gson.internal.LinkedHashTreeMapTest.testClear":226,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":115,"com.google.gson.functional.InheritanceTest.testClassWithBaseArrayFieldSerialization":11,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersDeserialization":187,"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":13,"com.google.gson.functional.DefaultTypeAdaptersTest.testTimestampSerialization":24,"com.google.gson.JsonArrayTest.testSet":92,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithWriterSerialization":140,"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":107,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullCollectionMembers":102,"com.google.gson.functional.EnumTest.testEnumSubclassAsParameterizedType":120,"com.google.gson.functional.CustomDeserializerTest.testJsonTypeFieldBasedDeserialization":4,"com.google.gson.functional.CollectionTest.testNullsInListSerialization":192,"com.google.gson.functional.MapTest.testGeneralMapField":31,"com.google.gson.DefaultDateTypeAdapterTest.testDateSerialization":69,"com.google.gson.JsonPrimitiveTest.testParsingStringAsBoolean":78,"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":161,"com.google.gson.functional.DefaultTypeAdaptersTest.testSqlDateSerialization":21,"com.google.gson.internal.bind.JsonElementReaderTest.testLenientNansAndInfinities":61,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingHierarchicalFollowedByNonstreaming":55,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphSerialization":118,"com.google.gson.functional.MapTest.testBooleanKeyDeserialization":153,"com.google.gson.JsonObjectTest.testPropertyWithQuotes":82,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":114,"com.google.gson.functional.CollectionTest.testLinkedListSerialization":197,"com.google.gson.JsonParserTest.testParseString":86,"com.google.gson.JavaSerializationTest.testNumberIsSerializable":218,"com.google.gson.functional.MapTest.testDeerializeMapOfMaps":154,"com.google.gson.functional.MapTest.testMapDeserializationWithNullKey":144,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomByteArraySerializer":41,"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":74,"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":204,"com.google.gson.functional.JsonParserTest.testDeserializingCustomTree":50,"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":152,"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":7,"com.google.gson.ParameterizedTypeTest.testNotEquals":213,"com.google.gson.internal.LinkedHashTreeMapTest.testEqualsAndHashCode":227,"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":206,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":14,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionDeserilaization":193,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerializationWithType":44,"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":35,"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":212,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":8,"com.google.gson.functional.MapTest.testSerializeMapOfMaps":168,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectSerialization":174,"com.google.gson.JsonParserTest.testReadWriteTwoObjects":87,"com.google.gson.JsonParserTest.testParseUnquotedStringArrayFails":91,"com.google.gson.functional.MapTest.testMapDeserializationWithIntegerKeys":155,"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":164,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysSerialization":129,"com.google.gson.JavaSerializationTest.testListIsSerializable":220,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":18,"com.google.gson.functional.CollectionTest.testTopLevelCollectionOfIntegersSerialization":199,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":126,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":99,"com.google.gson.functional.MapTest.testNumberKeyDeserialization":169,"com.google.gson.functional.MapTest.testReadMapsWithEmptyStringKey":146,"com.google.gson.functional.MapTest.testMapSerializationWithNullValues":162,"com.google.gson.functional.MapTest.testInterfaceTypeMap":30,"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":20,"com.google.gson.functional.CollectionTest.testSetDeserialization":196,"com.google.gson.functional.RawSerializationTest.testParameterizedObject":203,"com.google.gson.functional.EnumTest.testEnumSet":119,"com.google.gson.JsonStreamParserTest.testIterator":68,"com.google.gson.MixedStreamTest.testReadClosed":215,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":132,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerializationWithType":37,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithNestedWildcards":209,"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingFollowedByNonstreaming":54,"com.google.gson.functional.MapTest.testMapSerializationWithIntegerKeys":147,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysSerialization":131,"com.google.gson.functional.TypeAdapterPrecedenceTest.testStreamingFollowedByNonstreaming":53,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":109,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeFieldsAndGenericArraysDeserialization":134,"com.google.gson.functional.MapTest.testHashMapDeserialization":143,"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":108,"com.google.gson.functional.CollectionTest.testLinkedListDeserialization":189,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":183,"com.google.gson.LongSerializationPolicyTest.testStringLongSerialization":59,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":181,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithSystemLocale":72,"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":100,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":112,"com.google.gson.functional.MapTest.testSortedMap":160,"com.google.gson.functional.CollectionTest.testWildcardPrimitiveCollectionSerilaization":191,"com.google.gson.functional.MapTest.testMapSerialization":156,"com.google.gson.functional.MapTest.testComplexKeysSerialization":165,"com.google.gson.functional.CollectionTest.testCollectionOfObjectSerialization":195,"com.google.gson.internal.bind.JsonElementReaderTest.testSkipValue":60,"com.google.gson.internal.bind.JsonElementReaderTest.testStrings":65,"com.google.gson.DefaultDateTypeAdapterTest.testFormattingInEnUs":71,"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":32,"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":2,"com.google.gson.JsonPrimitiveTest.testParsingStringAsNumber":81,"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":94,"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":104,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":45,"com.google.gson.functional.CollectionTest.testQueueDeserialization":200,"com.google.gson.internal.LinkedHashTreeMapTest.testPutOverrides":225,"com.google.gson.internal.bind.JsonElementReaderTest.testWrongType":63,"com.google.gson.functional.MapTest.testMapSerializationWithNullValuesSerialized":151,"com.google.gson.functional.MapTest.testStringKeyDeserialization":167,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithBasicWildcards":211,"com.google.gson.functional.ObjectTest.testEmptyCollectionInAnObjectDeserialization":176,"com.google.gson.functional.CollectionTest.testCollectionOfObjectWithNullSerialization":185,"com.google.gson.JsonParserTest.testParseReader":85,"com.google.gson.functional.MapTest.testMapSerializationWithNullKey":170,"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":198,"com.google.gson.functional.DefaultTypeAdaptersTest.testTreeSetDeserialization":124,"com.google.gson.JsonPrimitiveTest.testExponential":80,"com.google.gson.functional.MapTest.testMapSerializationEmpty":166,"com.google.gson.functional.CollectionTest.testQueueSerialization":190,"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":221,"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":0,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":48,"com.google.gson.JavaSerializationTest.testMapIsSerializable":219,"com.google.gson.functional.CollectionTest.testTopLevelListOfIntegerCollectionsDeserialization":194,"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":16,"com.google.gson.functional.ThrowableFunctionalTest.testErrornWithCause":98,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeGenericArraysDeserialization":135,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":38,"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonPrimitiveSerialization":22,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":36,"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":113,"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":57,"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":202,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":97,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":127,"com.google.gson.functional.MapTest.testMapDeserializationEmpty":141,"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintList":111,"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":139,"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":178,"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":51,"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":130,"com.google.gson.functional.EnumTest.testEnumSubclass":121,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":23,"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":116,"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances":17,"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomSerializerNotInvokedForNullValues":39,"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":26,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithCustomSerializer":28,"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":179,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":29,"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":9,"com.google.gson.JsonObjectTest.testAddingStringProperties":84,"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":173,"com.google.gson.functional.MapTest.testMapSerializationWithNullValueButSerializeNulls":163,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnObject":5,"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":58,"com.google.gson.JsonParserTest.testParseUnquotedSingleWordStringFails":88,"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":106,"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":205,"com.google.gson.MixedStreamTest.testWriteHtmlSafe":217,"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":105,"com.google.gson.JsonPrimitiveTest.testBoolean":76,"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":128,"com.google.gson.CommentsTest.testParseComments":214,"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementSerialization":40,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSub":12,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":182,"com.google.gson.functional.RawSerializationTest.testThreeLevelParameterizedObject":201,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesSerialization":138,"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":208,"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":3,"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":117,"com.google.gson.JsonParserTest.testParseMixedArray":89,"com.google.gson.functional.ThrowableFunctionalTest.testSerializedNameOnExceptionFields":95,"com.google.gson.functional.CollectionTest.testCollectionOfStringsDeserialization":188,"com.google.gson.DefaultDateTypeAdapterTest.testParsingDatesFormattedWithUsLocale":75,"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":210,"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfParameterizedSubclassFields":180,"com.google.gson.JsonArrayTest.testRemove":93,"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":96,"com.google.gson.functional.MapTest.testMapDeserialization":150,"com.google.gson.JsonObjectTest.testAddingCharacterProperties":83,"com.google.gson.functional.MapTest.testCustomSerializerForSpecificMapType":142,"com.google.gson.JsonPrimitiveTest.testValidJsonOnToString":77,"com.google.gson.functional.MapTest.testParameterizedMapSubclassSerialization":149,"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNullStringMembers":103,"com.google.gson.JsonStreamParserTest.testParseTwoStrings":66,"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":6,"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":122,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeWithVariableTypeDeserialization":136,"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValues":49,"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":148,"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitType":10,"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForCollectionType":125,"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":137},"transformations":[{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtBinaryOperatorImpl","sourcecode":"o instanceof com.google.gson.JsonNull"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"e53b36d8-3f52-11e6-ab30-99df9877d624","series":0,"name":"checkReturn","variableMap":{"o":"value"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.JsonPrimitive:181","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.lang.Object))"},"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.internal.bind.JsonTreeReader:153","type":"CtBinaryOperatorImpl","sourcecode":"(token != (com.google.gson.stream.JsonToken.STRING)) && (token != (com.google.gson.stream.JsonToken.NUMBER))"},"failures":[],"tindex":"e53bac09-3f52-11e6-ab30-01ab70a90fe8","series":0,"name":"checkReturn","variableMap":{"com.google.gson.stream.JsonToken.STRING":"com.google.gson.stream.JsonToken.NAME","token":"com.google.gson.stream.JsonToken.NAME","com.google.gson.stream.JsonToken.NUMBER":"com.google.gson.stream.JsonToken.NAME"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:97","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.bind.JsonTreeWriter:137","type":"CtBinaryOperatorImpl","sourcecode":"element instanceof com.google.gson.JsonObject"},"failures":[],"tindex":"e53bd31a-3f52-11e6-ab30-0d5f35d990d9","series":0,"name":"checkReturn","variableMap":{},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.JsonPrimitive:181","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.lang.Object))"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonWriter:581","type":"CtBinaryOperatorImpl","sourcecode":"context == (com.google.gson.stream.JsonScope.NONEMPTY_OBJECT)"},"failures":[],"tindex":"e53bd31b-3f52-11e6-ab30-e97968f5c880","series":0,"name":"checkReturn","variableMap":{"context":"size","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:594","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.internal.LinkedHashTreeMap:578","type":"CtBinaryOperatorImpl","sourcecode":"root == null"},"failures":[],"tindex":"e53bfa2c-3f52-11e6-ab30-5f92c98538eb","series":0,"name":"checkReturn","variableMap":{"root":"stackTop"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:756","type":"CtReturnImpl","sourcecode":"return stackTop"},"status":0},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.DefaultDateTypeAdapter:85","type":"CtBinaryOperatorImpl","sourcecode":"typeOfT == (java.sql.Timestamp.class)"},"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,9,108,109,110,111,112,113,114,115,14,116,117,118,119,120,19,121,122,123,23,124,125,126,127,128,28,129,130,131,132,133,134,135,136,137,138,29,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,30,161,162,31,163,164,165,166,167,168,32,169,170,33,171,172,173,174,175,176,177,178,179,37,38,42,44,180,181,182,45,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,46,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224],"tindex":"e53bfa2d-3f52-11e6-ab30-4dbbb74bff03","series":0,"name":"checkReturn","variableMap":{"typeOfT":"rawType"},"type":"special","throwBranchCoverage":true,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:130","type":"CtReturnImpl","sourcecode":"return ((java.lang.Class<?>)(rawType))"},"status":-1},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:591","type":"CtBinaryOperatorImpl","sourcecode":"result != (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"e53c213e-3f52-11e6-ab30-89c5940f69bb","series":0,"name":"checkReturn","variableMap":{"result":"size","com.google.gson.stream.JsonReader.PEEKED_NONE":"size"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:828","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"exception":"java.lang.RuntimeException","condition":{"position":"com.google.gson.stream.JsonReader:793","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME)"},"failures":[225,226,227],"tindex":"e53c484f-3f52-11e6-ab30-f7eef480a209","series":0,"name":"checkReturn","variableMap":{"p":"size","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME":"size"},"type":"special","throwBranchCoverage":true,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:82","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1189","type":"CtBinaryOperatorImpl","sourcecode":"(p == (com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED)) || (p == (com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED))"},"failures":[],"tindex":"e53c6f60-3f52-11e6-ab30-7f4724169837","series":0,"name":"checkReturn","variableMap":{"p":"com.google.gson.stream.JsonReader.PEEKED_NONE","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"com.google.gson.stream.JsonReader.PEEKED_NONE","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:627","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.com.google.gson.stream.JsonReader.int"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:574","type":"CtBinaryOperatorImpl","sourcecode":"(stackSize) == 1"},"failures":[],"tindex":"e53c6f61-3f52-11e6-ab30-c9a0adc2a3aa","series":0,"name":"checkReturn","variableMap":{"stackSize":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"special","throwBranchCoverage":false,"returnInThen":false,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:627","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.com.google.gson.stream.JsonReader.int"},"status":-2},{"exception":"java.io.IOException","condition":{"position":"com.google.gson.stream.JsonReader:1170","type":"CtBinaryOperatorImpl","sourcecode":"p == (com.google.gson.stream.JsonReader.PEEKED_NONE)"},"failures":[],"tindex":"e53c6f62-3f52-11e6-ab30-2b8c16a89fe6","series":0,"name":"checkReturn","variableMap":{"p":"com.google.gson.stream.JsonReader.PEEKED_NONE","com.google.gson.stream.JsonReader.PEEKED_NONE":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"special","throwBranchCoverage":false,"returnInThen":true,"transplantationPoint":{"position":"com.google.gson.stream.JsonReader:627","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.com.google.gson.stream.JsonReader.int"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":11,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}