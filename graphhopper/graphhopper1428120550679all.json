[{"failures":[],"tindex":"59fa1d11-da80-11e4-82f4-230326276016","variableMapping":{"splitIndex":"segmentSizePower","entrySize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"59fa4422-da80-11e4-82f4-db3529db99bd","variableMapping":{"angle":"maxEle","com.graphhopper.util.AngleCalc.PI3_4":"maxEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"59fcb523-da80-11e4-82f4-e561eb14f3c7","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"59fcb524-da80-11e4-82f4-99c0451124be","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"59fcb525-da80-11e4-82f4-4b25ca22fd21","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":0},{"failures":[],"tindex":"59fcdc36-da80-11e4-82f4-e12662fda748","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,0,1,4,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"59fcdc37-da80-11e4-82f4-47685513dc58","variableMapping":{"initLeafSize":"I_SKIP_EDGE1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"59fcdc38-da80-11e4-82f4-5701c08537e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"59fcdc39-da80-11e4-82f4-cbad3fc3ff74","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"59fcdc3a-da80-11e4-82f4-7dce1140f4af","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"59fcdc3b-da80-11e4-82f4-0b8207c99dad","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[112,17,19,113],"tindex":"59fcdc3c-da80-11e4-82f4-4d291d120a67","variableMapping":{"systemProperty":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[114],"tindex":"59fcdc3d-da80-11e4-82f4-77866bdc6af6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[115,116],"tindex":"59fcdc3e-da80-11e4-82f4-3b0e418f1b92","variableMapping":{"i":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"5a01e54f-da80-11e4-82f4-731402faa54a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"5a01e550-da80-11e4-82f4-8377a30dd1d7","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:149","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":0},{"failures":[],"tindex":"5a01e551-da80-11e4-82f4-f185aba1eee9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"5a01e552-da80-11e4-82f4-75142ce0d19e","variableMapping":{"high":"key","len":"key","start":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"5a01e553-da80-11e4-82f4-8555dfc3d053","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[],"tindex":"5a01e554-da80-11e4-82f4-590c0674770b","variableMapping":{"scDirMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[],"tindex":"5a01e555-da80-11e4-82f4-a14e1668b9e7","variableMapping":{"r":"java.lang.Double.MAX_VALUE","x":"minLon","absY":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"5a01e556-da80-11e4-82f4-af463355e52a","variableMapping":{"store":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[117,0,1,4,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,118,104,106,107,108,109],"tindex":"5a020c67-da80-11e4-82f4-21b7a4bcfa4c","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[119,120,121,122,123,124,125,23,29,126,127,128,129,130,131,132,133,134,135,136,137,138,69,4,71,5,6],"tindex":"5a020c68-da80-11e4-82f4-6f7c848ee650","variableMapping":{"E_ADDITIONAL":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"5a020c69-da80-11e4-82f4-dbe84b7237e7","variableMapping":{"factor":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[139,140,141],"tindex":"5a020c6a-da80-11e4-82f4-793acfdf2b67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[142,143,20,144,21,22,145,125,146,147,23,148,149,24,25,26,27,28,29,30,31,32,33,34,150,151,35,36,152,37,38,153,39,40,41,42,154,155,43,156,44,45,46,47,157,48,49,158,50,159,51,52,128,160,129,161,162,163,164,165,166,167,130,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,131,189,190,191,192,193,194,195,196,197,198,199,200,132,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,53,54,230,55,231,56,57,58,59,232,60,61,62,63,64,65,66,67,68,233,234,235,236,237,238,239,240,241,242,243,244,245,134,246,247,248,249,250,251,252,135,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,136,274,275,276,277,278,279,280,281,282,283,284,285,138,69,70,0,1,2,3,4,71,5,72,6,286,287,288,112,7,8,9,10,289,11,12,13,14,15,16,17,19,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,303,304,305,306,307,139,308,309,310,140,141,311,312,313,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,118,104,105,106,107,108,109,314,315,110,316,317,318,319,320,321,322,323,324,111,325,326],"tindex":"5a020c6b-da80-11e4-82f4-b7927930bfa5","variableMapping":{"encoded":"bytePos","backwardBit":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"5a020c6c-da80-11e4-82f4-459bb82d94d2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"5a020c6d-da80-11e4-82f4-810468a8148b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"5a020c6e-da80-11e4-82f4-55a15edda2c3","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5a02337f-da80-11e4-82f4-a5875eafd164","variableMapping":{"width":"dLon","latSimilar":"dLon","lonSimilar":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"5a023380-da80-11e4-82f4-15f5275bf465","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"5a023381-da80-11e4-82f4-8d5748714e13","variableMapping":{"entry":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"5a023382-da80-11e4-82f4-abc9f75c4747","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"5a05b4f3-da80-11e4-82f4-17e9ea415366","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"5a05b4f4-da80-11e4-82f4-29f58f8f8c57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[142,143,327,20,144,21,22,145,125,146,147,23,148,149,24,328,25,26,27,28,29,30,31,32,33,34,150,151,35,36,152,37,38,153,39,40,41,42,154,155,43,156,44,45,46,47,157,48,49,158,50,159,51,52,128,329,160,129,161,162,163,330,164,165,166,167,130,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,131,189,190,191,192,193,194,195,196,197,198,199,208,209,210,211,331,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,332,228,229,53,54,230,55,231,56,57,58,59,232,60,61,62,63,64,65,66,333,67,68,234,235,236,237,334,238,239,240,241,242,335,243,244,245,134,246,247,248,336,249,250,251,252,135,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,136,274,275,276,277,278,279,280,281,282,283,284,337,338,339,340,137,341,342,343,344,345,346,285,347,348,349,350,351,352,353,354,355,356,357,358,359,360,138,361,362,363,364,365,366,367,368,369,370,371,69,70,0,1,2,3,4,372,71,5,72,6,373,287,288,112,7,8,9,10,289,11,12,13,374,14,15,16,17,19,290,291,292,293,294,295,296,297,298,299,300,301,375,302,303,376,377,378,304,305,306,307,379,380,381,382,383,384,139,308,309,310,140,141,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,311,312,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,113,431,432,433,434,435,436,437,313,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,482,99,100,101,102,103,118,104,105,106,107,108,109,314,315,110,316,317,318,319,320,321,322,323,324,111,325,483,326],"tindex":"5a05dc05-da80-11e4-82f4-ed25b2e9c5e2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"5a05dc06-da80-11e4-82f4-7b4ebbff36a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[20,144,21,22,145,125,146,147,23,148,149,24,328,25,26,27,28,29,30,31,32,33,34,150,151,35,36,152,37,38,153,39,40,41,42,154,155,43,156,44,45,46,47,157,48,49,158,50,159,51,52,128,329,160,129,161,162,163,330,164,165,166,167,130,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,131,189,190,191,192,193,194,195,196,197,198,199,213,229,68,244,245,134,246,247,248,336,249,250,251,252,135,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,136,274,275,276,277,278,279,280,281,282,283,284,337,338,339,340,137,341,342,343,344,345,346,285,347,348,349,350,351,352,353,354,355,356,357,358,359,360,138,361,362,363,364,365,366,367,368,369,370,371,3,72,379,484,381,436,437,313,438,439,440,441,442,443,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"5a060317-da80-11e4-82f4-5fc3a03f0a6f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[],"tindex":"5a060318-da80-11e4-82f4-0980d500fcc0","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[0,17,406,429,465,320],"tindex":"5a060319-da80-11e4-82f4-a9ae713aa5f0","variableMapping":{"defaultUTurnCost":"maxSpeed","weight":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[0,17,406,429,465,320],"tindex":"5a06031a-da80-11e4-82f4-fff4182e022b","variableMapping":{"turnCosts":"maxSpeed","weight":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[142,143,214,216,217,218,219,221,223,224,225,226,227,228,229,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,234,235,236,238,69,70,0,1,2,3,4,71,5,72,6,7,8,9,10,289,11,12,13,14,15,16,19,308,309,310,82,86,87,90,314,315,485,486],"tindex":"5a06031b-da80-11e4-82f4-e541fd04c328","variableMapping":{"edgeId":"endIndexPlusOne","nextEdge":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[83],"tindex":"5a06031c-da80-11e4-82f4-dba96654f8fb","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[442],"tindex":"5a06031d-da80-11e4-82f4-a575cc798111","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"5a06031e-da80-11e4-82f4-4147fd9253f5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"5a06031f-da80-11e4-82f4-15a22814c06a","variableMapping":{"properties":"properties"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"5a060320-da80-11e4-82f4-d39593807fd6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"5a060321-da80-11e4-82f4-99b379571855","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[142,143,20,145,23,25,26,27,29,30,33,34,151,38,39,43,44,47,48,49,51,128,129,164,165,166,130,168,171,172,174,179,181,187,131,191,193,194,198,134,249,250,251,135,253,256,257,259,264,266,272,136,276,278,279,283,337,338,339,137,341,344,345,285,351,353,359,138,363,365,366,370,70,0,1,2,3,4,71,5,6,287,288,112,7,8,9,10,11,12,13,14,15,16,17,18,19,294,297,302,303,306,307,139,308,309,310,140,400,487,422,424,425,426,427,428,429,430,113,432,434,439,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,317,318,319,320,321,322,111],"tindex":"5a062a32-da80-11e4-82f4-05bca54141b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:137","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"5a062a33-da80-11e4-82f4-37e60b9eb8f4","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxCount","nextEdge":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":0},{"failures":[142,20,145,26,27,151,38,43,47,49,51,165,166,174,179,187,191,194,198,213,229,68,244,250,251,259,264,272,276,279,283,338,339,285,351,359,363,366,370,0,1,2,3,5,7,8,12,19,294,297,305,308,309,310,312,425,428,113,434,439,73,74,75,76,79,82,83,85,86,87,88,89,90,92,93,94,96,97,98,99,100,101,104,105,106,108,109],"tindex":"5a062a34-da80-11e4-82f4-a1a2c697b216","variableMapping":{"edgePointer":"flags","maxEdges":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"5a062a35-da80-11e4-82f4-0de778a497dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"5a062a36-da80-11e4-82f4-f18980d30f51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"5a062a37-da80-11e4-82f4-db1424497868","variableMapping":{"mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[],"tindex":"5a062a38-da80-11e4-82f4-7f1f2670c8e8","variableMapping":{"high":"ferryBit","highKey":"acceptBit","key":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-2},{"failures":[112,427],"tindex":"5a062a39-da80-11e4-82f4-c3000e628d48","variableMapping":{"radiusInMeter":"longTripsSpeed","lon":"shortTripsSpeed","lat":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"5a062a3a-da80-11e4-82f4-55ad615618c4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"5a062a3b-da80-11e4-82f4-b5bbe7142f0b","variableMapping":{"bytePos":"bytePos","indexDivisor":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:311","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"5a062a3c-da80-11e4-82f4-39cc80a174e3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"5a062a3d-da80-11e4-82f4-4fd1debf0c80","variableMapping":{"currentBucket":"start","retBucket":"start","currentIndex":"start","bucketSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[214,220,222,223,488,55,232,61,62,489,490,491,492,493,494,495,496,497],"tindex":"5a062a3e-da80-11e4-82f4-a5f06bf4805a","variableMapping":{"r":"lat","com.graphhopper.util.AngleCalc.PI_4":"minLatTmp","x":"minLatTmp","angle":"maxLatTmp","absY":"maxLatTmp","com.graphhopper.util.AngleCalc.PI3_4":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"5a062a3f-da80-11e4-82f4-fb017cb3c47c","variableMapping":{"indexWithMaxDist":"endNode","lastIndex":"edgeId","fromIndex":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":0},{"failures":[112,17,19,427,113],"tindex":"5a065150-da80-11e4-82f4-a71d33402453","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"5a065151-da80-11e4-82f4-3d3c57b0183b","variableMapping":{"index":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"5a065152-da80-11e4-82f4-45b14cd83b59","variableMapping":{"changedNodes":"component"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.TIntArrayListWithCap.reset()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":0},{"failures":[],"tindex":"5a065153-da80-11e4-82f4-e7d0bc7c9613","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"i","sign":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[379],"tindex":"5a065154-da80-11e4-82f4-b3f0a3a97c61","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[390,410,422,436,448,469],"tindex":"5a065155-da80-11e4-82f4-e32ce98f65c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"5a065156-da80-11e4-82f4-9b6ab83da41f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[69,3,72,7,438,442],"tindex":"5a065157-da80-11e4-82f4-45754c41cd89","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"5a065158-da80-11e4-82f4-a531991a6140","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"5a065159-da80-11e4-82f4-b93854aaebe9","variableMapping":{"mSize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[312],"tindex":"5a06515a-da80-11e4-82f4-ede71c8700de","variableMapping":{"delta_lat":"prevEle","r_lat":"prevEle","a_lat":"prevEle","delta_lon":"prevEle","r_lon":"prevEle","a_lon":"prevEle","norm":"prevEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-1},{"failures":[386,388,402,461],"tindex":"5a06515b-da80-11e4-82f4-9734d0f16756","variableMapping":{"id":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[36,46,176,190,261,275,348,362,310],"tindex":"5a06515c-da80-11e4-82f4-bf8e3187897b","variableMapping":{"node":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"5a06515d-da80-11e4-82f4-9ba581270ff3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"5a06515e-da80-11e4-82f4-4da1e66d82bb","variableMapping":{"dX":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","dY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"5a06515f-da80-11e4-82f4-1d8b685d2427","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[19,309,310],"tindex":"5a065160-da80-11e4-82f4-1f3f0fbf18a2","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"5a065161-da80-11e4-82f4-c79b837fa299","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"5a065162-da80-11e4-82f4-5d369d6a5634","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"5a067873-da80-11e4-82f4-057b3e510533","variableMapping":{"nodeFlags":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-2},{"failures":[142,143,327,20,144,21,22,145,125,146,147,23,148,149,24,328,25,26,27,28,29,30,31,32,33,34,150,151,35,36,152,37,38,153,39,40,41,42,154,155,43,156,44,45,46,47,157,48,49,158,50,159,51,52,128,329,160,129,161,162,163,330,164,165,166,167,130,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,131,189,190,191,192,193,194,195,196,197,198,199,208,209,210,211,331,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,332,228,229,53,54,230,55,231,56,57,58,59,232,60,61,62,63,64,65,66,333,67,68,234,235,236,237,334,238,239,240,241,242,335,243,244,245,134,246,247,248,336,249,250,251,252,135,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,136,274,275,276,277,278,279,280,281,282,283,284,337,338,339,340,137,341,342,343,344,345,346,285,347,348,349,350,351,352,353,354,355,356,357,358,359,360,138,361,362,363,364,365,366,367,368,369,370,371,69,70,0,1,2,3,4,372,71,5,72,6,373,287,288,112,7,8,9,10,289,11,12,13,374,14,15,16,17,19,290,291,292,293,294,295,296,297,298,299,300,301,375,302,303,376,377,378,304,305,306,307,379,380,381,383,384,139,308,309,310,140,141,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,311,312,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,113,431,432,433,434,435,436,437,313,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,482,99,100,101,102,103,118,104,105,106,107,108,109,314,315,110,316,317,318,319,320,321,322,323,324,111,325,483,326],"tindex":"5a069f84-da80-11e4-82f4-57f360f57dd6","variableMapping":{"acceptBit":"defaultL","ferryBit":"defaultL","footTag":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[498,499,500,501,502,125,23,25,42,45,49,50,128,129,164,184,189,194,196,216,218,56,58,235,236,237,238,503,134,249,269,274,279,281,504,505,506,507,69,0,4,71,5,72,6,8,289,11,291,294,295,297,298,301,306,307,93,317,318,319,320],"tindex":"5a069f85-da80-11e4-82f4-65ef414138a7","variableMapping":{"fromNode":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[22,146,53,69,70,0,1,4,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,101,104,105,106,107,108,109],"tindex":"5a069f86-da80-11e4-82f4-07f26d3400b2","variableMapping":{"minResolutionInMeter":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"5a069f87-da80-11e4-82f4-d357324121f4","variableMapping":{"segmentSizeInBytes":"usedBits","allSegments":"usedBits","capacity":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"5a069f88-da80-11e4-82f4-732e78b485c8","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"5a069f89-da80-11e4-82f4-03239d5bae72","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"5a069f8a-da80-11e4-82f4-9ba67d1d361e","variableMapping":{"r":"fwdFaster","angle":"fwdFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[20,104,108],"tindex":"5a06c69b-da80-11e4-82f4-f1a54dd75109","variableMapping":{"err":"tmpPrevEdge","tmpErr":"tmpPrevEdge","y1":"tmpPrevEdge","dLon":"tmpPrevEdge","sLat":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"5a06c69c-da80-11e4-82f4-8fe7cf32f26f","variableMapping":{"algo":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"5a06c69d-da80-11e4-82f4-b33c4d31abd5","variableMapping":{"size":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":0},{"failures":[489,490,491,508,492,493,509,496,497],"tindex":"5a06c69e-da80-11e4-82f4-6f842477add9","variableMapping":{"midLat":"lon","maxLatTmp":"lon","minLatTmp":"midLon","lat":"lon","hash":"spatialKey"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[20,145,25,33,151,49,164,171,174,194,249,256,259,279,337,344,285,366,297,306,307,383,386,312,402,428,437,313,439,445,461,73,74,85,86,97,105,110],"tindex":"5a06c69f-da80-11e4-82f4-b926244da8cc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[146,27,150,35,36,37,40,41,45,46,166,173,175,176,178,182,183,189,190,251,258,260,261,263,267,268,274,275,339,346,347,348,350,354,355,361,362,19,139,309,310],"tindex":"5a06c6a0-da80-11e4-82f4-29966b916201","variableMapping":{"oldPriorities":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[510,117,511,512,513,514,0,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,100,101,102,103,118,104,106,108,109],"tindex":"5a06c6a1-da80-11e4-82f4-4f4c7b3dcbf9","variableMapping":{"size":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":"5a06edb2-da80-11e4-82f4-852c1a1f26aa","variableMapping":{"size":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:136","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"5a06edb3-da80-11e4-82f4-b32555f745cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[138,72],"tindex":"5a06edb4-da80-11e4-82f4-0b3d3d1ad7ae","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":91,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":291,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":125,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":487,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":210,"com.graphhopper.GraphHopperAPITest.testNoLoad":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":338,"com.graphhopper.reader.OSMReaderTest.testFerry":112,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":321,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":465,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":389,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":57,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":70,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":173,"com.graphhopper.coll.CompressedArrayTest.testCompress":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":395,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":101,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":356,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":106,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":97,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":266,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":514,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":83,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":396,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":315,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":24,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":461,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":81,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":217,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":466,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":494,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":25,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":512,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":109,"com.graphhopper.GraphHopperTest.testLoadOSM":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":224,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":218,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":380,"com.graphhopper.reader.OSMReaderTest.testSort":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":477,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":161,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":277,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":134,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":368,"com.graphhopper.storage.RAMDataAccessTest.testHeader":120,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":297,"com.graphhopper.routing.DijkstraTest.initializationError":375,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":286,"com.graphhopper.storage.MMapDataAccessTest.testHeader":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":193,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":156,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":127,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":255,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":329,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":405,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":164,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":459,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":456,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":60,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":87,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":59,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":78,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":77,"com.graphhopper.coll.OSMIDMapTest.testGetLong":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":177,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":183,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":153,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":23,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":40,"com.graphhopper.coll.CompressedArrayTest.testCompress2":496,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":268,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":445,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":174,"com.graphhopper.GraphHopperAPITest.testLoad":142,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":328,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":436,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":260,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":251,"com.graphhopper.storage.LevelGraphStorageTest.testClone":29,"com.graphhopper.reader.OSMReaderTest.testBarriers":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":80,"com.graphhopper.util.GHUtilityTest.testCopy":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":68,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":453,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":398,"com.graphhopper.routing.PathTest.testFindInstruction":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":392,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":166,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":510,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":110,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":441,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":404,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":278,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":191,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":323,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":103,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":178,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":415,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":484,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":378,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":31,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":342,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":207,"com.graphhopper.util.InstructionListTest.testWayList2":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":225,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":196,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":462,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":311,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":33,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":502,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":175,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":79,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":289,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":121,"com.graphhopper.routing.AStarTest.initializationError":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":93,"com.graphhopper.coll.OSMIDMapTest.testGet":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":172,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":126,"com.graphhopper.routing.PathBidirRefTest.testExtract":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":442,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":470,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":64,"com.graphhopper.storage.RAMDataAccessTest.testCopy":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":229,"com.graphhopper.util.GHUtilityTest.testSort2":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":88,"com.graphhopper.reader.OSMReaderTest.testMain":8,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":471,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":495,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":478,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":365,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":151,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":37,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":485,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":51,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":35,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":187,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":402,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":39,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":17,"com.graphhopper.storage.StorablePropertiesTest.testStore":503,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":501,"com.graphhopper.storage.GraphHopperStorageTest.testClone":135,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":364,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":113,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":262,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":429,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":20,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":457,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":343,"com.graphhopper.routing.PathTest.testTime":305,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":452,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":50,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":435,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":227,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":355,"com.graphhopper.reader.OSMReaderTest.testRelation":374,"com.graphhopper.util.GHUtilityTest.testSortDirected":326,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":513,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":418,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":293,"com.graphhopper.GraphHopperTest.testFootOnly":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":387,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":232,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":351,"com.graphhopper.search.NameIndexTest.testCreate":500,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":290,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":133,"com.graphhopper.routing.QueryGraphTest.testOneWay":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":332,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":489,"com.graphhopper.reader.OSMReaderTest.testWithBounds":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":195,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":295,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":443,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":115,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":149,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":399,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":244,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":179,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":249,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":74,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":280,"com.graphhopper.util.InstructionListTest.testWayList":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":468,"com.graphhopper.GraphHopperAPITest.testDisconnected179":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":344,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":508,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":413,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":288,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":475,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":2,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":254,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":107,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":272,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":460,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":85,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":105,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":431,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":449,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":476,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":95,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":333,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":480,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":245,"com.graphhopper.storage.MMapDataAccessTest.testCopy":123,"com.graphhopper.routing.PathTest.testWayList":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":426,"com.graphhopper.coll.OSMIDMapTest.testGet2":505,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":96,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":122,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":474,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":265,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":170,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":253,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":62,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":410,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":511,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":446,"com.graphhopper.util.GHUtilityTest.testSort":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":360,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":473,"com.graphhopper.search.NameIndexTest.testPut":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":198,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":330,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":231,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":241,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":406,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":296,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":312,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":448,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":139,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":206,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":138,"com.graphhopper.routing.PathTest.testFound":304,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":6,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":381,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":48,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":382,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":472,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":176,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":117,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":499,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":285,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":257,"com.graphhopper.util.InstructionListTest.testEmptyList":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":454,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":86,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":434,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":422,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":89,"com.graphhopper.reader.PrinctonReaderTest.testRead":287,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":114,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":58,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":346,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":490,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":507,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":337,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":181,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":411,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":451,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":403,"com.graphhopper.reader.OSMReaderTest.testFoot":7,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":359,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":222,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":493,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":385,"com.graphhopper.reader.OSMReaderTest.testOneWay":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":223,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":261,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":275,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":393,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":409,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":353,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":102,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":488,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":242,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":349,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":292,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":18,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":247,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":204,"com.graphhopper.routing.PathBidirRefTest.testExtract2":303,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":455,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":458,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":371,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":438,"com.graphhopper.util.SimpleIntDequeTest.testPush":486,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":219,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":276,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":483,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":432,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":269,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":137,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":130,"com.graphhopper.GraphHopperTest.testPrepareOnly":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":92,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":339,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":14,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":145,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":273,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":439,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":352,"com.graphhopper.routing.AStarBidirectionTest.initializationError":376,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":400,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":157,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":46,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":129}}]
