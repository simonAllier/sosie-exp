[{"failures":[],"tindex":"6d4dbe54-db9c-11e4-a513-e1f960afe177","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.PriorityWeighting.KEY","index":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"6d50a485-db9c-11e4-a513-cdf5bba8798c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"6d50a486-db9c-11e4-a513-c5a0a270d9c1","variableMapping":{"frontIndex":"maxTurnCosts","endIndexPlusOne":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"6d50cb97-db9c-11e4-a513-67cf480ab603","variableMapping":{"segmentsToMap":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"6d50cb98-db9c-11e4-a513-e7d2ab1a5114","variableMapping":{"high":"value","guess":"i","low":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"6d50cb99-db9c-11e4-a513-71164f085c01","variableMapping":{"low":"priorityFromRelation","guess":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":0},{"failures":[],"tindex":"6d50cb9a-db9c-11e4-a513-3971128d64b2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"No storage set to calculate turn weight\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[],"tindex":"6d50cb9b-db9c-11e4-a513-95ea573479ef","variableMapping":{"pos":"usedBits","mSize":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"6d50cb9c-db9c-11e4-a513-ad7cae98f307","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"6d50cb9d-db9c-11e4-a513-cff8769b835a","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[0,67,1,2,3,4,68,5,6,69,7,8,9,10,11,12,13,14,15,70,16,17,71,18,19,20,21,72,73,74,75,22,23,24,25,76,26,27,77,28,29,30,31,32,33,34,78,35,36,79,37,38,39,40,41,42,44,45,46,80,81,82,47,48,49,83,84,85,86,87,88,89,90,91,92,93,50,51,94,54,95,55,56,57,59,60,61,63,64,65,66,96],"tindex":"6d50cb9e-db9c-11e4-a513-7dbb487f9eb7","variableMapping":{"high":"roundaboutBit","highKey":"forwardBit","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[47,48],"tindex":"6d50cb9f-db9c-11e4-a513-43cdae77fada","variableMapping":{"values":"nodeIndex","n":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[97,52,98,99,100,101,58,61,62],"tindex":"6d50cba0-db9c-11e4-a513-ef1a10b90190","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"6d50f2b1-db9c-11e4-a513-977197074b16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[97,52,98,99,100,101,58,61,62],"tindex":"6d50f2b2-db9c-11e4-a513-abcfe49b63c3","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"6d50f2b3-db9c-11e4-a513-a7f04741ed97","variableMapping":{"maxSpeed":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[102,103],"tindex":"6d50f2b4-db9c-11e4-a513-dd11df34d408","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"6d50f2b5-db9c-11e4-a513-2f1ccbeb8b08","variableMapping":{"d":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"6d50f2b6-db9c-11e4-a513-e1c4c8f14520","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[104,105,106,107,108,50,51,97,109,110,98,111,94,54,95,55,112,113,99,100,114,101,115,57,58,116,59,60,117,118,119,61,62,63,120,64,96],"tindex":"6d50f2b7-db9c-11e4-a513-199aa4d492f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"6d50f2b8-db9c-11e4-a513-ebcde8e173d3","variableMapping":{"y":"maxSpeed","angle":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"6d50f2b9-db9c-11e4-a513-974a55b4627a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"6d50f2ba-db9c-11e4-a513-052a19297af8","variableMapping":{"i":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[139,140],"tindex":"6d50f2bb-db9c-11e4-a513-3b7304611407","variableMapping":{"i":"minutes","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"6d50f2bc-db9c-11e4-a513-37dfba2da919","variableMapping":{"shift":"index","nodeBitMask":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":0},{"failures":[141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,1,156,2,157,158,9,159,11,12,160,13,161,162,20,163,164,165,166,167,168,169,170,171,172,173,22,174,23,175,176,30,177,32,178,179,180,39,181,182,183,184,185,186,187,107,108,188,189,190,191,192,193,139,194,195,196,197,198,199,200,201,202,203,204,44,205,206,207,45,208,209,46,210,211,212,80,213,84,114,214,215,216,217,218,219,96],"tindex":"6d50f2bd-db9c-11e4-a513-f324f2700fb2","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[220,92,221,222,223,224,225,226,227,228,229,230,231,232,233,234],"tindex":"6d5119ce-db9c-11e4-a513-a5eb0235fb54","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[235,236,137,138],"tindex":"6d5119cf-db9c-11e4-a513-c57a4244aa56","variableMapping":{"ret":"allBits","retBucket":"allBits","i":"allBits","bucketSize":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"6d5119d0-db9c-11e4-a513-ab45eeb9cdd1","variableMapping":{"bytes":"oldRelationFlags","capacity":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":0},{"failures":[],"tindex":"6d5119d1-db9c-11e4-a513-0301055f4eeb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[130,236],"tindex":"6d5119d2-db9c-11e4-a513-7139ff41bc26","variableMapping":{"weightApproximation":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[6,17,167,27,36],"tindex":"6d5119d3-db9c-11e4-a513-1d2f4d256352","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"6d5119d4-db9c-11e4-a513-f55ac85b9d04","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[48,49],"tindex":"6d5119d5-db9c-11e4-a513-0f211b0e31f9","variableMapping":{"index":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[59,117,118,119,61,63,120],"tindex":"6d5119d6-db9c-11e4-a513-0f09cc1964bc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[],"tindex":"6d5119d7-db9c-11e4-a513-0367c4e113d0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"6d5119d8-db9c-11e4-a513-a3c3add61026","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[6,17,27,36,139,43,194,195,196,197,198,199,200,201,202,203,204,44,237,238,239,240,241,242,86,243,244,87,245,246,247,248,249,250,88,251,252,89,253,102,90,254,255,103,91],"tindex":"6d5119d9-db9c-11e4-a513-1f36ba29a0ae","variableMapping":{"size":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"6d5119da-db9c-11e4-a513-45bb473ca56e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"6d5140eb-db9c-11e4-a513-a33835124117","variableMapping":{"graphHopperFolder":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[256,257,258],"tindex":"6d5140ec-db9c-11e4-a513-bf11c63eae78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[103],"tindex":"6d5140ed-db9c-11e4-a513-9f376b3fb3e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"6d5140ee-db9c-11e4-a513-3b6dda4da4b9","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"6d544e2f-db9c-11e4-a513-030ad074cd49","variableMapping":{"param":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:65","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":0},{"failures":[],"tindex":"6d544e30-db9c-11e4-a513-43d60f8b2d40","variableMapping":{"oldValueIndex":"value","lastKey":"value","key":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"6d544e31-db9c-11e4-a513-b336220698bc","variableMapping":{"g":"graph","start":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:226","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"6d544e32-db9c-11e4-a513-ed70cb1cd50b","variableMapping":{"flags":"ferryBit","scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[121,123,124,126,128,129,131,132,133,134,136,137,138],"tindex":"6d544e33-db9c-11e4-a513-c12978cf8e96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6d544e34-db9c-11e4-a513-8d7e15fd07f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[92,221,222],"tindex":"6d544e35-db9c-11e4-a513-dd4e193683f6","variableMapping":{"key":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[83,259,260,85,261,262,93,263,264],"tindex":"6d544e36-db9c-11e4-a513-5d6bbd54da01","variableMapping":{"from":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","end":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[],"tindex":"6d544e37-db9c-11e4-a513-b75792805532","variableMapping":{"retBucket":"minutes","bucketSize":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6d544e38-db9c-11e4-a513-73b149206150","variableMapping":{"osmFile":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"6d547549-db9c-11e4-a513-c9f27bfcd31b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"6d54754a-db9c-11e4-a513-75a7fbab9f31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"6d54754b-db9c-11e4-a513-5567c73594fb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[83,259,85,93],"tindex":"6d54754c-db9c-11e4-a513-03fe82db0813","variableMapping":{"bytePos":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"6d54754d-db9c-11e4-a513-8d6492f2d716","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"6d54754e-db9c-11e4-a513-0b41ad096590","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[0,265,1,3,4,266,267,5,69,268,7,269,8,270,10,11,12,14,15,271,272,16,71,273,18,274,19,275,21,72,73,74,75,22,24,25,276,277,26,77,278,28,279,29,280,31,33,34,281,282,35,79,283,37,179,38,284,40,41,42,45,285,286,47,287,288,289,48,50,97,109,110,52,98,111,53,290,94,56,112,113,99,100,114,101,115,57,59,60,117,118,119,61,63,120,64,214,215,216,66,291,96],"tindex":"6d54754f-db9c-11e4-a513-dbb1ec4ba642","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[292,293,67,2,294,68,6,295,9,13,296,70,17,297,20,72,73,298,74,75,23,299,76,27,300,30,32,301,78,36,302,39,187,107,108,188,303,189,190,191,193,139,43,194,195,196,197,198,199,200,201,202,203,204,304,44,46,305,80,306,257,258,307,81,82,83,259,260,308,309,239,213,84,85,310,311,312,261,262,313,314,315,316,242,86,244,87,245,246,247,251,89,253,90,92,221,222,230,231,234,93,317,318,319,263,264,320,321,50,51,94,95,55,58,62,65,322],"tindex":"6d547550-db9c-11e4-a513-c5829efb8736","variableMapping":{"high":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[155,106,156,323,324,325,160,326,327,328,329,330,164,331,332,333,334,335,165,166,167,174,336,337,338,54,339],"tindex":"6d547551-db9c-11e4-a513-01d219a28dff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[340],"tindex":"6d547552-db9c-11e4-a513-f358b34b15d6","variableMapping":{"ret":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:99","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"6d547553-db9c-11e4-a513-d7592f733dd6","variableMapping":{"strLen":"to","bLen":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"6d547554-db9c-11e4-a513-4f9d528b45c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"6d549c65-db9c-11e4-a513-79cdabdb0f0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"6d549c66-db9c-11e4-a513-35e2801aea15","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","key":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[4,341,342,343,344,345,158,346,15,347,348,349,350,351,162,352,25,353,354,355,356,357,176,358,34,359,360,361,362,363,180,364,47,289],"tindex":"6d549c67-db9c-11e4-a513-8952291c4732","variableMapping":{"size":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-1},{"failures":[],"tindex":"6d549c68-db9c-11e4-a513-4be2a9c8f888","variableMapping":{"bytePos":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[365,366,220,367],"tindex":"6d549c69-db9c-11e4-a513-c944c68a007f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"6d549c6a-db9c-11e4-a513-014fc0a9362d","variableMapping":{"bit":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":0},{"failures":[],"tindex":"6d549c6b-db9c-11e4-a513-85ed28fc9ca7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[303,192,43,307,102,255],"tindex":"6d549c6c-db9c-11e4-a513-6d8c2069395d","variableMapping":{"flags":"value","tmpValue":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[106,4,324,341,342,343,344,345,158,346,15,327,347,348,349,350,351,162,352,25,337,353,354,355,356,357,176,358,34,368,359,360,361,362,363,180,364,44,47,288,289],"tindex":"6d549c6d-db9c-11e4-a513-c5a36e17693e","variableMapping":{"id":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":-1},{"failures":[],"tindex":"6d549c6e-db9c-11e4-a513-25a5824c3f8c","variableMapping":{"incEleSum":"lastPrio","eleDelta":"lastPrio","incDist2DSum":"lastPrio","decEleSum":"lastPrio","fullDist2D":"lastPrio","decDist2DSum":"lastPrio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"6d549c6f-db9c-11e4-a513-bd5875d5cae1","variableMapping":{"high":"hash","len":"hash","start":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6d549c70-db9c-11e4-a513-cf506488b015","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","nextEdge":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-2},{"failures":[259],"tindex":"6d549c71-db9c-11e4-a513-67a21507e04b","variableMapping":{"ghLocation":"highway","osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[0,265,121,168,169,170,369,370,124,371,372,373,374,375,73,376,298,126,171,172,173,377,378,129,379,380,381,382,383,74,384,385,386,387,388,186,107,108,188,303,189,191,192,193,43,194,195,196,198,199,201,202,44,287,288,289,290,55,56,99,389,390,391,392],"tindex":"6d54c382-db9c-11e4-a513-51b18d1793ec","variableMapping":{"red":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[340],"tindex":"6d54c383-db9c-11e4-a513-a5f7d09fb9b1","variableMapping":{"str":"field"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:274","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.substring(0, ((java.lang.String.length()) - 2))) + \":\") + (java.lang.String.substring(((java.lang.String.length()) - 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[130,131,235,132,236,133,134,393,137,138],"tindex":"6d54c384-db9c-11e4-a513-a14872ad5889","variableMapping":{"r":"midLon","angle":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"6d54c385-db9c-11e4-a513-9db3a2d08899","variableMapping":{"high":"scDirMask","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[0,265,121,169,122,123,124,125,126,172,127,128,129,381,130,131,235,132,133,134,135,136,393,137,138,107,108,188,303,189,191,192,194,195,196,99],"tindex":"6d54c386-db9c-11e4-a513-25f89ccc84d3","variableMapping":{"segmentSizeInBytes":"i","indexDivisor":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[292,293,105,1,394,2,3,4,395,266,267,294,396,68,5,341,342,343,69,268,344,345,157,7,269,158,346,8,270,9,397,10,398,376,298,126,171,172,173,377,378,128,129,379,380,381,382,383,74,186,187,107,108,189,190,192,50,51,97,109,110,52,98,111,53,290,94,54,95,55,56,112,113,99,399,100,114,101,115,57,58,116,59,60,117,118,119,400,61,62,63,120,64,65,96],"tindex":"6d54c387-db9c-11e4-a513-b547d937c3e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"6d54c388-db9c-11e4-a513-0115241eb51f","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[139,247],"tindex":"6d54c389-db9c-11e4-a513-5d28167ea73f","variableMapping":{"cp":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"6d54c38a-db9c-11e4-a513-ebb80908343e","variableMapping":{"this":"this","unknownSpeed":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":0},{"failures":[92],"tindex":"6d54c38b-db9c-11e4-a513-01119e9eba32","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[130,131,132,236,133,134,137,138],"tindex":"6d54c38c-db9c-11e4-a513-5dbfb5d74698","variableMapping":{"resultOrientation":"midLat","orientation":"lat","java.lang.Math.PI":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"6d54c38d-db9c-11e4-a513-e7e57eb23e78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[258,83,259,260,311,261,262,221,222,230,318,263,264],"tindex":"6d54ea9e-db9c-11e4-a513-75f919b3691f","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","allSegments":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[102],"tindex":"6d54ea9f-db9c-11e4-a513-43f68b7ff3c5","variableMapping":{"time":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"6d54eaa0-db9c-11e4-a513-7da4f6638e9f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6d54eaa1-db9c-11e4-a513-8fb99c06515a","variableMapping":{"time":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"6d54eaa2-db9c-11e4-a513-17a39bc6163b","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:420","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[288],"tindex":"6d54eaa3-db9c-11e4-a513-a91d8c8e1be7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[340],"tindex":"6d54eaa4-db9c-11e4-a513-6f45a277a02e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[43,44,257,310,312,261,314,317,319,263,321],"tindex":"6d54eaa5-db9c-11e4-a513-0d308234f1de","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[139,140],"tindex":"6d54eaa6-db9c-11e4-a513-798a9a880458","variableMapping":{"val":"minutes","str":"minStr","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"6d54eaa7-db9c-11e4-a513-8965e713fa08","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":269,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":399,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":155,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":33,"com.graphhopper.reader.OSMReaderTest.testFerry":139,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":66,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":291,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":172,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":187,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":327,"com.graphhopper.coll.CompressedArrayTest.testCompress":138,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":177,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":178,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":27,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":63,"com.graphhopper.GraphHopperTest.testPrepare":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":58,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":94,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":214,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":260,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":390,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":126,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":93,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":53,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":169,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":11,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":135,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":64,"com.graphhopper.GraphHopperTest.testLoadOSM":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":371,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":170,"com.graphhopper.reader.OSMReaderTest.testSort":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":320,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":202,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":160,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":300,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":22,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":133,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":275,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":272,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":13,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":231,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":378,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":377,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":52,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":110,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":351,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":1,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":344,"com.graphhopper.coll.CompressedArrayTest.testCompress2":137,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":357,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":17,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":331,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":252,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":353,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":25,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":140,"com.graphhopper.storage.LevelGraphStorageTest.testClone":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":49,"com.graphhopper.reader.OSMReaderTest.testBarriers":196,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":376,"com.graphhopper.util.GHUtilityTest.testCopy":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":282,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":228,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":146,"com.graphhopper.routing.PathTest.testFindInstruction":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":15,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":65,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":255,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":280,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":349,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":301,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":167,"com.graphhopper.util.InstructionListTest.testWayList2":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":372,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":31,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":318,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":317,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":213,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":68,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":384,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":98,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":197,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":114,"com.graphhopper.coll.OSMIDMapTest.testGet":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":16,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":103,"com.graphhopper.routing.PathBidirRefTest.testExtract":285,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":157,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":184,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":380,"com.graphhopper.storage.RAMDataAccessTest.testCopy":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":364,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":180,"com.graphhopper.storage.RAMDataAccessTest.testSegments":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":112,"com.graphhopper.reader.OSMReaderTest.testMain":194,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":350,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":381,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":7,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":326,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":6,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":343,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":391,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":10,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":45,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":85,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":164,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":268,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":204,"com.graphhopper.storage.GraphHopperStorageTest.testClone":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":245,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":232,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":105,"com.graphhopper.routing.PathTest.testTime":305,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":227,"com.graphhopper.util.BitUtilLittleTest.testToFloat":218,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":397,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":374,"com.graphhopper.reader.OSMReaderTest.testRelation":256,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":313,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":153,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":207,"com.graphhopper.GraphHopperTest.testFootOnly":192,"com.graphhopper.util.BitUtilLittleTest.testToInt":219,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":127,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":79,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":144,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":205,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":334,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":168,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":130,"com.graphhopper.reader.OSMReaderTest.testWithBounds":203,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":147,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":141,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":91,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":257,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":3,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":220,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":71,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":23,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":51,"com.graphhopper.util.BitUtilLittleTest.testToBitString":217,"com.graphhopper.util.InstructionListTest.testWayList":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":367,"com.graphhopper.GraphHopperAPITest.testDisconnected179":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":78,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":236,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":121,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":289,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":40,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":188,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":162,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":28,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":62,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":248,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":224,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":264,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":115,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":321,"com.graphhopper.routing.PathTest.testWayList":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":359,"com.graphhopper.coll.OSMIDMapTest.testGet2":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":57,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":8,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":89,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":277,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":128,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":129,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":370,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":388,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":312,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":84,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":223,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":82,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":47,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":179,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":193,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":307,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":270,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":340,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":293,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":348,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":36,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":26,"com.graphhopper.util.InstructionListTest.testEmptyList":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":55,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":241,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":240,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":308,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":113,"com.graphhopper.reader.PrinctonReaderTest.testRead":41,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":30,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":173,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":70,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":131,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":32,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":273,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":310,"com.graphhopper.reader.OSMReaderTest.testFoot":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":37,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":123,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":134,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":365,"com.graphhopper.reader.OSMReaderTest.testOneWay":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":124,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":354,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":358,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":297,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":366,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":118,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":60,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":151,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":171,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":304,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":336,"com.graphhopper.routing.PathBidirRefTest.testExtract2":286,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":335,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":373,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":233,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":199,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":102,"com.graphhopper.util.SimpleIntDequeTest.testPush":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":369,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":29,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":396,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":249,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":175,"com.graphhopper.GraphHopperTest.testFootAndCar":303,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":342,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":383,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":143,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":100,"com.graphhopper.GraphHopperTest.testPrepareOnly":186,"com.graphhopper.GraphHopperTest.testVia":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":34,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":201,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":67,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":322,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":90,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":200,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":239,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":295,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":346,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":12}}]
