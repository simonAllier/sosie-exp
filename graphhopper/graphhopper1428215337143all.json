[{"failures":[],"tindex":"0a5f0c7a-db5d-11e4-aa21-b3dd87376fac","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"0a5f338b-db5d-11e4-aa21-01af94c79ce3","variableMapping":{"size":"size","capacity":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"0a5f338c-db5d-11e4-aa21-2967454cf5da","variableMapping":{"pointIndex":"edgeId","index":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"0a5f338d-db5d-11e4-aa21-f5ae2a4ccacb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"0a5f338e-db5d-11e4-aa21-890a29ef7a53","variableMapping":{"start":"encoderCount","delta":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46],"tindex":"0a5f338f-db5d-11e4-aa21-a15361e4ee37","variableMapping":{"oldValueIndex":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"0a5f59a0-db5d-11e4-aa21-27c5395e3396","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"0a5f59a1-db5d-11e4-aa21-a33980033bda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"0a5f59a2-db5d-11e4-aa21-5577e73b5867","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[26],"tindex":"0a5f59a3-db5d-11e4-aa21-d56814b74998","variableMapping":{"intVal":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-1},{"failures":[],"tindex":"0a5f59a4-db5d-11e4-aa21-b3444c8814d9","variableMapping":{"shift":"shift","backwardBit":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"0a5f59a5-db5d-11e4-aa21-0ff9871f5dfa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"0a5f59a6-db5d-11e4-aa21-ff6b2e90835f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[],"tindex":"0a5f59a7-db5d-11e4-aa21-450269d1fa18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[1,5,47,10,14,48,18,22,49,30,34],"tindex":"0a5f59a8-db5d-11e4-aa21-774cf6d4fbd2","variableMapping":{"high":"encoded","guess":"relationFlags","low":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"0a5f59a9-db5d-11e4-aa21-7bcaa4399ada","variableMapping":{"highwayValue":"bikeTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[50],"tindex":"0a5f59aa-db5d-11e4-aa21-63f5c5d52e58","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Extract can only be called once\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[1,5,47,10,14,48,22,49,30,34],"tindex":"0a5f59ab-db5d-11e4-aa21-37f679302192","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[51,52],"tindex":"0a5f59ac-db5d-11e4-aa21-f5a44347c12d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[53,54,55],"tindex":"0a60922d-db5d-11e4-aa21-5196b1ca2eaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"0a60922e-db5d-11e4-aa21-5993ef6c024c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"0a60922f-db5d-11e4-aa21-bd2d815208d1","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[51,52],"tindex":"0a609230-db5d-11e4-aa21-69c673801d8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[56,57,58,59,60],"tindex":"0a609231-db5d-11e4-aa21-6b8d4d6f3a05","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"0a609232-db5d-11e4-aa21-e33c2b5e2e8b","variableMapping":{"flags":"roundaboutBit","tmpValue":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"0a609233-db5d-11e4-aa21-2b49e282c94a","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:114","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"0a60b944-db5d-11e4-aa21-db806da5015b","variableMapping":{"distInMeter":"decDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"0a60b945-db5d-11e4-aa21-e543ed40781f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[51,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"0a60b946-db5d-11e4-aa21-4bedd3e33563","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"high","nextEdge":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-1},{"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,60],"tindex":"0a60b947-db5d-11e4-aa21-15e1f832f417","variableMapping":{"size":"tmpEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[8,10,18,25,26,28,30],"tindex":"0a60b948-db5d-11e4-aa21-7bd19032c267","variableMapping":{"segmentSizeInBytes":"priorityFromRelation","indexDivisor":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"0a60b949-db5d-11e4-aa21-0fe7a850d37c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[120,121,122,123,124,125,126,127,128,129,130,131,56,132,133,134,57,135,136,137,50,138,139,53,140,141,142,54,143,144,145,146,147,148,149,90,150,151,91,152,153,154,155,156,92,93,157,158,159,94,95,96,97,98,99,100,101,102,103,104,105,160,106,107,108,109,110,111,161,112,113,114,115,116,162,163,164,165,166,167,168,117,118,169,59,119,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,62,187,188,189,190,191,192,193,194,195,196,63,197,64,198,199,200,65,66,201,202,203,204,205,206,67,68,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,69,224,225,226,227,228,229,230,231,232,233,70,234,71,235,236,237,72,73,238,239,240,241,242,243,74,75,244,245,246,247,248,249,250,251,252,253,254,76,255,256,257,258,259,260,261,262,263,264,77,265,78,266,267,268,79,80,269,270,271,272,273,274,81,82,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,83,299,300,301,302,303,304,305,306,307,308,84,309,85,310,311,312,86,87,313,314,315,316,317,318,88,89,319,320,321,322,323,324,325,326,327],"tindex":"0a60b94a-db5d-11e4-aa21-e3e8c4468cf4","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"0a60b94b-db5d-11e4-aa21-bd567322c55a","variableMapping":{"points":"pl"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:224","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":0},{"failures":[95],"tindex":"0a60b94c-db5d-11e4-aa21-152dcbb0a379","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"0a60b94d-db5d-11e4-aa21-db24734d5c03","variableMapping":{"high":"scDirMask","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[104,107,108,111,328,329,330,117,118,169,59,119,170,60,331,332,38,39,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,174,349,175,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,176,40,41,365,42,43,44,45,366,367,46],"tindex":"0a60e05e-db5d-11e4-aa21-b1090b1049a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"status":-1},{"failures":[368,369,370,371,372,373,374,375,376,377,378,120,121,122,123,51,379,380,61,52,381,382,383,131,148,149,90,150,91,152,153,154,155,156,92,93,157,158,159,94,95,96,97,98,99,100,101,102,103,104,105,160,106,107,108,109,110,111,161,112,113,114,115,116,384,385,386,387,162,388,389,390,391,392,393,394,165,166,55,58,328,329,330,395,396,397,398,399,400,401,402,403,167,168,404,405,117,118,169,59,119,406,170,60,171,331,332,407,408,409,410,411,172,412,413,414,415,416,417,418,419,420,421,173,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,174,349,175,422,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,176,177,179,180,183,185,186,62,187,188,189,190,191,192,193,194,195,196,63,197,64,198,199,200,65,66,201,202,203,204,206,67,68,207,208,209,210,211,212,213,214,215,216,217,220,222,223,69,224,225,226,227,228,229,230,231,232,233,70,234,71,235,236,237,72,73,238,239,240,241,243,74,75,244,245,246,247,248,249,250,251,252,423,424,425,426,427,428,429,430,431,263,274,284,285,286,287,288,290,291,292,295,297,298,83,299,300,301,302,303,304,305,306,307,308,84,309,85,310,311,312,86,87,313,314,315,316,318,88,89,319,320,321,322,323,324,325,326,327],"tindex":"0a60e05f-db5d-11e4-aa21-fd9df4bfa1eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"0a60e060-db5d-11e4-aa21-99949c06b5fc","variableMapping":{"elem":"nodeIndex","keys":"nodeIndex","i":"index","key":"index","child":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:165","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n    int = int;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-2},{"failures":[90,93,95,96,116],"tindex":"0a60e061-db5d-11e4-aa21-4d868af6e77c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"0a60e062-db5d-11e4-aa21-2bdfff28b849","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[],"tindex":"0a60e063-db5d-11e4-aa21-ebeddea5997d","variableMapping":{"need":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[383],"tindex":"0a60e064-db5d-11e4-aa21-f95ff450850b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"0a60e065-db5d-11e4-aa21-0951d0c589dc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[432],"tindex":"0a60e066-db5d-11e4-aa21-253659eb54cb","variableMapping":{"bytesForFlags":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"0a60e067-db5d-11e4-aa21-3d84877e3a52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[376,377,378,120,113,385,162,388,390,391,394,165,166,328,395,396,405,117,119,406,170,60,171,433,434,435,436,437,438,439,413,414,415,416,336,338,352,354,440,177,180,185,201,67,210,212,217,222,238,74,247,249,441,289,292,297,313,88,322,324,442],"tindex":"0a610778-db5d-11e4-aa21-b5aa3e69d5ee","variableMapping":{"i":"index","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"0a610779-db5d-11e4-aa21-f95ee8b89ed9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-2},{"failures":[],"tindex":"0a61077a-db5d-11e4-aa21-b7886d31e342","variableMapping":{"y1":"delta","y2":"length","x1":"index","x2":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-2},{"failures":[],"tindex":"0a61077b-db5d-11e4-aa21-fb28be3a094b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"0a61077c-db5d-11e4-aa21-0f50db10a063","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[370,122,51,52,381,91,152,92,157,94,95,105,160,108,116,162,167,168,331,177,180,186,62,193,198,204,207,214,217,223,69,230,235,241,244,251,254,76,261,266,272,275,282,292,298,83,305,310,316,319,326],"tindex":"0a61077d-db5d-11e4-aa21-abb2fbadd63a","variableMapping":{"lastTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"0a61077e-db5d-11e4-aa21-55ede7e2509d","variableMapping":{"delNodes":"index","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.inPlaceNodeRemove(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"0a61077f-db5d-11e4-aa21-7fc25e9606e1","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edge":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"0a610780-db5d-11e4-aa21-f37c5eb9725c","variableMapping":{"value":"node","numberOfBits":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[57],"tindex":"0a610781-db5d-11e4-aa21-cb24039702a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[370,376,377,378,120,382,383,113,384,385,387,162,388,390,391,394,165,166,328,329,330,395,396,117,118,169,59,119,170,60,433,434,435,436,437,443,438,439,336,337,338,352,353,354,177,180,185,201,67,210,212,213,217,222,238,74,247,249,250,274,441,292,297,313,88,322,324,325,442],"tindex":"0a610782-db5d-11e4-aa21-0915f7a29c29","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"0a610783-db5d-11e4-aa21-77acb438f41f","variableMapping":{"numTiles":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[444,445,446,447,129,136,330,399],"tindex":"0a610784-db5d-11e4-aa21-8192fda70c64","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[61,63,68,70,75,77,82,84,89],"tindex":"0a612e95-db5d-11e4-aa21-29bdbb24763b","variableMapping":{"strLen":"i","bLen":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"0a612e96-db5d-11e4-aa21-77adf3cdf69f","variableMapping":{"str":"_location","d":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:276","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"0a612e97-db5d-11e4-aa21-31ea628e7baf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"0a612e98-db5d-11e4-aa21-23f7b532b455","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[61,62,194,196,63,67,68,69,231,233,70,74,75,76,262,264,77,81,82,290,83,306,308,84,88,89],"tindex":"0a612e99-db5d-11e4-aa21-f16d25e3c7a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"0a612e9a-db5d-11e4-aa21-d3996db20b84","variableMapping":{"allSegments":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[432],"tindex":"0a612e9b-db5d-11e4-aa21-e1b6f3d16975","variableMapping":{"lat":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"0a612e9c-db5d-11e4-aa21-f552a74f65d7","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"com.graphhopper.routing.util.PriorityWeighting.KEY","tmpNode":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"0a612e9d-db5d-11e4-aa21-1da88e08e650","variableMapping":{"turnRestrictionBit":"capacity","shift":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":0},{"failures":[],"tindex":"0a612e9e-db5d-11e4-aa21-f7e172ebe754","variableMapping":{"nodeFlags":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-2},{"failures":[],"tindex":"0a612e9f-db5d-11e4-aa21-9713739488e4","variableMapping":{"entry":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[51],"tindex":"0a612ea0-db5d-11e4-aa21-7759e0320236","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1042","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) != null)\n    com.graphhopper.storage.GraphStorage.close();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[54],"tindex":"0a612ea1-db5d-11e4-aa21-a7fc5eb494de","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"0a612ea2-db5d-11e4-aa21-d381ac11d234","variableMapping":{"maxMCSpeed":"java.lang.Math.PI","speed":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"0a612ea3-db5d-11e4-aa21-292e8576f13e","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:149","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46],"tindex":"0a612ea4-db5d-11e4-aa21-5318b119d22f","variableMapping":{"towerNodeDistance":"midLon","zeroCounter":"spatialKey"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:740","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    (long)++;\n    double = 1.0E-4;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"0a612ea5-db5d-11e4-aa21-5198c9aba16e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:479","type":"CtLocalVariableImpl","sourcecode":"java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null)"},"status":-2},{"failures":[],"tindex":"0a612ea6-db5d-11e4-aa21-2553e087e806","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"0a612ea7-db5d-11e4-aa21-5fc5f88989fb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[38,39,335,351,40,41,365,42,43,44,45,46],"tindex":"0a612ea8-db5d-11e4-aa21-57f6181a205a","variableMapping":{"r":"lon","angle":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"0a612ea9-db5d-11e4-aa21-75675c0dad65","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"0a6155ba-db5d-11e4-aa21-110ce1207bb8","variableMapping":{"equalNormedDelta":"d1","tmpNormedDist":"epsilon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:924","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"0a6155bb-db5d-11e4-aa21-4b63de0b22dd","variableMapping":{"gradient":"maxLonTmp","yend":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[448,449,450,377,378,451,165,166],"tindex":"0a6155bc-db5d-11e4-aa21-75918fbde1bb","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"y","java.lang.Double.POSITIVE_INFINITY":"angle","weight":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"0a6155bd-db5d-11e4-aa21-49a332590418","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"0a6155be-db5d-11e4-aa21-59dc1fc92b07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,160,106,107,108,109,110,111,112,113,114,115,116,117,118,169,59,119,170,60,331,332],"tindex":"0a6155bf-db5d-11e4-aa21-85a549c68426","variableMapping":{"initialized":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"0a6155c0-db5d-11e4-aa21-69a89acd6770","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"0a6155c1-db5d-11e4-aa21-33bce3a868ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"0a6155c2-db5d-11e4-aa21-87ba98a8cb15","variableMapping":{"this":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:237","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"0a6155c3-db5d-11e4-aa21-678b37142614","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:349","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.nextEdge()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"0a6155c4-db5d-11e4-aa21-8d4a645ee70d","variableMapping":{"res":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"0a6155c5-db5d-11e4-aa21-d76ec6cadb87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"0a6155c6-db5d-11e4-aa21-ff4f2558ea5d","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[444,452,124,453,454,445,455,456,446,457,458,459,447,460,129,56,134,57,50,139,53,141,54,55,58,328,329,330,395,396,397,398,399,400,401,402,461,403,405,462,117,118,169,59,119,406,170,60,171],"tindex":"0a6155c7-db5d-11e4-aa21-411954b8f026","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"0a6155c8-db5d-11e4-aa21-6f58c058a33f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[],"tindex":"0a6155c9-db5d-11e4-aa21-a939940d2e56","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[463,464,0,1,2,444,3,465,4,466,467,5,6,452,468],"tindex":"0a6155ca-db5d-11e4-aa21-d3ce1803da77","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[51,52,381],"tindex":"0a617cdb-db5d-11e4-aa21-3b3154567ac7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:98","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-1},{"failures":[],"tindex":"0a617cdc-db5d-11e4-aa21-8f9a36e6b4bf","variableMapping":{"pos":"shift","mSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":161,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":385,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":289,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":254,"com.graphhopper.reader.OSMReaderTest.testFerry":55,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":122,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":453,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":2,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":353,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":462,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":451,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":194,"com.graphhopper.coll.CompressedArrayTest.testCompress":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":467,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":153,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":269,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":422,"com.graphhopper.util.AngleCalcTest.testOrientation":448,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":157,"com.graphhopper.GraphHopperTest.testPrepare":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":90,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":105,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":374,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":295,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":350,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":7,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":423,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":103,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":337,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":177,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":366,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":94,"com.graphhopper.GraphHopperTest.testLoadOSM":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":344,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":338,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":126,"com.graphhopper.reader.OSMReaderTest.testSort":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":380,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":181,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":245,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":217,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":280,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":390,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":209,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":317,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":426,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":228,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":178,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":185,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":357,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":108,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":100,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":99,"com.graphhopper.coll.OSMIDMapTest.testGetLong":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":197,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":187,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":311,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":292,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":86,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":450,"com.graphhopper.coll.CompressedArrayTest.testCompress2":38,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":195,"com.graphhopper.GraphHopperAPITest.testLoad":331,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":296,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":425,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":129,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":233,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":69,"com.graphhopper.storage.LevelGraphStorageTest.testClone":300,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":186,"com.graphhopper.reader.OSMReaderTest.testBarriers":330,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":257,"com.graphhopper.util.GHUtilityTest.testCopy":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":176,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":452,"com.graphhopper.routing.PathTest.testFindInstruction":166,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":465,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":62,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":121,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":134,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":29,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":418,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":246,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":207,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":155,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":291,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":302,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":258,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":431,"com.graphhopper.util.InstructionListTest.testWayList2":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":345,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":251,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":8,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":212,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":382,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":304,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":196,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":101,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":113,"com.graphhopper.coll.OSMIDMapTest.testGet":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":193,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":57,"com.graphhopper.routing.PathBidirRefTest.testExtract":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":11,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":313,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":81,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":464,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":445,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":174,"com.graphhopper.util.GHUtilityTest.testSort2":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":109,"com.graphhopper.reader.OSMReaderTest.testMain":328,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":362,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":455,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":50,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":277,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":307,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":85,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":326,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":162,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":27,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":424,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":312,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":402,"com.graphhopper.storage.StorablePropertiesTest.testStore":440,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":442,"com.graphhopper.storage.GraphHopperStorageTest.testClone":225,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":141,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":234,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":284,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":259,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":287,"com.graphhopper.routing.PathTest.testTime":164,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":21,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":324,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":301,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":347,"com.graphhopper.reader.OSMReaderTest.testRelation":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":80,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":315,"com.graphhopper.util.GHUtilityTest.testSortDirected":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":35,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":387,"com.graphhopper.GraphHopperTest.testFootOnly":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":0,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":53,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":356,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":266,"com.graphhopper.search.NameIndexTest.testCreate":435,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":384,"com.graphhopper.routing.QueryGraphTest.testOneWay":392,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":40,"com.graphhopper.reader.OSMReaderTest.testWithBounds":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":379,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":388,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":270,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":25,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":298,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":468,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":140,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":198,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":222,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":96,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":248,"com.graphhopper.util.InstructionListTest.testWayList":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":454,"com.graphhopper.GraphHopperAPITest.testDisconnected179":332,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":260,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":32,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":168,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":282,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":169,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":158,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":241,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":143,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":115,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":221,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":216,"com.graphhopper.routing.PathTest.testWayList":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":264,"com.graphhopper.coll.OSMIDMapTest.testGet2":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":116,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":202,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":236,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":191,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":226,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":310,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":447,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":48,"com.graphhopper.util.GHUtilityTest.testSort":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":341,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":444,"com.graphhopper.search.NameIndexTest.testPut":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":214,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":420,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":416,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":409,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":429,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":458,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":383,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":407,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":179,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":446,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":128,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":51,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":430,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":309,"com.graphhopper.routing.PathTest.testFound":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":274,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":171,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":321,"com.graphhopper.util.AngleCalcTest.testAtan2":449,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":12,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":63,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":434,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":263,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":230,"com.graphhopper.util.InstructionListTest.testEmptyList":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":104,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":137,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":136,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":110,"com.graphhopper.reader.PrinctonReaderTest.testRead":167,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":354,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":192,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":262,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":253,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":200,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":466,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":28,"com.graphhopper.reader.OSMReaderTest.testFoot":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":272,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":394,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":45,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":343,"com.graphhopper.reader.OSMReaderTest.testOneWay":403,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":70,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":208,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":4,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":459,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":154,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":91,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":131,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":265,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":386,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":219,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":461,"com.graphhopper.routing.PathBidirRefTest.testExtract2":149,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":428,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":346,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":243,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":24,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":397,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":283,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":339,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":244,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":144,"com.graphhopper.GraphHopperTest.testFootAndCar":59,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":238,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":84,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":364,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":256,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":112,"com.graphhopper.GraphHopperTest.testPrepareOnly":405,"com.graphhopper.GraphHopperTest.testVia":117,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":421,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":76,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":399,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":288,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":120,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":242,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":132,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":267,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":124,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":320,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":89,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":180}}]
