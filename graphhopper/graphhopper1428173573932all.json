[{"failures":[],"tindex":"cd2815b9-dafb-11e4-8993-9bd576fbe749","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[],"tindex":"cd2815ba-dafb-11e4-8993-c56b27fce1a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"cd2815bb-dafb-11e4-8993-315e5235debd","variableMapping":{"finishedTo":"empty","finishedFrom":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"cd283ccc-dafb-11e4-8993-5b4900ff48b6","variableMapping":{"freeIndex":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"cd283ccd-dafb-11e4-8993-af02f3abbbdf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[221,222,223],"tindex":"cd283cce-dafb-11e4-8993-e3ffc4b0b938","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"start","nextEdge":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[],"tindex":"cd283ccf-dafb-11e4-8993-af5da0c2e221","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[224,225,226,1,227,2,228,229,230],"tindex":"cd283cd0-dafb-11e4-8993-4f5935d47e14","variableMapping":{"initLeafSize":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[231,232,233,234,235,236,237,238,239,240,241,242,243,244,221,245,246,247,222,223,248,249,5,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,230,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,36,300,301,302,37,303,304,305,306,307,308,309,310,38,311,312,313,314,315,316,317,318,319,320,39,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,40,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,41,42,44,45,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,354,355,356,357,358,359,360,143,158,170,171,172,173,174,176,177,178,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"cd2862e1-dafb-11e4-8993-97e8328d5901","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[361,362,363],"tindex":"cd2862e2-dafb-11e4-8993-d96b65d54107","variableMapping":{"param":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:66","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-1},{"failures":[],"tindex":"cd2862e3-dafb-11e4-8993-bd5fcaadd04d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"cd2862e4-dafb-11e4-8993-2de6de5834cc","variableMapping":{"size":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[231,232,233,234,364,235,236,237,365,238,239,240,241,242,243,244,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,224,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,225,221,245,246,247,222,223,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,0,417,2,248,249,418,419,228,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,229,437,438,3,4,5,6,7,8,9,10,11,439,440,441,442,443,444,445,446,363,447,448,449,450,451,452,453,250,251,454,252,253,455,254,255,256,257,258,259,260,261,262,263,264,265,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,266,267,268,269,270,271,272,273,274,275,276,277,456,457,458,459,278,279,460,280,230,281,282,283,284,285,286,287,461,288,289,290,291,292,293,294,296,462,297,298,299,36,300,463,301,302,37,303,464,304,305,465,306,307,308,309,466,310,38,311,312,313,314,467,315,316,317,318,319,468,320,39,321,322,323,324,325,326,327,328,329,330,331,332,333,334,469,335,40,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,470,353,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"cd2862e5-dafb-11e4-8993-9f430b3fdf9f","variableMapping":{"str":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:204","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"cd2889f6-dafb-11e4-8993-c163cb89d729","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[369,377,385,387,397,403,404,412,421,423,433],"tindex":"cd2889f7-dafb-11e4-8993-1106e15895fe","variableMapping":{"segmentSizeInBytes":"pavementType","index":"pavementType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"cd2889f8-dafb-11e4-8993-177a70dc8e3c","variableMapping":{"r":"x","angle":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"cd2889f9-dafb-11e4-8993-1bc5f9ca46a7","variableMapping":{"size":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"cd2889fa-dafb-11e4-8993-03afbd35b1f3","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[471,472,239,240,241],"tindex":"cd2889fb-dafb-11e4-8993-c98a147745f3","variableMapping":{"factor":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[246,247],"tindex":"cd294d4c-dafb-11e4-8993-afd7475fdb2b","variableMapping":{"latSize":"maxCount","size":"biggestStart","lonSize":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[369,377,385,387,397,403,404,412,421,423,433],"tindex":"cd294d4d-dafb-11e4-8993-ad7e19c5b988","variableMapping":{"from":"paveType","hash":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"cd294d4e-dafb-11e4-8993-8939c820c060","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"cd294d4f-dafb-11e4-8993-2d7d0bb4f010","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:99","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" }"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"cd294d50-dafb-11e4-8993-1581bf2e73d5","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"cd294d51-dafb-11e4-8993-7dc189299f18","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:349","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.nextEdge()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"cd294d52-dafb-11e4-8993-47e58cace487","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"cd297463-dafb-11e4-8993-f59334a01b66","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.BIKE2","com.graphhopper.routing.util.EncodingManager.RACINGBIKE":"entry","com.graphhopper.routing.util.EncodingManager.FOOT":"com.graphhopper.routing.util.EncodingManager.BIKE2","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","entryVal":"com.graphhopper.routing.util.EncodingManager.BIKE2","com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE":"entry","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"cd297464-dafb-11e4-8993-f7c8667fc8d2","variableMapping":{"segmentSizeInBytes":"start","length":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":0},{"failures":[444,447,280],"tindex":"cd297465-dafb-11e4-8993-bda2f5cec31a","variableMapping":{"acceptedRailways":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"cd297466-dafb-11e4-8993-5bbe79be7d9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[379,386,389,399,401,414,422,425,435,6,9,10,443,444,447,230,285,286,296,36,37],"tindex":"cd297467-dafb-11e4-8993-1dca0338e066","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"cd297468-dafb-11e4-8993-b561b46318f8","variableMapping":{"ar_y":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","ab_y":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","ar_x":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","ab_x":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"cd297469-dafb-11e4-8993-e54b6a1ce474","variableMapping":{"size":"x1","i":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[227],"tindex":"cd29746a-dafb-11e4-8993-478dd67add3c","variableMapping":{"size":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[221,222],"tindex":"cd29746b-dafb-11e4-8993-696087dabde2","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"cd29746c-dafb-11e4-8993-8739080e61eb","variableMapping":{"workerThreads":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"cd29746d-dafb-11e4-8993-b55f7d331369","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"cd29746e-dafb-11e4-8993-d5e8a54e7516","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"cd29746f-dafb-11e4-8993-e1164aaa5eeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[362],"tindex":"cd297470-dafb-11e4-8993-eb07695e3b08","variableMapping":{"err":"kmInteger","dLat":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"cd297471-dafb-11e4-8993-e1d27a4937ba","variableMapping":{"time":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":0},{"failures":[],"tindex":"cd297472-dafb-11e4-8993-55b939f3514d","variableMapping":{"weight":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[231,232,233,234,235,236,237,365,238,239,240,241,242,243,244,221,245,246,247,222,223,248,249,5,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,458,459,278,279,280,230,281,282,283,284,285,286,287,461,288,289,290,291,473,292,293,294,295,474,475,476,296,297,298,299,36,300,301,302,37,303,304,305,477,478,479,480,481,482,483,484,485,306,307,308,309,310,38,486,311,312,313,314,315,316,317,318,319,320,39,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,40,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,41,487,488,42,44,45,46,47,61,88,89,90,91,105,489,143,490,172,175,177,178,179,180,194,491],"tindex":"cd299b83-dafb-11e4-8993-81595f8f8c7c","variableMapping":{"red":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"cd299b84-dafb-11e4-8993-21f3ad9ae2ac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"cd299b85-dafb-11e4-8993-435543a884a2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"cd299b86-dafb-11e4-8993-935ce8104572","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"cd299b87-dafb-11e4-8993-5f8097f56a9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"cd299b88-dafb-11e4-8993-5def6ce63c32","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":0},{"failures":[],"tindex":"cd299b89-dafb-11e4-8993-430be2127e82","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"ele","java.lang.Double.POSITIVE_INFINITY":"ele","weight":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"cd299b8a-dafb-11e4-8993-bd601cbf89d8","variableMapping":{"edgeState":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"cd299b8b-dafb-11e4-8993-ebb6ba7aeb82","variableMapping":{"res":"bytePos","value":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":0},{"failures":[],"tindex":"cd299b8c-dafb-11e4-8993-d98deb6c13ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"cd299b8d-dafb-11e4-8993-fd017a39d0d8","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"cd299b8e-dafb-11e4-8993-c5d8bd4d2897","variableMapping":{"size":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"cd299b8f-dafb-11e4-8993-91757104af58","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[231,232,233,234,235,236,237,238,239,240,241,242,243,244,221,245,246,247,222,223,248,249,5,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,230,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,36,300,301,302,37,303,304,305,306,307,308,309,310,38,311,312,313,314,315,316,317,318,319,320,39,321,322,323,324,325,326,327,328,329,330,331,332,333,334,469,335,40,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,470,353,41,42,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,112,113,114,115,116,118,120,121,122,123,124,125,126,128,130,131,492,493,357,358,360,143,158,170,172,173,174,176,177,178,179,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"cd29c2a0-dafb-11e4-8993-d54992b5bf92","variableMapping":{"cap":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"cd29c2a1-dafb-11e4-8993-450c265c209d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[494,495,496,497,498,499,500,501,502,503],"tindex":"cd29c2a2-dafb-11e4-8993-c5bcc63341ee","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"cd29c2a3-dafb-11e4-8993-87bb6a29cb1f","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"cd29c2a4-dafb-11e4-8993-b1775cde4d96","variableMapping":{"resultOrientation":"java.lang.Double.MAX_VALUE","orientation":"maxLat","java.lang.Math.PI":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"cd29c2a5-dafb-11e4-8993-6544a4950995","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"cd29c2a6-dafb-11e4-8993-c5d651c782e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"cd29c2a7-dafb-11e4-8993-15ae21691936","variableMapping":{"name":"highwayValue","this":"this","refName":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:444","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[381,0,504,3,4,5,6,7,8,9,10,11,439,440,441,442,443,444,445,446,363,447,448,449,450,451,452,280,230,281,282,283,284,285,286,287,288,289,290,291,292,61,105,143,194],"tindex":"cd29c2a8-dafb-11e4-8993-b941e16cd307","variableMapping":{"index":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"cd29c2a9-dafb-11e4-8993-5307300d2394","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"cd29c2aa-dafb-11e4-8993-4d05402b4da5","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"cd29c2ab-dafb-11e4-8993-1b4832dcf9cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"cd29c2ac-dafb-11e4-8993-5be480db9892","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"cd29c2ad-dafb-11e4-8993-c38e160af43b","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[254,256,260,262,264,265,13,14,15,16,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,462,297,298,300,301],"tindex":"cd29e9be-dafb-11e4-8993-c1126c2be4d6","variableMapping":{"strLen":"tmpPrevEdge","bLen":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[265,12,13,32,33,35],"tindex":"cd29e9bf-dafb-11e4-8993-b3e62c9bc8a8","variableMapping":{"size":"from","from":"skippedEdge2","end":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"cd29e9c0-dafb-11e4-8993-bdbc234f2ae3","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:206","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"cd29e9c1-dafb-11e4-8993-1dcde950059d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"cd29e9c2-dafb-11e4-8993-b3a1c656a831","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"cd29e9c3-dafb-11e4-8993-c77c01665f9c","variableMapping":{"strLen":"tmpErr","bLen":"sLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[37,158],"tindex":"cd29e9c4-dafb-11e4-8993-19b80d204f81","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-1},{"failures":[231,232,233,234,235,236,237,365,238,239,240,241,242,243,244,221,245,246,247,222,223,248,249,5,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,458,459,278,279,280,230,281,282,283,284,285,286,287,461,288,289,290,291,473,292,293,294,295,505,506,474,475,476,296,462,297,298,299,36,300,463,301,302,37,303,464,304,305,477,478,479,480,481,482,483,484,485,306,307,308,309,310,38,486,311,312,313,314,467,315,316,317,318,319,320,39,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,40,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,41,488,507,508,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,509,510,511,512,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,513,514,515,489,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"cd29e9c5-dafb-11e4-8993-3b9d6b83578c","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[254,256,257,258,260,262,264,516,517,518,519,520],"tindex":"cd29e9c6-dafb-11e4-8993-3f3d70987fbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[224,228],"tindex":"cd29e9c7-dafb-11e4-8993-83741f3f599d","variableMapping":{"osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"cd29e9c8-dafb-11e4-8993-57bb8d6e7dda","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[369,226],"tindex":"cd2a10d9-dafb-11e4-8993-33f0ba42123e","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"usedBits","speed":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[236,237,521,522,245,246,247,21,25,26,29,230,281,282,283,284,285,286,287,288,289,290,292,296,462,297,298,299,36,300,301,302,37,303,304,305,311,312,313,315,321,323,324,325,326,328,330,331,332,333,334,335,40,336,337,339,341,342,343,344,346,348,349,350,351,352,353,41],"tindex":"cd2a10da-dafb-11e4-8993-8fb065f297d8","variableMapping":{"initLeafSize":"endIndexPlusOne","maxLeafEntries":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[260,264,516,518,519,523,520],"tindex":"cd2a10db-dafb-11e4-8993-1d5bb8ea863d","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"cd2a10dc-dafb-11e4-8993-771f9a3e002d","variableMapping":{"from":"biggestStart","end":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":0},{"failures":[],"tindex":"cd2a10dd-dafb-11e4-8993-69b8bed9c093","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[246,247],"tindex":"cd2a10de-dafb-11e4-8993-434da0f07e8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[254,256,260,262,263,264,13,18,22,31,33,35,298,300,524],"tindex":"cd2a10df-dafb-11e4-8993-ada5d7f4233b","variableMapping":{"low":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:692","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[367,369,377,397,412,433],"tindex":"cd2a10e0-dafb-11e4-8993-5504e765585f","variableMapping":{"prepared":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"cd2a10e1-dafb-11e4-8993-2b0cc74faebe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[241,362],"tindex":"cd2a10e2-dafb-11e4-8993-1764d52ae66f","variableMapping":{"str":"str","i":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:429","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (\"\\n\" + int) + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"cd2a10e3-dafb-11e4-8993-1594b2dd1dd3","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[374,378,383,384,393,394,398,402,408,409,413,419,420,429,430,434],"tindex":"cd2b2254-dafb-11e4-8993-673b7c58f994","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"cd2b2255-dafb-11e4-8993-dfa208071e8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failures":[496,500],"tindex":"cd2b2256-dafb-11e4-8993-cd7b9b9b2a80","variableMapping":{"distance":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"cd2b2257-dafb-11e4-8993-cb4bdbf94918","variableMapping":{"retBucket":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[402,403],"tindex":"cd2b2258-dafb-11e4-8993-f19292fe6eef","variableMapping":{"versionHint":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[494,495,525,321,322,325,326,327,328,329,330,331,334,40,337,339,340,343,344,345,346,347,348,349,352,41,496,497,498,499,501,502,526,527],"tindex":"cd2b2259-dafb-11e4-8993-c7a71ca85168","variableMapping":{"weight":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"cd2b225a-dafb-11e4-8993-6134b66bfca4","variableMapping":{"index":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"cd2b225b-dafb-11e4-8993-41100d8e0d39","variableMapping":{"currentBucket":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[233,238,239,240,241,32,267,273,274,277,278,279,281,284,285,296,297,300,301,302,303,478,479,480,481,482,483,484,485,323,325,341,343,488,42,45,50,71,77,82,84,89,94,115,121,126,128,528,175,178,183,204,210,215,217,529],"tindex":"cd2b225c-dafb-11e4-8993-35a90909ca95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":30,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":267,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":175,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":361,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":318,"com.graphhopper.GraphHopperAPITest.testNoLoad":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":133,"com.graphhopper.reader.OSMReaderTest.testFerry":280,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":243,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":386,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":342,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":462,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":60,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":506,"com.graphhopper.coll.CompressedArrayTest.testCompress":495,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":376,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":129,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":153,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":262,"com.graphhopper.GraphHopperTest.testPrepare":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":165,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":252,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":520,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":384,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":22,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":238,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":377,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":237,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":222,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":369,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":383,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":492,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":20,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":324,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":387,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":526,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":183,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":519,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":265,"com.graphhopper.GraphHopperTest.testLoadOSM":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":331,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":356,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":325,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":417,"com.graphhopper.reader.OSMReaderTest.testSort":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":398,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":246,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":46,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":124,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":89,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":501,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":166,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":273,"com.graphhopper.routing.DijkstraTest.initializationError":453,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":81,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":487,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":208,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":101,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":43,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":50,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":346,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":344,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":463,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":16,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":185,"com.graphhopper.coll.OSMIDMapTest.testGetLong":484,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":64,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":70,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":200,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":524,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":178,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":202,"com.graphhopper.coll.CompressedArrayTest.testCompress2":494,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":402,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":61,"com.graphhopper.GraphHopperAPITest.testLoad":304,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":182,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":355,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":106,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":96,"com.graphhopper.storage.LevelGraphStorageTest.testClone":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":223,"com.graphhopper.reader.OSMReaderTest.testBarriers":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":137,"com.graphhopper.util.GHUtilityTest.testCopy":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":41,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":410,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":379,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":468,"com.graphhopper.routing.PathTest.testFindInstruction":279,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":373,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":52,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":516,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":9,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":242,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":216,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":420,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":125,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":79,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":65,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":431,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":1,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":454,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":189,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":138,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":360,"com.graphhopper.util.InstructionListTest.testWayList2":240,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":332,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":130,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":385,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":508,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":224,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":437,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":248,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":191,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":528,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":147,"com.graphhopper.storage.RAMDirectoryTest.testSynched":513,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":62,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":18,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":95,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":284,"com.graphhopper.routing.AStarTest.initializationError":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":32,"com.graphhopper.coll.OSMIDMapTest.testGet":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":59,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":10,"com.graphhopper.routing.PathBidirRefTest.testExtract":250,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":204,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":391,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":483,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":390,"com.graphhopper.storage.RAMDataAccessTest.testSegments":491,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":40,"com.graphhopper.util.GHUtilityTest.testSort2":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":27,"com.graphhopper.reader.OSMReaderTest.testMain":281,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":179,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":392,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":527,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":399,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":207,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":163,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":194,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":198,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":521,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":219,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":195,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":74,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":419,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":201,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":291,"com.graphhopper.storage.StorablePropertiesTest.testStore":488,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":529,"com.graphhopper.storage.GraphHopperStorageTest.testClone":98,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":447,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":514,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":446,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":170,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":139,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":173,"com.graphhopper.routing.PathTest.testTime":459,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":409,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":217,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":452,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":467,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":152,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":206,"com.graphhopper.reader.OSMReaderTest.testRelation":461,"com.graphhopper.util.GHUtilityTest.testSortDirected":235,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":523,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":434,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":510,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":269,"com.graphhopper.GraphHopperTest.testFootOnly":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":368,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":444,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":489,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":345,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":148,"com.graphhopper.search.NameIndexTest.testCreate":480,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":266,"com.graphhopper.routing.QueryGraphTest.testOneWay":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":469,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":499,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":372,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":505,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":323,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":496,"com.graphhopper.reader.OSMReaderTest.testWithBounds":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":245,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":271,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":154,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":226,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":184,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":432,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":380,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":66,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":94,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":127,"com.graphhopper.util.InstructionListTest.testWayList":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":389,"com.graphhopper.GraphHopperAPITest.testDisconnected179":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":140,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":500,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":135,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":511,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":429,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":396,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":299,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":100,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":263,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":382,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":24,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":261,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":448,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":48,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":34,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":470,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":225,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":88,"com.graphhopper.routing.PathTest.testWayList":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":443,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":362,"com.graphhopper.coll.OSMIDMapTest.testGet2":482,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":35,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":212,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":474,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":395,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":111,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":57,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":99,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":426,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":518,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":403,"com.graphhopper.util.GHUtilityTest.testSort":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":328,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":503,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":394,"com.graphhopper.search.NameIndexTest.testPut":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":86,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":97,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":340,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":315,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":308,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":422,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":249,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":44,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":405,"com.graphhopper.storage.MMapDirectoryTest.testSynched":509,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":438,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":475,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":221,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":359,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":158,"com.graphhopper.routing.PathTest.testFound":458,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":2,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":303,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":214,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":172,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":393,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":63,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":517,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":479,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":143,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":103,"com.graphhopper.util.InstructionListTest.testEmptyList":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":25,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":451,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":440,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":439,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":28,"com.graphhopper.reader.PrinctonReaderTest.testRead":293,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":126,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":343,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":142,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":485,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":497,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":132,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":375,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":427,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":504,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":515,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":228,"com.graphhopper.reader.OSMReaderTest.testFoot":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":156,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":277,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":476,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":329,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":502,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":366,"com.graphhopper.reader.OSMReaderTest.testOneWay":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":330,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":107,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":374,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":490,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":425,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":257,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":525,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":255,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":309,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":146,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":268,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":91,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":473,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":512,"com.graphhopper.routing.PathBidirRefTest.testExtract2":251,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":357,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":12,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":333,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":412,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":477,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":120,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":466,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":415,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":286,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":169,"com.graphhopper.util.SimpleIntDequeTest.testPush":522,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":326,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":123,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":364,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":449,"com.graphhopper.GraphHopperTest.testFootAndCar":36,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":115,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":353,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":450,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":54,"com.graphhopper.storage.StorablePropertiesTest.testLoad":507,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":31,"com.graphhopper.GraphHopperTest.testPrepareOnly":296,"com.graphhopper.GraphHopperTest.testVia":297,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":134,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":288,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":174,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":119,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":241,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":7,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":149,"com.graphhopper.routing.AStarBidirectionTest.initializationError":457,"com.graphhopper.util.AngleCalcTest.testCombined":471,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":381,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":213,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":211,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":45}}]
