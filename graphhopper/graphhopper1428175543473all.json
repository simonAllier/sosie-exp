[{"failures":[0,1,2,3,4,5,6],"tindex":"6307b556-db00-11e4-bed3-d5eef2a10235","variableMapping":{"midLat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[7,8,9,10],"tindex":"6307dc67-db00-11e4-bed3-4fe51267e569","variableMapping":{"edgeId":"i","nextEdge":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"6307dc68-db00-11e4-bed3-e5eb20b9630d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,0,1,31,32,6],"tindex":"6307dc69-db00-11e4-bed3-4daa15567d23","variableMapping":{"high":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"6307dc6a-db00-11e4-bed3-a3ffbbcd4438","variableMapping":{"tmpNode":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[11,12,13,14,33,15,34,35,16,17,18,19,20,21,22,36,37,23,24,25,26,27,38,28,39,40,41,42,43],"tindex":"6307dc6b-db00-11e4-bed3-bb01c9201695","variableMapping":{"size":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[44],"tindex":"6307dc6c-db00-11e4-bed3-59f3a4445f6c","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"6307dc6d-db00-11e4-bed3-c99e0c86a1c2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"6307dc6e-db00-11e4-bed3-c356fb753c85","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[45,46,11,47,48,49,50,51,52],"tindex":"6307dc6f-db00-11e4-bed3-d192db695bd0","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"y","speed":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"63080380-db00-11e4-bed3-331d9468d96c","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"63080381-db00-11e4-bed3-c92891f3140e","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"hash","id":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[53,54,55,56,57,58,59,60,61,45,46,11,62,63,64,65,66,67,68,69,70,12,13,14,33,15,34,35,16,17,71,18,19,20,21,72,22,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,36,37,23,24,25,26,27,289,38,28,39,40,290,291,292,293,294,295,296,297,298,299,300,301,51,52,302,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,8,336,337,338,339,340,341,342,343,344,345,346,347,9,348,10,349,350],"tindex":"63080382-db00-11e4-bed3-97a78d2bcc7b","variableMapping":{"versionHint":"location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"63080383-db00-11e4-bed3-ef305926bad2","variableMapping":{"newAdjIndex":"nodeEntryBytes","newBaseIndex":"level"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"63080384-db00-11e4-bed3-bd1fc721b64d","variableMapping":{"this":"this","fwdDecline":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"63080385-db00-11e4-bed3-79ffafed99fa","variableMapping":{"y1":"nodes","y2":"nodes","x1":"nodes","x2":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-2},{"failures":[13,36,26,39,351,352],"tindex":"63080386-db00-11e4-bed3-cf6e685a231c","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"63082a97-db00-11e4-bed3-3973f1da917e","variableMapping":{"weightLong":"shift","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"63082a98-db00-11e4-bed3-89b0bc2f7c86","variableMapping":{"name":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[352],"tindex":"63082a99-db00-11e4-bed3-c3623ad57ede","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[353,354,355,356,357,358,359,360,361,362,190,198,199,363,219,227,228],"tindex":"63082a9a-db00-11e4-bed3-bf593babf3ec","variableMapping":{"incDist2DSum":"maxLatTmp","fullDist2D":"maxLatTmp","decDist2DSum":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[79,82,90,92,93,94,109,136,364,137,138,139,154,365,366,207,208,209,210,211,212,367,368,369,370,371,372,373,374,375,376,377,378,379,235,380,381,382,383,384,385,386,387,388,389,390,391,392,393,236,394,395,396,397,398,399,400,401,402,403,404,237,238,239,254,405,36,37,23,27,38,28,40],"tindex":"63082a9b-db00-11e4-bed3-e5f12160f873","variableMapping":{"obtained":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"63082a9c-db00-11e4-bed3-d79a114f45a8","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","nextEdge":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[353,354,406,355,407,356,357,360,361,362],"tindex":"63082a9d-db00-11e4-bed3-bb65124bcd0b","variableMapping":{"guess":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-1},{"failures":[408,409,410,411,412,413,414,415,416,417,418],"tindex":"63082a9e-db00-11e4-bed3-7f57ed9ee155","variableMapping":{"byteCount":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[41,42],"tindex":"63082a9f-db00-11e4-bed3-1352fc66d408","variableMapping":{"size":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"63082aa0-db00-11e4-bed3-a78f463ad505","variableMapping":{"high":"flags","len":"forwardBit","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"63082aa1-db00-11e4-bed3-0b4fdc271e78","variableMapping":{"resultOrientation":"angle","orientation":"angle","java.lang.Math.PI":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[419,420,409,421,422,411,423,424,425,414,426,427,417,428],"tindex":"63082aa2-db00-11e4-bed3-bd17adfd779b","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"63082aa3-db00-11e4-bed3-ab6b8f884831","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[57,61,45,46,11,62,63,64,65,66,13,14,15,16,17,18,19,20,22,85,89,93,98,99,100,102,103,106,107,109,114,116,122,124,127,129,130,134,136,138,143,144,145,147,148,151,152,154,159,161,167,169,172,174,175,179,369,370,371,373,374,377,378,235,384,386,392,236,396,398,399,403,238,243,244,245,247,248,251,252,254,259,261,267,269,272,274,275,279,287,36,37,23,24,25,26,27,38,28,39,30,31,429,430,431,292,293,295,296,299,301,51,52,302,303,308,311,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,8,336,337,338,339,340,341,342,343,344,345,346,347,9,348,10,349,350],"tindex":"630851b4-db00-11e4-bed3-fda5064be00f","variableMapping":{"logSize":"forwardBit","java.lang.Integer.MAX_VALUE":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"630851b5-db00-11e4-bed3-f14c8a2a2f56","variableMapping":{"dx":"prevOrNextEdgeId","dy":"prevOrNextEdgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"630851b6-db00-11e4-bed3-6d7d18efece7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"630851b7-db00-11e4-bed3-7789b1c942c1","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"630851b8-db00-11e4-bed3-d70ec56544f2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"630851b9-db00-11e4-bed3-8d2bb6206d04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:88","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType = java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.get(java.lang.String)"},"status":-2},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,364,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,186,205,218,234,369,370,371,372,373,374,375,376,377,378,379,235,380,381,382,383,384,385,386,387,388,389,390,391,392,393,236,394,395,396,397,398,399,400,401,402,403,404,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,36,26,39,40,432,433,291,351,434,435,436,352,437,438,439,29,30,440,441,442,0,1,31,443,429,444,430,445,446,43,32,330,331,332,333,334,335,8,336,337,338,339,340,341,342,343,344,345,346,347,9,348,10,349,350],"tindex":"630851ba-db00-11e4-bed3-cf87a50d2daf","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"630851bb-db00-11e4-bed3-3f4c337d48ad","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"630851bc-db00-11e4-bed3-fd871e0e7484","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[57,61,45,46,62,63,65,66,93,99,100,102,103,107,114,116,122,124,127,129,134,136,138,144,145,147,148,152,159,161,167,169,172,174,179,186,205,218,234,370,371,373,374,378,384,386,392,236,396,398,403,238,244,245,247,248,252,259,261,267,269,272,274,279,287,288,292,293,294,295,296,302,303,308,318,319,320,321,322,324,326,328,329,330,332,333,334,335,8,336,337,338,339,343,344,345,346,9,348,10,349,350],"tindex":"630878cd-db00-11e4-bed3-911787e11cfa","variableMapping":{"encoded":"flags","backwardBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"630878ce-db00-11e4-bed3-b9396f9fbd9f","variableMapping":{"res":"mask","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[287,23,24,25,26,27,28,39,316,318,324,325,329,330,331,332,333,334,335,8,336,337,338,339,341,342,343,344,345,346,347,9,348,10,349,350],"tindex":"630878cf-db00-11e4-bed3-ab1725e13311","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:142","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-1},{"failures":[],"tindex":"630878d0-db00-11e4-bed3-653df0ac8876","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"630878d1-db00-11e4-bed3-251a2890fda5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"630878d2-db00-11e4-bed3-f1a40d119520","variableMapping":{"directionBitMask":"flags","blockByDefault":"forward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-2},{"failures":[],"tindex":"630878d3-db00-11e4-bed3-b9bb99fd76ac","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":0},{"failures":[53,54,55,56,57,58,59,60,61,45,46,11,62,63,64,65,66,67,12,13,14,33,15,34,35,16,17,18,19,20,21,22,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,364,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,365,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,366,204,205,206,207,208,209,210,211,212,213,214,215,216,367,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,368,233,234,369,370,371,372,373,374,375,376,377,378,379,235,380,381,382,383,384,385,386,387,388,389,390,391,392,393,236,394,395,396,397,398,399,400,401,402,403,404,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,287,288,36,37,23,24,25,26,27,38,28,39,40,291,292,293,294,295,296,297,298,299,300,301,51,52,302,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,8,336,337,338,339,340,341,342,343,344,345,346,347,9,348,10,349,350],"tindex":"63089fe4-db00-11e4-bed3-ed13af945435","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"63089fe5-db00-11e4-bed3-6373e38e45b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(4, 1)"},"status":-2},{"failures":[],"tindex":"63089fe6-db00-11e4-bed3-1163b23e0e3e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[447],"tindex":"63089fe7-db00-11e4-bed3-69d56a352346","variableMapping":{"str":"str","lonInt":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:282","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"0\" : \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[410,412,415,418],"tindex":"63089fe8-db00-11e4-bed3-ff7a316a5b48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"63089fe9-db00-11e4-bed3-75e09c4cc6e6","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"63089fea-db00-11e4-bed3-01449a837a0f","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"63089feb-db00-11e4-bed3-4fa80952c0a7","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[22,294,295],"tindex":"63089fec-db00-11e4-bed3-8360f21e1442","variableMapping":{"size":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[353,354,355,356,357,358,359,361,362,190,196,198,199,363,219,225,227,228],"tindex":"63089fed-db00-11e4-bed3-53a015a5019c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[435,448],"tindex":"63089fee-db00-11e4-bed3-077c52f26697","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"63089fef-db00-11e4-bed3-cdcf7cf5efd2","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[12,449],"tindex":"63089ff0-db00-11e4-bed3-35981ce7d0f1","variableMapping":{"initLeafSize":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[450,7,451,452,453,324,328],"tindex":"63089ff1-db00-11e4-bed3-33d969837e6a","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[316,324,325,332,335,8,346,9,10],"tindex":"63089ff2-db00-11e4-bed3-738b0597a3c4","variableMapping":{"edgeId":"skippedEdge1","nextEdge":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"63089ff3-db00-11e4-bed3-79bdef97457a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[22,91,100,108,110,111,113,117,118,125,126,145,153,155,156,158,162,163,170,171,371,379,380,381,383,387,388,394,395,245,253,255,256,258,262,263,270,271,292,294,295],"tindex":"63089ff4-db00-11e4-bed3-416a7b908632","variableMapping":{"oldPriorities":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"63089ff5-db00-11e4-bed3-15d09ca29fcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[454],"tindex":"63089ff6-db00-11e4-bed3-17958a7d71b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[86,88,91,187,189,36,37,23,24,27,38,39,316,317,318,320,324,325,326,327,328,329,330,331,332,333,334,335,8,336,337,338,339,340,341,342,343,344,345,346,347,9,348,10,349,350],"tindex":"6308c707-db00-11e4-bed3-dfc84c9355df","variableMapping":{"index":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:400","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[16,448],"tindex":"6308c708-db00-11e4-bed3-01676eec4a31","variableMapping":{"edgeCount":"encoderCount","lastEdgeIndex":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"6308c709-db00-11e4-bed3-87207fea9f29","variableMapping":{"sacScale":"highwayValue","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"6308c70a-db00-11e4-bed3-95888805c671","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"6308c70b-db00-11e4-bed3-1581d41faf56","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"6308c70c-db00-11e4-bed3-f361d139a437","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[299],"tindex":"6308c70d-db00-11e4-bed3-3536c0582794","variableMapping":{"midLat":"restDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[12,13,16,22,93,98,99,100,106,107,109,122,127,130,134,136,138,143,144,145,151,152,154,167,172,175,179,186,205,218,234,369,370,371,377,378,235,392,396,399,403,238,243,244,245,251,252,254,267,272,275,279,26,434,446,41,431,42,43,331,335,337,340,342,343,350],"tindex":"6308c70e-db00-11e4-bed3-5dfeb7094bf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"6308c70f-db00-11e4-bed3-f76747c194cb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"6308c710-db00-11e4-bed3-3f9f4d7f0b9f","variableMapping":{"dX":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","dY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[420,409,422,411,425,414,417],"tindex":"6308c711-db00-11e4-bed3-7baaef7c5c09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[23,24,27,39,316,318,324,325,329,330,331,332,333,334,335,8,336,337,338,339,341,342,343,344,345,346,9,348,10,349,350],"tindex":"6308c712-db00-11e4-bed3-0958d8df23ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[],"tindex":"6308c713-db00-11e4-bed3-4f625fb954fd","variableMapping":{"allBits":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[12,13,14,15,34,35,17,18,19,20,22,23,24,25,26,39,40,432,455,456,457,458],"tindex":"6308c714-db00-11e4-bed3-fd3ea7851df6","variableMapping":{"directionBitMask":"directionBitMask","blockByDefault":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"6308c715-db00-11e4-bed3-239cdc3391a5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:422","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Location index not initialized\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"6308c716-db00-11e4-bed3-3fb1ae08272c","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"toHeight","distInMeter":"toHeight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"6308c717-db00-11e4-bed3-93c1326caec4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[432],"tindex":"6308c718-db00-11e4-bed3-b5efdc271a52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[11,12,13,14,33,15,34,35,16,17,18,19,20,21,22,36,37,23,24,25,26,27,38,28,39,40,41,42,43],"tindex":"6308ee29-db00-11e4-bed3-0dcb7b16d81a","variableMapping":{"bytePointer":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[],"tindex":"6308ee2a-db00-11e4-bed3-033c1b1cab17","variableMapping":{"mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-2},{"failures":[],"tindex":"6308ee2b-db00-11e4-bed3-e3946edd67ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"6309153c-db00-11e4-bed3-398c8055fdad","variableMapping":{"logger":"this","graph":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:552","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info((((\"graph \" + (com.graphhopper.storage.GraphStorage.toString())) + \", details:\") + (com.graphhopper.storage.GraphStorage.toDetailsString())))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"6309153d-db00-11e4-bed3-6da30ff993fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"6309153e-db00-11e4-bed3-b742329e4e6c","variableMapping":{"points":"pl"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:223","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"6309153f-db00-11e4-bed3-6facec1d52f2","variableMapping":{"instruction":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"63091540-db00-11e4-bed3-e7bc5f376109","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"63091541-db00-11e4-bed3-f5770ab97117","variableMapping":{"resultOrientation":"maxLat","orientation":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[46,11,47,48,49,459,50,51,52],"tindex":"63091542-db00-11e4-bed3-d1ddefc38d06","variableMapping":{"eleDelta":"angle","decEleSum":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[],"tindex":"63091543-db00-11e4-bed3-8da6c45b16eb","variableMapping":{"maxSpeed":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"63091544-db00-11e4-bed3-e5f0687c9ff8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[460,422,461,411,423,456,462,463,464,465,466,412,3,467,468],"tindex":"63091545-db00-11e4-bed3-e3b078f3f3fd","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"63091546-db00-11e4-bed3-8dd688090418","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[12,21,22,31],"tindex":"63091547-db00-11e4-bed3-998b8ad7e4e7","variableMapping":{"s":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"63091548-db00-11e4-bed3-a7ba2b11d184","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":124,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":347,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":6,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":90,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":370,"com.graphhopper.reader.OSMReaderTest.testFerry":12,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":62,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":420,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":193,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":37,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":50,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":153,"com.graphhopper.coll.CompressedArrayTest.testCompress":362,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":466,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":278,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":389,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":254,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":189,"com.graphhopper.util.AngleCalcTest.testOrientation":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":326,"com.graphhopper.GraphHopperTest.testPrepare":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":400,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":316,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":453,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":339,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":412,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":54,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":96,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":190,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":296,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":332,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":222,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":409,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":136,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":358,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":98,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":451,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":329,"com.graphhopper.GraphHopperTest.testLoadOSM":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":223,"com.graphhopper.reader.OSMReaderTest.testSort":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":2,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":139,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":273,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":238,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":401,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":311,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":174,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":123,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":250,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":364,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":413,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":143,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":197,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":195,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":335,"com.graphhopper.coll.OSMIDMapTest.testGetLong":76,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":157,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":163,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":115,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":93,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":117,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":49,"com.graphhopper.coll.CompressedArrayTest.testCompress2":361,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":427,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":154,"com.graphhopper.GraphHopperAPITest.testLoad":287,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":97,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":432,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":255,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":245,"com.graphhopper.storage.LevelGraphStorageTest.testClone":102,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":449,"com.graphhopper.reader.OSMReaderTest.testBarriers":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":144,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":297,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":187,"com.graphhopper.util.GHUtilityTest.testCopy":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":205,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":365,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":467,"com.graphhopper.routing.PathTest.testFindInstruction":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":463,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":145,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":450,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":64,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":436,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":182,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":274,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":259,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":172,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":322,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":431,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":104,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":375,"com.graphhopper.util.InstructionListTest.testWayList2":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":230,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":279,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":408,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":177,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":298,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":106,"com.graphhopper.storage.RAMDirectoryTest.testSynched":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":155,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":8,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":244,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":348,"com.graphhopper.coll.OSMIDMapTest.testGet":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":152,"com.graphhopper.routing.PathBidirRefTest.testExtract":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":352,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":75,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":119,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":422,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.util.GHUtilityTest.testSort2":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":344,"com.graphhopper.reader.OSMReaderTest.testMain":14,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":162,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":29,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":398,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":109,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":113,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":134,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":110,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":424,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":116,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":21,"com.graphhopper.storage.StorablePropertiesTest.testStore":82,"com.graphhopper.storage.GraphHopperStorageTest.testClone":247,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":31,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":0,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":257,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":85,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":376,"com.graphhopper.routing.PathTest.testTime":301,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":132,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":445,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":232,"com.graphhopper.reader.OSMReaderTest.testRelation":71,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":388,"com.graphhopper.util.GHUtilityTest.testSortDirected":59,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":4,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":307,"com.graphhopper.GraphHopperTest.testFootOnly":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":461,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":441,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":81,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":196,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":384,"com.graphhopper.search.NameIndexTest.testCreate":286,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":304,"com.graphhopper.routing.QueryGraphTest.testOneWay":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":368,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":355,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":462,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":221,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":353,"com.graphhopper.reader.OSMReaderTest.testWithBounds":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":176,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":293,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":390,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":437,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":41,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":99,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":468,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":166,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":159,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":243,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":331,"com.graphhopper.util.InstructionListTest.testWayList":45,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":276,"com.graphhopper.GraphHopperAPITest.testDisconnected179":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":377,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":407,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":372,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":282,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":403,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":25,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":249,"com.graphhopper.routing.util.EncodedValueTest.testSwap":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":327,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":267,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":325,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":130,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":443,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":410,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":141,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":366,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":237,"com.graphhopper.routing.PathTest.testWayList":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":440,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":447,"com.graphhopper.coll.OSMIDMapTest.testGet2":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":350,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":127,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":165,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":260,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":150,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":248,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":114,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":198,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":457,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":416,"com.graphhopper.util.GHUtilityTest.testSort":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":393,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":360,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":456,"com.graphhopper.search.NameIndexTest.testPut":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":179,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":246,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":184,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":191,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":212,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":425,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":310,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":299,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":137,"com.graphhopper.storage.MMapDirectoryTest.testSynched":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":458,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":69,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":435,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":160,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":292,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":236,"com.graphhopper.routing.PathTest.testFound":300,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":40,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":43,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":129,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":454,"com.graphhopper.util.AngleCalcTest.testAtan2":48,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":87,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":156,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":285,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":235,"com.graphhopper.util.InstructionListTest.testEmptyList":60,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":342,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":430,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":439,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":3,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":438,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":345,"com.graphhopper.reader.PrinctonReaderTest.testRead":65,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":194,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":151,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":77,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":369,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":161,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":465,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":448,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":80,"com.graphhopper.reader.OSMReaderTest.testFoot":13,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":70,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":392,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":227,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":460,"com.graphhopper.reader.OSMReaderTest.testOneWay":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":228,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":256,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":464,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":265,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":386,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":321,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":363,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":319,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":382,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":306,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":72,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":240,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":405,"com.graphhopper.routing.PathBidirRefTest.testExtract2":303,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":330,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":418,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":283,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":269,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":367,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":428,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":16,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":404,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":224,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":272,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":429,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":264,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":417,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":373,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":446,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":444,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":340,"com.graphhopper.storage.StorablePropertiesTest.testLoad":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":9,"com.graphhopper.GraphHopperTest.testPrepareOnly":36,"com.graphhopper.GraphHopperTest.testVia":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":371,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":18,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":89,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":11,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":268,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":434,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":385,"com.graphhopper.util.AngleCalcTest.testCombined":459,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":32,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":128,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":126,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":138}}]
