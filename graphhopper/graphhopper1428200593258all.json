[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"b6d3890e-db3a-11e4-aa31-97b96bd8c3b1","variableMapping":{"size":"indexDivisor","i":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[0,5,6,7,9,74,75,41,76,77,78,54,79,80,56,57,81,82,83,84,65,66,85,86,87,88,89],"tindex":"b6d3b01f-db3a-11e4-aa31-a7c42d621835","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"b6d3b020-db3a-11e4-aa31-05e9a2f06de8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"b6d3b021-db3a-11e4-aa31-97bca05bd10b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0,90,1,2,3,4,5,91,6,7,8,9,92,93,94,95,96,97,10,11,12,13,98,99,100,14,101,102,103,104,105,15,16,17,106,107,108,109,110,111,112,113,114,115,18,19,20,21,22,116,117,118,119,120,121,122,123,124,23,24,25,26,27,28,29,125,126,127,128,129,130,131,132,133,30,31,32,32,33,33,134,134,34,34,35,35,36,36,135,135,37,37,38,38,136,136,137,137,39,39,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,40,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,41,178,179,180,181,42,182,183,184,76,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,43,201,202,203,204,77,44,205,206,207,208,45,209,46,47,210,211,212,213,214,215,216,48,49,50,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,51,52,53,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,78,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,54,289,290,291,292,293,294,295,296,297,298,299,56,300,301,57,302,303,304,305,58,306,307,308,81,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,59,325,326,327,328,82,60,329,330,331,332,61,333,62,63,334,335,336,337,64,338,339,340,341,342,343,344,65,345,346,66,347,348,349,350,67,351,352,353,85,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,68,370,371,372,373,374,69,375,376,377,378,70,379,71,72,380,381,382,383],"tindex":"b6d3b022-db3a-11e4-aa31-3b6db0aed717","variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[],"tindex":"b6d3d733-db3a-11e4-aa31-3d6966338616","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[1,8,146,149,150,157,159,160,162],"tindex":"b6d3d734-db3a-11e4-aa31-b17e147fc6d4","variableMapping":{"segmentsToMap":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"b6d3d735-db3a-11e4-aa31-dfedeec7c476","variableMapping":{"length":"bufferIndex","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:85","type":"CtIfImpl","sourcecode":"if ((byte[][].int) > 0)\n    throw new java.lang.IllegalThreadStateException(\"already created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":0},{"failures":[0,90,1,2,3,4,5,6,7,8,9,10,11,12,13,14,105,15,16,17,107,108,109,114,115,18,19,20,21,22,116,117,119,120,121,122,124,23,24,25,26,27,28,29,30,31,32,33,34,35,36,135,37,38,137,39,40,41,178,42,43,44,45,46,47,48,49,50,237,238,239,240,242,51,52,53,54,384,385,55,79,386,387,388,80,389,390,391,392,56,57,302,58,59,60,61,62,63,64,65,66,347,67,68,69,70,71,72,393,394,73,86,395,396,397,87,398,399,400,401,402],"tindex":"b6d3d736-db3a-11e4-aa31-e38803b4d41c","variableMapping":{"red":"segmentsToCreate","green":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"b6d3d737-db3a-11e4-aa31-5ff277d50cf8","variableMapping":{"flags":"directionBitMask","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[29],"tindex":"b6d3d738-db3a-11e4-aa31-75e1e2b4de15","variableMapping":{"allIter":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-1},{"failures":[403,404,405,406,407],"tindex":"b6d3d739-db3a-11e4-aa31-6fa806f4642b","variableMapping":{"high":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"b6d3d73a-db3a-11e4-aa31-51062db38930","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"b6d3d73b-db3a-11e4-aa31-51d36847efae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[140,40,176],"tindex":"b6d3d73c-db3a-11e4-aa31-45531358874c","variableMapping":{"from":"to","end":"skippedEdge2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"b6d3d73d-db3a-11e4-aa31-1105ad0332ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[115,124,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427],"tindex":"b6d3fe4e-db3a-11e4-aa31-11561ab8760a","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"b6d3fe4f-db3a-11e4-aa31-e3d19bfddcdc","variableMapping":{"radiusInMeter":"minLatTmp","com.graphhopper.util.DistanceCalcEarth.C":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[29,428,133,140,150],"tindex":"b6d3fe50-db3a-11e4-aa31-3b9934602b33","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[413,414],"tindex":"b6d3fe51-db3a-11e4-aa31-cb5ef09772d3","variableMapping":{"logSize":"relBitMask","java.lang.Integer.MAX_VALUE":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[0,90,1,2,3,4,5,6,7,8,9,93,94,95,96,97,10,11,12,13,98,99,100,14,101,102,103,104,106,112,113,114,115,18,19,20,21,22,116,117,119,120,121,122,124,28,29,125,126,127,128,129,130,131,132,133,30,31,32,32,33,33,134,134,34,34,35,35,36,36,135,135,37,37,38,38,136,136,137,137,39,39,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,40,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,41,178,179,180,42,182,183,184,76,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,43,201,202,203,204,77,44,205,206,207,208,45,209,46,47,210,211,212,213,214,215,216,48,49,50,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,234,235,236,237,238,239,240,242,243,244,245,246,248,249,250,251,51,52,53,252,253,254,255,256,257,258,259,260,262,263,274,54,56,301,57,302,303,304,58,306,307,308,81,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,59,325,326,327,328,82,60,329,330,331,332,61,333,62,63,334,335,429,83,430,431,432,433,434,435,436,340,341,342,343,344,65,345,346,66,347,348,349,67,351,352,353,85,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,68,370,371,372,373,374,69,375,376,377,378,70,379,71,72,380,381],"tindex":"b6d3fe52-db3a-11e4-aa31-f73f7cbf99f8","variableMapping":{"currentBucket":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"b6d3fe53-db3a-11e4-aa31-bd78d8957faa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":-2},{"failures":[],"tindex":"b6d3fe54-db3a-11e4-aa31-0305a12f6f52","variableMapping":{"length":"key","factor":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[428],"tindex":"b6d3fe55-db3a-11e4-aa31-a1b84383e470","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"b6d3fe56-db3a-11e4-aa31-c9d67ee15258","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":0},{"failures":[116,408,409,437,410,411,412,413,414,428,415,416,417,418,419,420,421,422,423,424,438,425,426,427],"tindex":"b6d3fe57-db3a-11e4-aa31-a1dc4633b407","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"b6d42568-db3a-11e4-aa31-3384b1a16d96","variableMapping":{"newAdjIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","newBaseIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-2},{"failures":[],"tindex":"b6d42569-db3a-11e4-aa31-33987df975d8","variableMapping":{"byteCount":"internalFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"b6d4256a-db3a-11e4-aa31-4b440dfc7403","variableMapping":{"high":"hash","guess":"hash","low":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":0},{"failures":[],"tindex":"b6d4256b-db3a-11e4-aa31-d56d569661f6","variableMapping":{"locs":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":0},{"failures":[1,93,124,439,440,441,442,35,37,141,153,154,162,165,171,173,176,182,183,196,203,206,210,265,266,279,287,291,298,306,307,320,327,330,334,351,352,365,372,376,380],"tindex":"b6d4256c-db3a-11e4-aa31-b563f01eae41","variableMapping":{"directionBitMask":"backwardBit","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"b6d4256d-db3a-11e4-aa31-3fbf3cbe6ad3","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[140,141,142,145,146,157,159,40,160,162,163,171,172],"tindex":"b6d4256e-db3a-11e4-aa31-4b640476114b","variableMapping":{"iter":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-1},{"failures":[],"tindex":"b6d4256f-db3a-11e4-aa31-e58b6d22dc4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"b6d42570-db3a-11e4-aa31-6353f4f04d62","variableMapping":{"edgeId":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[],"tindex":"b6d42571-db3a-11e4-aa31-2bd65cd2a00e","variableMapping":{"this":"em"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[],"tindex":"b6d4c1b2-db3a-11e4-aa31-1347ccf3c6f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"b6d4c1b3-db3a-11e4-aa31-5937db48b351","variableMapping":{"r":"fwdFaster","x":"fwdFaster","absY":"fwdFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"b6d4c1b4-db3a-11e4-aa31-27dfd0eec80e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[20,119,443,403,404,405,406,407],"tindex":"b6d4c1b5-db3a-11e4-aa31-21447a908dcb","variableMapping":{"elevation":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[0,90,1,2,3,4,5,6,7,8,9,93,94,95,96,444,445,115,18,19,20,21,22,116,117,119,120,121,124,127,128,129,149,153,154,157,212,213,215,48,49,50,217,219,221,222,223,224,225,227,228,237,238,239,242,250,51,52,53,252,254,256,257,258,259,260,262,263],"tindex":"b6d5ac16-db3a-11e4-aa31-b9ef275ef894","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"b6d5ac17-db3a-11e4-aa31-8739d58ad921","variableMapping":{"segmentsToMap":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":0},{"failures":[446],"tindex":"b6d5ac18-db3a-11e4-aa31-a96a80181224","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:433","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[],"tindex":"b6d5ac19-db3a-11e4-aa31-e138392f4b38","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"b6d5ac1a-db3a-11e4-aa31-4ba706d62541","variableMapping":{"edgeId":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"b6d5ac1b-db3a-11e4-aa31-618bfd2da4a9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"b6d5d32c-db3a-11e4-aa31-0f94786d3abb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"b6d5d32d-db3a-11e4-aa31-491613854fd5","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"frontIndex","speed":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[447,448,449,450,451,452,453,454,455,215,218,220,221,250,253,255,256],"tindex":"b6d5d32e-db3a-11e4-aa31-bba3929bee91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[456,457,458,459],"tindex":"b6d5d32f-db3a-11e4-aa31-3d7c3b81c20f","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","footTag":"bikeTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"b6d5d330-db3a-11e4-aa31-1727222fd1bf","variableMapping":{"nodeThis":"start","nextEdgeOther":"start","nodeOther":"start","nextEdge":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":0},{"failures":[0,90,1,2,3,4,5,6,7,8,9,10,11,12,13,14,105,15,16,17,107,108,109,110,111,114,115,18,19,20,21,22,116,117,119,120,121,122,124,23,24,25,26,27,28,29,30,31,32,33,34,35,36,135,37,38,137,39,40,460,461,462,463,464,41,178,180,42,182,183,184,76,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,43,201,202,203,204,77,44,205,206,207,208,45,209,46,47,210,211,48,49,50,221,226,233,237,238,239,240,241,242,247,51,52,53,256,261,264,265,266,267,78,268,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,54,289,290,291,292,293,294,295,296,297,298,299,385,55,465,79,466,387,389,390,391,392,56,300,57,302,304,58,306,307,308,81,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,59,325,326,327,328,82,60,329,330,331,332,61,333,62,63,334,335,429,467,83,430,431,433,434,435,436,64,340,341,343,344,65,345,66,347,349,67,351,352,353,85,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,68,370,371,372,373,374,69,375,376,377,378,70,379,71,72,380,381,394,73,468,86,469,396,398,399,400,401,402,470,471,472,473,88,474,475,476,477,478],"tindex":"b6d5d331-db3a-11e4-aa31-4d768963152d","variableMapping":{"latSize":"segmentSizeInBytes","size":"segmentSizeInBytes","this":"this","lonSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:146","type":"CtAssignmentImpl","sourcecode":"int = int = java.lang.Math.((int)(java.lang.Math.sqrt(int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[403,404,405,406,407],"tindex":"b6d5d332-db3a-11e4-aa31-71ac3d7dc3c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"b6d5d333-db3a-11e4-aa31-a7719f0fd839","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"b6d5d334-db3a-11e4-aa31-850039d49092","variableMapping":{"lastKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"b6d5d335-db3a-11e4-aa31-fd43fde0ad99","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"minutes","nextEdge":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-2},{"failures":[413,420],"tindex":"b6d5d336-db3a-11e4-aa31-c7e2feda7094","variableMapping":{"currentEntry":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"b6d5d337-db3a-11e4-aa31-dfde612df735","variableMapping":{"minLatInit":"minLon","maxLonInit":"maxLat","minLonInit":"minLat","bounds":"this","maxLatInit":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[124,126,128,129,183,190,192,193,195,199,200,44,205,266,273,275,276,278,282,283,289,290,307,314,316,317,319,323,324,60,329,345,352,359,361,362,364,368,369,69,375],"tindex":"b6d5fa48-db3a-11e4-aa31-83754cfed759","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[],"tindex":"b6d5fa49-db3a-11e4-aa31-952efa35c9a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"b6d5fa4a-db3a-11e4-aa31-b7ab4c99f36f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[409,410,411,415,416,417,420,421,424,425,426],"tindex":"b6d5fa4b-db3a-11e4-aa31-878f82899ee4","variableMapping":{"str":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[479],"tindex":"b6d5fa4c-db3a-11e4-aa31-e3ce80e42631","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[447,448,149,449,450,480,451,452,453,481,454,482,455,215,218,220,221,250,253,255,256],"tindex":"b6d5fa4d-db3a-11e4-aa31-e5526fb10a78","variableMapping":{"periodicUpdates":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"b6d5fa4e-db3a-11e4-aa31-f531000c9275","variableMapping":{"currentBucket":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[483,484,485],"tindex":"b6d5fa4f-db3a-11e4-aa31-8dfc95d38c0a","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[0,90,1,2,3,4,5,6,7,8,9,93,94,95,96,97,10,11,12,13,98,99,100,14,101,102,103,104,106,112,113,114,115,18,19,20,21,22,116,117,119,120,121,122,124,28,29,125,126,127,128,129,130,131,132,133,30,31,32,32,33,33,134,134,34,34,35,35,36,36,135,135,37,37,38,38,136,136,137,137,39,39,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,40,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,41,178,179,180,42,182,183,184,76,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,43,201,202,203,204,77,44,205,206,207,208,45,209,46,47,210,211,212,213,214,215,216,48,49,50,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,234,235,236,237,238,239,240,242,243,244,245,246,248,249,250,251,51,52,53,252,253,254,255,256,257,258,259,260,262,263,274,54,56,301,57,302,303,304,58,306,307,308,81,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,59,325,326,327,328,82,60,329,330,331,332,61,333,62,63,334,335,486,429,83,430,431,432,433,434,436,340,341,342,343,344,65,345,346,66,347,348,349,67,351,352,353,85,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,68,370,371,372,373,374,69,375,376,377,378,70,379,71,72,380,381],"tindex":"b6d5fa50-db3a-11e4-aa31-9b41bc56e4d6","variableMapping":{"high":"segmentSizeIntsPower","guess":"segmentSizeIntsPower","low":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[447,448,450,451,452,453,454,215,220,221,250,255,256],"tindex":"b6d5fa51-db3a-11e4-aa31-2f201980c848","variableMapping":{"factor":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[443,487,446,439,488,489,440,490,491,441,483,492,493,494,495,496,28,29,484,497,408,498,409,437,410,499,500,403,501,502,503,504,505,506,411,507,456,508,412,509,404,510,125,511,442,512,513,514,515,516,517,415,416,405,518,519,520,521,522,523,417,524,457,525,418,526,419,527,420,528,406,529,530,531,532,533,421,534,458,422,485,535,423,536,424,438,425,537,538,407,539,540,541,542,543,544,426,545,459,546,427],"tindex":"b6d62162-db3a-11e4-aa31-09800e7849de","variableMapping":{"time":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"b6d62163-db3a-11e4-aa31-2bfbed865bb9","variableMapping":{"from":"edgeId","end":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"b6d62164-db3a-11e4-aa31-8d47aceaba0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"b6d62165-db3a-11e4-aa31-5fd74227eb30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[0,1,5,6,7,8,9,10,11,12,13,15,16,17,18,21,22,23,24,26,27,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,48,50,238,239,240,242,51,53,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,73],"tindex":"b6d62166-db3a-11e4-aa31-15556b907af3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"b6d62167-db3a-11e4-aa31-d925d79d3c6d","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"b6d62168-db3a-11e4-aa31-d97ec95ef62e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[115,124,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427],"tindex":"b6d62169-db3a-11e4-aa31-c3fc66ec4307","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"b6d6216a-db3a-11e4-aa31-e1623fbcae9c","variableMapping":{"delta_lat":"minLonTmp","r_lat":"minLonTmp","a_lat":"minLonTmp","delta_lon":"minLonTmp","r_lon":"minLonTmp","a_lon":"minLonTmp","norm":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"b6d6216b-db3a-11e4-aa31-db60bce217bb","variableMapping":{"d":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[0,90,1,2,3,4,5,6,7,8,9,114,115,18,19,20,21,22,116,117,119,120,121,122,124,336,547,382,548],"tindex":"b6d6216c-db3a-11e4-aa31-21377ffc9a9f","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"b6d6216d-db3a-11e4-aa31-f30e5f78bb38","variableMapping":{"r":"com.graphhopper.util.AngleCalc.PI_4","x":"com.graphhopper.util.AngleCalc.PI_4","absY":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"b6d6216e-db3a-11e4-aa31-c951bc1dd2dd","variableMapping":{"size":"encoderCount","capacity":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"b6d6487f-db3a-11e4-aa31-ff9ab03dd244","variableMapping":{"pointIndex":"maxTurnCosts","index":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[],"tindex":"b6d64880-db3a-11e4-aa31-59ba7d45f563","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":0},{"failures":[126,130,131],"tindex":"b6d64881-db3a-11e4-aa31-b5d77eb7591a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:97","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[],"tindex":"b6d64882-db3a-11e4-aa31-810ff7a1beb7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[483,484,485],"tindex":"b6d64883-db3a-11e4-aa31-e3fd76e2da63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[549],"tindex":"b6d64884-db3a-11e4-aa31-61afcb0b5c18","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"b6d64885-db3a-11e4-aa31-b986853cb79a","variableMapping":{"a":"empty","approx":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[],"tindex":"b6d64886-db3a-11e4-aa31-87713ff55acb","variableMapping":{"lastIndex":"hash","fromIndex":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"b6d64887-db3a-11e4-aa31-65c65056d3fc","variableMapping":{"i":"length","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[54],"tindex":"b6d64888-db3a-11e4-aa31-e5bd4bf61dec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"b6d64889-db3a-11e4-aa31-b3e51427373f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"b6d6488a-db3a-11e4-aa31-59b878d28b7f","variableMapping":{"shiftSum":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":0},{"failures":[90,2,3,4,5,6,7,93,10,11,12,98,115,18,20,116,117,119,121,494,125,126,127,128,129,130,30,142,143,146,150,152,155,157,159,40,160,162,165,166,167,168,169,171,173,175,41,185,191,196,198,77,206,208,210,228,235,249,263,268,274,279,281,54,291,293,298,56,57,309,315,320,322,82,330,332,334,66,354,360,365,367,374,376,378,380],"tindex":"b6d6488b-db3a-11e4-aa31-758778f5cbc8","variableMapping":{"high":"dir","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"b6d6488c-db3a-11e4-aa31-470ab75cec12","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[413,414,428,415,416,417,418,419,420,421,422],"tindex":"b6d6488d-db3a-11e4-aa31-c5616d8812d6","variableMapping":{"this":"relationCodeEncoder","value":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"b6d6488e-db3a-11e4-aa31-c540aaaa99d1","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"b6d6488f-db3a-11e4-aa31-65b48422ad80","variableMapping":{"key":"com.graphhopper.routing.util.EncodingManager.BIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"b6d66fa0-db3a-11e4-aa31-2de2f2125746","variableMapping":{"high":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"b6d66fa1-db3a-11e4-aa31-a5be19823f1e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":374,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":158,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":265,"com.graphhopper.reader.OSMReaderTest.testFerry":114,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":103,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":438,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":528,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":49,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":90,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":412,"com.graphhopper.storage.MMapDataAccessTest.testSegments":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":314,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":111,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":393,"com.graphhopper.coll.CompressedArrayTest.testCompress":448,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":533,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":167,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":284,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":214,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":394,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":388,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":173,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":163,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":536,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":150,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":236,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":421,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":96,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":130,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":535,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":148,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":190,"com.graphhopper.coll.BitSetImplTest.testCopy":479,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":52,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":425,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":56,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":474,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":481,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":176,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":257,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":53,"com.graphhopper.reader.OSMReaderTest.testSort":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":545,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":302,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":395,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":207,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":41,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":296,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":37,"com.graphhopper.storage.RAMDataAccessTest.testHeader":80,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":106,"com.graphhopper.storage.MMapDataAccessTest.testHeader":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":332,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":402,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":373,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":75,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":187,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":300,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":58,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":359,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":524,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":219,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":217,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":145,"com.graphhopper.coll.OSMIDMapTest.testGetLong":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":144,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":352,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":324,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":366,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":66,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":368,"com.graphhopper.coll.CompressedArrayTest.testCompress2":447,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":200,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":517,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":315,"com.graphhopper.GraphHopperAPITest.testLoad":93,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":350,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":430,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":404,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":192,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":183,"com.graphhopper.storage.LevelGraphStorageTest.testClone":85,"com.graphhopper.reader.OSMReaderTest.testBarriers":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":306,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":499,"com.graphhopper.util.GHUtilityTest.testCopy":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":268,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":228,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":522,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":458,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":391,"com.graphhopper.routing.PathTest.testFindInstruction":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":530,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":307,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":98,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":513,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":379,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":498,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":208,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":196,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":465,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":319,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":505,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":355,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":269,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":475,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":436,"com.graphhopper.util.InstructionListTest.testWayList2":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":508,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":258,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":210,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":424,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":28,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":178,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":357,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":466,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":537,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":146,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":182,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":21,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":40,"com.graphhopper.coll.OSMIDMapTest.testGet":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":313,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":74,"com.graphhopper.routing.PathBidirRefTest.testExtract":138,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":514,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":25,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":539,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":462,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":223,"com.graphhopper.storage.RAMDataAccessTest.testCopy":79,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":419,"com.graphhopper.storage.RAMDataAccessTest.testSegments":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.util.GHUtilityTest.testSort2":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":155,"com.graphhopper.reader.OSMReaderTest.testMain":18,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":540,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":454,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":224,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":459,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":372,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":303,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":360,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":364,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":444,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":380,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":35,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":327,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":497,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":367,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":122,"com.graphhopper.storage.StorablePropertiesTest.testStore":64,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":55,"com.graphhopper.storage.GraphHopperStorageTest.testClone":76,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":441,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":336,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":194,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":490,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":340,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":270,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":343,"com.graphhopper.routing.PathTest.testTime":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":521,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":71,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":495,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":260,"com.graphhopper.reader.OSMReaderTest.testRelation":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":283,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":371,"com.graphhopper.util.GHUtilityTest.testSortDirected":102,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":549,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":507,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":400,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":34,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":527,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":489,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":218,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":414,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":484,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":279,"com.graphhopper.search.NameIndexTest.testCreate":17,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":389,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":32,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":84,"com.graphhopper.routing.QueryGraphTest.testOneWay":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":261,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":451,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":529,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":51,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":449,"com.graphhopper.reader.OSMReaderTest.testWithBounds":121,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":392,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":461,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":456,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":515,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":413,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":351,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":348,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":516,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":506,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":422,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":326,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":320,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":42,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":141,"com.graphhopper.util.InstructionListTest.testWayList":11,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":538,"com.graphhopper.GraphHopperAPITest.testDisconnected179":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":271,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":250,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":477,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":267,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":548,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":503,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":282,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":486,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":544,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":186,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":174,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":485,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":172,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":483,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":518,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":304,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":161,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":226,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":432,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":467,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":427,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":177,"com.graphhopper.routing.PathTest.testWayList":30,"com.graphhopper.storage.MMapDataAccessTest.testCopy":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":519,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":488,"com.graphhopper.coll.OSMIDMapTest.testGet2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":162,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":87,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":376,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":543,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":197,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":510,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":220,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":221,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":386,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":415,"com.graphhopper.util.GHUtilityTest.testSort":101,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":472,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":288,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":542,"com.graphhopper.search.NameIndexTest.testPut":15,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":216,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":232,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":242,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":245,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":437,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":243,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":301,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":405,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":512,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":321,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":126,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":435,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":54,"com.graphhopper.routing.PathTest.testFound":132,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":9,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":428,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":378,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":468,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":541,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":317,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":16,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":460,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":274,"com.graphhopper.util.InstructionListTest.testEmptyList":97,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":189,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":384,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":149,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":523,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":494,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":487,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":443,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":534,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":156,"com.graphhopper.reader.PrinctonReaderTest.testRead":112,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":45,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":478,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":50,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":312,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":273,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":264,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":501,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":532,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":470,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":547,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":520,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":408,"com.graphhopper.reader.OSMReaderTest.testFoot":115,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":39,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":287,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":255,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":453,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":526,"com.graphhopper.reader.OSMReaderTest.testOneWay":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":256,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":193,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":205,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":531,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":399,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":500,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":168,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":166,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":246,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":125,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":277,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":134,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":123,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":179,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":383,"com.graphhopper.routing.PathBidirRefTest.testExtract2":139,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":417,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":105,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":77,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":247,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":525,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":299,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":511,"com.graphhopper.util.SimpleIntDequeTest.testPush":445,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":171,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":504,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":252,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":206,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":356,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":492,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":43,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":227,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":78,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":509,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":471,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":493,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":81,"com.graphhopper.storage.StorablePropertiesTest.testLoad":338,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":159,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":546,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":266,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":119,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":344,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":13,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":204,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":442,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":280,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":496,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":377,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":375,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":57}}]
