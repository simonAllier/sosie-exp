[{"failures":[0,1],"tindex":"6a60d5ff-dbfc-11e4-b8fe-b9a5850cc396","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"6a625ca0-dbfc-11e4-b8fe-753fe606973e","variableMapping":{"freeIndex":"maxTurnCosts","currentIndex":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[],"tindex":"6a625ca1-dbfc-11e4-b8fe-834e2746cf0b","variableMapping":{"nodeFlags":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":-2},{"failures":[],"tindex":"6a625ca2-dbfc-11e4-b8fe-85c7f6f941fe","variableMapping":{"factor":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,0,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288],"tindex":"6a62aac3-dbfc-11e4-b8fe-65bd963b5f0d","variableMapping":{"high":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-1},{"failures":[2,8,9,10,12,289,166,204,205,243,290],"tindex":"6a62aac4-dbfc-11e4-b8fe-83f7588b3c18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[159],"tindex":"6a62aac5-dbfc-11e4-b8fe-6752f299158b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"6a62aac6-dbfc-11e4-b8fe-2f7b6078fce9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[2,3,4,5,6,8,9,10,11,0,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,34,36,37,40,41,52,53,88,94,95,96,100,291,292,293,294,122,123,124,135,136,137,138,139,145,146,147,166,168,188,193,198,201,295,204,205,207,227,232,237,240,243,245,265,270,275,278,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"tindex":"6a62aac7-dbfc-11e4-b8fe-fd4e338023ea","variableMapping":{"segmentSizeInBytes":"segmentSizePower","length":"segmentSizePower","index":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"6a62aac8-dbfc-11e4-b8fe-434e607fe80f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"6a62aac9-dbfc-11e4-b8fe-fdb39ba026a6","variableMapping":{"bytePos":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[41,96,97,310,311,312,313],"tindex":"6a62d1da-dbfc-11e4-b8fe-8fcf30254b26","variableMapping":{"r":"r","x":"x","absY":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-1},{"failures":[],"tindex":"6a62d1db-dbfc-11e4-b8fe-ef17b6a4bd29","variableMapping":{"fromX":"minLon","toX":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"6a62d1dc-dbfc-11e4-b8fe-a92486ad65cc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[161,165],"tindex":"6a62d1dd-dbfc-11e4-b8fe-d5e6f0a53b16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[2,3,4,5,6,7,8,314,9,10,11,12,315,13,14,0,15,16,17,18,19,20,21,22,23,24,25,26,27,316,29,30,31,32,33,34,35,36,37,38,39,40,317,318,319,320,321,41,42,322,43,44,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,45,343,344,345,346,347,348,349,350,351,352,353,1,354,355,356,357,358,359,360,361,362,363,364,365,46,47,48,49,50,51,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,52,53,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,54,55,423,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,424,94,95,96,97,98,99,100,101,425,102,103,104,105,106,107,426,108,109,110,111,427,112,113,114,115,116,117,428,118,119,120,121,122,123,124,125,429,126,127,128,129,130,131,132,430,133,134,135,136,137,138,431,139,140,141,142,143,144,145,146,147,148,432,149,150,151,152,153,154,155,433,156,157,434,435,436,437,438,439,440,441,442,443,444,158,445,446,447,448,449,450,451,452,453,454,455,456,457,458,159,459,460,461,462,463,464,465,466,467,468,469,160,161,162,163,164,289,165,470,166,471,472,167,473,168,169,170,171,172,173,174,175,176,177,178,179,180,181,474,182,183,184,185,186,187,188,189,190,191,475,192,193,194,195,196,197,198,199,200,201,202,203,204,476,477,205,478,479,206,480,207,208,209,210,211,212,213,214,215,216,217,218,219,220,481,221,222,223,224,225,226,227,228,229,230,482,231,232,233,234,235,236,237,238,239,240,241,242,483,243,484,485,244,486,245,246,247,248,249,250,251,252,253,254,255,256,257,258,487,259,260,261,262,263,264,265,266,267,268,488,269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"6a62f8ee-dbfc-11e4-b8fe-4dbdfd91507f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[489,360,388,409],"tindex":"6a62f8ef-dbfc-11e4-b8fe-b3fbbb27ba50","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"6a62f8f0-dbfc-11e4-b8fe-5d8cd649e7f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"6a62f8f1-dbfc-11e4-b8fe-35891a84a8f2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[339,370,400,421],"tindex":"6a62f8f2-dbfc-11e4-b8fe-11ad7f5d632d","variableMapping":{"size":"speed","hash":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"6a632003-dbfc-11e4-b8fe-45574abda597","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"6a632004-dbfc-11e4-b8fe-a586669ea950","variableMapping":{"shift":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"6a632005-dbfc-11e4-b8fe-25f007ef63cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[],"tindex":"6a632006-dbfc-11e4-b8fe-45ee6241b6af","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[490,491,492,493,494,495,496,497,498,499,121,144],"tindex":"6a632007-dbfc-11e4-b8fe-b10e48ca3d06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"6a632008-dbfc-11e4-b8fe-153c6d2497e0","variableMapping":{"flags":"hash","tmpValue":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[4,5,7,8,12,15,18,20,21,23,47,48,49,81,82,85,500,92,93,106,107,122,124,126,129,130,131,132,133,136,137,139,140,141,145,147,149,152,153,154,155,156],"tindex":"6a632009-dbfc-11e4-b8fe-bf6f1124bb48","variableMapping":{"maxLeafEntries":"v"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"6a63200a-dbfc-11e4-b8fe-0ddc586af705","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"6a63200b-dbfc-11e4-b8fe-295aa030236c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[],"tindex":"6a63200c-dbfc-11e4-b8fe-bd98b0bc12c7","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"6a63471d-dbfc-11e4-b8fe-8d18d0266e59","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[4,7,12,15,20,21,1],"tindex":"6a63471e-dbfc-11e4-b8fe-f13c1031ffe1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[46,51],"tindex":"6a63471f-dbfc-11e4-b8fe-bfbb794b95ca","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[],"tindex":"6a634720-dbfc-11e4-b8fe-2bd7071e6310","variableMapping":{"i":"dLon","child":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"6a634721-dbfc-11e4-b8fe-1fec0ed1d53a","variableMapping":{"towerNodeDistance":"eleDelta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[330,332,336,340,368,372,377,380,391,393,397,401,412,414,418,422],"tindex":"6a634722-dbfc-11e4-b8fe-796289244e0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:449","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"6a634723-dbfc-11e4-b8fe-2f169f1154a8","variableMapping":{"need":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6a634724-dbfc-11e4-b8fe-7ddd5dae4592","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"6a634725-dbfc-11e4-b8fe-ed84b728f7cb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[7,11,15,501,343,346],"tindex":"6a634726-dbfc-11e4-b8fe-118b9f9e6055","variableMapping":{"oldValueIndex":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"6a636e37-dbfc-11e4-b8fe-0b2da9ce7b37","variableMapping":{"keyIndex":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-2},{"failures":[],"tindex":"6a636e38-dbfc-11e4-b8fe-13d4d675dee4","variableMapping":{"retBucket":"bitsForEdgeFlags","bucketSize":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[],"tindex":"6a636e39-dbfc-11e4-b8fe-79cf74017815","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"6a636e3a-dbfc-11e4-b8fe-cd2de6564435","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[2,4,5,6,7,8,9,10,11,12,13,14,0,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,424,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,429,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,432,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,470,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,474,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,477,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,481,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,483,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,487,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,502,284,285,286,287,288],"tindex":"6a64318b-dbfc-11e4-b8fe-81e841f46b1a","variableMapping":{"maxLeafEntries":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"6a64318c-dbfc-11e4-b8fe-e136649a8907","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:244","type":"CtLocalVariableImpl","sourcecode":"java.util.List<gnu.trove.list.array.TIntArrayList> java.util.List<gnu.trove.list.array.TIntArrayList> = new com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm(com.graphhopper.storage.GraphStorage , com.graphhopper.routing.util.EdgeFilter).findComponents()"},"status":-2},{"failures":[],"tindex":"6a65b82d-dbfc-11e4-b8fe-9fcbd5c9a687","variableMapping":{"byteCount":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,503,33,36,320,321,41,42,43,44,323,324,501,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,45,343,344,345,346,347,348,349,350,351,352,353,1,354,355,356,357,358,359,360,361,362,363,364,365,46,47,48,49,50,51,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,52,53,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,54,55,423,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,424,94,95,96,97,100,103,104,105,106,107,113,119,134,141,157,434,435,436,437,438,439,440,441,442,443,444,158,445,446,447,448,449,450,451,452,453,454,455,456,457,458,159,459,460,461,462,463,464,465,466,467,468,469,160,161,162,163,164,289,165,470,166,471,472,167,473,168,169,170,171,172,173,174,175,176,177,178,179,180,181,474,182,183,184,185,186,187,188,189,190,191,475,192,193,194,195,196,197,198,199,200,201,202,203,204,476,477,205,478,479,206,480,207,208,209,210,211,212,213,214,215,216,217,218,219,220,481,221,222,223,224,225,226,227,228,229,230,482,231,232,233,234,235,236,237,238,239,240,241,242,483,243,484,485,244,486,245,246,247,248,249,250,251,252,253,254,255,256,257,258,487,259,260,261,262,263,264,265,266,267,268,488,269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"6a66c99e-dbfc-11e4-b8fe-abd1910168ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:176","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[],"tindex":"6a66c99f-dbfc-11e4-b8fe-69aec04727a3","variableMapping":{"fwdFaster":"angle","incDist2DSum":"angle","fwdSlower":"angle","fullDist2D":"com.graphhopper.util.AngleCalc.PI3_4","restDist2D":"angle","speed":"angle","decDist2DSum":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"6a66f0b0-dbfc-11e4-b8fe-8786b361b4be","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[501,343,346],"tindex":"6a66f0b1-dbfc-11e4-b8fe-939e73c5a653","variableMapping":{"high":"encoded","guess":"encoded","low":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"6a66f0b2-dbfc-11e4-b8fe-9503d0675f39","variableMapping":{"bytePos":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[327,328,336,369,377,385,397,406,418],"tindex":"6a66f0b3-dbfc-11e4-b8fe-fb475b89b4ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-1},{"failures":[],"tindex":"6a66f0b4-dbfc-11e4-b8fe-5581c38b7089","variableMapping":{"fwdFaster":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"6a66f0b5-dbfc-11e4-b8fe-9f1ac9c8c97c","variableMapping":{"intVal":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[2,4,5,6,7,8,9,10,11,12,16,17,18,19,20,504,505,506,29,30,32,33,34,36,37,40,41,42,52,53,88,94,95,96,97,100,291,292,507,293,294,122,123,124,145,146,147,159,289,166,168,188,193,198,200,201,204,205,207,227,232,237,239,240,243,245,265,270,275,277,278,508,509,510],"tindex":"6a66f0b6-dbfc-11e4-b8fe-970c73a5662f","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"6a66f0b7-dbfc-11e4-b8fe-193e35d65f8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[2,3,4,5,6,7,8,314,9,10,11,12,315,13,14,0,15,16,17,18,19,20,21,22,503,23,24,25,26,511,27,512,513,514,515,516,28,517,504,505,506,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,320,321,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,424,94,95,96,97,98,99,100,101,102,103,104,105,106,107,291,292,507,293,294,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,429,126,127,128,129,130,131,132,133,134,518,135,136,137,138,431,139,140,141,142,143,144,145,146,147,148,432,149,150,151,152,153,154,155,156,157,519,520,521,522,434,435,436,437,438,439,440,441,442,443,444,158,445,446,447,448,449,450,451,452,453,454,455,456,457,458,159,459,460,461,462,463,464,465,466,467,468,469,523,524,525,526,160,161,162,163,164,289,165,470,166,471,472,167,473,168,169,170,171,172,173,174,175,176,177,178,179,180,181,474,182,183,184,185,186,187,188,189,190,191,475,192,193,194,195,196,197,198,199,200,201,202,203,204,476,477,205,478,479,206,480,207,208,209,210,211,212,213,214,215,216,217,218,219,220,481,221,222,223,224,225,226,227,228,229,230,482,231,232,233,234,235,236,237,238,239,240,241,242,483,243,484,485,244,486,245,246,247,248,249,250,251,252,253,254,255,256,257,258,487,259,260,261,262,263,264,265,266,267,268,488,269,270,271,272,273,274,275,276,277,278,279,280,510,527,290],"tindex":"6a6717c8-dbfc-11e4-b8fe-ebd5c78d31a0","variableMapping":{"graphHopperFolder":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[327,328,336,369,377,385,387,397,406,408,418],"tindex":"6a6717c9-dbfc-11e4-b8fe-959a26daf5ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[528],"tindex":"6a6717ca-dbfc-11e4-b8fe-df3070850415","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[329,341,349,371,390,411],"tindex":"6a6717cb-dbfc-11e4-b8fe-b975bd8b99a5","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"6a6717cc-dbfc-11e4-b8fe-adfb057cde85","variableMapping":{"turnCostIndex":"index","NO_TURN_ENTRY":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"6a6717cd-dbfc-11e4-b8fe-ad2bb9249b58","variableMapping":{"this":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"6a673ede-dbfc-11e4-b8fe-3d93999c32aa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[2,4,6,8,9,10,11,12,16,17,18,19,20,504,505,506,29,30,32,33,34,36,37,40,41,42,52,53,88,94,95,96,97,100,291,292,507,293,294,122,123,124,145,146,147,159,289,166,168,188,193,198,200,201,204,205,207,227,232,237,239,240,243,245,265,270,275,277,278,508,509,510],"tindex":"6a673edf-dbfc-11e4-b8fe-71024bda7b7d","variableMapping":{"mSize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[358,381,402],"tindex":"6a673ee0-dbfc-11e4-b8fe-af16d71a2a01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-1},{"failures":[529],"tindex":"6a673ee1-dbfc-11e4-b8fe-536346a91537","variableMapping":{"str":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[530],"tindex":"6a673ee2-dbfc-11e4-b8fe-8d2bd13b2775","variableMapping":{"lastTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"6a673ee3-dbfc-11e4-b8fe-0926d8c807be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"6a673ee4-dbfc-11e4-b8fe-13f331fe7ad5","variableMapping":{"_data":"mValues","length":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:249","type":"CtReturnImpl","sourcecode":"return int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"6a673ee5-dbfc-11e4-b8fe-ffe8e5223320","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[531,532],"tindex":"6a673ee6-dbfc-11e4-b8fe-0bf5a98cdbb1","variableMapping":{"err":"i","tmpErr":"element","y1":"i","dLon":"i","sLat":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[4,5,6,7,8,10,15,16,18,21,22,23,24,25,26,351,352,355,356,357,363,533,97],"tindex":"6a673ee7-dbfc-11e4-b8fe-61d2bac2a0ad","variableMapping":{"bytePos":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"6a673ee8-dbfc-11e4-b8fe-5dbdd8ef554a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"6a673ee9-dbfc-11e4-b8fe-574afd6be85c","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"6a673eea-dbfc-11e4-b8fe-ffa1925aba3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"6a673eeb-dbfc-11e4-b8fe-1f3680a80aec","variableMapping":{"baseUrl":"_location","fileDetails":"_location","zippedURL":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:274","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"6a673eec-dbfc-11e4-b8fe-ef16611a16a2","variableMapping":{"highwayValue":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"6a673eed-dbfc-11e4-b8fe-ff00c0655956","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"6a6765fe-dbfc-11e4-b8fe-cd9a939ec6e6","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[329,341,371,390,411],"tindex":"6a6765ff-dbfc-11e4-b8fe-7d17fa2e11ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"6a676600-dbfc-11e4-b8fe-af922209390a","variableMapping":{"edgeId":"x1","nextEdge":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0},{"failures":[56,62,66,74,78,87,89,91],"tindex":"6a676601-dbfc-11e4-b8fe-f18ce6e71467","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1239","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[],"tindex":"6a676602-dbfc-11e4-b8fe-99ea1c1359f8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,27,47,48,49,77,81,82,85,534,500,92,93,106,107,120,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,145,146,147,148,149,151,152,153,154,155,156,157],"tindex":"6a676603-dbfc-11e4-b8fe-35160fd2f2db","variableMapping":{"size":"frontIndex","delta":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"6a676604-dbfc-11e4-b8fe-6fa8014ef528","variableMapping":{"bb":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:281","type":"CtTryImpl","sourcecode":"try {\n    ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).isLoaded();\n    return true;\n} catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"6a676605-dbfc-11e4-b8fe-41278aa66b79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"6a676606-dbfc-11e4-b8fe-290e56647c73","variableMapping":{"minDistance":"speed","rMin":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-2},{"failures":[327,328,336,369,377,385,397,406,418],"tindex":"6a676607-dbfc-11e4-b8fe-f3cd9bddf18c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[2,5,6,8,10,11,16,18,19,20,21,22,25,30,33,34,36,37,40,41,88,95,96,535,536,537,291,292,507,293,294,122,124,145,147,434,454,159,459,464,166,168,188,193,198,538,204,205,207,227,232,237,243,245,265,270,275,296,297,298,299,300,301,302,303,304,305,306,307,308,309,283,286,287,288],"tindex":"6a678c18-dbfc-11e4-b8fe-0fe16a17bec0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[53],"tindex":"6a678c19-dbfc-11e4-b8fe-b94caabbafe4","variableMapping":{"eleDelta":"eleDelta","decEleSum":"eleDelta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6a678c1a-dbfc-11e4-b8fe-e5a0c49d6f09","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"6a678c1b-dbfc-11e4-b8fe-43d9b23c9e77","variableMapping":{"orientation":"lon","java.lang.Math.PI":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[],"tindex":"6a678c1c-dbfc-11e4-b8fe-0b9125b55e55","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,0,15,16,17,18,19,20,21,22,23,24,25,26,27,289,166,471,204,205,478,243,484,510],"tindex":"6a678c1d-dbfc-11e4-b8fe-e9301d05b523","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"6a678c1e-dbfc-11e4-b8fe-93b16b1dc07e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"6a678c1f-dbfc-11e4-b8fe-4b3e8ef3caea","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"6a678c20-dbfc-11e4-b8fe-3fcfd6d79907","variableMapping":{"currentEntry":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"6a678c21-dbfc-11e4-b8fe-6d3413f98dae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[503,539,540],"tindex":"6a678c22-dbfc-11e4-b8fe-933404185467","variableMapping":{"shift":"oldRelationFlags","tmpValue":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":192,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":86,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":289,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":533,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":110,"com.graphhopper.GraphHopperAPITest.testNoLoad":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":435,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":103,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":386,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":146,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":313,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":217,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":513,"com.graphhopper.coll.CompressedArrayTest.testCompress":499,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":376,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":58,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":454,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":64,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":465,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":54,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":384,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":78,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":94,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":518,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":377,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":93,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":143,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":369,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":382,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":76,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":255,"com.graphhopper.coll.BitSetImplTest.testCopy":528,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":123,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":387,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":204,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":67,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":129,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":124,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":324,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":398,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":48,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":478,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":273,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":243,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":466,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":36,"com.graphhopper.routing.DijkstraTest.initializationError":317,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":236,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":538,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":475,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":502,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":252,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":476,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":406,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":340,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":149,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":82,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":148,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":72,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":170,"com.graphhopper.coll.OSMIDMapTest.testGetLong":293,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":226,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":184,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":166,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":186,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":311,"com.graphhopper.coll.CompressedArrayTest.testCompress2":498,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":326,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":218,"com.graphhopper.GraphHopperAPITest.testLoad":106,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":473,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":283,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":341,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":257,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":247,"com.graphhopper.storage.LevelGraphStorageTest.testClone":172,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":529,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":75,"com.graphhopper.util.GHUtilityTest.testCopy":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":157,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":379,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":427,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":308,"com.graphhopper.routing.PathTest.testFindInstruction":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":373,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":209,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":105,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":346,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":199,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":405,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":274,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":260,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":221,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":470,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":416,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":322,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":174,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":440,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":288,"com.graphhopper.util.InstructionListTest.testWayList2":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":130,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":279,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":385,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":239,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":52,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":484,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":176,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":508,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":388,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":448,"com.graphhopper.storage.RAMDirectoryTest.testSynched":523,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":74,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":246,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":296,"com.graphhopper.routing.AStarTest.initializationError":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":88,"com.graphhopper.coll.OSMIDMapTest.testGet":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":216,"com.graphhopper.routing.PathBidirRefTest.testExtract":43,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":347,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":391,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":507,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":153,"com.graphhopper.storage.RAMDataAccessTest.testCopy":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":459,"com.graphhopper.storage.RAMDataAccessTest.testSegments":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":390,"com.graphhopper.util.GHUtilityTest.testSort2":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":83,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":471,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":154,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":399,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":479,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":179,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":182,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":534,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":202,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":33,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":230,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":403,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":185,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.storage.StorablePropertiesTest.testStore":510,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":509,"com.graphhopper.storage.GraphHopperStorageTest.testClone":249,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":462,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":357,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":524,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":355,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":487,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":338,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":441,"com.graphhopper.routing.PathTest.testTime":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":333,"com.graphhopper.util.BitUtilLittleTest.testToFloat":536,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":200,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":362,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":132,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":453,"com.graphhopper.reader.OSMReaderTest.testRelation":503,"com.graphhopper.util.GHUtilityTest.testSortDirected":102,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":532,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":419,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":520,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":301,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":32,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.util.BitUtilLittleTest.testToInt":537,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":368,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":1,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":136,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":526,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":432,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":540,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":449,"com.graphhopper.search.NameIndexTest.testCreate":506,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":306,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":29,"com.graphhopper.routing.QueryGraphTest.testOneWay":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":430,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":493,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":372,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":512,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":122,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":490,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":420,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":455,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":539,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":472,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":380,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":229,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":222,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":245,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":69,"com.graphhopper.util.BitUtilLittleTest.testToBitString":535,"com.graphhopper.util.InstructionListTest.testWayList":95,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":389,"com.graphhopper.GraphHopperAPITest.testDisconnected179":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":442,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":494,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":482,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":437,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":521,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":414,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":468,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":137,"com.graphhopper.routing.util.EncodedValueTest.testSwap":530,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":65,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":381,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":80,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":63,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":397,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":90,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":486,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":433,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":401,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":483,"com.graphhopper.routing.PathTest.testWayList":41,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":467,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":445,"com.graphhopper.coll.OSMIDMapTest.testGet2":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":91,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":195,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":514,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":395,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":261,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":214,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":150,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":151,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":304,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":302,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":411,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":531,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":327,"com.graphhopper.util.GHUtilityTest.testSort":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":458,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":394,"com.graphhopper.search.NameIndexTest.testPut":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":241,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":480,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":139,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":116,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":407,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":53,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":114,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":477,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":329,"com.graphhopper.storage.MMapDirectoryTest.testSynched":519,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":365,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":515,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":46,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":287,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":159,"com.graphhopper.routing.PathTest.testFound":320,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":501,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":197,"com.graphhopper.util.AngleCalcTest.testAtan2":310,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":162,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":393,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":220,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":505,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":158,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":254,"com.graphhopper.util.InstructionListTest.testEmptyList":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":81,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":350,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":378,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":84,"com.graphhopper.reader.PrinctonReaderTest.testRead":13,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":147,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":215,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":444,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":434,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":224,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":375,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":412,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":295,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":489,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":525,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":332,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":404,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":457,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":516,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":127,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":201,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":496,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":366,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":128,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":258,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":374,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":300,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":410,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":451,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":66,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":356,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":57,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":117,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":299,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":45,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":447,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":31,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":485,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":511,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":522,"com.graphhopper.routing.PathBidirRefTest.testExtract2":44,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":285,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":68,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":336,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":517,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":269,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":428,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":339,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":469,"com.graphhopper.util.SimpleIntDequeTest.testPush":500,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":415,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":125,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":272,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":425,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":359,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":265,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":156,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":305,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":211,"com.graphhopper.storage.StorablePropertiesTest.testLoad":527,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":87,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":436,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":164,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":97,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":488,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":344,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.util.AngleCalcTest.testCombined":312,"com.graphhopper.routing.AStarBidirectionTest.initializationError":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":450,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":363,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":196,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":194,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":205}}]
