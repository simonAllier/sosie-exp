[{"failures":[0,1,2,3,4,5,6],"tindex":"38badfab-da74-11e4-a3ee-793c52135454","variableMapping":{"obtained":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"38bc3f3c-da74-11e4-a3ee-bb3a5c16d458","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"sidewalks","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"38bc3f3d-da74-11e4-a3ee-c9824ab27008","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[7],"tindex":"38bc3f3e-da74-11e4-a3ee-5d4c70b421b3","variableMapping":{"towerNodeDistance":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"38bc3f3f-da74-11e4-a3ee-d13c2412025b","variableMapping":{"this":"this","unknownSpeed":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"38bc3f40-da74-11e4-a3ee-b1c1cbdaa4a0","variableMapping":{"maxLeafEntries":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"38bc3f41-da74-11e4-a3ee-09e1dbdb1b96","variableMapping":{"size":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":0},{"failures":[],"tindex":"38bc3f42-da74-11e4-a3ee-694e339f419e","variableMapping":{"cap":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,2,3,4,5,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"38bc3f43-da74-11e4-a3ee-936f12908a06","variableMapping":{"size":"segmentSizePower","i":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"38bc3f44-da74-11e4-a3ee-c71e6d23c485","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,12,2,4,66,24,25,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"38bc3f45-da74-11e4-a3ee-8b13946dd79a","variableMapping":{"ab_rb":"d1","ab_ar":"d2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-1},{"failures":[51,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,54,120,55,121,122,123,56,57,124,125,58,126,127,59,128,129,130,62,131,132,133,134,135,136,21,22,2,3,5,23,25,137,138,139,140,141,142,32,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,6,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"38bc6656-da74-11e4-a3ee-93bbe8b01cbe","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"38bc6657-da74-11e4-a3ee-91ab000e1016","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[51,81,82,83,211,212,92,59,213,60,61,62,214,215,131,63,216,65,133,134,8,217,9,10,11,12,13,14,15,16,17,18,19,20,218,219,220,21,22,2,3,4,66,5,23,24,25,221,222,223,224,225,26,27,28,29,30,226,227,228,229,230,231,232,233,234,235,236,31,237,32,143,238,144,147,77,155,239,158,240,241,160,242,161,164,78,172,243,175,244,245,246,6,247,33,248,34,35,36,37,249,38,39,40,41,250,194,251,195,198,80,252,209,253,254,255,42,256,43,44,45,46,257,47,48,49,50],"tindex":"38bc8d68-da74-11e4-a3ee-692b2de0c6e1","variableMapping":{"allSegments":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"38bc8d69-da74-11e4-a3ee-33f18cc0c1bf","variableMapping":{"baseNode":"length","id":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[],"tindex":"38bcb47a-da74-11e4-a3ee-6930059ab1d9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"38bcb47b-da74-11e4-a3ee-b9cd77f71830","variableMapping":{"high":"mSize","guess":"mSize","low":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[258,259,260,261,262,263,264,265,266,14],"tindex":"38bcb47c-da74-11e4-a3ee-e797028c86f3","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[51,267,268,269,83,133,8,9,10,11,12,13,14,15,16,17,18,19,20,21,2,3,4,5,24,25,26,231,234,32,143,77,158,160,78,175,79,6,190,41,194,80,209,50],"tindex":"38bd029d-da74-11e4-a3ee-a7c745ef0b3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[270,271,272],"tindex":"38bd029e-da74-11e4-a3ee-0b3db01e68c4","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[211,270,272,217,13,14,66,221],"tindex":"38bd029f-da74-11e4-a3ee-9949ae6c8d32","variableMapping":{"workerThreads":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"38bd02a0-da74-11e4-a3ee-57a93d636052","variableMapping":{"newUniqueOsmId":"defaultL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"38bd02a1-da74-11e4-a3ee-ab6f0af803c7","variableMapping":{"size":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[273,274,275,276,277,278,279,280,281,282,283],"tindex":"38bd02a2-da74-11e4-a3ee-7b3c5ff94b7b","variableMapping":{"str":"wayTypeName","tr":"tr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:241","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"finish\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[284,285,286,287,7,288,217,9,10,11,13,14,15,16,17,18,19,289,20,22,2,3,4,66,5,23,24,221],"tindex":"38bd29b3-da74-11e4-a3ee-f7fa7d33f7a0","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"38bd29b4-da74-11e4-a3ee-cba07df4c047","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"38bd29b5-da74-11e4-a3ee-8d8155d0aa8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"38bd29b6-da74-11e4-a3ee-834d09025ae1","variableMapping":{"need":"capacity","i":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"38bd29b7-da74-11e4-a3ee-ab9b6174c776","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[290,273,291,292,293,274,294,295,296,297,276,298,299,300,277,301,302,303,279,304,305,306,280,307,308,309,310,311,312,313,282,314,315,316,283,317,318,319],"tindex":"38bd29b8-da74-11e4-a3ee-3dc419de7d42","variableMapping":{"edgeId":"nextRelBit","nextEdge":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[87,89,90,20,146,320,321,322,323,239,324,163,325,326,327,328,243,329,179,330,331,332,333,334,335,197,336,337,338,339,252,340],"tindex":"38bd29b9-da74-11e4-a3ee-f1393980fd01","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[],"tindex":"38bd29ba-da74-11e4-a3ee-5d421665af90","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"38bd29bb-da74-11e4-a3ee-b7a33c8c19eb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"38bd29bc-da74-11e4-a3ee-adb5df328eb7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"38bd29bd-da74-11e4-a3ee-6f874c8d845c","variableMapping":{"weight":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[341],"tindex":"38bd29be-da74-11e4-a3ee-a51c25bdc6b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[291,302,308,318],"tindex":"38bd29bf-da74-11e4-a3ee-a9128846e060","variableMapping":{"i":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"38bd50d0-da74-11e4-a3ee-3b4104e47264","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[342],"tindex":"38bd50d1-da74-11e4-a3ee-67d01ed38003","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[273,274,275,276,277,278,279,280,281,282,283],"tindex":"38bd50d2-da74-11e4-a3ee-01160ade7a2b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"38bd50d3-da74-11e4-a3ee-2d2a728f2d0a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[51,81,82,83,211,212,92,59,213,60,61,62,214,131,63,65,133,134,9,10,11,12,13,21,2,4,66,5,23,24,25,221,223,224,225,26,27,28,29,30,231,232,233,234,235,236,237,32,143,144,77,239,158,240,241,160,161,78,243,175,244,245,6,248,250,194,195,80,252,209,253,254,256],"tindex":"38bd50d4-da74-11e4-a3ee-dbbb0cb88613","variableMapping":{"len":"bufferIndex","dim":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:968","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int * int) * 4) + 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[],"tindex":"38bd50d5-da74-11e4-a3ee-0b4f18cae7fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[84,85,87,91,343,100,102,103,107,108,109,112,113,114,118,120,122,56,57,130,62,131,217,20,135,136,137,32,143,144,145,146,150,151,154,156,158,159,160,161,162,163,167,168,171,173,175,176,177,178,179,183,184,187,188,190,191,194,195,196,197,201,202,205,207,209,210],"tindex":"38bd50d6-da74-11e4-a3ee-d901bae343e5","variableMapping":{"high":"flags","low":"flags","guess":"flags","guessedKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[342],"tindex":"38bd50d7-da74-11e4-a3ee-93d7f2c0ba90","variableMapping":{"entry":"hourStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[344,345,51,346,347,348,349,350,81,82,83,211,84,85,86,87,88,89,90,91,343,212,92,93,98,99,100,101,102,103,104,105,106,351,107,108,109,110,111,112,113,114,115,116,117,118,119,54,120,55,121,122,123,56,57,124,125,58,126,127,59,128,129,130,213,213,60,60,352,352,61,61,62,62,214,214,215,215,131,131,63,63,64,64,216,216,65,65,353,132,133,134,8,217,9,10,11,12,13,14,15,319,16,17,18,19,289,20,135,136,354,355,356,218,219,220,21,22,2,3,4,66,5,357,23,24,25,221,358,137,138,222,223,224,225,26,27,28,29,30,359,360,361,362,363,139,364,226,227,228,229,365,230,366,367,368,369,370,140,371,372,231,232,233,373,374,75,375,376,377,378,379,380,381,141,382,383,384,385,386,234,235,236,387,388,76,389,390,391,392,393,394,395,142,237,396,397,32,398,399,143,238,400,401,402,144,145,146,403,147,148,404,405,149,150,320,151,321,322,406,407,152,408,153,323,409,77,410,411,154,412,155,239,324,156,413,157,158,414,240,241,159,415,416,417,418,419,420,160,242,421,422,423,161,162,163,424,164,165,425,426,166,167,325,168,326,327,427,428,169,429,170,328,430,78,431,432,171,433,172,243,329,173,434,174,175,435,244,245,176,436,437,438,439,246,177,178,179,440,180,181,441,442,182,183,330,184,331,332,443,444,185,445,186,333,446,79,447,448,187,449,6,334,335,188,450,189,190,451,452,453,191,454,192,455,456,457,193,250,458,459,194,251,460,461,462,195,196,197,463,198,199,464,465,200,201,336,202,337,338,466,467,203,468,204,339,469,80,470,471,205,472,206,252,340,207,473,208,209,474,253,254,210,475],"tindex":"38bd77e8-da74-11e4-a3ee-f9665efc3e19","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:430","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[258,261,263,266,476,286,288],"tindex":"38bd77e9-da74-11e4-a3ee-4b9d0a1966e6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"38bd77ea-da74-11e4-a3ee-1d6eb6dca988","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[87],"tindex":"38bd77eb-da74-11e4-a3ee-eda6ed9e2402","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"38bd77ec-da74-11e4-a3ee-cbfa6a1eb338","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"38bd77ed-da74-11e4-a3ee-19c201b98048","variableMapping":{"shift":"lastTime","tmpValue":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"38bd77ee-da74-11e4-a3ee-63c0aaa9a2f7","variableMapping":{"str":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"38bd77ef-da74-11e4-a3ee-d9b70db985c2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"38bd77f0-da74-11e4-a3ee-93f867a46bd8","variableMapping":{"finishedTo":"edgeBased","finishedFrom":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"38bd77f1-da74-11e4-a3ee-55fa3ddf3733","variableMapping":{"len":"x1","i":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"38bd9f02-da74-11e4-a3ee-298f3e59d5c5","variableMapping":{"encoded":"value","backwardBit":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"38bd9f03-da74-11e4-a3ee-190bdbc149e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"38bd9f04-da74-11e4-a3ee-f13f91508c2f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[87,91,343],"tindex":"38bd9f05-da74-11e4-a3ee-c554b1a1abdb","variableMapping":{"maxLeafEntries":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"38bd9f06-da74-11e4-a3ee-413df02b4279","variableMapping":{"need":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[309,310,319],"tindex":"38bd9f07-da74-11e4-a3ee-afc2a7b2fdcb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[477,478,479,480,481,482,483],"tindex":"38bd9f08-da74-11e4-a3ee-bd70fe607a87","variableMapping":{"res":"bits","maxBit":"bits","value":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"38bd9f09-da74-11e4-a3ee-a99a69cacf80","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[484,485,486,487,14],"tindex":"38bd9f0a-da74-11e4-a3ee-1354d4ed2a2a","variableMapping":{"closestNode":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"38bd9f0b-da74-11e4-a3ee-475a7ce58659","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"38bd9f0c-da74-11e4-a3ee-179acb7bd447","variableMapping":{"need":"noOfStates","i":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[488],"tindex":"38bd9f0d-da74-11e4-a3ee-3d155037cc09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[],"tindex":"38bd9f0e-da74-11e4-a3ee-2f1dd4993194","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"38bd9f0f-da74-11e4-a3ee-bff353c456fc","variableMapping":{"res":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[],"tindex":"38bd9f10-da74-11e4-a3ee-39e53f26e4e3","variableMapping":{"maxSpeed":"java.lang.Math.PI","fwdSpeed":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"38bd9f11-da74-11e4-a3ee-8f741bacc01d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[],"tindex":"38bd9f12-da74-11e4-a3ee-a77d1d977fa8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"38bd9f13-da74-11e4-a3ee-27b25edc486c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[477,478,479,480,489,490,481,482,491],"tindex":"38bd9f14-da74-11e4-a3ee-e77abf19dd3c","variableMapping":{"tmp":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"38bd9f15-da74-11e4-a3ee-71ac38b656cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"38bd9f16-da74-11e4-a3ee-3b1abbaa7b7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[84,85,86,492,493,290,273,291,494,292,495,293,496,497,274,294,258,498,284,0,295,296,297,275,259,276,484,260,499,298,500,299,300,501,502,277,301,261,302,503,262,303,278,279,504,304,505,305,306,506,507,280,307,263,308,508,488,509,510,212,92,1,311,312,313,281,264,282,486,265,511,314,512,315,316,513,514,283,317,266,318,515,516,517,518,519,93,520,94,521,522,476,523,524,525,285,95,286,287,96,7,272,288,526,527,487,97,528,98,99,100,101,529,102,103,104,105,106,351,107,108,109,110,111,112,113,114,115,116,117,118,119,54,120,55,121,122,123,56,57,124,125,58,126,127,59,128,129,130,62,353,132,133,134,135,136,2,3,4,66,5,24,25,137,138,139,140,141,383,142,32,398,399,143,238,400,401,402,144,145,146,403,147,148,404,405,149,150,320,151,321,322,406,407,152,408,153,323,409,77,410,411,154,412,155,239,324,156,413,157,158,414,240,241,159,415,420,160,242,421,422,423,161,162,163,424,164,165,425,426,166,167,325,168,326,327,427,428,169,429,170,328,430,78,431,432,171,433,172,243,329,173,434,174,175,435,244,245,176,436,177,178,179,440,180,181,441,442,182,183,330,184,331,332,443,444,185,445,186,333,446,79,447,448,187,449,6,334,335,188,450,189,190,451,452,453,191,454,192,455,456,457,193,250,458,459,194,251,460,461,462,195,196,197,463,198,199,464,465,200,201,336,202,337,338,466,467,203,468,204,339,469,80,470,471,205,472,206,252,340,207,473,208,209,474,253,254,210,475],"tindex":"38bdc627-da74-11e4-a3ee-1723a6839068","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:229","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n        return com.graphhopper.routing.util.AbstractFlagEncoder;\n    \n}"},"status":-1},{"failures":[],"tindex":"38bdc628-da74-11e4-a3ee-9fc6fecb562b","variableMapping":{"gradient":"minLat","yend":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"38bdc629-da74-11e4-a3ee-bf2b35ffc37f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"38bdc62a-da74-11e4-a3ee-c9cb3faf0167","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[344,345,51,346,530,347,348,349,350,81,82,83,211,84,85,86,492,493,290,273,291,494,292,495,293,496,497,274,294,258,498,284,0,295,296,297,275,259,276,484,260,499,298,500,299,300,501,502,277,301,261,302,503,87,88,89,90,91,343,262,303,278,279,504,304,505,305,306,506,507,280,307,263,308,508,488,509,510,212,92,1,311,312,313,281,264,282,486,265,511,314,512,315,316,513,514,283,317,266,318,515,516,517,518,519,93,520,94,521,522,476,523,524,525,285,95,286,287,96,7,272,288,526,527,487,97,528,531,98,99,532,100,101,529,102,103,104,105,106,351,107,108,109,110,111,112,113,114,115,116,117,118,119,54,120,55,121,122,123,56,57,124,125,58,126,127,59,128,129,130,213,60,352,61,62,214,215,131,63,64,216,65,533,534,353,132,133,134,535,8,217,9,10,11,12,13,14,15,319,16,17,18,19,20,135,136,21,22,2,3,4,66,5,357,23,24,25,221,358,137,138,536,359,360,361,362,537,363,139,226,227,228,229,365,230,366,367,368,369,538,370,140,371,372,231,232,233,373,374,75,375,376,377,378,379,380,539,381,141,382,383,384,385,386,234,235,236,387,388,76,389,390,391,392,393,394,540,395,142,32,398,399,143,238,400,401,402,144,145,146,403,147,148,404,405,149,150,320,151,321,322,406,407,152,408,153,323,409,77,410,411,154,412,155,239,324,156,413,157,158,414,240,241,159,415,420,160,242,421,422,423,161,162,163,424,164,165,425,426,166,167,325,168,326,327,427,428,169,429,170,328,430,78,431,432,171,433,172,243,329,173,434,174,175,435,244,245,176,436,177,178,179,440,180,181,441,442,182,183,330,184,331,332,443,444,185,445,186,333,446,79,447,448,187,449,6,334,335,188,450,189,190,451,452,453,191,454,192,455,456,457,193,250,458,459,194,251,460,461,462,195,196,197,463,198,199,464,465,200,201,336,202,337,338,466,467,203,468,204,339,469,80,470,471,205,472,206,252,340,207,473,208,209,474,253,254,210,475],"tindex":"38bded3b-da74-11e4-a3ee-f145ba5d303e","variableMapping":{"nanoTime":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"38bded3c-da74-11e4-a3ee-a7e5cc6d4a40","variableMapping":{"gradient":"fwdDecline","yend":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"38bded3d-da74-11e4-a3ee-dbe635a90afb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[293,274,294,498,295,297,299,300,277,301,302,503,303,279,305,306,280,307,308,508,311,313,315,316,283,317,318,515],"tindex":"38bded3e-da74-11e4-a3ee-d3ea4801f3a7","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[477,478,541,371,374,375,376,385,388,389,390,479,480,490,482,491,542,543],"tindex":"38bded3f-da74-11e4-a3ee-a3ffc6583186","variableMapping":{"nodesContracted":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"38bded40-da74-11e4-a3ee-6f7a1387425d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[273,296,276,279,309,310,312,282,319],"tindex":"38bded41-da74-11e4-a3ee-d5f5905cc3ac","variableMapping":{"size":"code","index":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"38bded42-da74-11e4-a3ee-6f021e5e1542","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"38bded43-da74-11e4-a3ee-210e156e1b9f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"38bded44-da74-11e4-a3ee-698ca885c4ba","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"38bded45-da74-11e4-a3ee-c56f6a4b86f7","variableMapping":{"workerThreads":"oldValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[],"tindex":"38bded46-da74-11e4-a3ee-3d88148809b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:222","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"38be1457-da74-11e4-a3ee-d71b6663a927","variableMapping":{"calcPoints":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"38be1458-da74-11e4-a3ee-27e066142c86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[55,57,58,2,25,382],"tindex":"38be1459-da74-11e4-a3ee-8b090f7610bc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"38be145a-da74-11e4-a3ee-0196ed07ab98","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[8,217,9,10,11,12,13,14,15,16,17,18,19,20,21,22,2,3,4,66,5,23,24,25,221,237,32,143,238,160,242,250,194,251],"tindex":"38be145b-da74-11e4-a3ee-2f6350c37fae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"38be145c-da74-11e4-a3ee-effa847d80e6","variableMapping":{"latlon":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"38be145d-da74-11e4-a3ee-77f89abf5089","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":206,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":126,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":250,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":368,"com.graphhopper.GraphHopperAPITest.testNoLoad":536,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":178,"com.graphhopper.reader.OSMReaderTest.testFerry":8,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":85,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":259,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":235,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":22,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":515,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":320,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":247,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":356,"com.graphhopper.coll.CompressedArrayTest.testCompress":478,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":497,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":104,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":79,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":168,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":384,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":33,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":109,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":451,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":100,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":297,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":121,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":364,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":274,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":349,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":461,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":385,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":91,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":273,"com.graphhopper.util.PointListTest.testEquals":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":120,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":325,"com.graphhopper.coll.BitSetImplTest.testCopy":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":232,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":276,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":32,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":542,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":112,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":233,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":509,"com.graphhopper.reader.OSMReaderTest.testSort":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":301,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":89,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":238,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":434,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":160,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":482,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":452,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":131,"com.graphhopper.storage.RAMDataAccessTest.testHeader":257,"com.graphhopper.routing.DijkstraTest.initializationError":531,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":354,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":157,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":68,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":472,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":426,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":529,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":398,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":144,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":336,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":508,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":307,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":76,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":57,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":383,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":387,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":118,"com.graphhopper.coll.OSMIDMapTest.testGetLong":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":117,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":197,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":409,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":468,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":194,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":339,"com.graphhopper.coll.CompressedArrayTest.testCompress2":477,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":430,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":303,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":151,"com.graphhopper.GraphHopperAPITest.testLoad":137,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":462,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":518,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":326,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":163,"com.graphhopper.storage.LevelGraphStorageTest.testClone":198,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":342,"com.graphhopper.reader.OSMReaderTest.testBarriers":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":486,"com.graphhopper.util.GHUtilityTest.testCopy":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":506,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":538,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":49,"com.graphhopper.routing.PathTest.testFindInstruction":134,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":495,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":146,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":84,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":522,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":313,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":367,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":174,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":156,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":407,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":513,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":532,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":464,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":441,"com.graphhopper.util.InstructionListTest.testWayList2":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":378,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":176,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":275,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":296,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":516,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":212,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":242,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":200,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":484,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":36,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":53,"com.graphhopper.storage.RAMDirectoryTest.testSynched":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":321,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":119,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":162,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":12,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":34,"com.graphhopper.routing.AStarTest.initializationError":535,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":59,"com.graphhopper.coll.OSMIDMapTest.testGet":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":150,"com.graphhopper.routing.PathBidirRefTest.testExtract":98,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":476,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":28,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":392,"com.graphhopper.storage.RAMDataAccessTest.testCopy":43,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":493,"com.graphhopper.storage.RAMDataAccessTest.testSegments":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":141,"com.graphhopper.util.GHUtilityTest.testSort2":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":124,"com.graphhopper.reader.OSMReaderTest.testMain":9,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":251,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":500,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":543,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":393,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":205,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":400,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":202,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":467,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":210,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":62,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":512,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":311,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":204,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":19,"com.graphhopper.storage.StorablePropertiesTest.testStore":237,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":256,"com.graphhopper.storage.GraphHopperStorageTest.testClone":164,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":450,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":288,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":7,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":427,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":192,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":442,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":457,"com.graphhopper.routing.PathTest.testTime":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":306,"com.graphhopper.util.BitUtilLittleTest.testToFloat":268,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":253,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":528,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":380,"com.graphhopper.reader.OSMReaderTest.testRelation":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":446,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":471,"com.graphhopper.util.GHUtilityTest.testSortDirected":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":317,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":417,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":40,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":61,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":74,"com.graphhopper.util.BitUtilLittleTest.testToInt":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":290,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":227,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":287,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":388,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":185,"com.graphhopper.search.NameIndexTest.testCreate":225,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":47,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":213,"com.graphhopper.routing.QueryGraphTest.testOneWay":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":539,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":490,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":292,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":231,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":479,"com.graphhopper.reader.OSMReaderTest.testWithBounds":18,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":50,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":266,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":88,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":447,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":523,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":309,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":196,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":460,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":514,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":498,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":411,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":152,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":161,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":114,"com.graphhopper.util.BitUtilLittleTest.testToBitString":267,"com.graphhopper.util.InstructionListTest.testWayList":82,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":260,"com.graphhopper.GraphHopperAPITest.testDisconnected179":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":182,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":481,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":440,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":315,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":502,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":425,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":0,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":171,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":123,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":533,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":108,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":526,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":401,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":469,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":129,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":540,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":503,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":420,"com.graphhopper.routing.PathTest.testWayList":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":505,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":331,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":271,"com.graphhopper.coll.OSMIDMapTest.testGet2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":130,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":249,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":207,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":501,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":429,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":519,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":405,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":203,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":389,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":390,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":44,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":511,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":278,"com.graphhopper.util.GHUtilityTest.testSort":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":449,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":483,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":494,"com.graphhopper.search.NameIndexTest.testPut":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":402,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":424,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":386,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":230,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":264,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":92,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":359,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":399,"com.graphhopper.storage.MMapDirectoryTest.testSynched":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":504,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":219,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":517,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":521,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":408,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":87,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":6,"com.graphhopper.routing.PathTest.testFound":353,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":221,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":510,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":208,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":456,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":299,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":322,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":224,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":184,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":167,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":255,"com.graphhopper.util.InstructionListTest.testEmptyList":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":507,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":525,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":294,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":524,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":125,"com.graphhopper.reader.PrinctonReaderTest.testRead":135,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":236,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":149,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":330,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":177,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":496,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":485,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":312,"com.graphhopper.reader.OSMReaderTest.testFoot":217,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":187,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":220,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":375,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":492,"com.graphhopper.reader.OSMReaderTest.testOneWay":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":376,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":327,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":329,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":293,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":39,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":265,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":105,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":541,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":272,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":38,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":103,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":362,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":443,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":352,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":289,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":421,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":419,"com.graphhopper.routing.PathBidirRefTest.testExtract2":99,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":379,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":222,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":537,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":308,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":14,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":72,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":454,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":520,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":373,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":173,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":530,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":465,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":527,"com.graphhopper.GraphHopperTest.testFootAndCar":66,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":78,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":338,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":395,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":180,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":488,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":487,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":147,"com.graphhopper.storage.StorablePropertiesTest.testLoad":396,"com.graphhopper.GraphHopperTest.testPrepareOnly":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":127,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":179,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":16,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":193,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":211,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":433,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":94,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":445,"com.graphhopper.routing.AStarBidirectionTest.initializationError":534,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":284,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":473,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":340,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":143}}]
