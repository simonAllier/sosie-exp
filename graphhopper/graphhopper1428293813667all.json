[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"c1bee53b-dc13-11e4-93ec-87a4e78492a0","variableMapping":{"prepared":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[27],"tindex":"c1bee53c-dc13-11e4-93ec-53941a7bb14f","variableMapping":{"str":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-1},{"failures":[],"tindex":"c1bee53d-dc13-11e4-93ec-1d7ca4e7cda4","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"c1bee53e-dc13-11e4-93ec-553ef8b8bef9","variableMapping":{"sacScale":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"c1bf0c4f-dc13-11e4-93ec-897204f3c9c5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"c1bf0c50-dc13-11e4-93ec-9790cf4ee49d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":0},{"failures":[],"tindex":"c1c0ba01-dc13-11e4-93ec-65d419e76624","variableMapping":{"need":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[58,59,60],"tindex":"c1c0ba02-dc13-11e4-93ec-a7f0265fc357","variableMapping":{"sacScale":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"c1c0ba03-dc13-11e4-93ec-cb8005cca10c","variableMapping":{"fwdFaster":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"c1c0ba04-dc13-11e4-93ec-5f0782d0ec72","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[61,59,62],"tindex":"c1c0ba05-dc13-11e4-93ec-339758ea9257","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"c1c0e116-dc13-11e4-93ec-5d4408d9df19","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"c1c0e117-dc13-11e4-93ec-376ffaa18b89","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[64,65,66,67,69,71,74,75,77],"tindex":"c1c0e118-dc13-11e4-93ec-bb8f55766e15","variableMapping":{"val":"highway","existing":"highway","key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[78,0,1,2,79,80,3,81,82,83,84,85,4,86,87,88,5,6,7,8,9,10,89,11,12,90,13,14,15,16,17,18,19,20,91,21,22,23,24,25],"tindex":"c1c0e119-dc13-11e4-93ec-43fc02bf366a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-1},{"failures":[],"tindex":"c1c0e11a-dc13-11e4-93ec-d10d0d374713","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[0,1,92,93,2,94,95,96,97,61,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,60,115,28,116,117,68,118,119,120,3,81,4,121,86,5,122,6,10,12,14,16,17,25,123,124,125,126,127,128,30,129,130,131,132,133,134,135,136,137,37,138,139,140,141,142,143,144,145,146,147,44,148,149,150,151,152,153,154,155,156,51,157,158,159,160,161,162],"tindex":"c1c0e11b-dc13-11e4-93ec-bb3e3aa026bd","variableMapping":{"encoded":"directionBitMask","backwardBit":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[163,164,165,166,167,168,169,170,171],"tindex":"c1c0e11c-dc13-11e4-93ec-07db83eecdf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"c1c0e11d-dc13-11e4-93ec-6b0b2a3bca85","variableMapping":{"name":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"c1c0e11e-dc13-11e4-93ec-3d0537218537","variableMapping":{"i":"length","mainNodes":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"c1c0e11f-dc13-11e4-93ec-cbff1a8c3081","variableMapping":{"y1":"priorityFromRelation","y2":"priorityFromRelation","x1":"priorityFromRelation","x2":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-2},{"failures":[],"tindex":"c1c0e120-dc13-11e4-93ec-433a297d04f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"c1c10831-dc13-11e4-93ec-d14d9f70d899","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[172],"tindex":"c1c10832-dc13-11e4-93ec-fd7e416a4d3c","variableMapping":{"r":"bwFaster","x":"bwFaster","absY":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"c1c10833-dc13-11e4-93ec-05c7610a120a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[173],"tindex":"c1c12f44-dc13-11e4-93ec-012393374f17","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"c1c12f45-dc13-11e4-93ec-dd6dd43d6013","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"c1c12f46-dc13-11e4-93ec-b3ebfb1608c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[114],"tindex":"c1c12f47-dc13-11e4-93ec-459a53da0d59","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"c1c12f48-dc13-11e4-93ec-d5f2755e3be1","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[174,0,1,92,93,2,79,94,95,175,61,98,99,176,100,177,178,101,102,103,104,105,179,106,180,181,182,183,184,185,186,187,188,189,190,191,107,192,193,108,194,195,196,197,198,199,172,22,200,201,202,123,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,127,128,30,231,232,233,234,235,236,129,237,238,31,239,32,240,241,242,33,34,243,244,245,131,246,247,35,36,132,248,249,133,250,251,252,134,253,254,255,135,256,136,257,42,142,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,144,274,275,145,276,146,277,49,152,278,279,280,154,281,155,282,56,161,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"tindex":"c1c12f49-dc13-11e4-93ec-bd8b3f62e7c5","variableMapping":{"i":"segmentSizeInBytes","child":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"c1c12f4a-dc13-11e4-93ec-c5cb15fe2d11","variableMapping":{"size":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"c1c12f4b-dc13-11e4-93ec-c132c8786d61","variableMapping":{"edgeId":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":0},{"failures":[],"tindex":"c1c1565c-dc13-11e4-93ec-69fdc8baf750","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"c1c1565d-dc13-11e4-93ec-f5b40282bedd","variableMapping":{"unpavedBit":"encoded","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-2},{"failures":[],"tindex":"c1c1565e-dc13-11e4-93ec-83aebffe5048","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"c1c1565f-dc13-11e4-93ec-d12070e832aa","variableMapping":{"need":"minElem","i":"minElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c1c15660-dc13-11e4-93ec-49dfe9d71071","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":0},{"failures":[],"tindex":"c1c15661-dc13-11e4-93ec-27ed5571f106","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"c1c15662-dc13-11e4-93ec-09d43878fb08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"c1c15663-dc13-11e4-93ec-a5eabc6e2fdd","variableMapping":{"prevEle":"minEle","ele":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"c1c15664-dc13-11e4-93ec-21b8401c743f","variableMapping":{"edgeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":0},{"failures":[317],"tindex":"c1c15665-dc13-11e4-93ec-4903b693afc5","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"c1c15666-dc13-11e4-93ec-73e77ced081c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"c1c15667-dc13-11e4-93ec-b52fff02ff0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[174,78,0,1,92,93,2,318,79,94,95,175,319,96,97,61,98,99,176,100,177,178,101,102,320,103,104,105,179,321,106,180,181,182,183,184,322,185,186,187,188,189,189,190,190,323,323,191,191,107,107,192,192,193,193,108,108,194,194,324,324,195,195,196,196,325,326,197,198,327,328,329,28,330,331,29,116,117,199,172,120,80,3,81,82,83,84,85,4,121,86,87,88,5,122,6,7,8,9,10,89,11,12,90,13,14,15,16,17,18,19,20,91,21,22,23,24,25,332,333,334,200,201,202,123,335,336,203,337,338,124,339,125,126,26,204,205,206,207,208,340,341,342,343,344,345,346,347,348,349,350,351,352,353,211,212,213,354,355,356,357,214,358,359,360,361,362,363,364,216,217,218,219,220,221,365,366,367,368,369,222,223,224,370,371,372,373,225,374,375,376,377,378,379,380,381,382,383,127,128,30,231,232,233,234,235,236,129,237,130,238,31,239,32,240,241,242,33,34,243,244,245,131,246,247,35,36,132,248,249,133,250,251,252,134,253,384,385,386,387,388,389,390,391,392,254,393,255,135,256,394,395,396,136,137,37,397,398,399,400,401,402,138,403,139,404,38,405,39,406,407,408,40,41,257,409,410,140,411,412,42,43,141,413,414,142,415,258,259,143,416,144,274,275,145,276,417,418,419,146,147,44,420,421,422,423,424,425,148,426,149,427,45,428,46,429,430,431,47,48,277,432,433,150,434,435,49,50,151,436,437,152,438,278,279,153,439,280,154,281,440,441,442,155,156,51,443,444,445,446,447,448,157,449,158,450,52,451,53,452,453,454,54,55,282,455,456,159,457,458,56,57,160,459,460,161,461,283,284,162,462,311,463,464],"tindex":"c1c17d78-dc13-11e4-93ec-8ba93896662b","variableMapping":{"com.graphhopper.util.Constants.VERSION":"_location","tmp":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[100,103,110,111,112,68,118,119],"tindex":"c1c17d79-dc13-11e4-93ec-3169e5f504f3","variableMapping":{"sacScale":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[197,198,202,123,465,466,467,468,469],"tindex":"c1c17d7a-dc13-11e4-93ec-97e6757e2626","variableMapping":{"speed":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[],"tindex":"c1c17d7b-dc13-11e4-93ec-fd139a38b8ea","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[0,92,93,94,95,3,84,4,122,6,7,8,9,10,89,11,90,13,15,16,17,18,19,20,21,22,23,24,25,200,201,202,123,126,26],"tindex":"c1c17d7c-dc13-11e4-93ec-fba9e4e64896","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[],"tindex":"c1c17d7d-dc13-11e4-93ec-358a2726cc11","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[],"tindex":"c1c17d7e-dc13-11e4-93ec-23f619a9fc2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"c1c17d7f-dc13-11e4-93ec-8162b1f9e9bb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"c1c17d80-dc13-11e4-93ec-2baa715f397a","variableMapping":{"lastIndex":"hash","fromIndex":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[470],"tindex":"c1c17d81-dc13-11e4-93ec-8f0798965885","variableMapping":{"importance":"val","hash":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[98,101,106,471,472,473,474,164,168,171,64,66,74,77,475,476,477,478,479,480,481,482,483,484,485,486],"tindex":"c1c17d82-dc13-11e4-93ec-5b72e32bf3e5","variableMapping":{"lastTime":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[110,111,112,68,118,119],"tindex":"c1c17d83-dc13-11e4-93ec-3bbc2e66e4f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"c1c17d84-dc13-11e4-93ec-e78ce99db659","variableMapping":{"retBucket":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"c1c17d85-dc13-11e4-93ec-19860db18b31","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-2},{"failures":[],"tindex":"c1c1a496-dc13-11e4-93ec-a356f767d0a0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[172],"tindex":"c1c1a497-dc13-11e4-93ec-d15681c3c444","variableMapping":{"radiusInMeter":"decDist2DSum","lon":"eleDelta","lat":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"c1c1a498-dc13-11e4-93ec-7de9118e2b9e","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[487,470,317],"tindex":"c1c1a499-dc13-11e4-93ec-cdc274e71328","variableMapping":{"str":"str","lonInt":"mpInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:283","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[488,489,490,491,492,493,494,495,496,497],"tindex":"c1c1a49a-dc13-11e4-93ec-a96562b50163","variableMapping":{"fwdFaster":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[163,164,166,168,169,170,74,75,498,479,499,500,501,485,502,503],"tindex":"c1c1a49b-dc13-11e4-93ec-b1c3831763f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"c1c1a49c-dc13-11e4-93ec-e75ad1d15939","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"c1c1a49d-dc13-11e4-93ec-07cae53a5308","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[488,489,490,491,492,493,494,495,496,497],"tindex":"c1c1a49e-dc13-11e4-93ec-5fdcc662e176","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"c1c1a49f-dc13-11e4-93ec-e16dc1c944bc","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":0},{"failures":[0,1,2,95,120,3,4,121,5,122,6,7,8,9,10,89,11,12,90,13,15,16,17,18,19,20,21,22,23,24,25],"tindex":"c1c1a4a0-dc13-11e4-93ec-915d3fd74dbe","variableMapping":{"locs":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[],"tindex":"c1c1a4a1-dc13-11e4-93ec-152b11848749","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[174,78,0,1,2,79,95,120,80,3,81,82,83,84,85,4,121,86,87,88,5,122,6,7,8,9,10,89,11,12,90,13,14,15,16,17,18,19,20,91,21,22,23,24,25,335,203,125,365,366,368,369,222,223,224,370,371,372,373,225,374,375,376,377,378,379,388,390,391,392,255,135,395,136,137,37,397,398,399,400,401,402,138,38,405,39,406,407,408,40,41,257,409,410,140,412,42,43,141,413,414,142,415,258,259,143,416],"tindex":"c1c1a4a2-dc13-11e4-93ec-3110ba26ac5d","variableMapping":{"size":"a","delta":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-1},{"failures":[331],"tindex":"c1c1a4a3-dc13-11e4-93ec-4b581ad68d93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[488,489,490,491,493,494,504,505,495,496,497,352,355,357,214,506,368,371,373,225],"tindex":"c1c1a4a4-dc13-11e4-93ec-abe693f36cc8","variableMapping":{"size":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[61,62],"tindex":"c1c1a4a5-dc13-11e4-93ec-eba7c4863838","variableMapping":{"ref":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"c1c1cbb6-dc13-11e4-93ec-c3810ccce82e","variableMapping":{"allIter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[101,507],"tindex":"c1c1cbb7-dc13-11e4-93ec-2be4b5d3e2d9","variableMapping":{"index":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"c1c1cbb8-dc13-11e4-93ec-5d766ed23300","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[25],"tindex":"c1c1cbb9-dc13-11e4-93ec-3fd0c951414e","variableMapping":{"val":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-1},{"failures":[0,1,92,93,2,94,95,99,176,17,20,126,26,352,212,213,356,357,214,359,360,361,508,509,506,510,365,368,223,370,372,373,225,375,376,378],"tindex":"c1c1cbba-dc13-11e4-93ec-c956c032feb4","variableMapping":{"size":"tmpErr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-1},{"failures":[237,32,34,393,403,39,41,426,46,48,449,53,55],"tindex":"c1c1cbbb-dc13-11e4-93ec-85ca8e6ef62f","variableMapping":{"currentEntry":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"c1c1cbbc-dc13-11e4-93ec-0394a764bded","variableMapping":{"byteCount":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"c1c1cbbd-dc13-11e4-93ec-6baf466643a2","variableMapping":{"orientation":"fwdIncline","resultOrientation":"fwdIncline","baseOrientation":"restDist2D","java.lang.Math.PI":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":0},{"failures":[],"tindex":"c1c1cbbe-dc13-11e4-93ec-9506b4648fe5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"c1c1cbbf-dc13-11e4-93ec-573ec50ba54f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[27],"tindex":"c1c1cbc0-dc13-11e4-93ec-110c05599b2b","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"defaultD","java.lang.Double.POSITIVE_INFINITY":"defaultD","weight":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[312,315],"tindex":"c1c1cbc1-dc13-11e4-93ec-81a8d9f4c32c","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[],"tindex":"c1c1cbc2-dc13-11e4-93ec-cf53dc2b072a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[511,512,513],"tindex":"c1c1cbc3-dc13-11e4-93ec-5d474f52ad62","variableMapping":{"maxTurnCosts":"maxTurnCosts","costs":"costs","turnRestrictionBit":"turnRestrictionBit","restricted":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"c1c1cbc4-dc13-11e4-93ec-710cbe1c8ed9","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":0},{"failures":[],"tindex":"c1c2dd35-dc13-11e4-93ec-ffea3555c33b","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"weight","java.lang.Double.POSITIVE_INFINITY":"weight","weight":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[28,116,117],"tindex":"c1c2dd36-dc13-11e4-93ec-83fcb12f905d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:97","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[],"tindex":"c1c2dd37-dc13-11e4-93ec-85f0a9e6c9bd","variableMapping":{"distInMeter":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[29,30,32,34,35,36,37,39,41,42,43,44,46,48,49,50,51,53,55,56,57],"tindex":"c1c2dd38-dc13-11e4-93ec-934c81393727","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[58],"tindex":"c1c2dd39-dc13-11e4-93ec-e7f4209ed928","variableMapping":{"sacScale":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"c1c2dd3a-dc13-11e4-93ec-a73ccee71ebf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"c1c2dd3b-dc13-11e4-93ec-9d679c59503b","variableMapping":{"i":"low","to":"low","lonSize":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[172],"tindex":"c1c2dd3c-dc13-11e4-93ec-09032fb8b7c5","variableMapping":{"logMessagesPercentage":"eleDelta","logMessages":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[0,1,92,93,2,94,95,120,3,4,121,5,122,6,7,8,9,10,89,11,12,90,13,14,15,16,17,18,19,20,91,21,22,23,24,25,126,26],"tindex":"c1c2dd3d-dc13-11e4-93ec-4f6634a4fe95","variableMapping":{"err":"from","tmpErr":"from","y1":"from","dLon":"from","sLat":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"c1c2dd3e-dc13-11e4-93ec-052decbb8440","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":91,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":190,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":254,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":317,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":128,"com.graphhopper.reader.OSMReaderTest.testFerry":61,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":124,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":339,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":223,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":78,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":469,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":485,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":486,"com.graphhopper.storage.MMapDataAccessTest.testSegments":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":426,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":181,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":285,"com.graphhopper.coll.CompressedArrayTest.testCompress":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":73,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":82,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":243,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":367,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":286,"com.graphhopper.util.AngleCalcTest.testOrientation":465,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":86,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":120,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":13,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":200,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":364,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":74,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":333,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":368,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":116,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":66,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":12,"com.graphhopper.coll.BitSetImplTest.testCopy":173,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":267,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":212,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":478,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":144,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":268,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":504,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":5,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":358,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":213,"com.graphhopper.reader.OSMReaderTest.testSort":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":499,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":276,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":290,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":459,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":251,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":108,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":322,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":437,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":269,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":411,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":508,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":447,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":274,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":146,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":372,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":17,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":370,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":9,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":37,"com.graphhopper.coll.OSMIDMapTest.testGetLong":207,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":420,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":407,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":135,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":40,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":467,"com.graphhopper.coll.CompressedArrayTest.testCompress2":496,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":163,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":149,"com.graphhopper.GraphHopperAPITest.testLoad":126,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":396,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":111,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":450,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":51,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":62,"com.graphhopper.storage.LevelGraphStorageTest.testClone":398,"com.graphhopper.reader.OSMReaderTest.testBarriers":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":147,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":11,"com.graphhopper.util.GHUtilityTest.testCopy":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":233,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":379,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":209,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":70,"com.graphhopper.routing.PathTest.testFindInstruction":198,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":44,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":125,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":415,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":341,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":460,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":452,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":151,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":84,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":255,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":234,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":441,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":270,"com.graphhopper.util.InstructionListTest.testWayList2":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":359,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":162,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":476,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":199,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":281,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":510,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":402,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":304,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":287,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":32,"com.graphhopper.storage.RAMDirectoryTest.testSynched":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":427,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":89,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":156,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":177,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":22,"com.graphhopper.coll.OSMIDMapTest.testGet":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":148,"com.graphhopper.routing.PathBidirRefTest.testExtract":327,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":206,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":375,"com.graphhopper.storage.RAMDataAccessTest.testCopy":302,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":118,"com.graphhopper.storage.RAMDataAccessTest.testSegments":308,"com.graphhopper.util.GHUtilityTest.testSort2":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":18,"com.graphhopper.reader.OSMReaderTest.testMain":99,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":256,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":47,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":505,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":376,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":58,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":417,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":139,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":39,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":143,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":107,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":150,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":314,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":408,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":179,"com.graphhopper.storage.StorablePropertiesTest.testStore":311,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":300,"com.graphhopper.storage.GraphHopperStorageTest.testClone":444,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":60,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":385,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":451,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":235,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":391,"com.graphhopper.routing.PathTest.testTime":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":167,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":258,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":399,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":34,"com.graphhopper.reader.OSMReaderTest.testRelation":320,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":410,"com.graphhopper.util.GHUtilityTest.testSortDirected":338,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":502,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":296,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":191,"com.graphhopper.GraphHopperTest.testFootOnly":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":65,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":217,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":371,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":265,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":472,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":513,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":240,"com.graphhopper.search.NameIndexTest.testCreate":188,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":307,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":189,"com.graphhopper.routing.QueryGraphTest.testOneWay":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":215,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":69,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":211,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":488,"com.graphhopper.reader.OSMReaderTest.testWithBounds":105,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":310,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":228,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":31,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":192,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":244,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":471,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":137,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":77,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":433,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":429,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":155,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":6,"com.graphhopper.util.InstructionListTest.testWayList":201,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":461,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":262,"com.graphhopper.GraphHopperAPITest.testDisconnected179":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":236,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":492,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":434,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":231,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":501,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":134,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":92,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":446,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":87,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":512,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":121,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":511,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":479,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":24,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":442,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":226,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":480,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":280,"com.graphhopper.routing.PathTest.testWayList":197,"com.graphhopper.storage.MMapDataAccessTest.testCopy":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":252,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":238,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":470,"com.graphhopper.coll.OSMIDMapTest.testGet2":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":25,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":141,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":432,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":424,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":373,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":225,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":303,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":297,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":474,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":264,"com.graphhopper.util.GHUtilityTest.testSort":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":356,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":495,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":68,"com.graphhopper.search.NameIndexTest.testPut":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":419,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":443,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":369,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":221,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":348,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":483,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":346,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":275,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":110,"com.graphhopper.storage.MMapDirectoryTest.testSynched":380,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":430,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":28,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":247,"com.graphhopper.routing.PathTest.testFound":325,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":175,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":473,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":288,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":414,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":27,"com.graphhopper.util.AngleCalcTest.testAtan2":466,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":498,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":45,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":187,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":227,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":130,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":157,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":298,"com.graphhopper.util.InstructionListTest.testEmptyList":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":90,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":16,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":112,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":19,"com.graphhopper.reader.PrinctonReaderTest.testRead":96,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":161,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":224,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":425,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":237,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":127,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":431,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":261,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":507,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":481,"com.graphhopper.reader.OSMReaderTest.testFoot":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":131,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":184,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":196,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":357,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":494,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":63,"com.graphhopper.reader.OSMReaderTest.testOneWay":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":214,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":52,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":57,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":436,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":71,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":295,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":242,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":448,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":83,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":506,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":487,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":81,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":294,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":349,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":509,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":329,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":239,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":323,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":321,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":440,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":383,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":315,"com.graphhopper.routing.PathBidirRefTest.testExtract2":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":122,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":168,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":360,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":185,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":458,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":210,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":170,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":253,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":354,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":160,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":401,"com.graphhopper.GraphHopperTest.testFootAndCar":93,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":282,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":164,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":378,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":305,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":232,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":421,"com.graphhopper.storage.StorablePropertiesTest.testLoad":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":21,"com.graphhopper.GraphHopperTest.testPrepareOnly":174,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":500,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":30,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":103,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":392,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":123,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":457,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":241,"com.graphhopper.util.AngleCalcTest.testCombined":468,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":413,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":43,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":145}}]
