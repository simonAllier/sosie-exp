[{"failures":[0,1,2],"tindex":"078a2015-dad1-11e4-b1fa-3b6f038f3b8a","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.EMPTY_PARENT":"i","n":"i","parents":"elem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:131","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"078a2016-dad1-11e4-b1fa-275993b0f404","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"prio","speed":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,0,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"tindex":"078a6e37-dad1-11e4-b1fa-79ba8a3319a9","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"078a6e38-dad1-11e4-b1fa-cdd36226af18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:108","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[83,88,89,106,302],"tindex":"078a6e39-dad1-11e4-b1fa-3997137d38f9","variableMapping":{"tmpDegreeCounter":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[303,304,82],"tindex":"078a954a-dad1-11e4-b1fa-7502f04e4b36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[305,306,307,308,309,310,311,312,89],"tindex":"078a954b-dad1-11e4-b1fa-99d39cad55a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[306],"tindex":"078a954c-dad1-11e4-b1fa-17b9c96964ad","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"078a954d-dad1-11e4-b1fa-29442b60003b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"078a954e-dad1-11e4-b1fa-fd35eb5038d2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[313,314,315,316,317,318,319,320,321,322],"tindex":"078a954f-dad1-11e4-b1fa-01bdacea864d","variableMapping":{"r":"lon","x":"lon","absY":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[18,22,23],"tindex":"078a9550-dad1-11e4-b1fa-673242fd897a","variableMapping":{"segmentSizeInBytes":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[306,323,324,325,326,309,327,328,329],"tindex":"078a9551-dad1-11e4-b1fa-a5e33a285387","variableMapping":{"configLocation":"message","fileStr":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:64","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"078a9552-dad1-11e4-b1fa-7f4e1dbb4dd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"078a9553-dad1-11e4-b1fa-ed047033fc2b","variableMapping":{"delta_lat":"minLat","r_lat":"minLat","a_lat":"minLat","delta_lon":"minLat","r_lon":"minLat","a_lon":"minLat","norm":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"078a9554-dad1-11e4-b1fa-6942e2b6b983","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[330,331,310,332,26,333,334,335,336,54,83,101,106,110,118,130,147,167,180,222,337,272],"tindex":"078a9555-dad1-11e4-b1fa-6d696a7d6c09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:127","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"078a9556-dad1-11e4-b1fa-27c1bb69f193","variableMapping":{"res":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"078a9557-dad1-11e4-b1fa-594bac4b36a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"078eb408-dad1-11e4-b1fa-5746af68766d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"078eb409-dad1-11e4-b1fa-31b49aab51f1","variableMapping":{"mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"078eb40a-dad1-11e4-b1fa-0f6d834d41cc","variableMapping":{"shift":"relationFlags","tmpValue":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"078eb40b-dad1-11e4-b1fa-c1c2656b8093","variableMapping":{"err":"shift","dLat":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[338,339,340,341,342,343,344,310,25,345,346,42,52,79],"tindex":"078eb40c-dad1-11e4-b1fa-7d0d1c55b125","variableMapping":{"newUniqueOsmId":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"078eb40d-dad1-11e4-b1fa-27632a30977f","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"078eb40e-dad1-11e4-b1fa-19f1f2d85f6b","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[347,348,349,304,350,351,82,83,84,85,86,88,89,90,92,93,94,95,96,97,102,103,104,105,106,107,109,352,302],"tindex":"078eb40f-dad1-11e4-b1fa-57ef2c531caa","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"078eb410-dad1-11e4-b1fa-c3845caf29e1","variableMapping":{"high":"defaultL","highKey":"defaultL","key":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[25],"tindex":"078eb411-dad1-11e4-b1fa-97f2c33dd04e","variableMapping":{"factor":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"078eb412-dad1-11e4-b1fa-f72a5c8d291f","variableMapping":{"indexWithMaxDist":"maxCount","lastIndex":"biggestStart","fromIndex":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":0},{"failures":[5,11,12,13,14,24,25,62,66,67,69,70,71,72,73,74,76,77,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,353,354,355,101,102,103,104,105,106,107,109,352,110,302,356,357,358,359,360,361,362,363,364,120,121,122,123,124,133,134,135,153,154,155,365,366,367,368,369,172,176,193,198,199,204,206,207,370,371,214,218,235,240,241,246,248,249,372,253,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,264,268,285,291,296,298,299,388,389,390,391,392,393,394,395,396,397,398,399],"tindex":"078eda23-dad1-11e4-b1fa-c1b32ca19238","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"078eda24-dad1-11e4-b1fa-85162bb36b94","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"element","i":"element","mValues":"elem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:118","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.coll.SparseIntIntArray.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[96],"tindex":"078eda25-dad1-11e4-b1fa-67e25e1af611","variableMapping":{"dLat":"nextNodeBit","dLon":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-1},{"failures":[],"tindex":"078eda26-dad1-11e4-b1fa-c50d9a4c1656","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[344],"tindex":"078eda27-dad1-11e4-b1fa-07ef0838c817","variableMapping":{"segmentSizeInBytes":"shift","allSegments":"shift","capacity":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[400,306,401,402,323,403,339,404,340,308,405,406,325,407,408,341,409,309,410,411,327,412,413,342,343,344,414,345,312,415,416,329,417,418,346],"tindex":"078eda28-dad1-11e4-b1fa-436440e288ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[],"tindex":"078eda29-dad1-11e4-b1fa-7325992521c0","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"078eda2a-dad1-11e4-b1fa-63b360e195b0","variableMapping":{"dX":"maxSpeed","dY":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[],"tindex":"078eda2b-dad1-11e4-b1fa-8f5f547acb94","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[333,83,106],"tindex":"078eda2c-dad1-11e4-b1fa-938f77898002","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"078eda2d-dad1-11e4-b1fa-01669e23304e","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"078eda2e-dad1-11e4-b1fa-cda63198e06e","variableMapping":{"from":"endNode","end":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"078eda2f-dad1-11e4-b1fa-b729a1beb399","variableMapping":{"currentEntry":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[419,420,421],"tindex":"078eda30-dad1-11e4-b1fa-c78f06ff2410","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"078eda31-dad1-11e4-b1fa-7b19786f764b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"078eda32-dad1-11e4-b1fa-05cd0287290d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"078f0143-dad1-11e4-b1fa-851a4224747a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"078f0144-dad1-11e4-b1fa-05e8d1c8838b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"078f0145-dad1-11e4-b1fa-afb2d36cc50b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"078f0146-dad1-11e4-b1fa-2d6c156f2199","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"078f0147-dad1-11e4-b1fa-1334dfda6a37","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[343,344],"tindex":"078f0148-dad1-11e4-b1fa-09c704dc0e0c","variableMapping":{"directionBitMask":"relBitMask","flags":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"078f0149-dad1-11e4-b1fa-83cf295f54dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"078f014a-dad1-11e4-b1fa-b341192ec9e0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"078f014b-dad1-11e4-b1fa-7103e2cc4f1f","variableMapping":{"radiusInMeter":"minLatTmp","com.graphhopper.util.DistanceCalcEarth.C":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[84,101,302],"tindex":"078f014c-dad1-11e4-b1fa-bbe2c98980bf","variableMapping":{"str":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:520","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"078f014d-dad1-11e4-b1fa-bf3848c8d361","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"078f014e-dad1-11e4-b1fa-cd3e555fa9cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[5,11,12,13,14,24,25,62,66,67,69,70,71,72,73,74,76,77,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,97,353,354,355,101,102,103,104,105,106,107,109,352,110,302,356,357,358,359,360,361,362,363,364,120,121,122,123,124,133,134,135,153,154,155,365,366,367,368,369,172,193,199,204,207,370,371,214,235,241,246,249,253,374,376,377,378,379,381,382,385,386,387,264,285,291,296,299,389,391,392,393,394,396,397],"tindex":"078f014f-dad1-11e4-b1fa-5999736d8a12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[340,308,309,343,344,345,312],"tindex":"078f0150-dad1-11e4-b1fa-db861f76645c","variableMapping":{"segmentSizeInBytes":"priorityFromRelation","indexDivisor":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[22],"tindex":"078f2861-dad1-11e4-b1fa-b7344d05572c","variableMapping":{"turnCostIndex":"start","NO_TURN_ENTRY":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-1},{"failures":[],"tindex":"078f2862-dad1-11e4-b1fa-eb0bc0d096f4","variableMapping":{"min":"speed","dist":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":0},{"failures":[3,5,15,29,30,31,32,33,34,35,36,0,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,101,102,103,104,107,109,110,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,257,258,386,262,264,265,266,267,268,269,270,271,272,273,276,277,278,279,280,282,283,284,285,286,288,290,291,292,293,294,295,296,298,299,300,301],"tindex":"078f2863-dad1-11e4-b1fa-9f9dc7e289e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[29,31,0,37,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,61,62,63,64,65,103,104,107,110],"tindex":"078f2864-dad1-11e4-b1fa-d5e7ceeccec4","variableMapping":{"edgeCount":"tmpEdge","this":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:373","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException((\"too many edges. new edge id would be negative. \" + com.graphhopper.storage.GraphHopperStorage.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[],"tindex":"078f2865-dad1-11e4-b1fa-bd31e4ea0290","variableMapping":{"bits":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-2},{"failures":[59,313,314,137,139,140,157,159,160,315,316,317,318,320,321,422,423,322],"tindex":"078f2866-dad1-11e4-b1fa-f195af8465ac","variableMapping":{"tmp":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"078f2867-dad1-11e4-b1fa-555996ed78c9","variableMapping":{"len":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","start":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":0},{"failures":[],"tindex":"078f2868-dad1-11e4-b1fa-7dc755acaa9d","variableMapping":{"baseNode":"maxTurnCosts","id":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[1],"tindex":"078f2869-dad1-11e4-b1fa-8d60badf001f","variableMapping":{"red":"size","green":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[305,306,323,324,308,325,326,309,327,344,328,312,329],"tindex":"078f286a-dad1-11e4-b1fa-4fe6725c1432","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[424,425,426,427,428,429,430,431,432,433,374,375,434,381,382,435,436,437,438,389,390,439,396,397],"tindex":"078f286b-dad1-11e4-b1fa-9fdf4a12ddbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"078f286c-dad1-11e4-b1fa-a39f8933fd33","variableMapping":{"y1":"length","y2":"length","x1":"length","x2":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[14,15,16,338,307,308,18,22,23,311,312,440,29,31,32,0,37,38,41,42,43,47,50,52,53,54,55,56,65,70,73,80,89,98,99,103,104,105,106,107,352,110,111,367,368,172,173,174,181,196,201,204,208,370,214,215,216,223,238,243,246,250,441,442,443,444,445,446,447,448,386,264,265,266,273,288,293,296,300],"tindex":"078f4f7d-dad1-11e4-b1fa-17d88adbddde","variableMapping":{"shift":"directionBitMask","tmpValue":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[449],"tindex":"07973ebe-dad1-11e4-b1fa-ed97126ab848","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[305,306,401,404,307,308,408,409,309,413,414,311,312,418],"tindex":"07973ebf-dad1-11e4-b1fa-8fc9ec668b57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"07973ec0-dad1-11e4-b1fa-f14d1c72613f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[],"tindex":"079765d1-dad1-11e4-b1fa-bf9abd3c9b1d","variableMapping":{"endIndexPlusOne":"removed","frontIndex":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[83,106,110],"tindex":"079765d2-dad1-11e4-b1fa-c59667cd1a62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"079765d3-dad1-11e4-b1fa-9740a300d188","variableMapping":{"high":"backwardBit","low":"encoded","guess":"forwardBit","guessedKey":"encoded","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":0},{"failures":[],"tindex":"079765d4-dad1-11e4-b1fa-b135bfdb4195","variableMapping":{"visitedCountFrom":"valueIfKeyNotFound","visitedCountTo":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"079765d5-dad1-11e4-b1fa-ef90fbfac783","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[450,307,451,452,453,454,311,455,456,333,335,336,349,304,351,83,88,89,101,106,110],"tindex":"079765d6-dad1-11e4-b1fa-d5036a66dd59","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[305,306,323,339,340,324,307,308,325,341,326,309,327,342,343,344,310,345,328,311,312,329,346,82,83,84,85,87,88,89,90,94,95,97],"tindex":"079765d7-dad1-11e4-b1fa-f1b5f11de878","variableMapping":{"resultOrientation":"speed","orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"079765d8-dad1-11e4-b1fa-2f28df7633ad","variableMapping":{"weightApproximation":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"079765d9-dad1-11e4-b1fa-0965fbad12c6","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[],"tindex":"079765da-dad1-11e4-b1fa-1d6312bc3276","variableMapping":{"speed":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[5,11,12,13,14,62,67,74,77,80,81,82,84,85,86,87,88,89,90,92,93,94,95,97,457,458,353,354,355,102,103,104,105,107,109,352,110,357,358,359,360,361,362,363,364,120,121,122,123,124,133,135,153,155,459,460,367,429,368,172,193,199,204,206,370,214,235,241,246,248,441,442,443,461,462,463,464,465,337,444,466,467,468,469,470,471,472,473,474,475,476,477,445,253,478,479,446,480,481,447,482,483,484,448,485,373,384,386,264,285,291,296,298,388,399],"tindex":"079765db-dad1-11e4-b1fa-73f8b280a070","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"079765dc-dad1-11e4-b1fa-65f9bb73c3a1","variableMapping":{"fwdIncline":"fwdIncline","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[449],"tindex":"079765dd-dad1-11e4-b1fa-7f8e9ca1ec9f","variableMapping":{"acceptBit":"flags","ferryBit":"otherValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"079765de-dad1-11e4-b1fa-efcee4cf10e3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[31,33,0,38,40,41],"tindex":"07978cef-dad1-11e4-b1fa-a1c466e69391","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[333,336,83,106,110],"tindex":"07978cf0-dad1-11e4-b1fa-6ffe2b720869","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"07978cf1-dad1-11e4-b1fa-db37f747a0e0","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"07978cf2-dad1-11e4-b1fa-f37885822d7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[313,314,486,131,137,139,140,151,157,159,160,315,316,318,320,321,422,423,322],"tindex":"07978cf3-dad1-11e4-b1fa-7b07bd48952e","variableMapping":{"delta_lat":"minLonTmp","r_lat":"maxLonTmp","a_lat":"minLonTmp","delta_lon":"minLonTmp","r_lon":"minLonTmp","a_lon":"maxLonTmp","norm":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[31,33,0,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,63,64,65,101,102,103,104,107,109,110,487],"tindex":"07978cf4-dad1-11e4-b1fa-17c4b4455aa8","variableMapping":{"edgeTo":"int0","edgeFrom":"int1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-1},{"failures":[],"tindex":"07978cf5-dad1-11e4-b1fa-ef38c8234132","variableMapping":{"dijkstra":"this","finishedFrom":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:280","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.routing.DijkstraBidirectionRef.boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":0},{"failures":[],"tindex":"07978cf6-dad1-11e4-b1fa-27513393b8ad","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[304,351],"tindex":"07978cf7-dad1-11e4-b1fa-d72b3a431854","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":60,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":67,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":338,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":385,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":442,"com.graphhopper.reader.OSMReaderTest.testFerry":82,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":16,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":154,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":102,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":346,"com.graphhopper.storage.MMapDataAccessTest.testSegments":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":182,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":373,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":458,"com.graphhopper.coll.CompressedArrayTest.testCompress":314,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":33,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":475,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":150,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":374,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":38,"com.graphhopper.GraphHopperTest.testPrepare":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":482,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":29,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":232,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":2,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":323,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":9,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":22,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":404,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":50,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":134,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":367,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":422,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":264,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":41,"com.graphhopper.GraphHopperTest.testLoadOSM":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":135,"com.graphhopper.reader.OSMReaderTest.testSort":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":407,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":20,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":369,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":377,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":244,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":370,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":483,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":73,"com.graphhopper.storage.RAMDataAccessTest.testHeader":395,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":203,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":365,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":289,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":221,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":429,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":172,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":342,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":158,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":156,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":46,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":266,"com.graphhopper.coll.OSMIDMapTest.testGetLong":363,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":192,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":281,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":487,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":386,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":283,"com.graphhopper.coll.CompressedArrayTest.testCompress2":313,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":409,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":183,"com.graphhopper.GraphHopperAPITest.testLoad":111,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":263,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":332,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":226,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":216,"com.graphhopper.storage.LevelGraphStorageTest.testClone":268,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":303,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":23,"com.graphhopper.reader.OSMReaderTest.testBarriers":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":173,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":148,"com.graphhopper.util.GHUtilityTest.testCopy":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":450,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":398,"com.graphhopper.routing.PathTest.testFindInstruction":81,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":174,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":335,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":297,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":126,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":245,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":230,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":439,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":187,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":260,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":331,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":270,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":464,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":427,"com.graphhopper.util.InstructionListTest.testWayList2":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":142,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":250,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":24,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":371,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":272,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":375,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":184,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":48,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":215,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":62,"com.graphhopper.coll.OSMIDMapTest.testGet":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":181,"com.graphhopper.routing.PathBidirRefTest.testExtract":27,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":336,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":285,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":362,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":162,"com.graphhopper.storage.RAMDataAccessTest.testCopy":391,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":379,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":209,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":478,"com.graphhopper.storage.RAMDataAccessTest.testSegments":397,"com.graphhopper.util.GHUtilityTest.testSort2":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":57,"com.graphhopper.reader.OSMReaderTest.testMain":84,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":191,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":452,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":481,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":275,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":279,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":300,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":70,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":414,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":282,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":95,"com.graphhopper.storage.StorablePropertiesTest.testStore":366,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":390,"com.graphhopper.storage.GraphHopperStorageTest.testClone":218,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":480,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":350,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":254,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":454,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":465,"com.graphhopper.routing.PathTest.testTime":79,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":298,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":144,"com.graphhopper.reader.OSMReaderTest.testRelation":91,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":474,"com.graphhopper.util.GHUtilityTest.testSortDirected":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":417,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":383,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":69,"com.graphhopper.GraphHopperTest.testFootOnly":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":400,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":304,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":157,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":344,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":470,"com.graphhopper.search.NameIndexTest.testCreate":359,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":396,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":66,"com.graphhopper.routing.QueryGraphTest.testOneWay":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":145,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":318,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":402,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":133,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":315,"com.graphhopper.reader.OSMReaderTest.testWithBounds":94,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":399,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":436,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":456,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":19,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":476,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":343,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":265,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":453,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":339,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":195,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":188,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":214,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":43,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":247,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":459,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":451,"com.graphhopper.GraphHopperAPITest.testDisconnected179":112,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":337,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":416,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":448,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":105,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":220,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":122,"com.graphhopper.routing.util.EncodedValueTest.testSwap":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":39,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":419,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":37,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":421,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":170,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":64,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":165,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":341,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":210,"com.graphhopper.routing.PathTest.testWayList":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":484,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":466,"com.graphhopper.coll.OSMIDMapTest.testGet2":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":65,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":380,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":293,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":194,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":179,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":159,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":160,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":392,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":326,"com.graphhopper.util.GHUtilityTest.testSort":6,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":138,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":322,"com.graphhopper.search.NameIndexTest.testPut":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":208,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":217,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":128,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":124,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":115,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":311,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":25,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":168,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":352,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":18,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":278,"com.graphhopper.routing.PathTest.testFound":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":253,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":302,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":310,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":295,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":434,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":406,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":185,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":358,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":435,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":252,"com.graphhopper.util.InstructionListTest.testEmptyList":10,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":223,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":51,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":403,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":58,"com.graphhopper.reader.PrinctonReaderTest.testRead":98,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":246,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":460,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":155,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":180,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":316,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":441,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":345,"com.graphhopper.reader.OSMReaderTest.testFoot":83,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":77,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":445,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":139,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":299,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":321,"com.graphhopper.reader.OSMReaderTest.testOneWay":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":140,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":227,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":242,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":202,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":382,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":455,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":472,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":34,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":486,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":440,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":116,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":381,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":26,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":468,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":68,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":96,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":211,"com.graphhopper.routing.PathBidirRefTest.testExtract2":28,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":432,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":143,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":327,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":356,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":413,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":89,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":485,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":136,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":243,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":271,"com.graphhopper.GraphHopperTest.testFootAndCar":106,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":235,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":277,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":309,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":166,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":393,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":462,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":424,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":61,"com.graphhopper.GraphHopperTest.testPrepareOnly":101,"com.graphhopper.GraphHopperTest.testVia":103,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":443,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":92,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":258,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":14,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":239,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":334,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":471,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":347,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":294,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":292,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":368}}]
