[{"failures":[0,1,2,3],"tindex":"a827ae0b-da7c-11e4-931a-355b750d37db","variableMapping":{"maxLeafEntries":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"a828bf7c-da7c-11e4-931a-37d17b4a3a1b","variableMapping":{"com.graphhopper.util.NumHelper.DEFAULT_PRECISION":"lat","this":"this","d1":"lat","d2":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"a828bf7d-da7c-11e4-931a-e11b4677af92","variableMapping":{"maxBits":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-1},{"failures":[],"tindex":"a828bf7e-da7c-11e4-931a-6d579945a20a","variableMapping":{"bytePos":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"a828bf7f-da7c-11e4-931a-4163607ed583","variableMapping":{"mask":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-2},{"failures":[],"tindex":"a828e690-da7c-11e4-931a-5b450d3462c2","variableMapping":{"oldValueIndex":"flags","lastKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"a828e691-da7c-11e4-931a-3d92efdaaaba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[62,63,64,65,66,67,21,68,22,69,70,11,71,72,73,74,75,76,18,19,77,78,79,80,81,82,83,84,85,86,87,25,88,89,90,91,92,93,94,95,34,96,97,98,99,100,101,102,103,104,105,43,106,107,108,109,110,111,112,113,114,53,115,116,117,118,119,120],"tindex":"a828e692-da7c-11e4-931a-edcfa7986779","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[21,23,24,27,30,33,45,48,121,55,58],"tindex":"a828e693-da7c-11e4-931a-f1e1c7b24624","variableMapping":{"usedBits":"segmentSizeInBytes","nodeBitMask":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[122,123],"tindex":"a828e694-da7c-11e4-931a-4da7816afed0","variableMapping":{"distance":"longTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"a828e695-da7c-11e4-931a-cbd06c0c45ac","variableMapping":{"lastKey":"hash","key":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[144],"tindex":"a828e696-da7c-11e4-931a-efdf39647ea7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"a828e697-da7c-11e4-931a-6d1b89c7eff6","variableMapping":{"high":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[72],"tindex":"a828e698-da7c-11e4-931a-4f69feb18161","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:250","type":"CtIfImpl","sourcecode":"if (!boolean)\n    return com.graphhopper.storage.GraphHopperStorage.reverseFlags(long, long);\n"},"status":-1},{"failures":[145,146,147],"tindex":"a828e699-da7c-11e4-931a-73f0fc7d8627","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"a828e69a-da7c-11e4-931a-2b846e71aaf0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"a828e69b-da7c-11e4-931a-6fa46146f99d","variableMapping":{"index":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"a8290dac-da7c-11e4-931a-b5eb992910c1","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":0},{"failures":[],"tindex":"a8290dad-da7c-11e4-931a-f7f3a6dd6cb4","variableMapping":{"i":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[72,73,148,149,77,84],"tindex":"a8290dae-da7c-11e4-931a-fb81dcd51388","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[150,151,152,153,148,149],"tindex":"a8290daf-da7c-11e4-931a-efd6212f725f","variableMapping":{"i":"size","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-1},{"failures":[154,155,4,156,5,6,157,158,7,8,159,160,161,162,163,164,165,166,167,168,169,170,171,122,67,172,173,145,174,175,176,177,146,178,179,180,21,181,182,183,184,185,186,187,188,189,190,9,10,11,12,13,71,14,191,15,148,85,192,86,193,194,195,32,92,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,102,103,222,104,223,224,225,50,110,226,227,228,229,230,112,231,113,232,233,60,119,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"a8290db0-da7c-11e4-931a-5bbe65090f55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"a8290db1-da7c-11e4-931a-914daa76ad77","variableMapping":{"bytePos":"todoBytes","segmentSizePower":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:310","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[249],"tindex":"a8290db2-da7c-11e4-931a-ed8e540fe816","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[250,251,252,253,254,255,256,257,258,259,1,2,260,261,262,263,264,265,266,267],"tindex":"a8290db3-da7c-11e4-931a-ad19bd9c4979","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"a8290db4-da7c-11e4-931a-f712161f12b5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"a8290db5-da7c-11e4-931a-b79138630d33","variableMapping":{"intVal":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[122,180,21,268,269,270,271],"tindex":"a8290db6-da7c-11e4-931a-bf4db0a2e21f","variableMapping":{"val":"bikeTag","defaultL":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"a8290db7-da7c-11e4-931a-cd35cc7e9263","variableMapping":{"r":"lastPrio","com.graphhopper.util.AngleCalc.PI_4":"lastPrio","x":"lastPrio","angle":"lastPrio","absY":"lastPrio","com.graphhopper.util.AngleCalc.PI3_4":"lastPrio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a8290db8-da7c-11e4-931a-2f13eb3eb459","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:747","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[],"tindex":"a82934c9-da7c-11e4-931a-0d9cbff549b4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"a82934ca-da7c-11e4-931a-5b5a2cea9ba4","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"a82934cb-da7c-11e4-931a-a5245a46db6f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"a82934cc-da7c-11e4-931a-35b2bcbe0445","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"a82934cd-da7c-11e4-931a-596777eeb65e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"a82934ce-da7c-11e4-931a-0969b0f6fdfc","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a82934cf-da7c-11e4-931a-6160a1848d67","variableMapping":{"cap":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"a82934d0-da7c-11e4-931a-ab4bf44e9fe6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"a82934d1-da7c-11e4-931a-b749829c39e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"a82934d2-da7c-11e4-931a-7dd8fb55bed2","variableMapping":{"offset":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"a82934d3-da7c-11e4-931a-33bd2e824221","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"a82934d4-da7c-11e4-931a-1feea902b784","variableMapping":{"distance":"shortTripsSpeed","speed":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[272,273,274],"tindex":"a82934d5-da7c-11e4-931a-5789d2bd2290","variableMapping":{"tt":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"a82934d6-da7c-11e4-931a-7785daba3597","variableMapping":{"latlon":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-2},{"failures":[275,276,163,277],"tindex":"a82934d7-da7c-11e4-931a-1bf8d0948eff","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"y","speed":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[4,8,17,20,278],"tindex":"a82934d8-da7c-11e4-931a-9f26f52f53f1","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"nodeB","id":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"a8295be9-da7c-11e4-931a-3500a783600b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"a8295bea-da7c-11e4-931a-e557b5df5dbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[279],"tindex":"a8295beb-da7c-11e4-931a-fb87db75460d","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[8,280,281,282],"tindex":"a8295bec-da7c-11e4-931a-f1a308d95ce9","variableMapping":{"id":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"a8295bed-da7c-11e4-931a-e9201c6e6bb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"a8295bee-da7c-11e4-931a-69171611673a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[154,155,4,156,5,6,157,158,7,8,159,160,161,162,163,164,165,166,167,168,169,170,171,122,67,172,173,145,174,175,176,177,146,178,179,180,21,181,182,183,184,185,186,187,188,189,190,9,10,11,12,13,71,14,191,15,148,85,192,86,194,32,92,197,198,199,200,201,202,203,204,205,206,207,208,209,211,213,214,215,216,218,219,102,103,222,104,224,50,110,227,229,230,112,231,113,233,60,119,235,237,239,240,241,242,244,245,248],"tindex":"a829d11f-da7c-11e4-931a-398c620b6f04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[124,125,20,127,129,130,131,133,137,138,139,141,142,143],"tindex":"a829d120-da7c-11e4-931a-4b5f066b165a","variableMapping":{"towerNodeDistance":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"a829d121-da7c-11e4-931a-a712f520c354","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a829d122-da7c-11e4-931a-0dd053807c2c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":0},{"failures":[],"tindex":"a829f833-da7c-11e4-931a-9fc6eff4f234","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"a829f834-da7c-11e4-931a-41c771d6a98b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[],"tindex":"a829f835-da7c-11e4-931a-93b987293ca2","variableMapping":{"high":"forwardBit","len":"forwardBit","start":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[187],"tindex":"a829f836-da7c-11e4-931a-f9f2be3065c5","variableMapping":{"tmp":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"a829f837-da7c-11e4-931a-bd6eb16beb80","variableMapping":{"name":"this","this":"this","location":"this","da":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:171","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess.getType().isStoring())\n    com.graphhopper.util.Helper.com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[283],"tindex":"a829f838-da7c-11e4-931a-f70adaded2ae","variableMapping":{"len":"lastEdgeIndex","i":"lastEdgeIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-1},{"failures":[251,253,254,256,257,258,2,260,263,265,266],"tindex":"a829f839-da7c-11e4-931a-c97c37813bb1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"a829f83a-da7c-11e4-931a-25b8405943a8","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"a829f83b-da7c-11e4-931a-1fadbe912572","variableMapping":{"red":"usedBits","green":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"a829f83c-da7c-11e4-931a-2d9f17d32822","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"a829f83d-da7c-11e4-931a-91a84e18d01a","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[284,20,148,285,79,81,286],"tindex":"a829f83e-da7c-11e4-931a-51ef8e840291","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[152,149],"tindex":"a829f83f-da7c-11e4-931a-e331350f3c01","variableMapping":{"fullyLoaded":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[287],"tindex":"a829f840-da7c-11e4-931a-050751e293f5","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"a829f841-da7c-11e4-931a-4bbc7b2570db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"a829f842-da7c-11e4-931a-d79b56c80569","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"a829f843-da7c-11e4-931a-ebe5dc55291e","variableMapping":{"speed":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[287,288,289,290,291,292,293,294],"tindex":"a82a1f54-da7c-11e4-931a-d9d796a2f4ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[],"tindex":"a82a1f55-da7c-11e4-931a-0f9275ddcc0c","variableMapping":{"preferWayEncoder":"this","flags":"otherValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.getValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"a82a1f56-da7c-11e4-931a-897cad2a15f5","variableMapping":{"size":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[251,253,254,256,257,258,2,260,263,265,266],"tindex":"a82a1f57-da7c-11e4-931a-cd5b0d42ff0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"a82a1f58-da7c-11e4-931a-fdcca2de8072","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"a82c6949-da7c-11e4-931a-fd4877baa1bc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"a82c694a-da7c-11e4-931a-d5a5b1adfc80","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[4,156,157,295,73,284,151,296,74,16,75,297,76,298,18,19,299,300,20,153,148,149,301,77,79,81,84],"tindex":"a82c694b-da7c-11e4-931a-5fae27fa7641","variableMapping":{"reverse":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:618","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Not yet supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"a82c694c-da7c-11e4-931a-0f6ed5df2448","variableMapping":{"numTiles":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[302,303,304,305],"tindex":"a82c694d-da7c-11e4-931a-3b1b726b095f","variableMapping":{"synched":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[154,6,8,67,175,176,306,123,307,252,272,268,281,282,308,273,269,270,264,274,271],"tindex":"a82c905e-da7c-11e4-931a-2503c31f6603","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"a82c905f-da7c-11e4-931a-8f2e6485c626","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"a82c9060-da7c-11e4-931a-8956576bf900","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"a82c9061-da7c-11e4-931a-0d770839ef1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"a82c9062-da7c-11e4-931a-ed3f85913175","variableMapping":{"mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[22,24,25,26,27,28,29,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,59,60,61],"tindex":"a82c9063-da7c-11e4-931a-474b85973683","variableMapping":{"elem":"mKeys","size":"mSize","i":"i","element":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"a82c9064-da7c-11e4-931a-fdcbae4cb32b","variableMapping":{"a":"mValues","high":"key","len":"key","start":"length","key":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:387","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[],"tindex":"a82c9065-da7c-11e4-931a-bfc2ec736196","variableMapping":{"latlon":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[309,310,311],"tindex":"a82c9066-da7c-11e4-931a-0d81d2614f16","variableMapping":{"initializedCounter":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"a82d7ac7-da7c-11e4-931a-61790c11f779","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"a82d7ac8-da7c-11e4-931a-15399ffc3514","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"level","tmpNode":"nodeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[154,155,4,156,5,6,157,312,158,7,8,159,313,62,295,314,315,316,317,160,161,162,163,63,318,319,164,320,321,322,64,323,65,66,122,67,172,173,145,174,175,176,177,324,146,178,179,180,21,147,325,287,326,306,123,327,288,289,307,328,329,302,68,330,331,332,333,186,187,334,0,250,335,251,252,253,303,272,336,337,338,339,340,341,342,254,290,268,343,255,344,345,280,346,347,348,281,349,350,282,308,351,273,352,256,257,353,354,355,356,357,358,359,258,291,269,360,259,144,1,361,2,362,363,364,365,366,367,368,260,292,270,261,249,22,369,23,24,69,70,370,3,262,371,263,264,265,305,274,372,373,374,375,376,377,378,266,293,271,379,267,380,381,188,189,382,383,384,190,9,385,10,11,12,13,71,14,386,191,15,387,388,389,390,72,73,284,151,296,74,152,16,75,17,297,76,298,18,19,299,300,20,391,153,148,149,301,77,78,285,392,79,80,393,394,395,396,81,82,83,397,286,84,398,85,192,399,400,401,86,87,25,402,193,403,404,405,406,88,26,89,27,28,407,29,408,409,410,30,31,194,411,412,90,413,195,32,33,91,414,415,92,416,196,197,93,417,278,418,419,136,420,198,199,200,421,137,422,138,139,423,424,425,426,427,428,429,430,431,432,433,434,435,436,201,202,203,204,437,205,438,439,440,441,442,443,444,140,445,206,207,208,446,141,447,142,143,448,449,450,451,452,453,454,94,95,34,455,456,457,458,459,460,96,35,97,36,37,461,38,462,463,464,39,40,465,466,467,98,468,209,41,42,99,469,470,100,471,472,473,101,474,102,475,476,103,222,477,478,479,104,105,43,480,223,481,482,483,484,106,44,107,45,46,485,47,486,487,488,48,49,224,489,490,108,491,225,50,51,109,492,493,110,494,226,227,111,495,496,497,283,498,499,230,52,500,112,231,501,502,503,113,114,53,504,232,505,506,507,508,115,54,116,55,56,509,57,510,511,512,58,59,233,513,514,117,515,516,60,61,118,517,518,119,519,234,235,120,520],"tindex":"a82da1d9-da7c-11e4-931a-539128c30e05","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"a82da1da-da7c-11e4-931a-2badabc9127f","variableMapping":{"str":"str","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:82","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[160,188],"tindex":"a82da1db-da7c-11e4-931a-29d7362c0cf1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[154,6,8,159,122,67,172,173,145,174,175,176,177,324,146,178,179,180,21,147,325,287,326,306,123,327,288,289,307,328,329,302,68,330,331,186,187,334,0,250,335,251,252,253,303,272,336,337,338,339,340,341,342,254,290,268,343,255,344,280,346,347,348,281,349,350,282,308,351,273,352,256,257,353,354,355,356,357,358,359,258,291,269,360,259,144,1,361,2,362,363,364,365,366,367,368,260,292,270,261,23,370,3,262,371,263,264,265,305,274,372,373,374,375,376,377,378,266,293,271,379,267,382,383,384,190,389,390,72,73,284,151,296,74,152,16,75,17,297,76,298,18,19,299,300,20,391,153,148,149,301,77,398,85,192,399,400,401,86,87,25,402,193,403,404,405,406,88,26,89,27,28,407,29,408,409,410,30,31,194,411,412,90,413,195,32,33,91,414,415,92,416,196,197,93,417,429,436,444,454,94,95,34,455,456,457,458,459,460,96,35,97,36,37,461,38,462,463,464,39,40,465,466,467,98,468,209,41,42,99,469,470,100,471,472,473,101,474,102,475,476,103,222,477,478,479,104,105,43,480,223,481,482,483,484,106,44,107,45,46,485,47,486,487,488,48,49,224,489,490,108,491,225,50,51,109,492,493,110,494,226,227,111,495,496,497,283,498,499,230,52,500,112,231,501,502,503,113,114,53,504,232,505,506,507,508,115,54,116,55,56,509,57,510,511,512,58,59,233,513,514,117,515,516,60,61,118,517,518,119,519,234,235,120,520],"tindex":"a82e652c-da7c-11e4-931a-8bc5f6b51bcb","variableMapping":{"versionHint":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"a82e652d-da7c-11e4-931a-b33e82cf7c19","variableMapping":{"err":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"a82e652e-da7c-11e4-931a-435a11b3c4c4","variableMapping":{"compressionLevel":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":516,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":391,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":230,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":294,"com.graphhopper.GraphHopperAPITest.testNoLoad":314,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":95,"com.graphhopper.reader.OSMReaderTest.testFerry":122,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":64,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":199,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":155,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":277,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":520,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":44,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":236,"com.graphhopper.coll.CompressedArrayTest.testCompress":125,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":368,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":197,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":465,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":419,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":237,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":83,"com.graphhopper.GraphHopperTest.testPrepare":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":471,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":78,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":410,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":371,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":260,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":316,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":502,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":284,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":75,"com.graphhopper.coll.BitSetImplTest.testCopy":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":207,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":265,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":102,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":132,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":113,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":84,"com.graphhopper.GraphHopperTest.testLoadOSM":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":448,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":208,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":345,"com.graphhopper.reader.OSMReaderTest.testSort":173,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":293,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":23,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":222,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":240,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":414,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":85,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":472,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":71,"com.graphhopper.storage.RAMDataAccessTest.testHeader":217,"com.graphhopper.routing.DijkstraTest.initializationError":389,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":493,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":515,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":405,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":497,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":475,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":481,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":251,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":104,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":422,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":421,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":74,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":53,"com.graphhopper.coll.OSMIDMapTest.testGetLong":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":296,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":480,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":511,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":112,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":58,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":276,"com.graphhopper.coll.CompressedArrayTest.testCompress2":124,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":31,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":352,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":107,"com.graphhopper.GraphHopperAPITest.testLoad":62,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":503,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":346,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":27,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":25,"com.graphhopper.storage.LevelGraphStorageTest.testClone":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.reader.OSMReaderTest.testBarriers":145,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":16,"com.graphhopper.util.GHUtilityTest.testCopy":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":457,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":434,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":220,"com.graphhopper.routing.PathTest.testFindInstruction":189,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":365,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":513,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":43,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":309,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":63,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":282,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":519,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":335,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":431,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":415,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":109,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":395,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":500,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":341,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":384,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":506,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":458,"com.graphhopper.util.InstructionListTest.testWayList2":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":449,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":482,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":262,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":332,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":186,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":192,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":508,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":305,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":45,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":201,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":152,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":174,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":239,"com.graphhopper.routing.AStarTest.initializationError":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":148,"com.graphhopper.coll.OSMIDMapTest.testGet":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":106,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":308,"com.graphhopper.routing.PathBidirRefTest.testExtract":387,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":183,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":373,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":424,"com.graphhopper.storage.RAMDataAccessTest.testCopy":213,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":495,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":41,"com.graphhopper.storage.RAMDataAccessTest.testSegments":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":372,"com.graphhopper.util.GHUtilityTest.testSort2":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":299,"com.graphhopper.reader.OSMReaderTest.testMain":172,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":374,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":271,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":425,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":477,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":116,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":57,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":120,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":11,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":0,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":512,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":180,"com.graphhopper.storage.StorablePropertiesTest.testStore":229,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":212,"com.graphhopper.storage.GraphHopperStorageTest.testClone":193,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":469,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":288,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":407,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":496,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":459,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":498,"com.graphhopper.routing.PathTest.testTime":381,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":357,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":234,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":505,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":330,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":40,"com.graphhopper.reader.OSMReaderTest.testRelation":324,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":514,"com.graphhopper.util.GHUtilityTest.testSortDirected":322,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":290,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":246,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":10,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":123,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":202,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":228,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":462,"com.graphhopper.search.NameIndexTest.testCreate":168,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":218,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":190,"com.graphhopper.routing.QueryGraphTest.testOneWay":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":452,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":206,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":126,"com.graphhopper.reader.OSMReaderTest.testWithBounds":179,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":221,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":268,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":494,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":466,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":114,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":501,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":261,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":490,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":327,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":486,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":86,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":73,"com.graphhopper.util.InstructionListTest.testWayList":161,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":416,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":274,"com.graphhopper.GraphHopperAPITest.testDisconnected179":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":460,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":491,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":339,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":378,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":404,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":397,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":370,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":298,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":382,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":82,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":266,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":301,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":427,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":267,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":398,"com.graphhopper.routing.PathTest.testWayList":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":306,"com.graphhopper.coll.OSMIDMapTest.testGet2":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":77,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":243,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":118,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":377,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":409,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":347,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":483,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":138,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":510,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":139,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":214,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":336,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":256,"com.graphhopper.util.GHUtilityTest.testSort":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":468,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":134,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":376,"com.graphhopper.search.NameIndexTest.testPut":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":111,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":420,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":205,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":252,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":187,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":438,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":476,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":353,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":170,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":333,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":487,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":509,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":209,"com.graphhopper.routing.PathTest.testFound":380,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":159,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":280,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":518,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":249,"com.graphhopper.util.AngleCalcTest.testAtan2":275,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":283,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":375,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":46,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":167,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":97,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":88,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":210,"com.graphhopper.util.InstructionListTest.testEmptyList":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":147,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":292,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":300,"com.graphhopper.reader.PrinctonReaderTest.testRead":65,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":200,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":35,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":127,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":94,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":504,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":488,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":250,"com.graphhopper.reader.OSMReaderTest.testFoot":67,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":98,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":171,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":142,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":144,"com.graphhopper.reader.OSMReaderTest.testOneWay":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":143,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":28,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":33,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":492,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":366,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":245,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":272,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":464,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":394,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":289,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":80,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":244,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":441,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":461,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":385,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":399,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":121,"com.graphhopper.routing.PathBidirRefTest.testExtract2":388,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":436,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":450,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":165,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":195,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":442,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":360,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":176,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":474,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":443,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":446,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":91,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":321,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":507,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":329,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":194,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":56,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":428,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":215,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":456,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":153,"com.graphhopper.GraphHopperTest.testPrepareOnly":154,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":34,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":146,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":499,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":163,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":349,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":177,"com.graphhopper.routing.AStarBidirectionTest.initializationError":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":463,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":331,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":517,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":61,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":103}}]
