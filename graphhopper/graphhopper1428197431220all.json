[{"failures":[],"tindex":"59d56616-db33-11e4-90d8-25b5f9505612","variableMapping":{"orientation":"midLat","java.lang.Math.PI":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"59d62967-db33-11e4-90d8-dfcec421db69","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"59d62968-db33-11e4-90d8-a10b7fd728e3","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"size","edge":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-2},{"failures":[],"tindex":"59d62969-db33-11e4-90d8-0dbd510d6861","variableMapping":{"shift":"lastTime","flags":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"59d6296a-db33-11e4-90d8-f982269f9bab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"59d6296b-db33-11e4-90d8-1b2b62a031ab","variableMapping":{"tmpNo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"59d6296c-db33-11e4-90d8-17ddf2586352","variableMapping":{"value":"usedBits","numberOfBits":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[23,31,33,35,36,40,45,49,51,52,53,57,59,61,62,66,71,75,78,79,82,87,91,95,99,103,106,125,126,111,117,124],"tindex":"59d6507d-db33-11e4-90d8-59c2505b2987","variableMapping":{"oldValueIndex":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[],"tindex":"59d6507e-db33-11e4-90d8-1127884d360b","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[127,128,129,130,131,132,133,108,134,135,136,137,138,139,140,141,142,109,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"tindex":"59d6507f-db33-11e4-90d8-3779186afe83","variableMapping":{"size":"from","index":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[33,35,45,59,61,71,78,79,87,95,103],"tindex":"59d65080-db33-11e4-90d8-ff99c281630f","variableMapping":{"intKey":"wayType","str":"wayTypeName","key":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:120","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"59d65081-db33-11e4-90d8-8d4b60347104","variableMapping":{"from":"err","lonSize":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:300","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"59d65082-db33-11e4-90d8-7319b18938c3","variableMapping":{"r":"absY","x":"absY","absY":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"59d65083-db33-11e4-90d8-abdf00e7830d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[163,5,8,9,13,14,15,16,18,19,20,26,31,33,34,35,37,45,47,49,51,53,54,57,59,60,61,63,71,73,75,76,78,79,87,89,91,164,93,95,103,105,106,165,166,156,157,158,159,160,167,161,162,168,110,111,112,113,114,115,116,117,118,120,121,122,123,169,124],"tindex":"59d65084-db33-11e4-90d8-7de1a272ca42","variableMapping":{"oldValueIndex":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"59d65085-db33-11e4-90d8-b12046835fa8","variableMapping":{"high":"i","guess":"i","low":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":0},{"failures":[16],"tindex":"59d65086-db33-11e4-90d8-0dd983b40e83","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"59d65087-db33-11e4-90d8-3f11e4efc1ee","variableMapping":{"allBits":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[],"tindex":"59d65088-db33-11e4-90d8-813d3a8c362f","variableMapping":{"intVal":"i","degree":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"59d65089-db33-11e4-90d8-b79ab5f03cc6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"59d6779a-db33-11e4-90d8-2733b0d5b967","variableMapping":{"finishedTo":"finishedFrom","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"59d6779b-db33-11e4-90d8-3576a8a6f3cc","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[31,35,51,57,61,95,119],"tindex":"59d6779c-db33-11e4-90d8-83c122572665","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"code","speed":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"59d6779d-db33-11e4-90d8-6da2ead224ba","variableMapping":{"res":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"59d6779e-db33-11e4-90d8-d99eb9732392","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"59d6779f-db33-11e4-90d8-3bcffde1a39b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,0,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,127,128,404,405,406,407,408,409,410,411,412,413,414,415,163,416,417,418,419,420,421,1,422,423,424,4,27,28,425,107,426,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,438,438,439,439,129,440,130,441,442,443,444,445,131,132,446,447,448,133,108,134,135,136,137,138,139,140,141,142,109,143,144,145,146,147,148,149,150,151,152,153,154,155,165,166,156,157,158,159,160,167,161,162,168,110,111,112,113,114,115,116,117,118,120,121,122,123,124,449,450,451],"tindex":"59d6ecd0-db33-11e4-90d8-09469b5c58da","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[163,2,5,8,9,11,12,13,14,15,16,18,19,20,26,27,30,31,32,33,34,35,37,38,39,41,42,45,46,47,48,49,51,53,56,57,58,59,60,61,63,64,65,67,68,71,72,73,74,75,76,77,78,79,80,81,83,84,87,88,89,90,91,164,93,94,95,96,97,98,100,103,104,105,106,165,166,156,157,158,159,160,167,161,162,168,452,110,111,112,113,114,115,116,117,118,119,120,121,122,123,169,124,453,454],"tindex":"59d713e1-db33-11e4-90d8-151a44582e23","variableMapping":{"value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[130,442,131,446,448,455],"tindex":"59d713e2-db33-11e4-90d8-5bebd9e68ce7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"59d713e3-db33-11e4-90d8-69d943cdb0c8","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[456],"tindex":"59d713e4-db33-11e4-90d8-676a31d2b2ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"59d713e5-db33-11e4-90d8-a3496252d910","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"59d713e6-db33-11e4-90d8-27b7481532c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"59d713e7-db33-11e4-90d8-af493bd42f6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:329","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"59d713e8-db33-11e4-90d8-01719ed884d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[5,9],"tindex":"59d713e9-db33-11e4-90d8-1df3c425add7","variableMapping":{"acceptedRailways":"sidewalks","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"59d713ea-db33-11e4-90d8-57ac838da0b9","variableMapping":{"from":"segmentSizePower","lonSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:300","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"59d713eb-db33-11e4-90d8-49f2dde1099a","variableMapping":{"counter":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[2,11,38,64,80,97,114,120],"tindex":"59d73afc-db33-11e4-90d8-590ba11b63c5","variableMapping":{"len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"59d73afd-db33-11e4-90d8-ff2a2247be3b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[],"tindex":"59d73afe-db33-11e4-90d8-b7cd0fcc81b1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[165,162],"tindex":"59d73aff-db33-11e4-90d8-e180d969b39d","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[131,457,458],"tindex":"59d73b00-db33-11e4-90d8-1f0209c08245","variableMapping":{"low":"i","guess":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[30,32,41,42,45,46,48,49,56,58,67,68,71,72,74,75,77,79,83,84,87,88,90,91,100,103,104,106],"tindex":"59d73b01-db33-11e4-90d8-c7b824a8ca4a","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"59d73b02-db33-11e4-90d8-8d7c6a9f319f","variableMapping":{"nanoTime":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"59d73b03-db33-11e4-90d8-37306f45dd88","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"sLat","sign":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[459],"tindex":"59d73b04-db33-11e4-90d8-99c087e249ae","variableMapping":{"workerThreads":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"59d73b05-db33-11e4-90d8-4345dd5a3dcc","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:398","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) == null)\n    throw new java.lang.IllegalStateException(\"Graph not initialized\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"59d73b06-db33-11e4-90d8-d39c3d4838c1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[125],"tindex":"59d73b07-db33-11e4-90d8-63b1f3586416","variableMapping":{"guess":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"59d73b08-db33-11e4-90d8-4f4e72590961","variableMapping":{"node":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":0},{"failures":[],"tindex":"59d73b09-db33-11e4-90d8-19c8afa4f0dc","variableMapping":{"nodeB":"high","edgeId":"high","nodeA":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[9],"tindex":"59d73b0a-db33-11e4-90d8-41669354ea4d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[251,355,130,442,131,446,447,448,133,134,135,136,137,138,139,140,141,142,109,143,144,145,146,147,148,149,150,151,152,153,154,155,165,166,156,157,160,167,162],"tindex":"59d73b0b-db33-11e4-90d8-75f66cd8a8e7","variableMapping":{"reverseOrder":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"59d73b0c-db33-11e4-90d8-059108fd2be6","variableMapping":{"factor":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"59d7621d-db33-11e4-90d8-a9e23ae65d10","variableMapping":{"toLat":"y","fromLat":"y","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:40","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"59d7621e-db33-11e4-90d8-69f784dca48a","variableMapping":{"value":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"59d7621f-db33-11e4-90d8-a5a61fd0a911","variableMapping":{"dX":"speedVal","dY":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[459],"tindex":"59d76220-db33-11e4-90d8-930a2512ae69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[448,460,461,457,458],"tindex":"59d76221-db33-11e4-90d8-41a145828c9f","variableMapping":{"minResolutionInMeter":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"59d76222-db33-11e4-90d8-3f751c9b78c9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"59d76223-db33-11e4-90d8-114c2985a658","variableMapping":{"speed":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"59d76224-db33-11e4-90d8-a5680bf824f0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[181,186,285,290,323,328,372,377,127,404,163,4,19,28,30,34,35,46,462,463,54,56,60,61,72,82,91,164,99,106,107,426,108,134,109,144,145,155,156,157,158,159,160,161,162,110,111,123,124],"tindex":"59d76225-db33-11e4-90d8-d31bf7a0b849","variableMapping":{"foundIndex":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"59d76226-db33-11e4-90d8-bbdb9d1d7d6c","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":0},{"failures":[28],"tindex":"59d76227-db33-11e4-90d8-bdbf1b24d062","variableMapping":{"i":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"59d76228-db33-11e4-90d8-1d61db678910","variableMapping":{"dist":"maxLon","com.graphhopper.util.DistanceCalcEarth.R":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"59d76229-db33-11e4-90d8-7d2685e45dcf","variableMapping":{"i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"59d7622a-db33-11e4-90d8-756fba770784","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"59d7622b-db33-11e4-90d8-29310d0595d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[177,185,187,188,190,194,195,202,203,281,289,291,292,294,298,299,306,307,464,465,360,368,376,378,379,381,385,386,393,394,420,1,422,124],"tindex":"59d7622c-db33-11e4-90d8-8373471b6527","variableMapping":{"lazyUpdates":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"59d7622d-db33-11e4-90d8-ff0d9aec27b7","variableMapping":{"deltaX":"minLonTmp","maxX":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[108],"tindex":"59d7893e-db33-11e4-90d8-f59bc0906f72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"59d7893f-db33-11e4-90d8-7d3828fc9468","variableMapping":{"distance":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"59d78940-db33-11e4-90d8-9d3c17c8811a","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"valueIfKeyNotFound","id":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"59d78941-db33-11e4-90d8-213593c290dd","variableMapping":{"storedKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"59d78942-db33-11e4-90d8-43f9c2ff6062","variableMapping":{"start":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"59d78943-db33-11e4-90d8-6351e14c9bfe","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"59d78944-db33-11e4-90d8-237ec7f0595c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[213,215,216,217,218,220,221,222,223,224,225,226,228,229,466,467,468,469,470,471,472,251,252,254,256,257,258,259,261,262,263,264,265,266,267,269,270,127,128,142,145,146,149,165,156,157,158,159,160,167,161,162,168,110,111,112,113,114,115,116,117,118,120,121,122,123,124],"tindex":"59d78945-db33-11e4-90d8-591bac1895af","variableMapping":{"turnCostsCount":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"59d78946-db33-11e4-90d8-8915bc5bed8c","variableMapping":{"encoded":"bytePos","backwardBit":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":0},{"failures":[],"tindex":"59d78947-db33-11e4-90d8-6f15debc08c0","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"59d78948-db33-11e4-90d8-7b4493ae705c","variableMapping":{"high":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"59d78949-db33-11e4-90d8-c9318862401e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[473],"tindex":"59d7894a-db33-11e4-90d8-23286910a407","variableMapping":{"arg":"s","index":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:98","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[213,215,216,217,218,220,222,223,224,225,226,228,229,238,239,240,243,251,252,254,256,257,258,259,261,263,264,265,266,267,269,270,127,128,474,475,416,417,421,1,422,142,145,146,149,165,166,156,157,158,159,160,167,161,162,168,111,112,113,114,115,116,117,118,120,121,122,124],"tindex":"59d7894b-db33-11e4-90d8-a7bd1f78b1d3","variableMapping":{"err":"endIndexPlusOne","dLat":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"59d7b05c-db33-11e4-90d8-171941801e69","variableMapping":{"newName":"str","name":"str","com.graphhopper.search.NameIndex.logger":"com.graphhopper.routing.util.AbstractFlagEncoder.logger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-2},{"failures":[476,477,478,479,480,481,482,483,484],"tindex":"59d7b05d-db33-11e4-90d8-d1e7e0fa9cc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"status":-1},{"failures":[],"tindex":"59d7b05e-db33-11e4-90d8-59053c3db9f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:346","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":0},{"failures":[],"tindex":"59d7b05f-db33-11e4-90d8-2b8657b02704","variableMapping":{"tmp":"shift","initializedCounter":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"59d7b060-db33-11e4-90d8-b11f2ace9823","variableMapping":{"edgeId":"allBits","nextEdge":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[485,222,263,486,487,488,489,165,166,156,157,158,159,160,167,161,162,168,110,111,112,113,114,115,116,117,118,120,121,122,123,124,490],"tindex":"59d7b061-db33-11e4-90d8-65bcbdb80011","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"59d7b062-db33-11e4-90d8-b50099ff5878","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"59d873b3-db33-11e4-90d8-2df3aa001f0c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"59d873b4-db33-11e4-90d8-3b92a5b40d33","variableMapping":{"i":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-2},{"failures":[213,215,216,217,218,220,222,223,224,225,226,228,229,238,239,240,241,243,251,252,254,256,257,258,259,261,263,264,265,266,267,269,270,127,128,474,475,416,417,421,1,422,142,145,146,149,165,166,156,157,158,159,160,167,161,162,168,111,112,113,114,115,116,117,118,120,121,122,124],"tindex":"59d89ac5-db33-11e4-90d8-e57e8eb7282c","variableMapping":{"from":"frontIndex","lonSize":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:299","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[52,117],"tindex":"59d89ac6-db33-11e4-90d8-63a82ebe5233","variableMapping":{"segmentSizeInBytes":"nextTurnBit","indexDivisor":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"59d89ac7-db33-11e4-90d8-f5cf89ac80a0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"59d89ac8-db33-11e4-90d8-27a62c4ff4d3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":150,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":429,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":164,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":359,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.reader.OSMReaderTest.testFerry":110,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":405,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":96,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":257,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":166,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":289,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":490,"com.graphhopper.coll.CompressedArrayTest.testCompress":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":102,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":210,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":338,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":446,"com.graphhopper.GraphHopperTest.testPrepare":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":129,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":193,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":458,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":109,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":413,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":237,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":103,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":417,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":254,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":56,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":464,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":141,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":216,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":272,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":366,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":133,"com.graphhopper.GraphHopperTest.testLoadOSM":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":217,"com.graphhopper.reader.OSMReaderTest.testSort":113,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":1,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":276,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":205,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":171,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":482,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":351,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":435,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":310,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":391,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":182,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":273,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.reader.OSMNodeTest.testSetTags":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":279,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":376,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":88,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":261,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":146,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":137,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":293,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":299,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":383,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":362,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":385,"com.graphhopper.coll.CompressedArrayTest.testCompress2":476,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":195,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":77,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":290,"com.graphhopper.GraphHopperAPITest.testLoad":127,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":2,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":187,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":177,"com.graphhopper.storage.LevelGraphStorageTest.testClone":370,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":459,"com.graphhopper.reader.OSMReaderTest.testBarriers":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":424,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":322,"com.graphhopper.util.GHUtilityTest.testCopy":409,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":85,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":234,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":99,"com.graphhopper.routing.PathTest.testFindInstruction":427,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":281,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":460,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":8,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":404,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":231,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":206,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":308,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":294,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":361,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":43,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":463,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":372,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":323,"com.graphhopper.util.InstructionListTest.testWayList2":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":224,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":211,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":59,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":313,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":27,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":172,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":471,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":139,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":176,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":288,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":9,"com.graphhopper.routing.PathBidirRefTest.testExtract":418,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":65,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":229,"com.graphhopper.util.GHUtilityTest.testSort2":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":147,"com.graphhopper.reader.OSMReaderTest.testMain":112,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":363,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":298,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":484,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":266,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":13,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":348,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":377,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":381,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":474,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":126,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":402,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":378,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":30,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":384,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":123,"com.graphhopper.storage.GraphHopperStorageTest.testClone":179,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":20,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":486,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":18,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":189,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":355,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":324,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":357,"com.graphhopper.routing.PathTest.testTime":107,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":84,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":400,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":371,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":226,"com.graphhopper.reader.OSMReaderTest.testRelation":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":337,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":389,"com.graphhopper.util.GHUtilityTest.testSortDirected":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":46,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":488,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":431,"com.graphhopper.GraphHopperTest.testFootOnly":162,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":260,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":136,"com.graphhopper.reader.OSMElementTest.testSetTags":454,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":333,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":428,"com.graphhopper.routing.QueryGraphTest.testOneWay":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":227,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":481,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":215,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":478,"com.graphhopper.reader.OSMReaderTest.testWithBounds":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":330,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":421,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":433,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":339,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":51,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":367,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":364,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":106,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":17,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":295,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":175,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":134,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":208,"com.graphhopper.util.InstructionListTest.testWayList":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":63,"com.graphhopper.GraphHopperAPITest.testDisconnected179":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":325,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":320,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":41,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":451,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":353,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":158,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":181,"com.graphhopper.routing.util.EncodedValueTest.testSwap":125,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":55,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":199,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":21,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":278,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":75,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":170,"com.graphhopper.routing.PathTest.testWayList":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":352,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":329,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":155,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":69,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":192,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":3,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":262,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":38,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":461,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":78,"com.graphhopper.util.GHUtilityTest.testSort":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":97,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":315,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":255,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":243,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":34,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":244,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":80,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":296,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":420,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":343,"com.graphhopper.routing.PathTest.testFound":425,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":54,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":168,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":397,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":473,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":67,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":292,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":455,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":485,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":328,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":184,"com.graphhopper.util.InstructionListTest.testEmptyList":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":104,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":148,"com.graphhopper.reader.PrinctonReaderTest.testRead":450,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":207,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":258,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":327,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":317,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":297,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":52,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":487,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":31,"com.graphhopper.reader.OSMReaderTest.testFoot":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":341,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":221,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":401,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":483,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":92,"com.graphhopper.reader.OSMReaderTest.testOneWay":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":222,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":188,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":203,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":100,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":197,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":37,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":335,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":443,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":470,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":448,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":441,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":468,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":4,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":331,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":430,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":169,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":173,"com.graphhopper.routing.PathBidirRefTest.testExtract2":419,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":465,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":108,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":225,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":236,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":201,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":248,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":90,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":117,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":469,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":354,"com.graphhopper.util.SimpleIntDequeTest.testPush":475,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":218,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":204,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":373,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":22,"com.graphhopper.GraphHopperTest.testFootAndCar":159,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":196,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":269,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":445,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":151,"com.graphhopper.GraphHopperTest.testPrepareOnly":165,"com.graphhopper.GraphHopperTest.testVia":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":319,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":120,"com.graphhopper.reader.OSMElementTest.testHasTag":453,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":358,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":163,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":200,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":6,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":334,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":26,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":396,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":394,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":275}}]
