[{"failures":[],"tindex":"beac6e93-dab3-11e4-9192-db1b8337ef54","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT_STORE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"beac95a4-dab3-11e4-9192-4f9e72b5caff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:308","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"status":0},{"failures":[0,1,2],"tindex":"beac95a5-dab3-11e4-9192-4f32a6846904","variableMapping":{"param":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:66","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-1},{"failures":[],"tindex":"beac95a6-dab3-11e4-9192-9d6aeaa6ef64","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"beac95a7-dab3-11e4-9192-3f4ece8559c4","variableMapping":{"edgeId":"oldValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":-2},{"failures":[],"tindex":"beac95a8-dab3-11e4-9192-bff5ab7a4544","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"beac95a9-dab3-11e4-9192-0ba5ba231628","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-1},{"failures":[90,91],"tindex":"beac95aa-dab3-11e4-9192-83b1967b9ede","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"beac95ab-dab3-11e4-9192-af338103193d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[92,10,11,12,13,14,15,16,17,18,19,21,93,94,95],"tindex":"beac95ac-dab3-11e4-9192-81198d1f8e21","variableMapping":{"encodingManager":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1003","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    throw new java.lang.IllegalArgumentException(((\"Contraction hierarchies preparation \" + \"requires (at the moment) only one vehicle. But was:\") + (com.graphhopper.routing.util.EncodingManager)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-1},{"failures":[],"tindex":"beac95ad-dab3-11e4-9192-07d05a10a2c8","variableMapping":{"need":"shift","i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[96,9,92,15,20,21,46,97,98,99,100,101,102,103,104,105,51,52,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,70,128,129,130,131,132,133,134,135,136,76,93,137,138,139,140,141,142,143,0,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,2,173,174,175,176,177,82,178,179,180,181,182,183,184],"tindex":"beacbcbe-dab3-11e4-9192-51875995f92f","variableMapping":{"len":"tmpValue","start":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"beacbcbf-dab3-11e4-9192-f180ab133dfa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[92,14,15,75,93,81,185,139,186,187,142,144,188,189,190,191,192,193,194,195,196],"tindex":"beacbcc0-dab3-11e4-9192-d1328cafdfc9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"beacbcc1-dab3-11e4-9192-131cb6971a56","variableMapping":{"pushingSections":"pushingSections","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"beacbcc2-dab3-11e4-9192-83a90ccf0de8","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"com.graphhopper.routing.util.PriorityWeighting.KEY","tmpNode":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[92,10,11,12,13,14,15,16,17,18,19,21,75,197,76,77,78,93,79,198,80,81,94,95],"tindex":"beacbcc3-dab3-11e4-9192-e7fb564e93bb","variableMapping":{"ref":"del"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":-1},{"failures":[],"tindex":"beacbcc4-dab3-11e4-9192-d794888976e8","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","com.graphhopper.routing.util.EncodingManager.RACINGBIKE":"com.graphhopper.routing.util.EncodingManager.BIKE","com.graphhopper.routing.util.EncodingManager.FOOT":"entryVal","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.BIKE","entryVal":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[151,152,153,157,158,163,164,165,168,169,170],"tindex":"beacbcc5-dab3-11e4-9192-2930c9667d9b","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"paveType","sign":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[199,200,201,202,203,204],"tindex":"beacbcc6-dab3-11e4-9192-69cb432c3643","variableMapping":{"high":"flags","len":"scDirMask","start":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[205,206,207],"tindex":"beacbcc7-dab3-11e4-9192-654894f600b6","variableMapping":{"locs":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[15,208],"tindex":"beacbcc8-dab3-11e4-9192-3d0a86ae6154","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-1},{"failures":[9,92,10,11,12,13,14,15,16,17,18,19,20,209,21,75,197,76,77,78,93,79,198,80,81,94,210,185,139,186,140,187,142,143,144,149,188,189,211,190,212,191,192,193,213,194,195,214,196],"tindex":"beacbcc9-dab3-11e4-9192-11b3a5083596","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[1],"tindex":"beace3da-dab3-11e4-9192-f1fd344b486d","variableMapping":{"size":"val","hash":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[215],"tindex":"beace3db-dab3-11e4-9192-23da7d05e87d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[1],"tindex":"beace3dc-dab3-11e4-9192-a3410b85eae8","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[216,202,217,218,219,220,221,204,222],"tindex":"beace3dd-dab3-11e4-9192-dfe6c4fa3a4b","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"beace3de-dab3-11e4-9192-1b13061eb15f","variableMapping":{"distance":"shortTripsSpeed","speed":"unknownSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"beace3df-dab3-11e4-9192-ff176a90b51f","variableMapping":{"graphHopperFolder":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"beace3e0-dab3-11e4-9192-1f060f7f4d55","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"beace3e1-dab3-11e4-9192-6d6187426e86","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[],"tindex":"beace3e2-dab3-11e4-9192-cd9b08767b1e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"beace3e3-dab3-11e4-9192-bd81cd5264ae","variableMapping":{"angle":"lon","com.graphhopper.util.AngleCalc.PI3_4":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[],"tindex":"beace3e4-dab3-11e4-9192-390177767566","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[223,224,225,226,227,228,229,230,231],"tindex":"beace3e5-dab3-11e4-9192-29e41816c97b","variableMapping":{"maxSpeed":"lat","fwdSpeed":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[146,147],"tindex":"beace3e6-dab3-11e4-9192-d56fdb1a4a73","variableMapping":{"oldValueIndex":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"beace3e7-dab3-11e4-9192-bb3d55dbd13a","variableMapping":{"low":"subNetworks","guess":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"beace3e8-dab3-11e4-9192-4b8b1bb03444","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"beace3e9-dab3-11e4-9192-83b19f223e74","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"bead0afa-dab3-11e4-9192-51fc1b21414f","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[205,206,207],"tindex":"bead0afb-dab3-11e4-9192-dfd9924c5b7e","variableMapping":{"segmentSizePower":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"bead0afc-dab3-11e4-9192-8b5af1d9fa46","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"bead0afd-dab3-11e4-9192-67c27dc7d32e","variableMapping":{"err":"start","tmpErr":"start","y1":"start","dLon":"start","sLat":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-2},{"failures":[],"tindex":"bead0afe-dab3-11e4-9192-b71757c31f24","variableMapping":{"res":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.Circle:172","type":"CtIfImpl","sourcecode":"if (double < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[232],"tindex":"bead0aff-dab3-11e4-9192-cd3b1d4ad1cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[233,234,201,235,202,236,203,179,218,220,180,237,182,183,238,221,204,89,222,184],"tindex":"bead0b00-dab3-11e4-9192-efc073c48f6f","variableMapping":{"incDist2DSum":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","fullDist2D":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","decDist2DSum":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-1},{"failures":[239,240,241,242,243,244,245,246,247,248,7,8,96,249,250,251,252,253,9,92,10,11,12,13,14,15,16,254,17,18,19,20,21,199,255,233,256,234,257,258,259,46,260,261,262,263,47,97,98,264,265,266,267,268,99,100,269,101,270,271,272,273,102,274,275,276,277,48,278,279,103,280,281,49,282,104,283,284,50,285,286,287,105,288,51,289,290,52,291,292,293,294,53,106,107,295,296,297,298,299,108,109,300,110,301,302,303,304,111,305,306,307,308,54,309,310,112,311,312,55,313,113,314,315,56,316,317,318,114,319,320,321,322,323,324,325,115,326,327,328,329,330,57,331,58,332,333,334,335,336,337,338,339,340,341,342,116,343,59,60,61,344,62,345,346,347,348,349,350,117,351,352,63,353,64,354,355,356,357,358,359,360,361,362,363,364,118,65,119,120,365,366,367,368,369,121,122,370,123,371,372,373,374,124,375,376,377,378,66,379,380,125,381,67,68,382,126,383,384,69,385,386,387,127,388,389,70,390,391,392,393,71,128,129,394,395,396,397,398,130,131,399,132,400,401,402,403,133,404,405,406,407,72,408,409,134,410,411,73,412,135,413,414,74,415,416,417,136,418,419,420,421,75,197,76,77,78,93,79,422,198,80,81,94,423,210,137,424,185,138,425,139,186,426,427,428,140,141,187,142,429,143,0,144,430,431,432,433,145,434,435,148,205,436,95,437,206,207,149,438,439,150,440,151,188,152,441,189,211,442,443,444,445,446,447,153,154,190,448,155,449,156,450,157,451,212,452,453,454,455,456,158,159,191,160,457,161,458,459,162,460,163,192,164,461,193,213,462,463,464,465,466,467,165,166,194,468,167,195,469,168,169,214,470,471,472,473,474,475,170,171,196,476,172,175,176,477,478,479,480,481,177,82,482,483,484,485,83,486,487,84,85,488,86,87,489,490,88,491,216,200,492,201,493,235,494,495,496,202,217,236,497,203,498,178,179,218,499,500,219,220,501,502,503,180,181,237,182,183,238,504,221,505,204,89,222,506,184],"tindex":"bead0b01-dab3-11e4-9192-6d807b1b264b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[434,438,439,150,440,151,188,152,441,189,211,442,443,444,445,446,447,153,154,190,448,155,457,161,458,459,162,460,163,192,164,461,193,213,462,463,464,465,466,467,165,166,194,468,167],"tindex":"bead3212-dab3-11e4-9192-e97058a8258d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[],"tindex":"bead3213-dab3-11e4-9192-d3fda96ffb1c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[507,3,5,243,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,34,41,46,48,50,51,52,54,56,57,63,66,67,69,70,72,74,75,76,77,78,79,80,81,82],"tindex":"bead3214-dab3-11e4-9192-890a77fa53d6","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[205,206],"tindex":"bead3215-dab3-11e4-9192-a3a0b1ed7f1e","variableMapping":{"index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"bead3216-dab3-11e4-9192-33023762a73f","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":0},{"failures":[223,226],"tindex":"bead3217-dab3-11e4-9192-3569c8f06ae0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[98,270,271,276,49,282,107,301,302,307,55,313,120,371,372,377,68,382,129,400,401,406,73,412,205,437],"tindex":"bead3218-dab3-11e4-9192-55d379ea3a5e","variableMapping":{"val":"mSize","com.graphhopper.coll.SparseIntIntArray.DELETED":"mSize","keys":"mValues","values":"mKeys","i":"i","o":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"bead3219-dab3-11e4-9192-e5b99072057d","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"bead321a-dab3-11e4-9192-2b7116798c83","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":0},{"failures":[92,10,11,12,14,15,16,17,18,19,20,209,21,197,76,77,78,93,79,198,80,94,140,187,142,143,144,149],"tindex":"bead321b-dab3-11e4-9192-f1ca5a6412f5","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[439,152,448,156,157,451,459,164,468,469,169,476],"tindex":"bead321c-dab3-11e4-9192-01c636381324","variableMapping":{"maxLeafEntries":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[151,153,157,158,163,165,168,169,170],"tindex":"bead321d-dab3-11e4-9192-1dcc5a9f9133","variableMapping":{"i":"wayType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"bead321e-dab3-11e4-9192-ebd2b0cb51e9","variableMapping":{"dx":"minLat","dy":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"bead321f-dab3-11e4-9192-292db4442457","variableMapping":{"high":"frontIndex","guess":"frontIndex","low":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"bead3220-dab3-11e4-9192-a79f650e48bd","variableMapping":{"versionHint":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[21,258,98,269,270,271,273,276,277,49,282,107,300,301,302,304,307,308,55,313,120,370,371,372,374,377,378,68,382,129,399,400,401,403,406,407,73,412,205,95,437],"tindex":"bead3221-dab3-11e4-9192-d5c27f82ca39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[146,147,150,443,155,453,160,162,463,167,471,172],"tindex":"bead5832-dab3-11e4-9192-c15235759da4","variableMapping":{"preferWayEncoder":"preferWayEncoder","flags":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.getValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[205,206],"tindex":"bead5833-dab3-11e4-9192-9748f1820315","variableMapping":{"value":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"bead5834-dab3-11e4-9192-ed5cf337c745","variableMapping":{"newUniqueOsmId":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"bead5835-dab3-11e4-9192-a73c310724a5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[442,444,450,452,462,464,470,472],"tindex":"bead5836-dab3-11e4-9192-4fc49809ccf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"bead5837-dab3-11e4-9192-c13daa22e807","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:354","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":0},{"failures":[508],"tindex":"bead5838-dab3-11e4-9192-9b79392e374b","variableMapping":{"valueStr":"key","field":"str","key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"bead5839-dab3-11e4-9192-fd6a198df69c","variableMapping":{"instruction":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"bead583a-dab3-11e4-9192-6739d10486f4","variableMapping":{"resultOrientation":"java.lang.Double.MAX_VALUE","orientation":"minEle","java.lang.Math.PI":"minEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"bead583b-dab3-11e4-9192-dd884e97e910","variableMapping":{"newUniqueOsmId":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[239,240,241,242,243,244,246,247,248,7,8,96,249,250,251,252,253,509,510,511,512,513,514,9,92,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,515,27,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,28,29,30,537,31,32,34,538,539,540,541,35,36,37,542,38,39,41,543,544,545,546,42,547,548,549,215,43,44,45,199,255,233,256,234,257,258,259,46,260,261,262,47,97,98,264,265,266,267,268,99,100,269,101,270,271,272,273,102,274,275,276,277,48,278,279,103,280,281,49,282,104,283,284,50,285,286,287,105,288,51,289,290,52,291,292,293,53,106,107,295,296,297,298,299,108,109,300,110,301,302,303,304,111,305,306,307,308,54,309,310,112,311,312,55,313,113,314,315,56,316,317,318,114,319,320,321,322,323,325,115,326,327,328,329,330,57,331,58,332,333,334,335,336,337,338,339,340,342,116,550,343,59,60,61,344,62,345,346,347,348,350,117,351,352,63,353,64,354,355,356,357,358,359,360,361,362,364,118,65,119,120,365,366,367,368,369,121,122,370,123,371,372,373,374,124,375,376,377,378,66,379,380,125,381,67,68,382,126,383,384,69,385,386,387,127,388,389,70,390,391,392,71,128,129,394,395,396,397,398,130,131,399,132,400,401,402,403,133,404,405,406,407,72,408,409,134,410,411,73,412,135,413,414,74,415,416,417,136,418,551,552,553,419,420,75,76,77,78,93,79,198,80,81,94,424,205,436,95,437,206,207,457,161,481,177,82,482,483,484,485,485,83,83,486,486,487,487,84,84,85,85,488,488,86,86,87,87,489,489,490,490,88,88,216,200,201,493,235,494,495,496,202,217,236,497,203,498,178,179,218,499,500,219,220,501,502,503,180,181,237,182,183,238,504,221,505,204,89,222,506,184],"tindex":"bead7f4c-dab3-11e4-9192-bf5a2e765317","variableMapping":{"low":"segmentSizeInBytes","guess":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"bead7f4d-dab3-11e4-9192-f1559d4ea665","variableMapping":{"str":"str","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:82","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":0},{"failures":[45,101,110,123,132],"tindex":"bead7f4e-dab3-11e4-9192-a7e4e39ca667","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"bead7f4f-dab3-11e4-9192-9124194a837b","variableMapping":{"obj":"value","this":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:927","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object.(getClass()) != (java.lang.Object.getClass())))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"bead7f50-dab3-11e4-9192-85411b1baf44","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[],"tindex":"bead7f51-dab3-11e4-9192-bbbd18cbb73c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[223,224,225,227,228,554,555,230,231,329,333,335,336,556,351,355,357,358],"tindex":"bead7f52-dab3-11e4-9192-b3c349993ae5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[15,432,208,441,461],"tindex":"bead7f53-dab3-11e4-9192-19282240c838","variableMapping":{"c":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"bead7f54-dab3-11e4-9192-9d45f185c295","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[199,255,233,256,234,257,258,259,46,260,261,262,263,47,97,98,264,265,266,267,268,99,100,269,101,270,271,272,273,102,274,275,276,277,48,278,279,103,280,281,49,282,104,283,284,50,285,286,287,105,288,51,289,290,52,291,292,293,294,53,106,107,295,296,297,298,299,108,109,300,110,301,302,303,304,111,305,306,307,308,54,309,310,112,311,312,55,313,113,314,315,56,316,317,318,114,319,115,116,117,118,65,119,120,365,366,367,368,369,121,122,370,123,371,372,373,374,124,375,376,377,378,66,379,380,125,381,67,68,382,126,383,384,69,385,386,387,127,388,389,70,390,391,392,393,71,128,129,394,395,396,397,398,130,131,399,132,400,401,402,403,133,404,405,406,407,72,408,409,134,410,411,73,412,135,413,414,74,415,416,417,136,418,93,210,137,424,185,138,425,139,186,426,427,428,140,141,187,142,429,143,0,144,430,431,432,433,145,434,435,148,149,449,156,450,157,451,195,469,168,169,178,179,218,499,500,219,220,501,502,503,180,181,237,182,183,238,504,221,505,204,89,222,506,184],"tindex":"bead7f55-dab3-11e4-9192-a76d00ae7afe","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"bead7f56-dab3-11e4-9192-b1fa24ffdf6d","variableMapping":{"high":"directionBitMask","len":"flags","start":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[150,153,158,162,165,170],"tindex":"bead7f57-dab3-11e4-9192-376bd912356e","variableMapping":{"entry":"highway","entryVal":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[146,150,162],"tindex":"bead7f58-dab3-11e4-9192-0f3051cbb7d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"beada669-dab3-11e4-9192-01660c270a66","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[143,0,154,159,166,171,2],"tindex":"beada66a-dab3-11e4-9192-29dd0d274d8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[498,178,179,89,184],"tindex":"beada66b-dab3-11e4-9192-65d413889dad","variableMapping":{"initialized":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"beada66c-dab3-11e4-9192-37d2696b1796","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[92,10,11,12,13,14,15,16,17,18,19,21,75,76,77,78,93,79,198,80,81,94,95],"tindex":"beada66d-dab3-11e4-9192-59678583699f","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[254],"tindex":"beada66e-dab3-11e4-9192-99f880a068f4","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"beada66f-dab3-11e4-9192-639e2479bb0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[],"tindex":"beada670-dab3-11e4-9192-710438b153c3","variableMapping":{"encoder":"encoder","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:247","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[239,240,241,242,243,244,246,247,248,7,8,96,249,250,251,252,253,509,510,511,512,513,514,9,92,10,11,12,13,14,15,16,254,17,18,19,20,209,21,22,23,24,25,26,557,532,558,199,255,233,256,234,257,258,259,46,260,261,262,47,97,98,264,265,266,267,268,99,100,269,101,270,271,272,273,102,274,275,276,277,48,278,279,103,280,281,49,282,104,283,284,50,285,286,287,105,288,51,289,290,52,291,292,293,53,106,107,295,296,297,298,299,108,109,300,110,301,302,303,304,111,305,306,307,308,54,309,310,112,311,312,55,313,113,314,315,56,316,317,318,114,319,320,321,322,323,324,325,115,326,327,328,329,330,57,331,58,332,333,334,335,336,337,338,339,340,341,342,116,550,343,59,60,61,344,62,345,346,347,348,349,350,117,351,352,63,353,64,354,355,356,357,358,359,360,361,362,363,364,118,65,119,120,365,366,367,368,369,121,122,370,123,371,372,373,374,124,375,376,377,378,66,379,380,125,381,67,68,382,126,383,384,69,385,386,387,127,388,389,70,390,391,392,71,128,129,394,395,396,397,398,130,131,399,132,400,401,402,403,133,404,405,406,407,72,408,409,134,410,411,73,412,135,413,414,74,415,416,417,136,418,559,551,560,552,553,419,420,75,197,76,77,78,93,79,422,198,80,81,94,423,424,205,436,95,437,206,207,457,161,481,177,82,482,483,484,485,485,83,83,486,486,487,487,84,84,85,85,488,488,86,86,87,87,489,489,490,490,88,88,216,200,201,493,235,494,495,496,202,217,236,497,203,498,178,179,218,499,500,219,220,501,502,503,180,181,237,182,183,238,504,221,505,204,89,222,506,184],"tindex":"beada671-dab3-11e4-9192-45da53b6ac04","variableMapping":{"heights":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[9,561],"tindex":"beada672-dab3-11e4-9192-e33b9ba5aef9","variableMapping":{"intIndex":"minutes","len":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[561],"tindex":"beada673-dab3-11e4-9192-2f5a424cf691","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"beadcd84-dab3-11e4-9192-f3c3d1211045","variableMapping":{"flags":"acceptBit","tmpValue":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[255,256,258,326,328,76,81,200,202,236,203,220,503,221,204,222],"tindex":"beadcd85-dab3-11e4-9192-17082bfbff5d","variableMapping":{"strLen":"index","bLen":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[223,224,562,225,227,228,554,555,229,10,11,12,230,231,329,331,333,335,336,339,556,351,353,355,357,358,419,420,76,77,78,93,79,80,81,221],"tindex":"beadcd86-dab3-11e4-9192-4bb4dd2f6611","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":281,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":505,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":2,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":257,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":322,"com.graphhopper.GraphHopperAPITest.testNoLoad":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":119,"com.graphhopper.reader.OSMReaderTest.testFerry":9,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":249,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":250,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":188,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":451,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":331,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":197,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":167,"com.graphhopper.storage.MMapDataAccessTest.testSegments":525,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":300,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":514,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":533,"com.graphhopper.coll.CompressedArrayTest.testCompress":231,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":456,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":235,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":66,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":328,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":534,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":542,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":236,"com.graphhopper.GraphHopperTest.testPrepare":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":385,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":216,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":405,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":180,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":550,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":158,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":240,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":439,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":544,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":218,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":399,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":502,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":521,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":353,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":152,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":51,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":522,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":554,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":47,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":498,"com.graphhopper.GraphHopperTest.testLoadOSM":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":359,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":548,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":64,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":435,"com.graphhopper.reader.OSMReaderTest.testSort":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":154,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":95,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":291,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":413,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":70,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":386,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":86,"com.graphhopper.routing.DijkstraTest.initializationError":480,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":509,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":315,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":515,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":523,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":280,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":547,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":398,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":289,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":297,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":53,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":269,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":172,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":334,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":332,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":219,"com.graphhopper.coll.OSMIDMapTest.testGetLong":25,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":303,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":308,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":274,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":46,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":276,"com.graphhopper.coll.CompressedArrayTest.testCompress2":230,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":407,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":469,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":110,"com.graphhopper.GraphHopperAPITest.testLoad":419,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":263,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":42,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":210,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":400,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":129,"com.graphhopper.storage.LevelGraphStorageTest.testClone":265,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":561,"com.graphhopper.reader.OSMReaderTest.testBarriers":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":207,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":531,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":461,"com.graphhopper.util.GHUtilityTest.testCopy":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":501,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":116,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":191,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":324,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":453,"com.graphhopper.routing.PathTest.testFindInstruction":482,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":107,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":139,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":251,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":285,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":460,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":414,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":133,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":541,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":113,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":241,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":495,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":466,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":479,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":368,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":392,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":524,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":45,"com.graphhopper.util.InstructionListTest.testWayList2":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":360,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":136,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":562,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":150,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":317,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":457,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":99,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":535,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":441,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":301,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":343,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":220,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":13,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":28,"com.graphhopper.routing.AStarTest.initializationError":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":89,"com.graphhopper.coll.OSMIDMapTest.testGet":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":109,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":186,"com.graphhopper.routing.PathBidirRefTest.testExtract":483,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":24,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":442,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":529,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":338,"com.graphhopper.storage.RAMDataAccessTest.testCopy":35,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":537,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":156,"com.graphhopper.storage.RAMDataAccessTest.testSegments":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":118,"com.graphhopper.util.GHUtilityTest.testSort2":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":238,"com.graphhopper.reader.OSMReaderTest.testMain":10,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":443,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":555,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":339,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":384,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":101,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":273,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":105,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":84,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":459,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":546,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":275,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":20,"com.graphhopper.storage.StorablePropertiesTest.testStore":532,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":540,"com.graphhopper.storage.GraphHopperStorageTest.testClone":395,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":383,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":143,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":402,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":196,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":369,"com.graphhopper.routing.PathTest.testTime":177,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":473,"com.graphhopper.util.BitUtilLittleTest.testToFloat":3,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":286,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":266,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":362,"com.graphhopper.reader.OSMReaderTest.testRelation":254,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":378,"com.graphhopper.util.GHUtilityTest.testSortDirected":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":166,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":33,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":487,"com.graphhopper.GraphHopperTest.testFootOnly":81,"com.graphhopper.util.BitUtilLittleTest.testToInt":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":450,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":142,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":557,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":333,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":147,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":519,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":499,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":458,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":124,"com.graphhopper.search.NameIndexTest.testCreate":553,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":38,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":485,"com.graphhopper.routing.QueryGraphTest.testOneWay":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":363,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":225,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":452,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":513,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":63,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":223,"com.graphhopper.reader.OSMReaderTest.testWithBounds":19,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":41,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":528,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":194,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":539,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":372,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":379,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":426,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":146,"com.graphhopper.util.BitUtilLittleTest.testToDouble":4,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":97,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":195,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":160,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":310,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":111,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":71,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":179,"com.graphhopper.util.BitUtilLittleTest.testToBitString":507,"com.graphhopper.util.InstructionListTest.testWayList":7,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":415,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":516,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":189,"com.graphhopper.GraphHopperAPITest.testDisconnected179":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":121,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":226,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":365,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":464,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":377,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":543,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":447,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":78,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":397,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":60,"com.graphhopper.routing.util.EncodedValueTest.testSwap":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":497,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":438,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":237,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":477,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":217,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":430,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":153,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":293,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":393,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":506,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":341,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":545,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":549,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":155,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":389,"com.graphhopper.routing.PathTest.testWayList":82,"com.graphhopper.storage.MMapDataAccessTest.testCopy":520,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":387,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":471,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":371,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":1,"com.graphhopper.coll.OSMIDMapTest.testGet2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":184,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":104,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":510,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":309,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":446,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":299,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":396,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":102,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":336,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":36,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":168,"com.graphhopper.util.GHUtilityTest.testSort":244,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":518,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":381,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":173,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":445,"com.graphhopper.search.NameIndexTest.testPut":560,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":294,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":330,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":347,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":192,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":488,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":161,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":345,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":214,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":176,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":305,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":205,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":44,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":67,"com.graphhopper.routing.PathTest.testFound":481,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":94,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":148,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":284,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":536,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":508,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":444,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":302,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":527,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":552,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":123,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":131,"com.graphhopper.util.InstructionListTest.testEmptyList":247,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":538,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":503,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":475,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":433,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":159,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":504,"com.graphhopper.reader.PrinctonReaderTest.testRead":252,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":74,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":526,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":58,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":108,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":26,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":65,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":306,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":462,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":27,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":162,"com.graphhopper.reader.OSMReaderTest.testFoot":92,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":125,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":512,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":228,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":287,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":449,"com.graphhopper.reader.OSMReaderTest.testOneWay":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":358,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":401,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":412,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":454,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":32,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":193,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":376,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":494,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":556,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":203,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":31,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":493,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":424,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":530,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":373,"com.graphhopper.util.BitUtilLittleTest.testToLong":6,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":486,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":209,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":391,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":559,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":215,"com.graphhopper.routing.PathBidirRefTest.testExtract2":484,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":178,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":115,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":361,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":551,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":411,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":349,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":476,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":388,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":465,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":354,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":135,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":245,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":268,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":431,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":72,"com.graphhopper.GraphHopperTest.testFootAndCar":93,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":271,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":342,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":366,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":434,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":517,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":432,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":296,"com.graphhopper.storage.StorablePropertiesTest.testLoad":558,"com.graphhopper.GraphHopperTest.testPrepareOnly":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":204,"com.graphhopper.GraphHopperTest.testVia":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":120,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":17,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":234,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":96,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":138,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":375,"com.graphhopper.routing.AStarBidirectionTest.initializationError":491,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":149,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":283,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":282,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":52}}]
