[{"failures":[],"tindex":"7ab0ab85-da43-11e4-ad80-699c0d07218b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"7ab16ed6-da43-11e4-ad80-3bb871fe1de1","variableMapping":{"arrayLength":"err","maxGeoRef":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"7ab16ed7-da43-11e4-ad80-bb1f4d88d7c4","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"7ab16ed8-da43-11e4-ad80-e9be4ab00041","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"7ab16ed9-da43-11e4-ad80-117de0115f29","variableMapping":{"compressionLevel":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"7ab16eda-da43-11e4-ad80-019f95fc8076","variableMapping":{"segmentSizePower":"sLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-1},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,0,88,1,89,2,3,90,4,5,6,7,8,9,10,11,12,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,17,18,108,19,109,20,110,21,22,111,23,24,25,26,27,28,29,30,31,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,32,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,33,271,272,273,34,35,274,275,36,276,277,278,279,280,281,282,37,283,284,38,285,286,287,288,39,40,41,289,290,42,291,43,44,292,45,46,293,47,294,295,296,297],"tindex":"7ab195eb-da43-11e4-ad80-9d2450551bd4","variableMapping":{"mSize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"7ab195ec-da43-11e4-ad80-affba448f201","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"7ab195ed-da43-11e4-ad80-7d6c35e328db","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"7ab195ee-da43-11e4-ad80-d3895ad924d2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[],"tindex":"7ab195ef-da43-11e4-ad80-c3b53874e8e6","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"7ab195f0-da43-11e4-ad80-c905ae33c2d4","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"7ab195f1-da43-11e4-ad80-2de3aa042f2f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"7ab195f2-da43-11e4-ad80-69234db3564b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7ab195f3-da43-11e4-ad80-81c74c98c324","variableMapping":{"need":"length","i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"7ab195f4-da43-11e4-ad80-39077f36ab64","variableMapping":{"ghLocation":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":0},{"failures":[298,299,300,301,302,303,304,305,306],"tindex":"7ab1bd05-da43-11e4-ad80-8939e3ac0665","variableMapping":{"flags":"bits","mask":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"7ab1bd06-da43-11e4-ad80-4bcea99794a0","variableMapping":{"indexWithMaxDist":"com.graphhopper.routing.util.PriorityWeighting.KEY","lastIndex":"com.graphhopper.routing.util.PriorityWeighting.KEY","fromIndex":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"7ab1bd07-da43-11e4-ad80-913c30b502ec","variableMapping":{"bm":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":0},{"failures":[],"tindex":"7ab1bd08-da43-11e4-ad80-83f63188b7a4","variableMapping":{"tmpNode":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"7ab1bd09-da43-11e4-ad80-b347c71039f9","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-2},{"failures":[307,308,309,310,311,312,313,314,315,316,317],"tindex":"7ab1bd0a-da43-11e4-ad80-9f1b292f0e46","variableMapping":{"str":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[318],"tindex":"7ab1bd0b-da43-11e4-ad80-79e9fceffa39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"7ab1bd0c-da43-11e4-ad80-c948bd5403a6","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[319,320,321,322,49,323,51,72,77,82,84,85,1,89,2,324,325,97,98,99,100,326,101,327,20,110,21,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,112,343,114,344,116,137,142,147,149,150,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,154,370,371,372,373,374,375,376,377,378,379,380,381,169,382,171,192,197,202,204,205,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,214,217,218,219,220,232,233,234,235,236,237,239,240,241,242,243,244,246,247,278,409,410,411,412,413,282,37,283,284,38,285,286,287,288,39,40,41,289,290,42,291,43,44,292,45,46,293,47,294,414,415,416,417,418],"tindex":"7ab1bd0d-da43-11e4-ad80-f754e74f3572","variableMapping":{"edgeId":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[419,318,40],"tindex":"7ab1bd0e-da43-11e4-ad80-61c9968bfed4","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"7ab1e41f-da43-11e4-ad80-dbc58286747d","variableMapping":{"nodes":"endIndexPlusOne","adj":"endIndexPlusOne","base":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[],"tindex":"7ab1e420-da43-11e4-ad80-57430e2f9371","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[49,51,52,53,60,62,75,79,82,86,112,114,116,117,118,125,127,140,144,147,151,345,346,347,354,153,368,372,375,379,169,171,172,173,180,182,195,199,202,206,32,209,210,225,229,230,240,243,248,250,251,256,257,258,261,262,263,267,270,272,34,35,281,41,294,296,297],"tindex":"7ab1e421-da43-11e4-ad80-e5cbacc1f67c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"7ab1e422-da43-11e4-ad80-b35327a4b7fe","variableMapping":{"this":"value","encoder":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"7ab1e423-da43-11e4-ad80-5de969e5a523","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"7ab1e424-da43-11e4-ad80-f1f8452c8e8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[233],"tindex":"7ab1e425-da43-11e4-ad80-b3b98449a686","variableMapping":{"flags":"flags","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-1},{"failures":[248,250,257,261,262,263,264,265,266,268,269,33,271,273,34,35,274,275,36,277,279,280,281,37],"tindex":"7ab1e426-da43-11e4-ad80-5b61bcb974e1","variableMapping":{"distance":"dist"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[225,230],"tindex":"7ab1e427-da43-11e4-ad80-c59037b3e2e8","variableMapping":{"clonedG":"g","edgeEntryBytes":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1070","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"edgeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[],"tindex":"7ab1e428-da43-11e4-ad80-67e59187caf2","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":0},{"failures":[420,421,422,423],"tindex":"7ab1e429-da43-11e4-ad80-4da6888e6a95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"7ab20b3a-da43-11e4-ad80-bfbc0454faef","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"7ab20b3b-da43-11e4-ad80-5fda72d5e45e","variableMapping":{"ar_y":"maxLon","ab_y":"maxLon","ar_x":"maxLon","ab_x":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[158],"tindex":"7ab20b3c-da43-11e4-ad80-6334ca30096c","variableMapping":{"allSegments":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"7ab20b3d-da43-11e4-ad80-9b95b0668d8f","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[424,425,38,288],"tindex":"7ab20b3e-da43-11e4-ad80-f33393f1dfeb","variableMapping":{"logSize":"encoded","java.lang.Integer.MAX_VALUE":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"7ab20b3f-da43-11e4-ad80-212224a51a39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[49,55,76,335,426,112,114,120,141,349,154,427,428,155,429,381,169,175,386,391,399,404,282,285,286,287,39],"tindex":"7ab20b40-da43-11e4-ad80-dbadfe4b2df8","variableMapping":{"size":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"7ab20b41-da43-11e4-ad80-770ce8e66574","variableMapping":{"edgeId":"cap","nextEdge":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"7ab20b42-da43-11e4-ad80-357d10e06744","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[6,25],"tindex":"7ab20b43-da43-11e4-ad80-2962257a11ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"7ab20b44-da43-11e4-ad80-25c232cf18f4","variableMapping":{"locs":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"7ab20b45-da43-11e4-ad80-1143ce6ddaca","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"7ab20b46-da43-11e4-ad80-a163ea6528c1","variableMapping":{"time":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"7ab23257-da43-11e4-ad80-9719ec30d2ff","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"nextNodeBit","sign":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[319,320,321,322,48,49,323,430,50,431,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,432,76,77,78,79,80,81,82,83,84,85,86,87,0,88,1,89,2,3,90,4,5,6,7,8,9,10,11,12,91,92,93,94,95,96,433,97,98,99,100,326,101,102,103,104,105,106,107,17,18,108,19,109,20,110,21,22,111,23,24,25,26,27,28,29,30,31,329,434,435,112,343,113,114,344,436,115,437,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,438,141,142,143,144,145,146,147,148,149,150,151,152,345,346,347,348,349,350,351,352,353,354,355,153,356,357,358,359,360,361,362,363,364,365,366,367,368,369,154,370,371,372,373,374,375,376,377,378,379,380,162,163,164,165,166,381,167,168,169,382,439,170,440,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,441,196,197,198,199,200,201,202,203,204,205,206,207,442,443,444,445,446,447,448,449,32,208,209,210,211,212,213,214,215,216,450,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,451,452,234,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,33,271,272,273,34,35,274,275,36,276,277,278,279,280,281,409,410,411,412,413,282,453,37,283,284,38,285,454,286,287,288,39,455,40,41,289,290,42,291,43,44,292,456,45,46,293,47,457,294,295,414,415,416,417,418,296,297],"tindex":"7ab23258-da43-11e4-ad80-0b637220529d","variableMapping":{"baseUrl":"_location","fileDetails":"_location","zippedURL":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:274","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[162,250,256,258,261,263,267,281],"tindex":"7ab23259-da43-11e4-ad80-55481dce147c","variableMapping":{"bytePointer":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:80","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"7ab2325a-da43-11e4-ad80-2311fae4fbde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[32,208,248,250,256,257,261,262,263,264,265,266,267,268,269,270,33,271,272,273,34,35,274,275,36,277,278,279,280,281,37,283,284,38,285,287,288],"tindex":"7ab2325b-da43-11e4-ad80-dde1811e7553","variableMapping":{"reverseOrder":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[458,459,460,461,462,463,464,37,283,284,38,288,39,40,41,289,42,291,43,292,45,46,293,294],"tindex":"7ab2325c-da43-11e4-ad80-31e6dcf8f6c2","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[227],"tindex":"7ab2596d-da43-11e4-ad80-75e36e930799","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"7ab2596e-da43-11e4-ad80-1335a87c6861","variableMapping":{"cap":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[465,466],"tindex":"7ab2596f-da43-11e4-ad80-ff91e61fae78","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[298,299,300,301,467,302,303,304,305,306],"tindex":"7ab25970-da43-11e4-ad80-bdfca084063f","variableMapping":{"bits":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"7ab25971-da43-11e4-ad80-f1fa01053029","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[425],"tindex":"7ab25972-da43-11e4-ad80-c5ac60e4696e","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"7ab25973-da43-11e4-ad80-056ad1717469","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[468,469,313,314,463,470,471,472,473,474,475,315,476,422,477,478],"tindex":"7ab36ae4-da43-11e4-ad80-ff273f619f27","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[479,307,308,480,309,481,482,483,484,310,311,485,312,486,313,314,471,315,478,316,487,317,488,489,490,288,456],"tindex":"7ab36ae5-da43-11e4-ad80-3124a7ba5fa4","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-1},{"failures":[491,40],"tindex":"7ab36ae6-da43-11e4-ad80-8731c7b32b1b","variableMapping":{"node":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:423","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\"--- node \" + int) + \" ---\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"7ab36ae7-da43-11e4-ad80-272429376b7d","variableMapping":{"this":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:462","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[12,96,107,31,492,273,281,38,40,41],"tindex":"7ab36ae8-da43-11e4-ad80-75224a17df99","variableMapping":{"noNumberValue":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:332","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[],"tindex":"7ab36ae9-da43-11e4-ad80-1f730453a5ff","variableMapping":{"factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[],"tindex":"7ab36aea-da43-11e4-ad80-a1ee922d26aa","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"weight","speed":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"7ab36aeb-da43-11e4-ad80-596a8dfc70f6","variableMapping":{"daType":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[48,49,323,430,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,432,76,77,78,79,80,81,82,83,84,85,86,87,0,88,1,89,2,3,90,4,5,6,7,8,9,10,11,12,91,92,93,94,95,96,433,97,98,99,100,101,102,103,104,105,106,107,17,18,108,19,109,20,110,21,22,111,23,24,25,26,27,28,29,30,31,112,113,114,344,436,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,438,141,142,143,144,145,146,147,148,149,150,151,152,153,154,493,155,156,157,158,159,160,161,162,163,164,165,166,381,167,168,169,382,439,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,441,196,197,198,199,200,201,202,203,204,205,206,207,32,208,209,210,211,212,213,214,215,216,450,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,451,452,234,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,33,271,272,273,34,35,274,275,36,276,277,278,279,280,281,282,453,37,283,284,38,285,286,287,288,39,40,41,289,290,42,291,43,44,292,45,46,293,47,294,295,296,297],"tindex":"7ab391fc-da43-11e4-ad80-2d60120c5a64","variableMapping":{"size":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"7ab391fd-da43-11e4-ad80-47d6e598084e","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"7ab391fe-da43-11e4-ad80-a939b5c077df","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[225,229],"tindex":"7ab391ff-da43-11e4-ad80-9115d5b3f6a4","variableMapping":{"width":"connectedId","lonSimilar":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"7ab39200-da43-11e4-ad80-45e7f980adaa","variableMapping":{"foundIndex":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":0},{"failures":[307,308,309,310,311,312,313,314,315,316,317],"tindex":"7ab39201-da43-11e4-ad80-cb56fd336f47","variableMapping":{"file":"pavementName","index":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:309","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-1},{"failures":[494,495,468],"tindex":"7ab39202-da43-11e4-ad80-5331afa961af","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"7ab39203-da43-11e4-ad80-bd2dbc828530","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"7ab39204-da43-11e4-ad80-492e101dda6f","variableMapping":{"shift":"oldRelationFlags","tmpValue":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[496,479,307,497,308,309,498,481,482,483,425,499,484,310,500,311,312,501,486,469,313,314,315,477,478,502,316,503,317,488,40,41,289,290,291,43,44,292,293,47,294],"tindex":"7ab39205-da43-11e4-ad80-e5f0598c71b6","variableMapping":{"high":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"7ab39206-da43-11e4-ad80-c1b3e62cb6ca","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"7ab39207-da43-11e4-ad80-6f7af8933cc4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[504,318,37,38,41,294],"tindex":"7ab39208-da43-11e4-ad80-f91954aaf8ac","variableMapping":{"nameIndexRef":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"7ab39209-da43-11e4-ad80-330b41ac85ba","variableMapping":{"max":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[458,424,505,506,507,460,419,508,318,509,497,494,461,420,500,495,462,421,468,463,422,464,423,282,453,37,283,284,38,285,286,287,288,39,40,41,289,290,42,291,43,44,292,45,46,293,47,457,294],"tindex":"7ab3b91a-da43-11e4-ad80-f50f0d9d28c4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"7ab3b91b-da43-11e4-ad80-bdee27b46530","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:823","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Not supported for virtual edge. Set when creating it.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[],"tindex":"7ab3b91c-da43-11e4-ad80-5542a4b0684e","variableMapping":{"graph":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:826","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphStorage.isClosed())\n    throw new java.lang.IllegalStateException(\"You need to create a new GraphHopper instance as it is already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[],"tindex":"7ab3b91d-da43-11e4-ad80-1bbaf9bcb395","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[443,444,447,448,282,453,37,283,284,38,285,286,287,288,39,40,41,289,290,42,291,43,44,292,45,46,293,47,294],"tindex":"7ab3b91e-da43-11e4-ad80-89b145da9572","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"7ab3b91f-da43-11e4-ad80-8516fa219ce5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:454","type":"CtLocalVariableImpl","sourcecode":"java.lang.Exception java.lang.Exception"},"status":0},{"failures":[309,312,315,317],"tindex":"7ab3b920-da43-11e4-ad80-abca0101bed8","variableMapping":{"enableIfAssert":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"7ab3b921-da43-11e4-ad80-1506e3ec3679","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":0},{"failures":[],"tindex":"7ab3b922-da43-11e4-ad80-29043f879b5a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"7ab3b923-da43-11e4-ad80-d3e9c925ae1c","variableMapping":{"lat":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"7ab3b924-da43-11e4-ad80-6d082fec45d1","variableMapping":{"bestPath":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,0,88,1,89,2,3,90,4,5,6,7,8,9,10,11,12,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,17,18,108,19,109,20,110,21,22,111,23,24,25,26,27,28,29,30,31,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,493,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,32,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,33,271,272,273,34,35,274,275,36,276,277,278,279,280,281,282,37,283,284,38,285,286,287,288,39,40,41,289,290,42,291,43,44,292,45,46,293,47,294,295,296,297],"tindex":"7ab3e035-da43-11e4-ad80-475a829bd414","variableMapping":{"size":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"7ab3e036-da43-11e4-ad80-1fbe469c201e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"7ab3e037-da43-11e4-ad80-fbeaaf12b2f3","variableMapping":{"nodeB":"speed","edgeId":"speed","nodeA":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[510],"tindex":"7ab3e038-da43-11e4-ad80-773aad91dbf8","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:100","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":196,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":276,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":381,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":346,"com.graphhopper.reader.OSMReaderTest.testFerry":40,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":210,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":211,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":500,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":503,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":110,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":453,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":481,"com.graphhopper.storage.MMapDataAccessTest.testSegments":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":126,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":396,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":418,"com.graphhopper.coll.CompressedArrayTest.testCompress":299,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":85,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":365,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":62,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":108,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":397,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":258,"com.graphhopper.GraphHopperTest.testPrepare":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":376,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":248,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":466,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":271,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":317,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":222,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":316,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":499,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":264,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":270,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":89,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":311,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":112,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":337,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":171,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":465,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":261,"com.graphhopper.GraphHopperTest.testLoadOSM":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":7,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":2,"com.graphhopper.reader.OSMReaderTest.testSort":290,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":46,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":344,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":400,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":80,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":49,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":377,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":243,"com.graphhopper.storage.RAMDataAccessTest.testHeader":391,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":295,"com.graphhopper.storage.MMapDataAccessTest.testHeader":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":146,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":330,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":338,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":13,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":441,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":428,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":58,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":343,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":116,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":478,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":476,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":23,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":35,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":22,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":454,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":267,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":266,"com.graphhopper.coll.OSMIDMapTest.testGetLong":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":130,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":136,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":188,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":169,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":190,"com.graphhopper.coll.CompressedArrayTest.testCompress2":298,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":71,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":469,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":127,"com.graphhopper.GraphHopperAPITest.testLoad":32,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":440,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":156,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":458,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":63,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":53,"com.graphhopper.storage.LevelGraphStorageTest.testClone":175,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":491,"com.graphhopper.reader.OSMReaderTest.testBarriers":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":17,"com.graphhopper.util.GHUtilityTest.testCopy":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":350,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":31,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":474,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":325,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":423,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":394,"com.graphhopper.routing.PathTest.testFindInstruction":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":487,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":118,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":209,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":505,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":203,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":92,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":81,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":144,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":131,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":254,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":177,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":351,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":339,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":161,"com.graphhopper.util.InstructionListTest.testWayList2":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":498,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":8,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":310,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":484,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":232,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":323,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":179,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":388,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":398,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":359,"com.graphhopper.storage.RAMDirectoryTest.testSynched":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":97,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":268,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":291,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":399,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":278,"com.graphhopper.coll.OSMIDMapTest.testGet":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":125,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":427,"com.graphhopper.routing.PathBidirRefTest.testExtract":223,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":506,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":192,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":27,"com.graphhopper.storage.RAMDataAccessTest.testCopy":386,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":370,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":502,"com.graphhopper.storage.RAMDataAccessTest.testSegments":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":462,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":12,"com.graphhopper.util.GHUtilityTest.testSort2":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":274,"com.graphhopper.reader.OSMReaderTest.testMain":289,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":382,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":485,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":421,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":507,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":436,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":182,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":186,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":206,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":490,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":183,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":140,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":496,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":189,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":47,"com.graphhopper.storage.StorablePropertiesTest.testStore":329,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":385,"com.graphhopper.storage.GraphHopperStorageTest.testClone":55,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":373,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":318,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":443,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":65,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":508,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":422,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":352,"com.graphhopper.routing.PathTest.testTime":452,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":473,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":204,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":326,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":10,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":364,"com.graphhopper.reader.OSMReaderTest.testRelation":456,"com.graphhopper.util.GHUtilityTest.testSortDirected":216,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":447,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":407,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":239,"com.graphhopper.GraphHopperTest.testFootOnly":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":419,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":111,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":483,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":360,"com.graphhopper.search.NameIndexTest.testCreate":322,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":392,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":236,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":429,"com.graphhopper.routing.QueryGraphTest.testOneWay":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":324,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":302,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":1,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":300,"com.graphhopper.reader.OSMReaderTest.testWithBounds":293,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":395,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":148,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":226,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":366,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":482,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":172,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":468,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":488,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":139,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":132,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":51,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":263,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":83,"com.graphhopper.util.InstructionListTest.testWayList":218,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":495,"com.graphhopper.GraphHopperAPITest.testDisconnected179":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":353,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":0,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":348,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":448,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":297,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":379,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":284,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":57,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":99,"com.graphhopper.routing.util.EncodedValueTest.testSwap":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":259,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":75,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":257,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":115,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":280,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":431,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":486,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":48,"com.graphhopper.routing.PathTest.testWayList":234,"com.graphhopper.storage.MMapDataAccessTest.testCopy":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":378,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":471,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":356,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":460,"com.graphhopper.coll.OSMIDMapTest.testGet2":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":281,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":404,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":199,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":138,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":68,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":24,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":25,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":387,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":408,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":461,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":313,"com.graphhopper.util.GHUtilityTest.testSort":215,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":369,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":306,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":464,"com.graphhopper.search.NameIndexTest.testPut":320,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":437,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":101,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":104,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":497,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":242,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":113,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":287,"com.graphhopper.storage.MMapDirectoryTest.testSynched":446,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":463,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":279,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":225,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":160,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":154,"com.graphhopper.routing.PathTest.testFound":451,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":39,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":425,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":201,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":510,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":164,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":129,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":321,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":153,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":60,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":383,"com.graphhopper.util.InstructionListTest.testEmptyList":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":475,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":275,"com.graphhopper.reader.PrinctonReaderTest.testRead":296,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":82,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":21,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":124,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":355,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":345,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":134,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":331,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":444,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":479,"com.graphhopper.reader.OSMReaderTest.testFoot":41,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":368,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":416,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":5,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":205,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":6,"com.graphhopper.reader.OSMReaderTest.testOneWay":294,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":78,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":145,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":406,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":494,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":362,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":253,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":260,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":14,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":251,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":405,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":231,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":358,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":238,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":430,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":457,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":449,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":158,"com.graphhopper.routing.PathBidirRefTest.testExtract2":224,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":262,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":315,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":319,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":477,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":15,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":380,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":424,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":3,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":79,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":178,"com.graphhopper.GraphHopperTest.testFootAndCar":38,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":72,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":30,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":349,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":120,"com.graphhopper.storage.StorablePropertiesTest.testLoad":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":277,"com.graphhopper.GraphHopperTest.testPrepareOnly":282,"com.graphhopper.GraphHopperTest.testVia":37,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":501,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":347,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":45,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":166,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":220,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":432,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":492,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":361,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":509,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":200,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":198,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":114}}]
