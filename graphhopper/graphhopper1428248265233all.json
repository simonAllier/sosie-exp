[{"failures":[],"tindex":"b551089a-dba9-11e4-b499-1786b875781b","variableMapping":{"distInMeter":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"b5512fab-dba9-11e4-b499-efc4756ac1b4","variableMapping":{"nodesContracted":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"b5512fac-dba9-11e4-b499-f3db13298fb7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[0],"tindex":"b5512fad-dba9-11e4-b499-f5c564905bf5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"b5512fae-dba9-11e4-b499-f3dc3b29e890","variableMapping":{"guess":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[1,2],"tindex":"b5512faf-dba9-11e4-b499-1301b7d8441e","variableMapping":{"segmentSizeInBytes":"removed","index":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"b5512fb0-dba9-11e4-b499-e9ea861948cd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b5512fb1-dba9-11e4-b499-0f94bad90d48","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[3,4,5,6,7,8,9,10],"tindex":"b5512fb2-dba9-11e4-b499-417e6aac206b","variableMapping":{"orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"b5512fb3-dba9-11e4-b499-e9b3624ab108","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"b55156c4-dba9-11e4-b499-4f9b4f0cd8dd","variableMapping":{"longSegmentSize":"lastTime","bufferStart":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"b55156c5-dba9-11e4-b499-07f9b27cd7c0","variableMapping":{"val":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[11,12],"tindex":"b55156c6-dba9-11e4-b499-b799c8404ccc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[13,14],"tindex":"b55156c7-dba9-11e4-b499-41f4c0e34f47","variableMapping":{"freeIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[],"tindex":"b55156c8-dba9-11e4-b499-0db75b434bba","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b55156c9-dba9-11e4-b499-7fef3a19cb36","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"size","sign":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"b55156ca-dba9-11e4-b499-3f95756fc94b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,12],"tindex":"b55156cb-dba9-11e4-b499-17d2174b781b","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1378","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.checkInit()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"b55156cc-dba9-11e4-b499-8bf0c54e0f2c","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"b55156cd-dba9-11e4-b499-b162652082c0","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"b55156ce-dba9-11e4-b499-3f1dec91d3a3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"b55156cf-dba9-11e4-b499-21f49894188e","variableMapping":{"res":"turnRestrictionBit","value":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"b5517de0-dba9-11e4-b499-57bf0032df82","variableMapping":{"minLatInit":"maxLat","maxLonInit":"minLat","minLonInit":"minLon","bounds":"this","maxLatInit":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"b5517de1-dba9-11e4-b499-8ff1b1c71b83","variableMapping":{"speed":"decDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[28,37,38,44,52,53,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,1,148],"tindex":"b5517de2-dba9-11e4-b499-2d93a7f76b38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[11,12],"tindex":"b5517de3-dba9-11e4-b499-6f9fc55c524a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"b5517de4-dba9-11e4-b499-8dd5f0975c64","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[149,150,3,151,152,153,154,155,156,157,8,158,126,159],"tindex":"b5517de5-dba9-11e4-b499-fd624817446b","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-1},{"failures":[],"tindex":"b5517de6-dba9-11e4-b499-37eef26d4bd6","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"i","sign":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":0},{"failures":[],"tindex":"b5517de7-dba9-11e4-b499-415071bec2f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"b5517de8-dba9-11e4-b499-037f5d0d3b7f","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.WAY_ERR","osmFile":"com.graphhopper.routing.util.EncodingManager.WAY_ERR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":0},{"failures":[160,161,3,4,162,163,164,165,166,167,168,5,169,170,171,172,6,7,173,174,175,176,177,178,179,8,9,180,181,182,183,184,185,186,10,187,100,110,188],"tindex":"b5517de9-dba9-11e4-b499-2dff9996d2c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:192","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[13,3,4,189,190,5,191,6,7,192,14,8,9,193],"tindex":"b5517dea-dba9-11e4-b499-877a5078d7a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"b5517deb-dba9-11e4-b499-05f2b68e291c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[149,150,13,160,194,161,3,4,162,163,195,196,197,198,199,164,151,165,189,166,167,190,168,5,169,200,201,202,203,204,170,152,171,191,172,205,206,6,207,7,192,173,208,209,210,211,174,153,175,176,212,154,155,213,214,215,156,157,216,217,218,11,219,220,14,178,221,179,8,9,180,181,222,223,224,225,226,182,158,183,193,184,185,186,10,124,125,126,127,227,228,128,129,229,12,230,231,232,233,234,235,236,237,188,238,239,240,241,242,159,243,244,245,246,247],"tindex":"b551a4fc-dba9-11e4-b499-4dd675701637","variableMapping":{"str":"name","this":"value","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"b551a4fd-dba9-11e4-b499-b762e4d684ee","variableMapping":{"value":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","numberOfBits":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"b551a4fe-dba9-11e4-b499-338804ce549f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"b551a4ff-dba9-11e4-b499-3972ec8af1ba","variableMapping":{"incEleSum":"fromHeight","incDist2DSum":"toHeight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":0},{"failures":[248,249,250,251,252,253,254],"tindex":"b551a500-dba9-11e4-b499-e3083ee7f20d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"b551a501-dba9-11e4-b499-015c30edf944","variableMapping":{"valueStr":"str","field":"str","key":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[17,19],"tindex":"b551a502-dba9-11e4-b499-9f832ae20a6e","variableMapping":{"mainEdgeState":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-1},{"failures":[],"tindex":"b551a503-dba9-11e4-b499-93c8b513abee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b551a504-dba9-11e4-b499-27b072421451","variableMapping":{"res":"relationFlags","value":"directionBitMask","maxBits":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:259","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"b551a505-dba9-11e4-b499-e99ae7f0b58f","variableMapping":{"foundIndex":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"b551a506-dba9-11e4-b499-fb3129cd7c0c","variableMapping":{"instruction":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"b551a507-dba9-11e4-b499-1341e8347fda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"b551a508-dba9-11e4-b499-5b2ed8bc060f","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[15,23,26,27,28,31,33,35,255,37,38,40,41,43,44,49,51,52,53,54,55,56,57,61,256,257,258,259,260,63,69,74,76,77,78,79,81,82,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,130,283,284,285,286,131,132,287,288,289,133,290,291,134,135,292,293,294,295,296,297,298,299,136,300,301,302,303,137,138,304,305,306,139,307,308,140,141,309,310,311,312,313,314,315,316,317,142,318,319,320,321,143,144,322,323,324,145,325,326,146,147,327,328,329,330,331,83,332,84,333,334,335,336,337,149,85,338,339,340,1,341,0,148,342,2,343,344,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,345,346,347,348,349,350,351,352,353,354,355,124,125,126,127,227,228,128,129,229,12,230,231,232,233,234,235,236,237,188,238,240,242,159,244,356,357,358,359],"tindex":"b551cc19-dba9-11e4-b499-b101debffdcc","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"len","edgeTo":"len","edgeFrom":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[],"tindex":"b551cc1a-dba9-11e4-b499-9701d367954b","variableMapping":{"deltaX":"minLat","tmp":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"b551cc1b-dba9-11e4-b499-bdbb03f093cc","variableMapping":{"latSimilar":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":0},{"failures":[232,244],"tindex":"b551cc1c-dba9-11e4-b499-014b7ce78a87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"b551cc1d-dba9-11e4-b499-375088637195","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"b551cc1e-dba9-11e4-b499-fd3fe3a14cf9","variableMapping":{"equalNormedDelta":"lat","currNormedDist":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:883","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[],"tindex":"b551cc1f-dba9-11e4-b499-07169b44ce7b","variableMapping":{"tmp":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"b551cc20-dba9-11e4-b499-212a1d446fca","variableMapping":{"x1":"speed","x2":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":0},{"failures":[],"tindex":"b551cc21-dba9-11e4-b499-0927278fb52f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"b551cc22-dba9-11e4-b499-37cedbd6587a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"b5546433-dba9-11e4-b499-d7f511af8317","variableMapping":{"size":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"b5546434-dba9-11e4-b499-45c5676856e1","variableMapping":{"indexWithMaxDist":"dLon","lastIndex":"dLon","fromIndex":"sLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":0},{"failures":[177,360,10,100,188,244],"tindex":"b5546435-dba9-11e4-b499-c1ec849bc091","variableMapping":{"bit":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[216],"tindex":"b5546436-dba9-11e4-b499-d50020f3c727","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-1},{"failures":[],"tindex":"b5546437-dba9-11e4-b499-ddbcd584ef2b","variableMapping":{"tmp":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":0},{"failures":[13,160,161,3,4,164,189,166,190,168,5,170,191,172,6,7,192,174,176,14,178,179,8,9,182,193,184,185,186,10,231,232,233,234,236,237,188,238,242,159,244],"tindex":"b5546438-dba9-11e4-b499-270d6c096d73","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","edgeId":"speed","edgeCount":"speed","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:654","type":"CtIfImpl","sourcecode":"if ((int <= (com.graphhopper.util.EdgeIterator.int)) || (int >= (int)))\n    throw new java.lang.IllegalStateException(((((\"edgeId \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \"]\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[160,161,3,4,164,166,168,5,170,172,6,7,174,176,178,179,8,9,182,184,186,10,188],"tindex":"b5546439-dba9-11e4-b499-b314572ef7ec","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"b554643a-dba9-11e4-b499-6f41cebb782b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[15,16,17,18,19,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,255,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,256,257,258,259,260,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,361,362,363,261,364,365,366,367,262,368,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,369,370,371,372,373,374,375,286,291,376,297,377,298,299,136,378,379,300,380,301,381,302,382,303,137,138,383,304,305,384,306,139,385,386,387,388,307,308,140,141,309,310,311,312,389,390,391,313,392,314,393,315,394,316,317,142,395,396,318,397,319,398,320,399,321,143,144,400,322,323,401,324,145,402,403,404,405,325,326,146,147,327,328,329,330,406,407,408,331,409,83,332,84,333,334,335,336,337,149,85,410,338,339,340,1,341,0,148,342,2,343,220,177,344,411,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,412,345,346,347,413,348,349,350,351,352,353,354,414,355,124,126,127,227,228,128,129,229,12,230,415,231,232,233,234,235,236,237,188,238,240,241,242,159,244,356,357,358,359],"tindex":"b5548b4b-dba9-11e4-b499-1be0af536eb9","variableMapping":{"encoded":"bytePos","backwardBit":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"b5548b4c-dba9-11e4-b499-49df3b138d6d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"b5548b4d-dba9-11e4-b499-e742431e07e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[190],"tindex":"b5548b4e-dba9-11e4-b499-6f91d6fc0174","variableMapping":{"ghLocation":"highway","osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"b5548b4f-dba9-11e4-b499-13fe219668cf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[358,359],"tindex":"b5548b50-dba9-11e4-b499-8f79ac03b305","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[],"tindex":"b5548b51-dba9-11e4-b499-f998ebcdd295","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"b5548b52-dba9-11e4-b499-072d53883867","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"b5548b53-dba9-11e4-b499-71332e0c22c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[416,417,418,419,415,188],"tindex":"b5548b54-dba9-11e4-b499-d3fda0b48c33","variableMapping":{"tmp":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"b5548b55-dba9-11e4-b499-0ffa03b57c42","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","com.graphhopper.routing.util.EncodingManager.FOOT":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.FOOT","entryVal":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[420,249,250,251,252,253,254],"tindex":"b5548b56-dba9-11e4-b499-3fe110a1b942","variableMapping":{"size":"sLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[252,66,72,74,75,361,366,262,368,421,422,109,423,424,425,426,427,428,429,430,431],"tindex":"b554b167-dba9-11e4-b499-215d0879941f","variableMapping":{"size":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[432],"tindex":"b554b168-dba9-11e4-b499-f154deb80185","variableMapping":{"workerThreads":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"b554b169-dba9-11e4-b499-cd975610b728","variableMapping":{"min":"index","tmpSize":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":0},{"failures":[],"tindex":"b554b16a-dba9-11e4-b499-89cb14d84807","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":0},{"failures":[],"tindex":"b554b16b-dba9-11e4-b499-f379eaf0bf76","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"b554b16c-dba9-11e4-b499-0b3d1281ab67","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[155],"tindex":"b554b16d-dba9-11e4-b499-c164523f144a","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"b554b16e-dba9-11e4-b499-61306c33fa7c","variableMapping":{"speed":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[165,171,175,183],"tindex":"b554b16f-dba9-11e4-b499-052a2ad921e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"b554b170-dba9-11e4-b499-f777bfde8933","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[],"tindex":"b554b171-dba9-11e4-b499-3f1f6ae1a966","variableMapping":{"factor":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"b554b172-dba9-11e4-b499-379a72542032","variableMapping":{"factor":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"b554b173-dba9-11e4-b499-47f58305101c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[23,26,46,52,57,60,68,69,70,363,261,364,433,369,370,373,374,375,281,434,291,134,295,435,297,298,386,140,312,391,436,437,438,439,440,441,442,443,314,315,316,403,146,330,408,444,445,446,447,448,449,450,451,84,335,336,337,452,453,454,455,456,457,458,459,220,177,344,120,346,347,348,349,350,351,352,353,414,355,124,125,126,127,227,128,129,229,12,230,231,233,234,235,236,237,188,238,240,241,242,159,244],"tindex":"b554b174-dba9-11e4-b499-6b2b44389ed4","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"b554b175-dba9-11e4-b499-7d43605e3001","variableMapping":{"size":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,460,25,461,26,27,28,29,30,31,32,33,34,35,36,255,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,82,268,274,280,281,282,130,462,463,283,464,284,465,285,466,286,131,132,467,287,288,468,289,133,469,434,470,471,290,472,291,134,135,292,293,294,295,473,474,435,296,475,376,297,476,477,377,478,298,299,136,378,379,300,380,301,381,302,382,303,137,138,383,304,305,384,306,139,385,386,387,388,307,479,308,140,141,309,310,311,312,389,390,391,313,392,314,480,393,315,481,482,394,483,316,317,142,395,396,318,397,319,398,320,399,321,143,144,400,322,323,401,324,145,402,403,404,405,325,484,326,146,147,327,328,329,330,406,407,408,331,409,485,13,160,194,161,3,4,416,162,163,195,486,196,197,198,199,164,151,165,189,166,167,190,168,5,169,200,487,201,202,203,204,170,152,171,191,172,205,0,206,6,207,7,192,173,208,488,209,210,211,174,153,175,176,212,154,155,213,214,215,489,156,157,216,490,491,417,492,493,217,494,343,218,495,496,11,219,497,220,177,498,14,178,221,179,8,9,418,180,181,222,499,223,224,225,226,182,158,183,193,184,500,10,501,502,503,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,504,505,346,228,230,231,232,233,234,235,236,237,188,238,240,241,242,159,244],"tindex":"b554d886-dba9-11e4-b499-37dbaa459022","variableMapping":{"line":"encoderList"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[],"tindex":"b554d887-dba9-11e4-b499-7b81e8eeefb1","variableMapping":{"maxSpeed":"lat2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[],"tindex":"b554d888-dba9-11e4-b499-4dbf83e92daa","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[420,249,250,251,252,253,254],"tindex":"b554d889-dba9-11e4-b499-edbc44e70454","variableMapping":{"pointer":"x1","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:69","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.max(10, ((int)((int) * 1.5F)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[21,28,36,37,38,40,44,45,52,53,130,466,131,132,287,133,469,134,135,136,382,137,138,304,139,385,140,141,142,399,143,144,322,145,402,146,147,1,148],"tindex":"b554d88a-dba9-11e4-b499-1147bbe4475c","variableMapping":{"arrayLength":"i","maxGeoRef":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[52,57,256,257,258,259,506,260,80,507,508,509,510,511,512,513,514,515,516,281,282,130,462,463,283,464,284,465,285,466,131,132,467,287,288,468,289,133,469,434,470,471,290,472,291,134,135,292,293,294,295,473,474,435,296,475,140,312,436,517,437,438,439,518,519,440,441,442,443,480,146,330,444,520,445,446,447,521,522,448,449,450,451,455,237,523,524],"tindex":"b554d88b-dba9-11e4-b499-97a9e57d5586","variableMapping":{"size":"segmentSizePower","hash":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[421,422,423,424,425,426,525,427,428,431],"tindex":"b554d88c-dba9-11e4-b499-fd87a81b8f08","variableMapping":{"factor":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":118,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":347,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":20,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":150,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":282,"com.graphhopper.reader.OSMReaderTest.testFerry":231,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":339,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":192,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":69,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":125,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":184,"com.graphhopper.storage.MMapDataAccessTest.testSegments":516,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":399,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":524,"com.graphhopper.coll.CompressedArrayTest.testCompress":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":211,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":391,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":434,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":65,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":436,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":521,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":96,"com.graphhopper.GraphHopperTest.testPrepare":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":473,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":86,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":110,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":174,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":338,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":108,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":382,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":512,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":261,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":314,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":429,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":513,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":99,"com.graphhopper.GraphHopperTest.testLoadOSM":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":263,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":364,"com.graphhopper.reader.OSMReaderTest.testSort":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":0,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":241,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":481,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":310,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":297,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":474,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":352,"com.graphhopper.storage.RAMDataAccessTest.testHeader":522,"com.graphhopper.routing.DijkstraTest.initializationError":504,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":329,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":433,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":514,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":50,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":420,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":301,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":480,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":179,"com.graphhopper.reader.OSMNodeTest.testSetTags":247,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":172,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":73,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":114,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":105,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":104,"com.graphhopper.coll.OSMIDMapTest.testGetLong":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":400,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":402,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":42,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":23,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":44,"com.graphhopper.coll.CompressedArrayTest.testCompress2":421,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":190,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":321,"com.graphhopper.GraphHopperAPITest.testLoad":358,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":461,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":217,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":137,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":136,"com.graphhopper.storage.LevelGraphStorageTest.testClone":30,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":432,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":2,"com.graphhopper.reader.OSMReaderTest.testBarriers":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":418,"com.graphhopper.util.GHUtilityTest.testCopy":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":203,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":175,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":249,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":509,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":450,"com.graphhopper.routing.PathTest.testFindInstruction":411,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":488,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":142,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":11,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":85,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":221,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":276,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":311,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":305,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":327,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":225,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":360,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":505,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":32,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":464,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":515,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":375,"com.graphhopper.util.InstructionListTest.testWayList2":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":264,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":397,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":220,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":253,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":476,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":34,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":517,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":416,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":106,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":299,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":236,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":437,"com.graphhopper.routing.AStarTest.initializationError":502,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":120,"com.graphhopper.coll.OSMIDMapTest.testGet":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":219,"com.graphhopper.routing.PathBidirRefTest.testExtract":412,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":195,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":77,"com.graphhopper.storage.RAMDataAccessTest.testCopy":445,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":518,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":163,"com.graphhopper.storage.RAMDataAccessTest.testSegments":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":268,"com.graphhopper.util.GHUtilityTest.testSort2":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":115,"com.graphhopper.reader.OSMReaderTest.testMain":233,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":486,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":165,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":482,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":255,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":40,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":61,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":37,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":14,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":369,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":43,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":159,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":520,"com.graphhopper.storage.GraphHopperStorageTest.testClone":379,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":216,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":156,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":383,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":171,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":284,"com.graphhopper.routing.PathTest.testTime":187,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":202,"com.graphhopper.util.BitUtilLittleTest.testToFloat":453,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":59,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":31,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":493,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":506,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":266,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":48,"com.graphhopper.reader.OSMReaderTest.testRelation":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":469,"com.graphhopper.util.GHUtilityTest.testSortDirected":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":158,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":442,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":348,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":254,"com.graphhopper.util.BitUtilLittleTest.testToInt":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":207,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":215,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":72,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":103,"com.graphhopper.reader.OSMElementTest.testSetTags":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":498,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":288,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":448,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":346,"com.graphhopper.routing.QueryGraphTest.testOneWay":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":507,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":426,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":208,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":523,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":363,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":423,"com.graphhopper.reader.OSMReaderTest.testWithBounds":242,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":451,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":183,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":132,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":341,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":470,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":497,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":185,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":27,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":460,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":176,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":405,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":274,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":489,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":323,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":298,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":101,"com.graphhopper.util.BitUtilLittleTest.testToBitString":452,"com.graphhopper.util.InstructionListTest.testWayList":336,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":162,"com.graphhopper.GraphHopperAPITest.testDisconnected179":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":465,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":525,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":484,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":223,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":357,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":296,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":227,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":97,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":485,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":112,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":501,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":95,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":490,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":164,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":122,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":478,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":166,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":376,"com.graphhopper.routing.PathTest.testWayList":344,"com.graphhopper.storage.MMapDataAccessTest.testCopy":511,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":435,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":487,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":214,"com.graphhopper.coll.OSMIDMapTest.testGet2":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":123,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":519,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":198,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":494,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":319,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":75,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":446,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":168,"com.graphhopper.util.GHUtilityTest.testSort":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":472,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":173,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":331,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":483,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":67,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":278,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":260,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":271,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":8,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":177,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":269,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":169,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":401,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":374,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":291,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":10,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":230,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":56,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":196,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":144,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":286,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":492,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":154,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":212,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":116,"com.graphhopper.reader.PrinctonReaderTest.testRead":356,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":70,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":398,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":424,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":281,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":324,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":419,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":178,"com.graphhopper.reader.OSMReaderTest.testFoot":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":290,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":355,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":262,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":206,"com.graphhopper.reader.OSMReaderTest.testOneWay":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":368,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":138,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":141,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":328,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":209,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":441,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":289,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":381,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":91,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":89,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":272,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":440,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":467,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":413,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":243,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":477,"com.graphhopper.routing.PathBidirRefTest.testExtract2":345,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":372,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":265,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":280,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":308,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":508,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":191,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":188,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":475,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":365,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":309,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":491,"com.graphhopper.GraphHopperTest.testFootAndCar":228,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":386,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":81,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":463,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":500,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":510,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":119,"com.graphhopper.GraphHopperTest.testPrepareOnly":124,"com.graphhopper.GraphHopperTest.testVia":126,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":130,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":240,"com.graphhopper.reader.OSMElementTest.testHasTag":245,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":19,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":149,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":479,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":495,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":468,"com.graphhopper.routing.AStarBidirectionTest.initializationError":503,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":205,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":55,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":53,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":315}}]
