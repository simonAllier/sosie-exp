[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"19d0f72d-db71-11e4-a538-c936132505fc","variableMapping":{"i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48],"tindex":"19d1e18e-db71-11e4-a538-d5e8b7ff6058","variableMapping":{"entry":"highway","entryVal":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"19d1e18f-db71-11e4-a538-eb02a61b2d8b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"19d1e190-db71-11e4-a538-434d759414d7","variableMapping":{"val":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"19d1e191-db71-11e4-a538-536b97360739","variableMapping":{"nodeThis":"index","nextEdgeOther":"start","nodeOther":"index","nextEdge":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"19d1e192-db71-11e4-a538-5735f3a7cee8","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[49,50,40,51,52,43,53,54,45,55,47],"tindex":"19d208a3-db71-11e4-a538-c58ae429230c","variableMapping":{"_location":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"19d208a4-db71-11e4-a538-71eba1ee7952","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[56,57,58,59,60,61,62,63],"tindex":"19d208a5-db71-11e4-a538-29755657b2b2","variableMapping":{"possibleToAdd":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:85","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[56,64,65,66,67,68,69,70,71,72,73,74,58,75,76,77,78,59,79,80,81,60,82,83,84,61,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,62,102,103,104,105,63,106,107,108,109,110,111],"tindex":"19d208a6-db71-11e4-a538-1d0930e30e43","variableMapping":{"bb":"osmValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:281","type":"CtTryImpl","sourcecode":"try {\n    ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).isLoaded();\n    return true;\n} catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"19d208a7-db71-11e4-a538-6523aee8d99d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[0,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38],"tindex":"19d208a8-db71-11e4-a538-c7d024772185","variableMapping":{"segmentSizePower":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-1},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,88,89,90,93,94],"tindex":"19d208a9-db71-11e4-a538-192af66a9ea6","variableMapping":{"id":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[148,149,150,7,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,16,169,170,171,172,173,35,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,143,207,208,209,210,87,89,90,91,93,94,95,96,98,100,101,62,102,103,104,105,63,106,107,108,110],"tindex":"19d256ca-db71-11e4-a538-8b39d5c4ea85","variableMapping":{"segmentSizeInBytes":"indexDivisor","length":"indexDivisor","index":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[211],"tindex":"19d256cb-db71-11e4-a538-cb0e5a10f1ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"19d256cc-db71-11e4-a538-8b98ce72b3a3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"19d256cd-db71-11e4-a538-8b06fa77b512","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[212,67,70,213,73,77,214,89,108],"tindex":"19d256ce-db71-11e4-a538-15681480d759","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"19d256cf-db71-11e4-a538-7fe0bd02cef7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:504","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[215,155,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,136,137,140,89,92,62],"tindex":"19d27de0-db71-11e4-a538-4d6a6aab3874","variableMapping":{"size":"sLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-1},{"failures":[197],"tindex":"19d27de1-db71-11e4-a538-b5db3e1b6a51","variableMapping":{"r":"bwSlower","x":"bwSlower","absY":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"19d27de2-db71-11e4-a538-cfb812138e41","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[37,235],"tindex":"19d27de3-db71-11e4-a538-1503cb71a767","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[49,50,40,51,52,43,53,45,47],"tindex":"19d27de4-db71-11e4-a538-739406156865","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-1},{"failures":[236,148,237,238,239,149,240,0,241,242,243,244,245,246,247,1,248,2,3,249,4,250,251,252,5,6,150,253,254,255,256,257,7,8,258,259,260,151,261,262,152,263,264,215,265,153,154,155,266,267,216,217,218,268,219,220,221,269,270,271,272,273,274,275,276,156,157,158,159,160,277,278,279,280,281,282,226,283,284,227,285,161,162,163,228,286,229,230,231,287,232,233,288,234,289,165,290,166,291,292,293,167,294,9,295,296,297,298,299,300,301,10,302,11,12,303,13,304,305,306,14,15,168,307,308,309,310,311,16,17,312,313,314,169,315,316,170,317,318,319,320,321,322,323,324,325,326,327,328,329,330,27,331,171,332,333,334,172,335,28,336,337,338,339,340,341,342,29,343,30,31,344,32,345,346,347,33,34,173,348,349,350,351,352,35,36,353,354,355,174,356,357,175,358,359,360,361,362,363,364,365,366,192,367,368,369,193,194,195,212,370,371,372,373,37,374,375,38,235,376,377,196,197,198,378,199,200,379,201,202,203,380,204,205,381,382,206,383,112,113,114,115,116,117,118,119,384,120,121,122,123,385,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,62,102,103,104,105,63,106,107,108,110,386,387,388],"tindex":"19d27de5-db71-11e4-a538-35cfc38e845c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[389,379],"tindex":"19d27de6-db71-11e4-a538-bbf41460c2cb","variableMapping":{"angle":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"19d27de7-db71-11e4-a538-27d90711c523","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[390],"tindex":"19d27de8-db71-11e4-a538-ad82b5be14bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"19d27de9-db71-11e4-a538-2f5b5baff2e9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"19d2a4fa-db71-11e4-a538-abd315b41d4f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[236,148,237,238,239,391,149,240,0,241,242,243,244,245,246,247,1,248,2,3,249,4,250,251,252,5,6,150,253,254,255,256,257,7,8,258,259,260,151,261,262,152,263,264,215,265,153,154,155,266,267,216,217,218,268,219,220,221,392,269,270,271,272,273,274,393,275,276,156,157,158,159,394,160,277,278,279,280,395,281,282,226,283,284,227,285,161,162,163,228,286,229,230,231,287,232,233,288,396,234,289,165,397,290,166,291,292,293,398,167,294,9,295,296,297,298,299,300,301,10,302,11,12,303,13,304,305,306,14,15,168,307,308,309,310,311,16,17,312,313,314,169,315,316,170,317,318,399,400,18,401,402,403,404,405,406,407,19,319,20,21,408,22,409,410,411,23,24,412,413,414,415,416,320,25,26,417,418,419,420,421,422,423,424,425,325,326,327,328,329,330,27,331,171,332,333,334,426,172,335,28,336,337,338,339,340,341,342,29,343,30,31,344,32,345,346,347,33,34,173,348,349,350,351,352,35,36,353,354,355,174,356,357,175,358,359,360,361,427,362,363,364,365,366,192,367,428,368,369,193,194,195,212,370,371,372,373,429,37,374,375,38,235,376,56,430,377,64,431,432,65,66,433,57,434,67,435,68,69,436,70,213,71,437,438,439,440,441,72,196,197,442,443,39,444,49,73,50,445,74,58,446,447,448,449,75,450,40,451,76,452,41,453,454,455,456,457,458,459,42,460,51,77,52,461,78,59,462,463,464,465,79,466,43,467,80,468,44,81,469,53,54,60,470,471,472,473,82,474,45,475,83,476,46,477,84,478,479,55,480,61,481,482,483,85,484,47,485,86,48,486,487,488,198,378,489,199,200,379,201,202,203,380,204,205,381,382,206,383,112,490,113,114,115,116,117,118,119,384,120,121,122,123,385,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,491,492,87,88,89,90,91,92,93,493,94,95,96,97,494,98,99,100,101,62,102,103,104,105,495,63,106,107,108,110,387,388],"tindex":"19d2a4fb-db71-11e4-a538-75185168d1a7","variableMapping":{"node":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[443,459,478,55],"tindex":"19d2a4fc-db71-11e4-a538-39fd4356cd9c","variableMapping":{"tmpNo":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"19d2a4fd-db71-11e4-a538-f320f08fe35f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"19d2a4fe-db71-11e4-a538-b19ae0c474a9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[75,79,82,85],"tindex":"19d2a4ff-db71-11e4-a538-c34abb5bf01d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"19d2a500-db71-11e4-a538-8b4d2fa8f412","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":0},{"failures":[],"tindex":"19d2a501-db71-11e4-a538-0babf3e62f53","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[361,113,119,123,124,125,126,127,128,130,131,133,134,135,136,137,138,139,140,142,143,144,145,146,89,90,93],"tindex":"19d2cc12-db71-11e4-a538-8f4233e8fe7a","variableMapping":{"alreadyRun":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[212,64,65,66,67,435,68,69,70,213,71,72,39,49,73,50,74,40,76,41,496,497,457,42,51,77,52,78,43,80,44,81,53,54,45,83,46,214,478,55,47,86,48,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,62,102,103,104,105,63,106,107,108,109,110],"tindex":"19d2cc13-db71-11e4-a538-97b5c6dd1901","variableMapping":{"flags":"acceptBit","mask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"19d2cc14-db71-11e4-a538-cb5d0445520d","variableMapping":{"ar_y":"minLat","ab_y":"minLat","ar_x":"minLat","ab_x":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[66,68,71,76,80,83,86],"tindex":"19d2cc15-db71-11e4-a538-7fcf67db2214","variableMapping":{"obtained":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"19d2cc16-db71-11e4-a538-35ee0f62c62a","variableMapping":{"highwayValue":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"19d2cc17-db71-11e4-a538-4b86eafd7820","variableMapping":{"pos":"val","mSize":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[457],"tindex":"19d2cc18-db71-11e4-a538-4d3de43730fe","variableMapping":{"i":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[148,149,0,248,3,151,165,397,166,167,9,302,12,169,399,319,21,423,171,172,28,343,31,352,174,192,198,378,202,142,143,144,91,100,101,62,103,107],"tindex":"19d2cc19-db71-11e4-a538-d1a1cf8f8f4e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-1},{"failures":[113,119,122,125,129,137,140,142,144],"tindex":"19d2cc1a-db71-11e4-a538-2563af4c42fd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[212,496,497,457,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,62,102,103,104,105,63,106,107,108,110],"tindex":"19d2cc1b-db71-11e4-a538-9bd42dd00fec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[148,239,149,240,0,241,242,243,244,245,246,247,1,248,2,3,4,250,251,252,5,6,150,253,254,255,257,7,8,258,259,260,151,261,262,152,263,264,215,265,153,154,155,266,216,217,218,268,219,220,221,269,270,271,272,273,274,275,276,156,157,158,159,160,277,278,279,280,281,282,226,283,284,227,285,161,162,163,228,229,230,231,287,232,233,288,234,289,165,166,293,167,294,9,295,296,297,298,299,300,301,10,302,11,12,13,304,305,306,14,15,168,307,308,309,311,16,17,312,313,314,169,315,316,170,317,318,319,320,498,321,322,499,500,324,501,502,325,326,327,328,329,27,171,334,172,335,28,336,337,338,339,340,341,342,29,343,30,31,32,345,346,347,33,34,173,348,349,350,352,35,36,353,354,355,174,356,357,175,358,359],"tindex":"19d2f32c-db71-11e4-a538-bbd6647ab108","variableMapping":{"factor":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[457],"tindex":"19d2f32d-db71-11e4-a538-3d1765aed1dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"19d2f32e-db71-11e4-a538-6706f41044b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[443,459,478,55],"tindex":"19d2f32f-db71-11e4-a538-b18428462876","variableMapping":{"pos":"speed","mSize":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[197],"tindex":"19d2f330-db71-11e4-a538-f3844a28f66b","variableMapping":{"radiusInMeter":"decDist2DSum","lon":"incEleSum","lat":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"19d2f331-db71-11e4-a538-2b2394f72f6b","variableMapping":{"location":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":0},{"failures":[],"tindex":"19d2f332-db71-11e4-a538-8775161485f4","variableMapping":{"splitIndex":"indexDivisor","entrySize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"19d2f333-db71-11e4-a538-ef062312a952","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"19d2f334-db71-11e4-a538-2971ad0746ba","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[218,231],"tindex":"19d2f335-db71-11e4-a538-31207715702b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-1},{"failures":[39,49,50,40,42,51,52,43,53,54,45,55,47],"tindex":"19d2f336-db71-11e4-a538-f7ba94e33c46","variableMapping":{"key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[213,214,503],"tindex":"19d2f337-db71-11e4-a538-adca4d10ef20","variableMapping":{"com.graphhopper.util.Constants.VERSION":"str","tmp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[65],"tindex":"19d2f338-db71-11e4-a538-4133bbe15133","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"19d2f339-db71-11e4-a538-399549d09425","variableMapping":{"val":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"19d2f33a-db71-11e4-a538-b3b7e85e9f0f","variableMapping":{"key":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[49,50,40,51,52,43,53,54,45,55,47],"tindex":"19d31a4b-db71-11e4-a538-f3bf542f7a94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"19d31a4c-db71-11e4-a538-bd08cb2dded3","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[383,119,384,123,385,124,125,128,129,140,142,143,144,146],"tindex":"19d31a4d-db71-11e4-a538-8567fd531132","variableMapping":{"lastInBoundsPillarNode":"to","convertToTowerNode":"reverse","tmpNode":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:671","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[504,505],"tindex":"19d31a4e-db71-11e4-a538-2b8e155a9f01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"19d31a4f-db71-11e4-a538-65ef27ba6644","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"19d31a50-db71-11e4-a538-5b12e4d0f9bd","variableMapping":{"index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-2},{"failures":[383,384,385,124,146],"tindex":"19d31a51-db71-11e4-a538-f396703debc1","variableMapping":{"E_ADDITIONAL":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"19d31a52-db71-11e4-a538-e5549175c4c5","variableMapping":{"equalNormedDelta":"d2","tmpNormedDist":"d2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:924","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"19d31a53-db71-11e4-a538-4d1622cc7c8d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"19d31a54-db71-11e4-a538-5f636d9490a8","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":0},{"failures":[56,58,59,60,61],"tindex":"19d31a55-db71-11e4-a538-45222be1832a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"19d31a56-db71-11e4-a538-53a2164ffb31","variableMapping":{"red":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":0},{"failures":[],"tindex":"19d31a57-db71-11e4-a538-8d70b0df0967","variableMapping":{"endIndexPlusOne":"high","frontIndex":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"19d31a58-db71-11e4-a538-49b965c9ce3f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[71,98],"tindex":"19d34169-db71-11e4-a538-fb3b4af9f2d4","variableMapping":{"cp":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"19d3416a-db71-11e4-a538-110283db40af","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"19d3416b-db71-11e4-a538-fb7955034468","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"19d3416c-db71-11e4-a538-fbe9ca605abe","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[454],"tindex":"19d3416d-db71-11e4-a538-d5328767f51e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[39,49,73,50,40,41,496,497,457,42,51,77,52,43,44,53,54,45,46,478,55,47,48,98,99,100,101,102,103,104,105,107,108,110],"tindex":"19d3416e-db71-11e4-a538-df5409358f01","variableMapping":{"allBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"19d3416f-db71-11e4-a538-038a60467040","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[385,124,133,135,146],"tindex":"19d34170-db71-11e4-a538-f30d63b052de","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[148,506,165,166,330,171,87,93,94,95,97],"tindex":"19d34171-db71-11e4-a538-61b46e2a9683","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[320],"tindex":"19d34172-db71-11e4-a538-45b1a0ee2d99","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"19d34173-db71-11e4-a538-ef33517482e5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[37,235],"tindex":"19d34174-db71-11e4-a538-554685287922","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"19d34175-db71-11e4-a538-6d16595c34bf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[437,442,458],"tindex":"19d34176-db71-11e4-a538-89ebdb1499f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-1},{"failures":[457],"tindex":"19d34177-db71-11e4-a538-11f6efcb0b5e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"19d36888-db71-11e4-a538-73c347fb948a","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"19d36889-db71-11e4-a538-bd2b951195b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[236,148,237,238,239,391,149,240,0,241,242,243,244,245,246,247,1,248,2,3,249,4,250,251,252,5,6,150,253,254,255,256,257,7,8,258,259,260,151,261,262,152,263,264,270,276,282,283,289,165,397,290,166,291,292,293,398,167,294,9,295,296,297,298,299,300,301,10,302,11,12,303,13,304,305,306,14,15,168,307,308,309,310,311,16,17,312,313,314,169,315,316,170,317,318,399,400,18,401,402,403,404,405,406,407,19,319,20,21,408,22,409,410,411,23,24,412,413,414,415,416,320,25,26,417,418,419,420,421,422,423,424,425,325,326,327,328,329,330,27,331,171,332,333,334,426,172,335,28,336,337,338,339,340,341,342,29,343,30,31,344,32,345,346,347,33,34,173,348,349,350,351,352,35,36,353,354,355,174,356,357,175,358,359,360,361,362,363,364,192,369,193,194,195,212,372,373,37,374,375,38,235,376,56,430,377,64,431,432,65,66,433,57,434,67,435,68,69,436,70,213,71,437,438,439,440,441,72,196,197,442,443,39,444,49,73,50,445,74,58,446,447,448,449,75,450,40,451,76,452,41,453,454,455,456,457,458,459,42,460,51,77,52,461,78,59,462,463,464,465,79,466,43,467,80,468,44,81,469,53,54,60,470,471,472,473,82,474,45,475,83,476,46,84,478,479,55,480,61,481,482,483,85,484,47,485,86,48,487,488,198,378,202,204,383,112,490,113,114,115,116,117,118,119,384,120,121,122,123,385,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,87,88,89,90,91,92,93,94,95,96,97,495,387,388],"tindex":"19d3688a-db71-11e4-a538-01ba16dfb247","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:176","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[],"tindex":"19d3688b-db71-11e4-a538-db62a053cc1d","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[236,148,237,238,239,149,240,0,241,242,243,244,245,246,247,1,248,2,3,249,4,250,251,252,5,6,150,253,254,255,256,257,7,8,258,259,260,151,261,262,152,263,264,215,265,153,154,155,266,267,216,217,218,268,219,220,221,269,270,271,272,273,274,275,276,507,156,157,158,159,160,277,278,279,280,281,282,226,283,284,227,285,161,162,163,228,286,229,230,231,287,232,233,288,234,289,165,290,166,291,292,293,167,294,9,295,296,297,298,299,300,301,10,302,11,12,303,13,304,305,306,14,15,168,307,308,309,310,311,16,17,312,313,314,169,315,316,170,317,318,319,320,508,498,321,322,499,323,509,500,324,501,502,325,326,327,328,329,330,27,331,171,332,333,334,172,335,28,336,337,338,339,340,341,342,29,343,30,31,344,32,345,346,347,33,34,173,348,349,350,351,352,35,36,353,354,355,174,356,357,175,358,359,360,361,362,363,364,365,366,192,367,368,369,193,194,195,212,370,371,372,373,37,374,375,38,235,376,377,196,197,487,488,198,378,199,199,200,200,379,379,201,201,202,202,203,203,380,380,204,204,205,205,381,381,382,382,206,206,383,112,113,114,115,116,117,118,119,384,120,121,122,123,385,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,62,102,103,104,105,63,106,107,108,110,386,387,388],"tindex":"19d3688c-db71-11e4-a538-4b0fee7a791f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"19d38f9d-db71-11e4-a538-c9dfa27f0f73","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[443,73,50,452,459,77,52,468,469,54,476,478,55,480],"tindex":"19d38f9e-db71-11e4-a538-43c9b34295ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":141,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":200,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":214,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":330,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":273,"com.graphhopper.GraphHopperAPITest.testNoLoad":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":400,"com.graphhopper.reader.OSMReaderTest.testFerry":98,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":363,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":77,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":480,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":162,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":88,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":484,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":152,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":412,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":284,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":120,"com.graphhopper.GraphHopperTest.testPrepare":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":421,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":133,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":193,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":507,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":47,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":371,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":227,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":459,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":498,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":125,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":154,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":52,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":165,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":123,"com.graphhopper.GraphHopperTest.testLoadOSM":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":268,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":155,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":456,"com.graphhopper.reader.OSMReaderTest.testSort":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":467,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":375,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":291,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":259,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":422,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":204,"com.graphhopper.routing.DijkstraTest.initializationError":486,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":314,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":222,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":245,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":397,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":475,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":229,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":228,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":128,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":127,"com.graphhopper.coll.OSMIDMapTest.testGetLong":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":303,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":295,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":346,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":171,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":33,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":469,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":302,"com.graphhopper.GraphHopperAPITest.testLoad":360,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":426,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":322,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":56,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":2,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":0,"com.graphhopper.storage.LevelGraphStorageTest.testClone":337,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":390,"com.graphhopper.reader.OSMReaderTest.testBarriers":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":445,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":130,"com.graphhopper.util.GHUtilityTest.testCopy":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":82,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":393,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":182,"com.graphhopper.routing.PathTest.testFindInstruction":378,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":482,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":9,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":65,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":362,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":356,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":444,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":260,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":312,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":117,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":75,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":489,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":339,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":404,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":502,"com.graphhopper.util.InstructionListTest.testWayList2":195,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":219,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":51,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":506,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":316,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":196,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":237,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":461,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":129,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":102,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":185,"com.graphhopper.routing.AStarTest.initializationError":492,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":143,"com.graphhopper.coll.OSMIDMapTest.testGet":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":301,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":66,"com.graphhopper.routing.PathBidirRefTest.testExtract":372,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":173,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":462,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":232,"com.graphhopper.storage.RAMDataAccessTest.testCopy":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":478,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":59,"com.graphhopper.storage.RAMDataAccessTest.testSegments":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":270,"com.graphhopper.util.GHUtilityTest.testSort2":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":138,"com.graphhopper.reader.OSMReaderTest.testMain":100,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":332,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":463,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":80,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":67,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":419,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":343,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":32,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":358,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":30,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":309,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":443,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":347,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":108,"com.graphhopper.storage.GraphHopperStorageTest.testClone":242,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":418,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":70,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":249,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":83,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":405,"com.graphhopper.routing.PathTest.testTime":488,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":473,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":357,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":441,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":24,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":349,"com.graphhopper.reader.OSMReaderTest.testRelation":495,"com.graphhopper.util.GHUtilityTest.testSortDirected":368,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":505,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":451,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":190,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":201,"com.graphhopper.GraphHopperTest.testFootOnly":96,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":479,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":69,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":157,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":286,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":497,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":409,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":180,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":199,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":509,"com.graphhopper.routing.QueryGraphTest.testOneWay":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":392,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":153,"com.graphhopper.reader.OSMReaderTest.testWithBounds":107,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":76,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":21,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":315,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":433,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":496,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":333,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":48,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":308,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":282,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":304,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":149,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":124,"com.graphhopper.util.InstructionListTest.testWayList":194,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":78,"com.graphhopper.GraphHopperAPITest.testDisconnected179":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":406,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":448,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":388,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":23,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":508,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":466,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":91,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":121,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":458,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":135,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":384,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":174,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":437,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":43,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":145,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":396,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":44,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":236,"com.graphhopper.routing.PathTest.testWayList":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":423,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":471,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":68,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":503,"com.graphhopper.coll.OSMIDMapTest.testGet2":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":146,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":79,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":430,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":230,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":231,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":178,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":58,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":504,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":53,"com.graphhopper.util.GHUtilityTest.testSort":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":465,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":398,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":285,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":160,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":279,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":73,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":197,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":277,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":60,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":454,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":305,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":37,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":501,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":320,"com.graphhopper.routing.PathTest.testFound":487,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":97,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":457,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":355,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":477,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":464,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":12,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":147,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":319,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":247,"com.graphhopper.util.InstructionListTest.testEmptyList":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":474,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":440,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":434,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":485,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":139,"com.graphhopper.reader.PrinctonReaderTest.testRead":387,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":151,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":163,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":19,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":399,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":336,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":446,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":164,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":39,"com.graphhopper.reader.OSMReaderTest.testFoot":99,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":415,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":217,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":84,"com.graphhopper.reader.OSMReaderTest.testOneWay":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":218,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":3,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":8,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":313,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":483,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":189,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":74,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":411,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":116,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":114,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":188,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":223,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":408,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":379,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":109,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":238,"com.graphhopper.routing.PathBidirRefTest.testExtract2":373,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":500,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":220,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":276,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":257,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":395,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":476,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":104,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":224,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":425,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":266,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":258,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":428,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":340,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":438,"com.graphhopper.GraphHopperTest.testFootAndCar":92,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":150,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":31,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":234,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":402,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":455,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":439,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":296,"com.graphhopper.GraphHopperTest.testPrepareOnly":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":142,"com.graphhopper.GraphHopperTest.testVia":89,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":275,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":18,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":63,"com.graphhopper.reader.OSMElementTest.testHasTag":111,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":329,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":212,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":431,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":410,"com.graphhopper.routing.AStarBidirectionTest.initializationError":429,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":72,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":354,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":36,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":166}}]
