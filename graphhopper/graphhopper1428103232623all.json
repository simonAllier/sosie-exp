[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"072cc842-da58-11e4-95e9-651203bbfb71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"07346963-da58-11e4-95e9-337dbc0e286c","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"07346964-da58-11e4-95e9-d996066296b1","variableMapping":{"empty":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"07346965-da58-11e4-95e9-0d47c9fdf6d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"07346966-da58-11e4-95e9-b555771b7970","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[11,12,13,14,15,111,16,112,17,18,19,20,113,114,115,21,116,22,23,24,25,26,27,28,117,29,30,31,32,33,118,34,35,119,36,37,38,39,40,41,120,42,43,121,122,123,124,125,44,126,127,128,129,130,131,132,133,134,0,1,135,136,137,138,139,140,141,2,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,3,182,183,184,185,186,187,188,4,189,190,191,192,193,194,195,5,196,6,197,198,199,200,201,202,203,204,205,7,206,207,208,209,45,46,210,211,212,213,8,214,9,215,216,217,218,219,220,221,222,223,10,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,47,263,264,265,266,267,268,48,49,50,269,270,271,51,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,58,59,60,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,61,62,63,320,321,322,323,324,325,326,327,328,329,330,331,64,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,65,352,353,354,355,66,67,356,357,358,359,68,360,361,69,362,363,364,365,366,367,368,70,369,370,71,72,371,372,373,73,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,74,394,395,396,397,398,75,399,400,401,402,76,403,404,77,405,406,78,407,408,79,80,409,410,411,81,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,82,432,433,434,435,436,83,437,438,439,440,84,441,442,85,443,444,445,86,87,446,447,448,88,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,89,469,470,471,472,473,90,474,475,476,477,91,478,479,92,480,481],"tindex":"07349077-da58-11e4-95e9-a389519a86ec","variableMapping":{"cp":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"07349078-da58-11e4-95e9-4f8e179026cd","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"07349079-da58-11e4-95e9-b9b34e44f642","variableMapping":{"freeIndex":"priorityFromRelation","currentIndex":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":0},{"failures":[],"tindex":"0734907a-da58-11e4-95e9-ff84704366ce","variableMapping":{"speedEncoder":"turnCostEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"0734907b-da58-11e4-95e9-11cc7ae42976","variableMapping":{"edgeState":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:39","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[158],"tindex":"0734907c-da58-11e4-95e9-5d583be58578","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[173,177,178],"tindex":"0734b78d-da58-11e4-95e9-2945cc22d7e1","variableMapping":{"segmentSizePower":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[482,483,484,485,486,487,488,489,490],"tindex":"0734b78e-da58-11e4-95e9-d38114a293d4","variableMapping":{"distInMeter":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[11,13,14,15,111,16,17,18,19,20,22,23,24,25,26,491,492,493,34,35,36,37,38,40,41,43,44,126,45,46,47,48,49,50,269,51,55,56,57,494,495,58,59,60,61,62,63,66,70,71,73,74,75,76,404,77,78,79,81,82,83,84,442,85,86,88,89,90,91,479,92,496,497,498],"tindex":"0734b78f-da58-11e4-95e9-d9da97108bf3","variableMapping":{"currentBucket":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"0734b790-da58-11e4-95e9-bb843669249d","variableMapping":{"r":"java.lang.Double.MAX_VALUE","x":"java.lang.Double.MAX_VALUE","absY":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"0734b791-da58-11e4-95e9-3b021e829173","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"0734b792-da58-11e4-95e9-95f560720889","variableMapping":{"headerLength":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfStreamSplitter:41","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[499,500,194,212],"tindex":"0734b793-da58-11e4-95e9-79e2505845a2","variableMapping":{"max":"priorityFromRelation","tmpSize":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"0734b794-da58-11e4-95e9-6fb802cca772","variableMapping":{"tmpDegreeCounter":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"0734b795-da58-11e4-95e9-8f09d2620ffc","variableMapping":{"i":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[11,12,13,14,15,111,16,17,18,19,20,114,115,21,116,22,23,24,25,26,27,28,29,30,31,32,33,501,502,503,504,505,506,507,492,34,34,35,35,119,119,36,36,37,37,38,38,39,39,40,40,41,41,120,120,42,42,43,43,124,125,44,126,128,129,148,173,174,175,176,177,178,45,46,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,47,263,264,265,266,267,268,48,49,50,269,270,271,51,272,274,275,276,277,278,279,55,56,57,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,58,59,60,297,298,299,300,301,302,303,304,305,306,307,308,508,309,310,311,312,313,314,315,316,317,318,319,61,62,63,320,321,322,323,324,325,326,327,328,329,330,331,342,366,70,370,71,72,371,384,78,408,79,80,409,422,445,86,87,446,459,498],"tindex":"0734b796-da58-11e4-95e9-6124d555fc6a","variableMapping":{"red":"segmentSizeInBytes","green":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[],"tindex":"0734dea7-da58-11e4-95e9-0badc4ee6fdb","variableMapping":{"baseNode":"size","id":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"0734dea8-da58-11e4-95e9-8738e9c47602","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"0734dea9-da58-11e4-95e9-73d695187e9d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"0734deaa-da58-11e4-95e9-692fcc2cbeb8","variableMapping":{"newName":"trackType","name":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[13,14,15,111,16,18,21,32,125,44,132,134,1,142,147,150,157,160,162,163,169,170,180,3,189,193,196,6,206,46,211,214,9,224,509,243,244,253,255,256,269,342,384,422,459],"tindex":"0734deab-da58-11e4-95e9-f78273acc4c9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-1},{"failures":[],"tindex":"0734deac-da58-11e4-95e9-ed576917edc7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[510],"tindex":"0734dead-da58-11e4-95e9-75e9d0f3b7a6","variableMapping":{"cp":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[173,177],"tindex":"0734deae-da58-11e4-95e9-1da28b3ab397","variableMapping":{"capacity":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"0734deaf-da58-11e4-95e9-091b500ce6b9","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"0734deb0-da58-11e4-95e9-e7e693d97561","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:59","type":"CtLocalVariableImpl","sourcecode":"final java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> = new java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>()"},"status":-2},{"failures":[180,3,193,211],"tindex":"0734deb1-da58-11e4-95e9-bf4602f2fd56","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"0734deb2-da58-11e4-95e9-37765d36ab32","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-2},{"failures":[],"tindex":"0734deb3-da58-11e4-95e9-23aee8c63a28","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"0734deb4-da58-11e4-95e9-95320abe2ae5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator"},"status":-2},{"failures":[],"tindex":"0734deb5-da58-11e4-95e9-4be83182dc0f","variableMapping":{"origEdgeId":"segmentSizePower","mainEdges":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"073505c6-da58-11e4-95e9-097fa048b904","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[510],"tindex":"073505c7-da58-11e4-95e9-d19f6d8bdf7b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"073505c8-da58-11e4-95e9-7792b4bfb297","variableMapping":{"edgeCount":"nextNodeBit","lastEdgeIndex":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"073505c9-da58-11e4-95e9-7be6390706f1","variableMapping":{"factor":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[32,157,162,170,269],"tindex":"073505ca-da58-11e4-95e9-4d8bc8b50f71","variableMapping":{"fwdFaster":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[510],"tindex":"073505cb-da58-11e4-95e9-6f5988259ad4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"073505cc-da58-11e4-95e9-7bf00b1f6a8d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"073505cd-da58-11e4-95e9-db97dc6f2fa8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"073505ce-da58-11e4-95e9-551bd5b3e447","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"tmpPrevEdge","nextEdge":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-2},{"failures":[],"tindex":"073505cf-da58-11e4-95e9-3db118977751","variableMapping":{"initLeafSize":"subNetworks"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"073505d0-da58-11e4-95e9-0d287768b173","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"073505d1-da58-11e4-95e9-e31e8131aecc","variableMapping":{"nodeB":"removed","edgeId":"removed","nodeA":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[173,177,178],"tindex":"073505d2-da58-11e4-95e9-9bda8fc85808","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"073505d3-da58-11e4-95e9-51b4664b7417","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[173,176,333,341,343,344,346,350,351,67,356,369,375,383,385,386,388,392,393,75,399,413,421,423,424,426,430,431,83,437,450,458,460,461,463,467,468,90,474],"tindex":"07352ce4-da58-11e4-95e9-6744e79e5c30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"07352ce5-da58-11e4-95e9-c90c8508d0db","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"priorityFromRelation","tmpNode":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-2},{"failures":[511,269],"tindex":"07352ce6-da58-11e4-95e9-8b95a2fa86af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"07352ce7-da58-11e4-95e9-196231f2aa3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"07352ce8-da58-11e4-95e9-6590db0de44c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"07352ce9-da58-11e4-95e9-6182172f331d","variableMapping":{"bytes":"flags","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"07352cea-da58-11e4-95e9-119406c16b6b","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"07352ceb-da58-11e4-95e9-557363e6ef04","variableMapping":{"toStr":"osmValue","fromStr":"osmValue","from":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:38","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || (java.lang.String.equals(java.lang.String)))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"07352cec-da58-11e4-95e9-499484151b7e","variableMapping":{"y":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","angle":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"07352ced-da58-11e4-95e9-4137245d82e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"07352cee-da58-11e4-95e9-fbca419cbf36","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[117,499,500],"tindex":"07357b0f-da58-11e4-95e9-05c6172d5655","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[229,237,241,262,263,364],"tindex":"07357b10-da58-11e4-95e9-250b1f7891de","variableMapping":{"bytePos":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[173,177,178],"tindex":"07357b11-da58-11e4-95e9-87ac6d506fa5","variableMapping":{"locs":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"07357b12-da58-11e4-95e9-7bca905db203","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"07357b13-da58-11e4-95e9-71d4c6ea2626","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"07357b14-da58-11e4-95e9-d56cf599adf0","variableMapping":{"edgePointer":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":0},{"failures":[46,509],"tindex":"0735a225-da58-11e4-95e9-f151ce91e0c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"0735a226-da58-11e4-95e9-cdf5da1610bd","variableMapping":{"max":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[33],"tindex":"0735a227-da58-11e4-95e9-215c3555a99a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"0735a228-da58-11e4-95e9-c7890bbe02e8","variableMapping":{"hash":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"0735a229-da58-11e4-95e9-fbec5b01bd6a","variableMapping":{"dir":"pavementName","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:266","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"right\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[162],"tindex":"0735a22a-da58-11e4-95e9-eb51c805eaad","variableMapping":{"distInMeter":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[33,173,175,176,333,341,343,344,346,350,351,67,356,369,375,383,385,386,388,392,393,75,399,413,421,423,424,426,430,431,83,437,450,458,460,461,463,467,468,90,474],"tindex":"0735a22b-da58-11e4-95e9-27eed64c4b39","variableMapping":{"nodeB":"start","edgeId":"key","nodeA":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"0735a22c-da58-11e4-95e9-6b99b7cdf319","variableMapping":{"orientation":"midLon","java.lang.Math.PI":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":0},{"failures":[],"tindex":"0735a22d-da58-11e4-95e9-29052e86620a","variableMapping":{"deltaX":"fwdDecline","tmp":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[499,194,212],"tindex":"0735a22e-da58-11e4-95e9-0f8179f4c974","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[483,484,486,487,512,489,490,295,300,301,318,323,324],"tindex":"0735c93f-da58-11e4-95e9-6d7f741b54c1","variableMapping":{"fwdFaster":"midLat","incDist2DSum":"midLat","fwdSlower":"midLat","fullDist2D":"midLat","restDist2D":"maxLatTmp","speed":"maxLatTmp","decDist2DSum":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[46],"tindex":"0735c940-da58-11e4-95e9-f3dcf2677689","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"0735c941-da58-11e4-95e9-fbd7589ba9ff","variableMapping":{"high":"endIndexPlusOne","guess":"endIndexPlusOne","low":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"0735c942-da58-11e4-95e9-47845520e949","variableMapping":{"retBucket":"shift","bucketSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[21],"tindex":"0735c943-da58-11e4-95e9-2be0a9fccb42","variableMapping":{"maxSpeed":"longTripsSpeed","fwdSpeed":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[138,202,220],"tindex":"0735c944-da58-11e4-95e9-cfac11daed34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:467","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[510],"tindex":"0735c945-da58-11e4-95e9-fdea7cd25c04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[482,483,513,484,486,487,514,512,488,489,490,295,298,300,301,515,318,321,323,324],"tindex":"0735c946-da58-11e4-95e9-6bc6afaa1abe","variableMapping":{"currentEntry":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"0735c947-da58-11e4-95e9-9729fada6b7d","variableMapping":{"u_fromNode":"to","w_toNode":"to","prepareGraph":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:598","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.LevelGraph.getLevel(int)) != 0) || (int == int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"0735c948-da58-11e4-95e9-c7f839c3b0fb","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[132],"tindex":"0735c949-da58-11e4-95e9-33068976981b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"0735c94a-da58-11e4-95e9-f5a496bffca0","variableMapping":{"nanoTime":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"0735c94b-da58-11e4-95e9-ddcb2a6b4863","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:132","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[11,12,13,14,15,111,16,17,18,19,20,114,115,21,116,22,23,24,25,26,27,28,29,30,31,32,33,506,34,35,119,36,37,38,39,40,41,120,42,43,44,126,128,129,148,173,174,175,176,177,178,45,46,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,47,263,264,265,266,267,268,48,49,50,269,270,271,51,272,274,275,276,277,278,279,281,282,283,284,286,287,288,289,290,291,293,294,295,296,58,59,60,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,314,315,316,317,318,319,61,62,63,320,321,322,323,324,325,326,327,328,330,331,342,66,364,365,366,367,368,70,369,370,71,72,371,372,73,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,74,394,395,396,397,398,75,399,400,401,402,76,403,404,77,405,406,78,408,79,80,409,410,81,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,82,432,433,434,435,436,83,437,438,439,440,84,441,442,85,443,444,445,86,87,446,447,88,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,89,469,470,471,472,473,90,474,475,476,477,91,478,479,92,480,481,516,517,107,518,519,520,521,522,108,109,110],"tindex":"0735f05c-da58-11e4-95e9-6fb85f00375d","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[11,12,13,14,15,111,16,17,18,19,20,114,115,117,37,40,124,125,44,126,128,129,130,131,132,133,134,0,1,135,136,137,138,139,140,141,2,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,3,182,183,184,185,186,187,188,4,189,190,191,192,193,194,195,5,196,6,197,198,199,200,201,202,203,204,205,7,206,207,208,209,45,46,210,211,212,213,8,214,9,215,216,217,218,219,220,221,222,223,10,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,47,263,264,265,268,48,49,50,269,51,275,276,277,278,279,287,294,308,316,331,64,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,65,352,353,354,355,66,67,356,357,358,359,68,360,361,69,362,363,364,365,366,367,368,70,369,370,71,72,371,372,373,73,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,74,394,395,396,397,398,75,399,400,401,402,76,403,404,77,405,406,78,407,408,79,80,409,410,411,81,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,82,432,433,434,435,436,83,437,438,439,440,84,441,442,85,443,444,445,86,87,446,447,448,88,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,89,469,470,471,472,473,90,474,475,476,477,91,478,479,92,480,481],"tindex":"0735f05d-da58-11e4-95e9-e3d710a9b338","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:176","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[523,524,525],"tindex":"0735f05e-da58-11e4-95e9-e9c282605de7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[11,13,16,17,18,20,22,25,26,491,492,493,35,40,41,43,44,126,47,48,49,50,269,51,55,56,57,494,495,58,60,61,63,70,71,73,74,75,76,404,78,79,81,82,83,84,442,86,88,89,90,91,479,496,497,498],"tindex":"0735f05f-da58-11e4-95e9-b9883dff9106","variableMapping":{"newSegs":"segments","length":"length","segmentSizePower":"length","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"0735f060-da58-11e4-95e9-09b2ece39857","variableMapping":{"index":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[160,510],"tindex":"07361771-da58-11e4-95e9-71f2927f40d1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"07361772-da58-11e4-95e9-4731af69ac00","variableMapping":{"defaultUTurnCost":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","edgeId":"mpInteger","prevOrNextEdgeId":"mpInteger","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[13,14,16,228,231,234,235,237,238,242,243,244,245,246,247,248,249,250,251,253,255,256,257,258,259,260,262,47,263,264,265,366,71,393,400,404],"tindex":"07361773-da58-11e4-95e9-05e74acafba5","variableMapping":{"edgeId":"edge","nodeId":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-1},{"failures":[],"tindex":"07361774-da58-11e4-95e9-b168edd38285","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":398,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":261,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":70,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":509,"com.graphhopper.GraphHopperAPITest.testNoLoad":280,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":332,"com.graphhopper.reader.OSMReaderTest.testFerry":21,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":275,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":196,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":62,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":12,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":421,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":502,"com.graphhopper.coll.CompressedArrayTest.testCompress":490,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":188,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":233,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":65,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":317,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":239,"com.graphhopper.GraphHopperTest.testPrepare":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":228,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":466,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":525,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":195,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":508,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":267,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":318,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":177,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":193,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":517,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":251,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":458,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":59,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":78,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":514,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":73,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":524,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":242,"com.graphhopper.GraphHopperTest.testLoadOSM":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":302,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":519,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":60,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":131,"com.graphhopper.reader.OSMReaderTest.testSort":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":206,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":80,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":476,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":486,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":361,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":40,"com.graphhopper.routing.DijkstraTest.initializationError":121,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":440,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":397,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":455,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":407,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":81,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":383,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":145,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":322,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":320,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":247,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":375,"com.graphhopper.coll.OSMIDMapTest.testGetLong":494,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":431,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":390,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":71,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":392,"com.graphhopper.coll.CompressedArrayTest.testCompress2":489,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":468,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":134,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":422,"com.graphhopper.GraphHopperAPITest.testLoad":278,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":373,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":518,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":146,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":460,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":450,"com.graphhopper.storage.LevelGraphStorageTest.testClone":377,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":510,"com.graphhopper.reader.OSMReaderTest.testBarriers":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":215,"com.graphhopper.util.GHUtilityTest.testCopy":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":336,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":140,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":190,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":285,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":105,"com.graphhopper.routing.PathTest.testFindInstruction":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":185,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":413,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":523,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":152,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":277,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":213,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":282,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":477,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":464,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":438,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":235,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":222,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":127,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":337,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":447,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":110,"com.graphhopper.util.InstructionListTest.testWayList2":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":303,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":480,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":513,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":171,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":45,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":87,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":381,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":496,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":197,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":423,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":249,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":449,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":25,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":94,"com.graphhopper.routing.AStarTest.initializationError":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":47,"com.graphhopper.coll.OSMIDMapTest.testGet":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":420,"com.graphhopper.routing.PathBidirRefTest.testExtract":128,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":153,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":57,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":200,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":326,"com.graphhopper.storage.RAMDataAccessTest.testCopy":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":180,"com.graphhopper.storage.RAMDataAccessTest.testSegments":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":199,"com.graphhopper.util.GHUtilityTest.testSort2":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":258,"com.graphhopper.reader.OSMReaderTest.testMain":22,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":430,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":512,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":207,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":327,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":157,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":409,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":384,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":388,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":405,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":37,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":434,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":211,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":391,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":32,"com.graphhopper.storage.StorablePropertiesTest.testStore":498,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":497,"com.graphhopper.storage.GraphHopperStorageTest.testClone":452,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":358,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":162,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":462,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":364,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":338,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":367,"com.graphhopper.routing.PathTest.testTime":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":139,"com.graphhopper.util.BitUtilLittleTest.testToFloat":53,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":404,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":169,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":305,"com.graphhopper.reader.OSMReaderTest.testRelation":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":351,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":395,"com.graphhopper.util.GHUtilityTest.testSortDirected":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":224,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":98,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":36,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.util.BitUtilLittleTest.testToInt":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":310,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":321,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":500,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":210,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":347,"com.graphhopper.search.NameIndexTest.testCreate":493,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":103,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":34,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":521,"com.graphhopper.routing.QueryGraphTest.testOneWay":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":306,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":184,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":501,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":58,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":482,"com.graphhopper.reader.OSMReaderTest.testWithBounds":31,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":106,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":225,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":441,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":352,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":499,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":374,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":191,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":433,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":161,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":427,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":88,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":244,"com.graphhopper.util.BitUtilLittleTest.testToBitString":52,"com.graphhopper.util.InstructionListTest.testWayList":49,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":478,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":198,"com.graphhopper.GraphHopperAPITest.testDisconnected179":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":339,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":485,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":220,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":350,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":516,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":362,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":15,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":454,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":192,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":471,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":470,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":255,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":238,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":264,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":329,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":520,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":209,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":445,"com.graphhopper.routing.PathTest.testWayList":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":69,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":137,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":343,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":511,"com.graphhopper.coll.OSMIDMapTest.testGet2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":265,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":400,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":503,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":432,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":204,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":465,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":418,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":323,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":389,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":324,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.util.GHUtilityTest.testSort":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":355,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":488,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":203,"com.graphhopper.search.NameIndexTest.testPut":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":443,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":451,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":319,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":314,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":290,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":214,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":288,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":135,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":172,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":504,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":428,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":173,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":109,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":66,"com.graphhopper.routing.PathTest.testFound":124,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":20,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":132,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":402,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":202,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":424,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":492,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":342,"com.graphhopper.util.InstructionListTest.testEmptyList":268,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":457,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":252,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":328,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":256,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":155,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":189,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":467,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":259,"com.graphhopper.reader.PrinctonReaderTest.testRead":114,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":63,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":341,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":483,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":64,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":187,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":429,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":212,"com.graphhopper.reader.OSMReaderTest.testFoot":116,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":354,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":505,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":300,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":487,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":179,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":301,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":461,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":474,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":439,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":186,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":97,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":469,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":349,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":234,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":515,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":241,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":291,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":345,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":119,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":446,"com.graphhopper.routing.PathBidirRefTest.testExtract2":129,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":522,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":243,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":287,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":304,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":507,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":473,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":144,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":27,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":363,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":297,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":475,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":273,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":166,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":89,"com.graphhopper.GraphHopperTest.testFootAndCar":111,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":330,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":102,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":415,"com.graphhopper.GraphHopperTest.testPrepareOnly":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":262,"com.graphhopper.GraphHopperTest.testVia":13,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":333,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":29,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":368,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":269,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":472,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":150,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":28,"com.graphhopper.routing.AStarBidirectionTest.initializationError":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":348,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":170,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":401,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":399,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":79}}]
