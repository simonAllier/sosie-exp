[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"9d216d1b-dafa-11e4-beef-eba444cb2a3c","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-1},{"failures":[38,39,0,1,2,3,4,40,41,5,6,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,7,193,194,8,195,196,197,198,199,9,10,200,201,202,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,36,37,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455],"tindex":"9d22306c-dafa-11e4-beef-279a3a117a2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"9d22306d-dafa-11e4-beef-938359b5e71c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[8,9,200,202,14,18,22,24,27,31,32,33,35,317,319],"tindex":"9d22577e-dafa-11e4-beef-8f6337df67f6","variableMapping":{"flags":"weightLong","nodeFlags":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-1},{"failures":[],"tindex":"9d22577f-dafa-11e4-beef-75d799ba34ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9d225780-dafa-11e4-beef-f55ba8804009","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[117],"tindex":"9d225781-dafa-11e4-beef-fdc1cbd01d35","variableMapping":{"fwdFaster":"maxSpeed","incDist2DSum":"fwdSpeed","fwdSlower":"maxSpeed","fullDist2D":"maxSpeed","restDist2D":"fwdSpeed","speed":"maxSpeed","decDist2DSum":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[0,1,2,3,4,5,6,48,49,50,456,457,458,459,460,461,462,463,21,25,26,29,36,37,464,465,234,236,237,240,242,243,245,246,249,466,257,260,262,263,266,268,269,271,272,275],"tindex":"9d225782-dafa-11e4-beef-2fbb1efb5c50","variableMapping":{"maxTurnCosts":"i","costs":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"9d225783-dafa-11e4-beef-bd9ccf12a7c7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[],"tindex":"9d225784-dafa-11e4-beef-99453dafa04d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[7,9,10,14,17,18,29,31,33],"tindex":"9d225785-dafa-11e4-beef-3b427d508d28","variableMapping":{"edgeId":"from","nextEdge":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"9d225786-dafa-11e4-beef-fd8f06583588","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[456,457,467,458,468,459,460,463,464,465,235,261],"tindex":"9d225787-dafa-11e4-beef-8f6f06ab5001","variableMapping":{"midLat":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[38,0,3,6,42,46,47,48,49,51,52,53,54,57,58,59,77,469,470,86,87,88,96,97,100,103,104,107,109,112,119,130,135,137,145,146,148,150,153,154,155,165,166,169,170,171,173,176,177,178,188,189,192,12,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,209,226,233,250,276,277,278,279,280,281,282,284,286,288,289,290,291,292,293,294,295,296,297,300,301,303,304,305,306,308,311,312,313,314,315,317,318,322,323,326,328,329,330,331,332,333,335,337,339,340,341,342,343,344,345,346,347,348,351,352,354,355,356,357,359,362,363,364,365,366,367,368,369,372,374,375,376,377,378,379,381,383,385,386,387,388,389,390,391,392,393,394,397,398,400,401,402,403,405,408,409,410,411,412,413,416,418,419,420,421,422,423,425,427,429,430,431,432,433,434,435,436,437,438,441,442,444,445,446,447,449,452,453,454,455],"tindex":"9d227e98-dafa-11e4-beef-d14c24189b22","variableMapping":{"bytePos":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-1},{"failures":[],"tindex":"9d227e99-dafa-11e4-beef-1f77a685863c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[469,151,174],"tindex":"9d227e9a-dafa-11e4-beef-bbddedee1324","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[471,472,473],"tindex":"9d227e9b-dafa-11e4-beef-438f7e91ec6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[104,108],"tindex":"9d227e9c-dafa-11e4-beef-1b4c23679050","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[128,132,133],"tindex":"9d227e9d-dafa-11e4-beef-21da0b6b17f0","variableMapping":{"node":"index","onStack":"onStack"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[],"tindex":"9d227e9e-dafa-11e4-beef-0590c0426daa","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":0},{"failures":[],"tindex":"9d227e9f-dafa-11e4-beef-61d76ad51059","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[],"tindex":"9d227ea0-dafa-11e4-beef-4fdf573714d2","variableMapping":{"dLat":"endNode","dLon":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[115,119],"tindex":"9d227ea1-dafa-11e4-beef-67a076cf46f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[50,55,110],"tindex":"9d227ea2-dafa-11e4-beef-31dd315d7fa6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[0,1,3,4,42,47,50,52,53,55,129,130,131,25,26,29,474,203,204,36,37,236,238,241,244,245,246,247,249,252,253,256,257,258,262,264,267,270,271,272,273,275],"tindex":"9d227ea3-dafa-11e4-beef-b175aab15bd7","variableMapping":{"id":"v"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[12],"tindex":"9d227ea4-dafa-11e4-beef-95c32ff14bb9","variableMapping":{"flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"9d22a5b5-dafa-11e4-beef-2d9ab4d41d30","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"9d22a5b6-dafa-11e4-beef-dd30a7e46987","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"9d22a5b7-dafa-11e4-beef-f3d46eb52c02","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"9d22a5b8-dafa-11e4-beef-81cccb7438a7","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[3,46,47,53,59,83,469,475,476,470,105,13,17,20,23,25,26,35,226,233,250,276,277,278,279,285,286,288,301,306,309,313,323,328,329,330,336,337,339,352,357,360,364,366,369,374,375,376,382,383,385,398,403,406,410,413,418,419,420,426,427,429,442,447,450,454],"tindex":"9d22a5b9-dafa-11e4-beef-09850013d42e","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"nextWayBit","sign":"nextWayBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"9d22a5ba-dafa-11e4-beef-7f77988194f0","variableMapping":{"da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"9d22a5bb-dafa-11e4-beef-9bf9b34c9ad9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[],"tindex":"9d22a5bc-dafa-11e4-beef-3dfd112880a9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[18,31,33,477,478],"tindex":"9d22a5bd-dafa-11e4-beef-0f49fffad0cb","variableMapping":{"importance":"element","hash":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"9d22a5be-dafa-11e4-beef-fba26fe074f1","variableMapping":{"midLat":"maxEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"9d22a5bf-dafa-11e4-beef-cbd1a335e819","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"9d22a5c0-dafa-11e4-beef-698ffe104c36","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"len","speed":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[59,128,130,131,279,287,289,290,292,296,297,304,305,321,330,338,340,341,343,347,348,355,356,376,384,386,387,389,393,394,401,402,420,428,430,431,433,437,438,445,446],"tindex":"9d22a5c1-dafa-11e4-beef-1fd2c9006758","variableMapping":{"entries":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"9d22a5c2-dafa-11e4-beef-db508de1894c","variableMapping":{"r":"fwdSpeed","x":"maxSpeed","absY":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"9d22a5c3-dafa-11e4-beef-61444edc25cd","variableMapping":{"entry":"entryVal","entryVal":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[471,472,473],"tindex":"9d22a5c4-dafa-11e4-beef-5dd06a066e19","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"9d22ccd5-dafa-11e4-beef-c7d3d201de25","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"9d22ccd6-dafa-11e4-beef-4735855caa1b","variableMapping":{"turnCostIndex":"toSize","NO_TURN_ENTRY":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-2},{"failures":[],"tindex":"9d22ccd7-dafa-11e4-beef-b1fa199e3266","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"9d22ccd8-dafa-11e4-beef-49711d476cdb","variableMapping":{"nodeFrom":"endNode","this":"this","nodeTo":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:63","type":"CtIfImpl","sourcecode":"if (int != int)\n    throw new java.lang.IllegalStateException((\"\\'to\\' and \\'from\\' have to be the same. \" + com.graphhopper.routing.Path.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[8,196,9,200,202,479],"tindex":"9d22ccd9-dafa-11e4-beef-fdfce893f224","variableMapping":{"value":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"9d22ccda-dafa-11e4-beef-c301a99fcf5e","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":0},{"failures":[98,147,167,190],"tindex":"9d22ccdb-dafa-11e4-beef-35d7eacd2590","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[7,10,12,13,35],"tindex":"9d22ccdc-dafa-11e4-beef-1de61deb4c40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[135,137,150,173],"tindex":"9d22ccdd-dafa-11e4-beef-bf3322e947e9","variableMapping":{"red":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"9d22ccde-dafa-11e4-beef-09dc0712df89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"9d22ccdf-dafa-11e4-beef-3f40cc3d0bec","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[128,132],"tindex":"9d22cce0-dafa-11e4-beef-932ceba75e00","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-1},{"failures":[],"tindex":"9d22cce1-dafa-11e4-beef-d35075485b26","variableMapping":{"a_lon_deg":"minLat","factor":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"9d22cce2-dafa-11e4-beef-636c5bee2d2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"9d22cce3-dafa-11e4-beef-bbdc7a05ae04","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"9d22f2f4-dafa-11e4-beef-43546b5f4026","variableMapping":{"gradient":"fwdDecline","yend":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"9d22f2f5-dafa-11e4-beef-bb50ff19365d","variableMapping":{"midLat":"minEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"9d22f2f6-dafa-11e4-beef-87ed7a5bcba6","variableMapping":{"java.lang.Double.NaN":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"9d22f2f7-dafa-11e4-beef-0f4a7f5d9dc7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"9d22f2f8-dafa-11e4-beef-bd076ec0aa0a","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[128,133],"tindex":"9d22f2f9-dafa-11e4-beef-693d29a3668c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"9d22f2fa-dafa-11e4-beef-3762ff9ad1a6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:248","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"The PBF DenseInfo keys/values list contains a key with no corresponding value.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[87,88,96,137,145,153,155,165,176,178,188],"tindex":"9d22f2fb-dafa-11e4-beef-95110c3a21f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"9d22f2fc-dafa-11e4-beef-f1d20a4bbf21","variableMapping":{"len":"from","start":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"9d22f2fd-dafa-11e4-beef-9f1ec1838e71","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[53,470],"tindex":"9d22f2fe-dafa-11e4-beef-85b77d6f2cc0","variableMapping":{"this":"this","speed":"speed","encoded":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:90","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[59,128,130,131,279,287,289,290,292,296,297,304,305,321,330,338,340,341,343,347,348,355,356,376,384,386,387,389,393,394,401,402,420,428,430,431,433,437,438,445,446],"tindex":"9d22f2ff-dafa-11e4-beef-f384fc0a56fc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[38,3,6,42,83,470,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,226,233,250,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455],"tindex":"9d22f300-dafa-11e4-beef-edced85a6a0c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"9d22f301-dafa-11e4-beef-77986608a13b","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"bytePos","sign":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":0},{"failures":[38,39,0,1,2,3,4,41,5,6,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,480,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,76,77,78,79,81,82,103,128,129,130,131,132,133,170,171,7,193,8,195,196,197,198,199,9,10,200,201,202,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,36,37,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,481,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455],"tindex":"9d231a12-dafa-11e4-beef-77f4c0eb512b","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[456,457,467,458,459,460,461,462,463,464,465,234,240,242,243,466,260,266,268,269],"tindex":"9d231a13-dafa-11e4-beef-79798e2bf992","variableMapping":{"segmentSizeInBytes":"i","capacity":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:413","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"9d231a14-dafa-11e4-beef-572a3dff03d3","variableMapping":{"index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"9d231a15-dafa-11e4-beef-fd1be7090da4","variableMapping":{"midLat":"eleDelta","lat":"eleDelta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[0,1,2,4,6,303],"tindex":"9d231a16-dafa-11e4-beef-37592611dfab","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-1},{"failures":[131],"tindex":"9d231a17-dafa-11e4-beef-97f47fa5adab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"9d231a18-dafa-11e4-beef-87dbaac93610","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"9d231a19-dafa-11e4-beef-f5cb13e87aa1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:30","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Call doWork only once!\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[38,39,0,1,4,41,6,8,196,9,200,201,202,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"9d231a1a-dafa-11e4-beef-5d3667eafa09","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[107],"tindex":"9d231a1b-dafa-11e4-beef-c3fe5391986d","variableMapping":{"initialBits":"encoded","allBits":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"9d231a1c-dafa-11e4-beef-2bc6a7e8fe3f","variableMapping":{"elem":"nodeIndex","size":"connectedId","keys":"nodeIndex","i":"connectedId","child":"connectedId","lastPrio":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[456,468],"tindex":"9d23412d-dafa-11e4-beef-41ba1768216c","variableMapping":{"orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[456,457,467,458,468,459,460,463,464,465],"tindex":"9d23412e-dafa-11e4-beef-8bdd32f063bc","variableMapping":{"offset":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[59,130,131,290,341,387,431],"tindex":"9d23412f-dafa-11e4-beef-67d7ac72a19f","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"cap","speed":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":-1},{"failures":[],"tindex":"9d234130-dafa-11e4-beef-3fdec32d7c5f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[171],"tindex":"9d234131-dafa-11e4-beef-d98f9853d7ac","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"9d234132-dafa-11e4-beef-9d617812af29","variableMapping":{"r":"key","com.graphhopper.util.AngleCalc.PI_4":"key","x":"key","angle":"key","absY":"key","com.graphhopper.util.AngleCalc.PI3_4":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":0},{"failures":[131,279,292,296,297,304,305,330,343,347,348,355,356,376,389,393,394,401,402,420,433,437,438,445,446],"tindex":"9d234133-dafa-11e4-beef-cbcbe76f8d2a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[117],"tindex":"9d234134-dafa-11e4-beef-2f16617eb597","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"9d234135-dafa-11e4-beef-293d9e8268f6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[128,132,133],"tindex":"9d234136-dafa-11e4-beef-f9f4e6a346c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"9d234137-dafa-11e4-beef-c3d4781fa326","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:132","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,31,32,33,34,35,36],"tindex":"9d234138-dafa-11e4-beef-93bd404fd87b","variableMapping":{"eof":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"9d234139-dafa-11e4-beef-abc440429907","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"9d23413a-dafa-11e4-beef-3b72d04757fb","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":0},{"failures":[],"tindex":"9d23413b-dafa-11e4-beef-4d9289f4bde8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 5))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 5), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"9d23413c-dafa-11e4-beef-a3714b76d060","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[456,457,467,458,459,460,461,462,463,464,465,234,240,242,243,466,260,266,268,269],"tindex":"9d23413d-dafa-11e4-beef-49aecd28c6c4","variableMapping":{"bits":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":30,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":62,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":320,"com.graphhopper.GraphHopperAPITest.testNoLoad":219,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":278,"com.graphhopper.reader.OSMReaderTest.testFerry":46,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":216,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":154,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":263,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":39,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":365,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":384,"com.graphhopper.coll.CompressedArrayTest.testCompress":465,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":144,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":453,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":196,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":298,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":200,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":7,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":436,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":473,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":22,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":206,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":481,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":145,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":204,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":326,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":260,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":137,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":20,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":237,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":155,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":366,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":461,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":328,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":472,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":11,"com.graphhopper.GraphHopperTest.testLoadOSM":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":238,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":84,"com.graphhopper.reader.OSMReaderTest.testSort":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":166,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":370,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":448,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":413,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":311,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":68,"com.graphhopper.routing.DijkstraTest.initializationError":73,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":405,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":353,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":425,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":367,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":176,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":374,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":97,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":267,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":433,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":265,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":16,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":330,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":394,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":345,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":323,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":347,"com.graphhopper.coll.CompressedArrayTest.testCompress2":464,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":438,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":385,"com.graphhopper.GraphHopperAPITest.testLoad":36,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":327,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":101,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":430,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":420,"com.graphhopper.storage.LevelGraphStorageTest.testClone":332,"com.graphhopper.reader.OSMReaderTest.testBarriers":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.util.GHUtilityTest.testCopy":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":282,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":276,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":147,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":224,"com.graphhopper.routing.PathTest.testFindInstruction":79,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":141,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":376,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":471,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":107,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":218,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":175,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":221,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":449,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":434,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":403,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":198,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":186,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":475,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":80,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":283,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":416,"com.graphhopper.util.InstructionListTest.testWayList2":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":245,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":454,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":380,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":153,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":170,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":414,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":386,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":18,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":419,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":51,"com.graphhopper.routing.AStarTest.initializationError":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":383,"com.graphhopper.routing.PathBidirRefTest.testExtract":81,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":159,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":411,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":158,"com.graphhopper.util.GHUtilityTest.testSort2":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":27,"com.graphhopper.reader.OSMReaderTest.testMain":48,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":324,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":113,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":393,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":462,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":272,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":112,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":371,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":339,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":343,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":364,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":65,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":173,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":346,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":58,"com.graphhopper.storage.GraphHopperStorageTest.testClone":422,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":117,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":432,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":315,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":284,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":318,"com.graphhopper.routing.PathTest.testTime":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":93,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":362,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":333,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":124,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":255,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":297,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":351,"com.graphhopper.util.GHUtilityTest.testSortDirected":215,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":478,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":189,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":64,"com.graphhopper.GraphHopperTest.testFootOnly":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":115,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":266,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":293,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":61,"com.graphhopper.routing.QueryGraphTest.testOneWay":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":248,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":236,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":456,"com.graphhopper.reader.OSMReaderTest.testWithBounds":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":190,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":407,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":299,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":469,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":329,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":187,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":116,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":390,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":418,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.util.InstructionListTest.testWayList":207,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":157,"com.graphhopper.GraphHopperAPITest.testDisconnected179":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":285,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":468,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":184,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":313,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":2,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":424,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":401,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":149,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":442,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":24,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":10,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":120,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":165,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":34,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":417,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":169,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":412,"com.graphhopper.routing.PathTest.testWayList":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":35,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":396,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":163,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":435,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":381,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":268,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":269,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":181,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":477,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":87,"com.graphhopper.util.GHUtilityTest.testSort":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":302,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":410,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":421,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":223,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":256,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":177,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":67,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":227,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":368,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":89,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":127,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":391,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":128,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":342,"com.graphhopper.routing.PathTest.testFound":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":303,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":42,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":470,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":359,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":161,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":387,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":479,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":288,"com.graphhopper.util.InstructionListTest.testEmptyList":205,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":427,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":25,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":146,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":28,"com.graphhopper.reader.PrinctonReaderTest.testRead":44,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":264,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":287,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":277,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":174,"com.graphhopper.reader.OSMReaderTest.testFoot":47,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":242,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":363,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":460,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":134,"com.graphhopper.reader.OSMReaderTest.testOneWay":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":243,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":431,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":446,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":404,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":142,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":295,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":197,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":466,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":195,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":230,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":103,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":291,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":63,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":415,"com.graphhopper.routing.PathBidirRefTest.testExtract2":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":96,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":246,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":444,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":99,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":314,"com.graphhopper.util.SimpleIntDequeTest.testPush":474,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":239,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":447,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":214,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":121,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":439,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":88,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":275,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":31,"com.graphhopper.GraphHopperTest.testPrepareOnly":38,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":279,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":55,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":319,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":209,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":443,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":105,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":54,"com.graphhopper.routing.AStarBidirectionTest.initializationError":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":294,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":125,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":358,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":356,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":369}}]
