[{"failures":[],"tindex":"9a080d38-da82-11e4-8f31-01da74d29748","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[0],"tindex":"9a083449-da82-11e4-8f31-b35588ed1a17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"9a08344a-da82-11e4-8f31-a90dddef1ac2","variableMapping":{"str":"str","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:82","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":0},{"failures":[],"tindex":"9a08344b-da82-11e4-8f31-25652dcff0fb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9a08344c-da82-11e4-8f31-2faa10e8b70c","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"9a08344d-da82-11e4-8f31-df86a55f7fd9","variableMapping":{"maxMCSpeed":"key","speed":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"9a08344e-da82-11e4-8f31-3d56e3b942ae","variableMapping":{"high":"value","low":"value","guess":"value","guessedKey":"value","key":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[1,2,3,4,5,6],"tindex":"9a08344f-da82-11e4-8f31-a36ecb9cad23","variableMapping":{"tmpNo":"nextWayBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17],"tindex":"9a083450-da82-11e4-8f31-77dc4c4fe5e0","variableMapping":{"baseUrl":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:114","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[],"tindex":"9a083451-da82-11e4-8f31-59a27f0b7947","variableMapping":{"visitedCountFrom":"high","visitedCountTo":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[18],"tindex":"9a083452-da82-11e4-8f31-93b18d0f6896","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"9a083453-da82-11e4-8f31-216fe1bdba0a","variableMapping":{"directionBitMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[19],"tindex":"9a085b64-da82-11e4-8f31-970021632543","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,29,30,1,2,31,32,33,34,35,36,37,38,39,40,41,42,43,3,44,45,46,47,48,49,19,7,8,50,51,52,53,9,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,10,74,75,76,77,11,78,79,80,81,82,83,12,84,13,85,86,87,88,89,14,90,91,92,93,94,95,96,97,15,98,16,99,100,101,102,103,17,104,105,106,107,108,109],"tindex":"9a085b65-da82-11e4-8f31-c16870c2256e","variableMapping":{"name":"value","properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:183","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"9a085b66-da82-11e4-8f31-b9dd768b03a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[],"tindex":"9a085b67-da82-11e4-8f31-45da6e738d4a","variableMapping":{"size":"segmentSizeIntsPower","delta":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"9a085b68-da82-11e4-8f31-c300808599d3","variableMapping":{"distance":"speedVal","maxSpeed":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"9a085b69-da82-11e4-8f31-9bee5a91bf4a","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[110,111,112,113,114],"tindex":"9a085b6a-da82-11e4-8f31-937553b0be1a","variableMapping":{"bit":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[115,116,117,118],"tindex":"9a08a98b-da82-11e4-8f31-8f219662fb30","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"9a08d09c-da82-11e4-8f31-d79c96a82a67","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"9a08d09d-da82-11e4-8f31-d1b480eee5a0","variableMapping":{"turnCostIndex":"kmInteger","NO_TURN_ENTRY":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-2},{"failures":[22,23,24,25,26,28,29,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"9a08d09e-da82-11e4-8f31-03b6b8958598","variableMapping":{"synched":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"9a08d09f-da82-11e4-8f31-499b6749ae1f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[1,67],"tindex":"9a08d0a0-da82-11e4-8f31-eff34ecdaf1f","variableMapping":{"distance":"unknownSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[115,116,117,118],"tindex":"9a08d0a1-da82-11e4-8f31-1d6734ef57d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"9a08d0a2-da82-11e4-8f31-59d1bcb79462","variableMapping":{"level":"removed","lg":"g","polledNode":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:348","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.setLevel(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"9a08d0a3-da82-11e4-8f31-bbec2b302703","variableMapping":{"graphHopperFolder":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[119,121,122,123,124,125,126,129,130,141,142,143,144,146],"tindex":"9a08d0a4-da82-11e4-8f31-9921961ceab2","variableMapping":{"ref":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"9a08d0a5-da82-11e4-8f31-47a27482acfc","variableMapping":{"flags":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[149],"tindex":"9a08d0a6-da82-11e4-8f31-4599629eb68c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"9a08d0a7-da82-11e4-8f31-efdd103d68bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[25,150,125,134,137],"tindex":"9a08d0a8-da82-11e4-8f31-4dee871b3d47","variableMapping":{"defaultUTurnCost":"speed","weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-1},{"failures":[20,22,26,27,28,30,31,34,35,151,152,153,154,155,156,157,158,159,143,160,161,162,109,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"tindex":"9a091ec9-da82-11e4-8f31-79f2fd8d344d","variableMapping":{"cap":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"9a091eca-da82-11e4-8f31-53cbc9938f5d","variableMapping":{"oldValueIndex":"flags","lastKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"9a091ecb-da82-11e4-8f31-dd0d93a96edd","variableMapping":{"maxMCSpeed":"lon","speed":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[20,21,22,23,24,25,26,208,27,28,29,30,209,210,211,1,2,31,32,33,34,35,36,37,38,39,40,41,42,3,212,213,154,214,215,216,217,218,155,156,219,220,157,221,222,223,224,225,158,159,226,227,228,229,230,5,49,19,7,8,50,51,231,52,53,115,232,9,54,55,56,57,58,233,234,59,6,235,60,61,236,62,63,64,65,66,67,237,68,69,70,238,239,240,241,242,71,149,150,243,244,245,246,247,248,249,250,72,73,10,74,75,76,251,77,116,252,11,78,79,80,253,81,82,83,12,84,13,254,85,86,87,255,88,89,117,256,14,90,91,92,93,94,0,257,95,96,97,15,98,16,258,99,100,101,259,102,103,118,260,17,104,105,106,107,119,261,262,120,263,264,265,266,267,121,122,268,269,110,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,270,142,143,144,145,146,271,272,273,160,161,162,109,274,275,163,276,277,278,279,280,281,147,148,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,206,169,298,170,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,207,171,321,172,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,173,377,378,174,379,380,381,382,175,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,176,403,404,405,406,407,177,408,409,410,411,178,412,179,413,414,415,180,416,417,181,418,419,420,421,182,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,183,442,443,444,445,446,184,447,448,449,450,185,451,186,452,453,454,455,187,456,457,458,459,188,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,189,480,481,482,483,484,190,485,486,487,488,191,489,192,490,491,492],"tindex":"9a091ecc-da82-11e4-8f31-5934dddfeaca","variableMapping":{"angle":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"9a091ecd-da82-11e4-8f31-ad2cb2f5c33f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"9a091ece-da82-11e4-8f31-b59813c4bd2a","variableMapping":{"this":"this","fwdDecline":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[244,249],"tindex":"9a0945df-da82-11e4-8f31-570cbf943a5d","variableMapping":{"indexWithMaxDist":"removed","lastIndex":"removed","fromIndex":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"9a0945e0-da82-11e4-8f31-6d51195d8888","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"9a0945e1-da82-11e4-8f31-d13c83c93314","variableMapping":{"bit":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[345,393,432,470,493,494],"tindex":"9a0945e2-da82-11e4-8f31-43354ecee892","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[],"tindex":"9a0945e3-da82-11e4-8f31-cf01c0bb3005","variableMapping":{"high":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9a0945e4-da82-11e4-8f31-a559cea7081f","variableMapping":{"elem":"a","size":"key","value":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:300","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        return int;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[495],"tindex":"9a0945e5-da82-11e4-8f31-5d2271d01416","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"9a0945e6-da82-11e4-8f31-31ed460d6380","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[48,7,8,72,10,11,12,13,15,16],"tindex":"9a0945e7-da82-11e4-8f31-516b5c92e05f","variableMapping":{"oldValueIndex":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"9a0945e8-da82-11e4-8f31-ffc6762170cb","variableMapping":{"high":"acceptBit","highKey":"ferryBit","key":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"9a0945e9-da82-11e4-8f31-45cd95f75717","variableMapping":{"param":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:66","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[244,248,249],"tindex":"9a0945ea-da82-11e4-8f31-755796328107","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:97","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[],"tindex":"9a0945eb-da82-11e4-8f31-23bb73127511","variableMapping":{"pos":"i","mSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[3,244,246,247,336,344,346,347,349,353,354,361,362,377,384,392,394,395,397,401,402,177,408,423,431,433,434,436,440,441,184,447,461,469,471,472,474,478,479,190,485],"tindex":"9a096cfc-da82-11e4-8f31-23ab455c1a86","variableMapping":{"index":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":-1},{"failures":[244,249],"tindex":"9a096cfd-da82-11e4-8f31-6fad2d523aeb","variableMapping":{"from":"removed","hash":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"9a096cfe-da82-11e4-8f31-8300dad03651","variableMapping":{"hash":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"9a096cff-da82-11e4-8f31-71861ef0b06f","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"9a096d00-da82-11e4-8f31-bfbd393afdda","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failures":[],"tindex":"9a096d01-da82-11e4-8f31-afcfcb3988e9","variableMapping":{"capacity":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"9a096d02-da82-11e4-8f31-91ae56ebe65b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"9a096d03-da82-11e4-8f31-35c9574a65f8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"9a096d04-da82-11e4-8f31-3b15a85ee1bc","variableMapping":{"cap":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[5],"tindex":"9a096d05-da82-11e4-8f31-311dd53ef549","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"9a096d06-da82-11e4-8f31-990e92b46698","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"9a096d07-da82-11e4-8f31-c5a3cce3b7ad","variableMapping":{"logMessagesPercentage":"java.lang.Double.MAX_VALUE","logMessages":"maxEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[47,48,231,57,251,80,82,255,93,96,259,107],"tindex":"9a096d08-da82-11e4-8f31-b3a149bf06d0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[244,247,336,346,347,353,361,362,384,394,395,401,177,408,423,433,434,440,184,447,461,471,472,478,190,485],"tindex":"9a096d09-da82-11e4-8f31-65365da62705","variableMapping":{"shiftSum":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"9a096d0a-da82-11e4-8f31-7fe3415ce48f","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"priorityFromRelation","edge":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-2},{"failures":[29,47,48,7,8,231,9,57,18,496,10,251,11,80,82,12,13,255,14,93,96,15,16,259,17,107],"tindex":"9a096d0b-da82-11e4-8f31-8f909a0c7b2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[],"tindex":"9a096d0c-da82-11e4-8f31-fb2101e0be08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"9a096d0d-da82-11e4-8f31-df5f8750a1b5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"9a09941e-da82-11e4-8f31-0f035c5a70db","variableMapping":{"newName":"encoder","name":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[123,124,125,143,144,146],"tindex":"9a09941f-da82-11e4-8f31-2f9dead056f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:81","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[],"tindex":"9a099420-da82-11e4-8f31-6f9ea65b0d72","variableMapping":{"i":"unvisitedDeadEnds","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"del"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[22,210,211,2,3,216,155,236,241,244,248,249,120,263,121,268,123,124,125,135,137,138,146,163,279,281,334,335,336,343,345,358,363,366,370,174,175,383,384,391,393,405,409,178,414,180,181,182,422,423,430,432,444,448,185,453,187,188,460,461,468,470,482,486,191,491],"tindex":"9a099421-da82-11e4-8f31-5bedd3529052","variableMapping":{"cap":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[119,122,124,125,146],"tindex":"9a099422-da82-11e4-8f31-0fef688fbe71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"9a099423-da82-11e4-8f31-cd6812800ee1","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"9a099424-da82-11e4-8f31-993d13ccda90","variableMapping":{"turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[22,23,26,120,121,123,125,126,127,128,129,131,132,134,135,136,137,138,139,140,141,143,145,146,148],"tindex":"9a099425-da82-11e4-8f31-b5f7db5a0aab","variableMapping":{"is3D":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[244,247,336,344,346,347,349,353,354,361,362,377,384,392,394,395,397,401,402,177,408,423,431,433,434,436,440,441,184,447,461,469,471,472,474,478,479,190,485],"tindex":"9a099426-da82-11e4-8f31-79a8fd901fb2","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"mSize","edgeTo":"i","edgeFrom":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"9a099427-da82-11e4-8f31-49498cba8498","variableMapping":{"i":"endNode","mainNodes":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"9a099428-da82-11e4-8f31-b36554a3c802","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"9a099429-da82-11e4-8f31-5fffcdb508f2","variableMapping":{"segmentSizeInBytes":"shift","allSegments":"shift","capacity":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"9a09942a-da82-11e4-8f31-a92487587d34","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"9a09942b-da82-11e4-8f31-adffe89bb40f","variableMapping":{"numTiles":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":0},{"failures":[],"tindex":"9a09942c-da82-11e4-8f31-2d88fb664df3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9a09942d-da82-11e4-8f31-ade9084abe90","variableMapping":{"size":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":0},{"failures":[],"tindex":"9a09942e-da82-11e4-8f31-c37929acacd5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"9a09bb3f-da82-11e4-8f31-2148301a7aa3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[33,36,39,245,247,497,498,271,272,312,313],"tindex":"9a09bb40-da82-11e4-8f31-0b96729a32c3","variableMapping":{"bit":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[19,8,56,72,10,74,81,84,13,92,95,98,16,106],"tindex":"9a09bb41-da82-11e4-8f31-abb1dc3d7858","variableMapping":{"indexWithMaxDist":"speed","lastIndex":"speed","fromIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"9a09bb42-da82-11e4-8f31-0348c32ca3fc","variableMapping":{"baseNode":"length","id":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[244,248,249],"tindex":"9a09bb43-da82-11e4-8f31-d167c8b2e750","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[22,23,25,26,30,2,33,35,36,39,245,246,247,137,138,141,497,498,271,272,147,148,169,170,301,304,305,306,307,309,312,313,316,317,318,171,172,324,327,328,329,330,332],"tindex":"9a09bb44-da82-11e4-8f31-91148c23cd8f","variableMapping":{"initLeafSize":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[112,499],"tindex":"9a09bb45-da82-11e4-8f31-0954d02594c2","variableMapping":{"ref":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[121,110,372],"tindex":"9a09bb46-da82-11e4-8f31-d52ebf468616","variableMapping":{"calcMean":"found","eleCalcMean":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"9a09e257-da82-11e4-8f31-c3e3583f6237","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[20,21,22,23,26,27,29,34,35,36,500,214,94,0,119,261,120,263,264,265,266,267,121,122,268,269,110,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,270,142,143,144,145,274,163,281,303,317,318,319,320,207,171,321,172,322,323,324,325,326,327,328,329,330,332,333,360,372,373,374,375,376,173,377,378,174,379,381,175,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,177,408,409,410,411,178,412,179,413,414,415,180,417,181,418,420,182,422,423,424,425,426,427,428,429,430,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,184,447,448,449,450,185,451,186,452,453,454,455,460,461,469,472,474,475,477,478,189,482,484,190,485,487,191,491,492,501,502,503,504,505,506],"tindex":"9a09e258-da82-11e4-8f31-271cde1e643c","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[47,48,5,7,8,9,57,72,10,11,80,82,12,84,13,14,93,96,15,98,16,17,107],"tindex":"9a09e259-da82-11e4-8f31-577effb954a6","variableMapping":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":407,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":270,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":108,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":173,"com.graphhopper.GraphHopperAPITest.testNoLoad":282,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":279,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":84,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":321,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":21,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":431,"com.graphhopper.coll.CompressedArrayTest.testCompress":205,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":252,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":264,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":355,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":470,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":268,"com.graphhopper.GraphHopperTest.testPrepare":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":119,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":477,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":134,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":272,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":81,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":501,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":132,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":298,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":180,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":175,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":123,"com.graphhopper.GraphHopperTest.testLoadOSM":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":304,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":504,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":170,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":230,"com.graphhopper.reader.OSMReaderTest.testSort":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":90,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":418,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":487,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":368,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":155,"com.graphhopper.routing.DijkstraTest.initializationError":221,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":450,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":406,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":466,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":373,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":416,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.reader.OSMNodeTest.testSetTags":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":182,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":324,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":322,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":128,"com.graphhopper.coll.OSMIDMapTest.testGetLong":167,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":384,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":441,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":399,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":174,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":401,"com.graphhopper.coll.CompressedArrayTest.testCompress2":204,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":479,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":432,"com.graphhopper.GraphHopperAPITest.testLoad":147,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":382,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":58,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":471,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":461,"com.graphhopper.storage.LevelGraphStorageTest.testClone":386,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":495,"com.graphhopper.reader.OSMReaderTest.testBarriers":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":131,"com.graphhopper.util.GHUtilityTest.testCopy":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":339,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":115,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":333,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":287,"com.graphhopper.routing.PathTest.testFindInstruction":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":251,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":403,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":423,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":60,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":281,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":97,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":284,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":488,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":475,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":448,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":266,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":118,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":4,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":226,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":340,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":458,"com.graphhopper.util.InstructionListTest.testWayList2":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":305,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":491,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":427,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":82,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":94,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":456,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":390,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":130,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":460,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":34,"com.graphhopper.routing.AStarTest.initializationError":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":143,"com.graphhopper.coll.OSMIDMapTest.testGet":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":430,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":61,"com.graphhopper.routing.PathBidirRefTest.testExtract":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":87,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":166,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":86,"com.graphhopper.util.GHUtilityTest.testSort2":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":139,"com.graphhopper.reader.OSMReaderTest.testMain":31,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":440,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":329,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":64,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":419,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":393,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":397,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":497,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":414,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":496,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":216,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":95,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":503,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":400,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":42,"com.graphhopper.storage.StorablePropertiesTest.testStore":195,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":194,"com.graphhopper.storage.GraphHopperStorageTest.testClone":463,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":364,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":68,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":473,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":372,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":341,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":375,"com.graphhopper.routing.PathTest.testTime":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":53,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":179,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":387,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":242,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":307,"com.graphhopper.reader.OSMReaderTest.testRelation":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":354,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":404,"com.graphhopper.util.GHUtilityTest.testSortDirected":278,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":499,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":104,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":215,"com.graphhopper.GraphHopperTest.testFootOnly":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":323,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":127,"com.graphhopper.reader.OSMElementTest.testSetTags":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":350,"com.graphhopper.search.NameIndexTest.testCreate":153,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":213,"com.graphhopper.routing.QueryGraphTest.testOneWay":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":199,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":169,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":196,"com.graphhopper.reader.OSMReaderTest.testWithBounds":41,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":494,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":105,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":217,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":451,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":356,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":47,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":383,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":380,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":260,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":443,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":237,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":437,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":188,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":125,"com.graphhopper.util.InstructionListTest.testWayList":161,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":85,"com.graphhopper.GraphHopperAPITest.testDisconnected179":148,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":342,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":445,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":102,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":370,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":24,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":465,"com.graphhopper.routing.util.EncodedValueTest.testSwap":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":253,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":482,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":136,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":122,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":145,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":331,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":502,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":93,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":455,"com.graphhopper.routing.PathTest.testWayList":158,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":369,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":346,"com.graphhopper.coll.OSMIDMapTest.testGet2":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":146,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":409,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":442,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":117,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":476,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":428,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":325,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":398,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":326,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":493,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":100,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":112,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":7,"com.graphhopper.util.GHUtilityTest.testSort":276,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":359,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":203,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":89,"com.graphhopper.search.NameIndexTest.testPut":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":453,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":462,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":207,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":286,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":316,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":292,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":506,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":98,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":290,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":417,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":50,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":243,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":438,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":244,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":396,"com.graphhopper.routing.PathTest.testFound":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":360,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":5,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":30,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":411,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":149,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":88,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":434,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":152,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":345,"com.graphhopper.util.InstructionListTest.testEmptyList":273,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":137,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":241,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":78,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":140,"com.graphhopper.reader.PrinctonReaderTest.testRead":210,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":172,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":429,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":168,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":334,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":96,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":358,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":302,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":250,"com.graphhopper.reader.OSMReaderTest.testOneWay":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":303,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":472,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":485,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":449,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":77,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":352,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":467,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":263,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":348,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":214,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":43,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":457,"com.graphhopper.routing.PathBidirRefTest.testExtract2":228,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":505,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":124,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":306,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":484,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":56,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":36,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":371,"com.graphhopper.util.SimpleIntDequeTest.testPush":498,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":299,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":486,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":277,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":389,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":239,"com.graphhopper.GraphHopperTest.testFootAndCar":25,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":189,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":395,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":332,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":425,"com.graphhopper.GraphHopperTest.testPrepareOnly":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":142,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":336,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":39,"com.graphhopper.reader.OSMElementTest.testHasTag":45,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":376,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":109,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":483,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":6,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":37,"com.graphhopper.routing.AStarBidirectionTest.initializationError":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":351,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":71,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":410,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":408,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":181}}]
