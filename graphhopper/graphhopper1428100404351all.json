[{"failures":[0],"tindex":"72d44e8d-da51-11e4-a5ef-7328a59d490e","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1096","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.setWayGeometryHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"72dcb2fe-da51-11e4-a5ef-a74e9ce681d6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"72dcb2ff-da51-11e4-a5ef-25a1175c98e3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"72dcb300-da51-11e4-a5ef-ef27bedb7a8e","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"72dcb301-da51-11e4-a5ef-bbedcde82a21","variableMapping":{"nodeId":"noOfStates","mainNodes":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"72dcb302-da51-11e4-a5ef-43f506a60ff3","variableMapping":{"maxMCSpeed":"lon","speed":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[10,11,12],"tindex":"72dcb303-da51-11e4-a5ef-a33e759b4ca5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[13],"tindex":"72dcb304-da51-11e4-a5ef-51888e9c66c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"72dcb305-da51-11e4-a5ef-19c63f6a9ba6","variableMapping":{"d":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-2},{"failures":[],"tindex":"72dcb306-da51-11e4-a5ef-495117e74235","variableMapping":{"splitIndex":"segmentSizeIntsPower","entrySize":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"72dcb307-da51-11e4-a5ef-dda2e06e68df","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[14],"tindex":"72dcb308-da51-11e4-a5ef-8dd0cb4db401","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[15],"tindex":"72dcb309-da51-11e4-a5ef-15844d0e61f8","variableMapping":{"weightLong":"roundaboutBit","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"72dcb30a-da51-11e4-a5ef-a38fbf49a913","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"72dcb30b-da51-11e4-a5ef-95354f07808d","variableMapping":{"segmentSizeInBytes":"usedBits","indexDivisor":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"72dcb30c-da51-11e4-a5ef-3954f0bda8fa","variableMapping":{"logMessages":"r","logMessagesPercentage":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":0},{"failures":[],"tindex":"72dcda1d-da51-11e4-a5ef-578ce214e5bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"72dcda1e-da51-11e4-a5ef-ef17d1d68e04","variableMapping":{"this":"this","value":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.round((double * 100))) / 100"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[16,17,18,19],"tindex":"72dcda1f-da51-11e4-a5ef-e34271a8e021","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"72dd2840-da51-11e4-a5ef-1f0adeab7cdb","variableMapping":{"edgeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"72dd2841-da51-11e4-a5ef-ad66a3b59b74","variableMapping":{"ar_y":"maxLonTmp","ab_y":"minLonTmp","ar_x":"minLonTmp","ab_x":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"72dd2842-da51-11e4-a5ef-61d4fd9619e8","variableMapping":{"file":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:208","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists())) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"72dd2843-da51-11e4-a5ef-2fb96b840950","variableMapping":{"currentEntry":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"72dd2844-da51-11e4-a5ef-f76ac21088e8","variableMapping":{"edgePointer":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[20,21,22,23,24,25,26,14,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"72dd2845-da51-11e4-a5ef-210ccd18a7cd","variableMapping":{"val":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[49,50],"tindex":"72dd2846-da51-11e4-a5ef-c54ade3fbedf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[51,52,10,53,54,55,56,57,58,59,0,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,20,21,22,23,24,288,25,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,26,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,316,317,317,318,318,319,320,321,322,323,324,325,326,327,328,49,50,329,13,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,11,363,364,365,12,366,367,368,369,370,371,372,373,48,374,375,376,377,378,379,380],"tindex":"72dd7667-da51-11e4-a5ef-11cdc925c2e3","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"72dd7668-da51-11e4-a5ef-b7d03772c2d8","variableMapping":{"index":"bytePos","entriesPerSegment":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"72dd7669-da51-11e4-a5ef-af50d3f45518","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[294,381],"tindex":"72dd766a-da51-11e4-a5ef-9f3add0af815","variableMapping":{"bit":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"72dd766b-da51-11e4-a5ef-9d5c1c5faf56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:329","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[274],"tindex":"72dd766c-da51-11e4-a5ef-cf855729a410","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"72dd766d-da51-11e4-a5ef-792560cba430","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[28,382,383],"tindex":"72dd9d7e-da51-11e4-a5ef-d532a962b240","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"speed","entityType":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[51,52,384,10,53,54,55,56,57,58,59,0,60,61,62,385,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,386,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,387,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,20,21,22,23,24,388,288,25,289,290,389,292,293,294,295,296,297,298,299,300,301,302,390,303,304,305,26,306,307,308,309,310,311,312,313,314,315,316,317,318,391,319,320,392,393,394,321,322,323,324,395,396,14,397,398,399,325,326,327,328,49,50,400,27,401,28,402,403,404,405,406,407,29,408,30,409,410,31,329,13,411,382,412,413,414,32,33,415,416,417,418,419,420,421,422,34,423,35,424,425,426,427,37,38,15,428,429,430,39,40,431,432,433,434,435,436,437,438,330,439,440,441,442,443,444,445,446,447,41,448,449,450,451,452,453,42,454,43,455,456,457,458,383,459,460,461,44,45,462,463,464,465,466,467,468,469,46,470,47,471,472,473,474,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,475,357,358,359,360,361,362,11,363,364,365,12,366,367,368,369,370,371,372,373,48,374,375,376,377,378,379,476,380],"tindex":"72ddc48f-da51-11e4-a5ef-cbe7fb11e698","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"72ddc490-da51-11e4-a5ef-fb97aadb592d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[298,303,427],"tindex":"72ddc491-da51-11e4-a5ef-93f4a1835aaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[],"tindex":"72ddc492-da51-11e4-a5ef-c1778457672f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"72ddc493-da51-11e4-a5ef-93d99c93f2fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[412,459],"tindex":"72ddc494-da51-11e4-a5ef-43d03031b39b","variableMapping":{"ghLocation":"highway","osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[23,289,295,301,477,478,14,27,28,408,410,412,414,32,33,423,426,439,442,447,41,454,457,459,461,44,45,470,473],"tindex":"72ddc495-da51-11e4-a5ef-f3e392d7c489","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"72ddc496-da51-11e4-a5ef-ffb0a9f63db6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[20,332,334,343,347,350,351,352,354,357,11,12],"tindex":"72ddc497-da51-11e4-a5ef-8dd3c39b6337","variableMapping":{"i":"tmpPrevEdge","to":"tmpPrevEdge","lonSize":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"72ddc498-da51-11e4-a5ef-317c5eeffbf8","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[18,19,11],"tindex":"72ddc499-da51-11e4-a5ef-5b389c549536","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[153,159,161,162,479,173,179,181,182,1,2,3,4,6,7,480,481,8,9],"tindex":"72ddc49a-da51-11e4-a5ef-ef922938e428","variableMapping":{"hash":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[153,159,161,162,479,173,179,181,182,1,2,3,4,6,7,480,481,482,8,9],"tindex":"72ddebab-da51-11e4-a5ef-d368862417fa","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"allBits","nextEdge":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[51,52,10,53,54,55,56,57,58,59,0,60,61,62,385,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,386,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,202,203,205,206,207,208,209,387,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,259,274,286,287,20,21,22,23,24,388,288,25,289,290,389,291,292,293,294,295,296,297,298,299,300,301,302,390,303,304,305,26,483,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,316,317,317,318,318,319,320,321,322,323,324,325,326,327,328,49,50,329,13,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,11,363,364,365,12,366,367,368,369,370,371,372,373,48,374,375,376,377,378,379,380],"tindex":"72ddebac-da51-11e4-a5ef-7d7d465f144a","variableMapping":{"newName":"location","inner":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:45","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.rename(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"72ddebad-da51-11e4-a5ef-fddf9bf5f3a9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"72ddebae-da51-11e4-a5ef-9b5a83660a1f","variableMapping":{"index":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[286,23,289,295,439,442,443],"tindex":"72ddebaf-da51-11e4-a5ef-835a86e581d7","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"72ddebb0-da51-11e4-a5ef-bbc179a86290","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[301,477,484,478,28,405,408,410,412,414,33,419,423,426,485,486,447,41,450,454,457,459,461,45,466,470,473],"tindex":"72ddebb1-da51-11e4-a5ef-3105ec155f34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"72ddebb2-da51-11e4-a5ef-8b54216ef374","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[294,429],"tindex":"72ddebb3-da51-11e4-a5ef-3b0070917894","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"72ddebb4-da51-11e4-a5ef-17e940ec9037","variableMapping":{"tmp":"shift","initializedCounter":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"72de12c5-da51-11e4-a5ef-4bdcfc7f4396","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"72de12c6-da51-11e4-a5ef-751ac51b7f4f","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[14],"tindex":"72de12c7-da51-11e4-a5ef-6fe9c6b7ce8d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"72de12c8-da51-11e4-a5ef-b5c4f85eb534","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[395],"tindex":"72de12c9-da51-11e4-a5ef-7503be4fac49","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[296,487],"tindex":"72de12ca-da51-11e4-a5ef-858ae1c00dfc","variableMapping":{"com.graphhopper.routing.AlgorithmOptions.ASTAR":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:192","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AlgorithmOptions.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-1},{"failures":[13],"tindex":"72de12cb-da51-11e4-a5ef-2f0f765456f4","variableMapping":{"i":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[301,484,415,434,462],"tindex":"72de12cc-da51-11e4-a5ef-a9c8b96b1b60","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[296,297,299,301,302,305,477,478,28,405,408,410,412,414,33,419,423,426,447,41,450,454,457,459,461,45,466,470,473],"tindex":"72de12cd-da51-11e4-a5ef-6735e9447fc4","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"72de12ce-da51-11e4-a5ef-ad6238d14532","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[50],"tindex":"72de12cf-da51-11e4-a5ef-73cefbd96a6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"72de12d0-da51-11e4-a5ef-e503c30940f7","variableMapping":{"str":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"72de12d1-da51-11e4-a5ef-154d63feeb09","variableMapping":{"nodeFlags":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-2},{"failures":[],"tindex":"72de12d2-da51-11e4-a5ef-0f1f4a57568a","variableMapping":{"defaultUTurnCost":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"72de12d3-da51-11e4-a5ef-a32e2ec35a1b","variableMapping":{"newName":"highway","name":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"72de12d4-da51-11e4-a5ef-b56e9b3aea2e","variableMapping":{"byteCount":"flags","longSegmentSize":"flags","segmentsToMap":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:120","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[477],"tindex":"72de12d5-da51-11e4-a5ef-d3b98193a882","variableMapping":{"initialBits":"relBitMask","allBits":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"72de12d6-da51-11e4-a5ef-6f5290d92d59","variableMapping":{"splitIndex":"bytes","entrySize":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[301,390,477,484,478,28,405,408,410,412,414,33,415,419,423,426,485,486,434,447,41,450,454,457,459,461,45,462,466,470,473],"tindex":"72de39e7-da51-11e4-a5ef-d7858df40ffb","variableMapping":{"i":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"72de39e8-da51-11e4-a5ef-1d92f04857ca","variableMapping":{"index":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"72de39e9-da51-11e4-a5ef-c33f24188abe","variableMapping":{"store":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"72de39ea-da51-11e4-a5ef-8b3524a46a7b","variableMapping":{"r":"java.lang.Double.MAX_VALUE","angle":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[27,28,402,382,32,33,425,446,41,456,383,44,45,472],"tindex":"72de39eb-da51-11e4-a5ef-3f0bba83b176","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"72de39ec-da51-11e4-a5ef-25c46304746d","variableMapping":{"red":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[333,336,337,348,350,352,355,11,363],"tindex":"72de39ed-da51-11e4-a5ef-29f6f4a23b5d","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"72de39ee-da51-11e4-a5ef-b92a81df61e7","variableMapping":{"red":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-2},{"failures":[51,52,155,157,160,163,164,165,166,168,170,171,175,177,180,183,184,185,186,188,192,193,196,20,21,23,24,298,301,303,306,326,327,328,344,345,348,367,368,488],"tindex":"72de39ef-da51-11e4-a5ef-879d3693845c","variableMapping":{"latSize":"frontIndex","lonSize":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[13],"tindex":"72de39f0-da51-11e4-a5ef-b97aa2e5e0a2","variableMapping":{"delta_lat":"fwdDecline","r_lat":"fwdDecline","a_lat":"fwdDecline","delta_lon":"fwdDecline","r_lon":"fwdDecline","a_lon":"fwdDecline","norm":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"72de39f1-da51-11e4-a5ef-09a6a12c7317","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[325,49,50],"tindex":"72de39f2-da51-11e4-a5ef-db24df0fe151","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[489,20,21,24,289,332,338,340,341,344,345,348,351,354,357,359,11,364,365,12,366],"tindex":"72de39f3-da51-11e4-a5ef-b161ec21708f","variableMapping":{"delta":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:287","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[],"tindex":"72de39f4-da51-11e4-a5ef-35904a89ad11","variableMapping":{"com.graphhopper.storage.DAType.MemRef.HEAP":"value","memRef":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:107","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DAType.MemRef) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"72de39f5-da51-11e4-a5ef-13bceb9a3ebc","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1197","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"72de39f6-da51-11e4-a5ef-3119b5a67ace","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[490,252,270,275,286,287,20,24,388,288,25,290,389],"tindex":"72de39f7-da51-11e4-a5ef-1f9db0bd9ad6","variableMapping":{"message":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"72de39f8-da51-11e4-a5ef-5f771e5b9997","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:747","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[0,64,65,71,72,74,79,87,92,99,101,104,109,110,116,117,119,124,132,137,144,152,169,189,203,490,206,211,212,218,219,221,226,234,239,246,249,250,256,257,259,264,272,277,284,20,23,294,295,301,26,306,322,323,477,478,14,398,399,27,28,408,30,410,31,13,382,412,414,32,33,423,35,426,36,491,492,38,15,429,39,40,431,436,438,439,440,442,444,446,447,41,454,43,457,383,459,461,44,45,470,47,473,331,332,341,342,343,344,345,354,48],"tindex":"72de6109-da51-11e4-a5ef-7124be0e48f2","variableMapping":{"len":"flags","start":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[490,16,17,18,493,19,11,12],"tindex":"72de610a-da51-11e4-a5ef-9bbb5249343d","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[490,27,28,409,382,33,424,38,431,443,455,383,45,471],"tindex":"72de610b-da51-11e4-a5ef-5d976bb052e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[],"tindex":"72de610c-da51-11e4-a5ef-0b0961d0878f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"72de881d-da51-11e4-a5ef-654d44d066c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[490,477],"tindex":"72de881e-da51-11e4-a5ef-0b19e2db31c0","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"usedBits","speed":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"72de881f-da51-11e4-a5ef-630c59b1e885","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[490],"tindex":"72de8820-da51-11e4-a5ef-b3660bd793d0","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"speed","entityType":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":89,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":349,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":36,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":148,"com.graphhopper.GraphHopperAPITest.testNoLoad":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":249,"com.graphhopper.reader.OSMReaderTest.testFerry":294,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":374,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":176,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":287,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":118,"com.graphhopper.coll.CompressedArrayTest.testCompress":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":29,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":245,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":269,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":364,"com.graphhopper.GraphHopperTest.testPrepare":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":348,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":355,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":341,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":371,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":408,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":368,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":62,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":173,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":49,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":333,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":156,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":45,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":101,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":480,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":63,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":366,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":157,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":396,"com.graphhopper.reader.OSMReaderTest.testSort":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":47,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":304,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":105,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":240,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":206,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":282,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":314,"com.graphhopper.routing.DijkstraTest.initializationError":391,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":139,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":88,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":217,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":102,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":113,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":492,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":414,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":108,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":457,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":43,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":180,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":178,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":336,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":122,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":128,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":80,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":489,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":0,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":82,"com.graphhopper.coll.CompressedArrayTest.testCompress2":8,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":446,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":119,"com.graphhopper.GraphHopperAPITest.testLoad":51,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":385,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":437,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":222,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":212,"com.graphhopper.storage.LevelGraphStorageTest.testClone":67,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":381,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.reader.OSMReaderTest.testBarriers":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":338,"com.graphhopper.util.GHUtilityTest.testCopy":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":453,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":150,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":409,"com.graphhopper.routing.PathTest.testFindInstruction":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":405,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":85,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":110,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":442,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":96,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":413,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":241,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":137,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":376,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":422,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":394,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":69,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":254,"com.graphhopper.util.InstructionListTest.testWayList2":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":164,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":246,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":461,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":142,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":459,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":329,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":120,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":191,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":337,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":299,"com.graphhopper.routing.AStarTest.initializationError":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":117,"com.graphhopper.routing.PathBidirRefTest.testExtract":319,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":443,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":465,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":145,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":275,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":464,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":169,"com.graphhopper.util.GHUtilityTest.testSort2":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":346,"com.graphhopper.reader.OSMReaderTest.testMain":296,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":466,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":481,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":471,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":38,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":279,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":74,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":78,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":99,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":486,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":75,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":382,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":81,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.storage.GraphHopperStorageTest.testClone":214,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":431,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":39,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":224,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":10,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":455,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":255,"com.graphhopper.routing.PathTest.testTime":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":452,"com.graphhopper.routing.util.EncodingManagerTest.testFixWayName":487,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":97,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":436,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":166,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":268,"com.graphhopper.reader.OSMReaderTest.testRelation":390,"com.graphhopper.util.GHUtilityTest.testSortDirected":380,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":35,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":310,"com.graphhopper.GraphHopperTest.testFootOnly":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":401,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":192,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":179,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":264,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":307,"com.graphhopper.routing.QueryGraphTest.testOneWay":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":167,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":155,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":1,"com.graphhopper.reader.OSMReaderTest.testWithBounds":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":261,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":312,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":270,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":444,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":477,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":64,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":410,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":131,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":124,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":210,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":332,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":243,"com.graphhopper.util.InstructionListTest.testWayList":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":463,"com.graphhopper.GraphHopperAPITest.testDisconnected179":52,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":256,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":420,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":293,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":284,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":22,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":216,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":193,"com.graphhopper.routing.util.EncodedValueTest.testSwap":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":365,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":458,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":343,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":363,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":432,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":449,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":470,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":353,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":473,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":205,"com.graphhopper.routing.PathTest.testWayList":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":354,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":469,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":227,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":115,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":215,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":417,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":447,"com.graphhopper.util.GHUtilityTest.testSort":379,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":273,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":491,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":144,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":386,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":174,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":196,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":32,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":13,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":197,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":448,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":399,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":352,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":325,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":274,"com.graphhopper.routing.PathTest.testFound":321,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":14,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":290,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":94,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":397,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":467,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":121,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":259,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":219,"com.graphhopper.util.InstructionListTest.testEmptyList":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":340,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":344,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":347,"com.graphhopper.reader.PrinctonReaderTest.testRead":292,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":177,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":116,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":248,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":418,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":484,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":451,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":412,"com.graphhopper.reader.OSMReaderTest.testFoot":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":272,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":318,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":7,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":161,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":162,"com.graphhopper.reader.OSMReaderTest.testOneWay":306,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":223,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":238,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":138,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":406,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":416,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":360,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":479,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":357,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":358,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":262,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":309,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":208,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":483,"com.graphhopper.routing.PathBidirRefTest.testExtract2":320,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":331,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":454,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":236,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":456,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":439,"com.graphhopper.util.SimpleIntDequeTest.testPush":488,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":158,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":239,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":476,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":433,"com.graphhopper.GraphHopperTest.testFootAndCar":23,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":231,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":252,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":434,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":112,"com.graphhopper.storage.StorablePropertiesTest.testLoad":490,"com.graphhopper.GraphHopperTest.testPrepareOnly":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":350,"com.graphhopper.GraphHopperTest.testVia":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":250,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":303,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":56,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":48,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":235,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":440,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":265,"com.graphhopper.routing.AStarBidirectionTest.initializationError":392,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":31,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":93,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":91,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":104}}]
