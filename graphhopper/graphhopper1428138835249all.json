[{"failures":[0,1,2,3,4,5,6],"tindex":"ec51da08-daaa-11e4-9455-f74a5293e6dd","variableMapping":{"closestNode":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[],"tindex":"ec51da09-daaa-11e4-9455-33294d335d50","variableMapping":{"width":"size","i":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15],"tindex":"ec51da0a-daaa-11e4-9455-0b14eef1c294","variableMapping":{"eleDelta":"midLon","decEleSum":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"ec52011b-daaa-11e4-9455-bd77d9e7564a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[16,17,18,19,20,21],"tindex":"ec52011c-daaa-11e4-9455-615462ddf9ee","variableMapping":{"initialized":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:241","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call loadExisting only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"ec52011d-daaa-11e4-9455-8b8c4d967c17","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":0},{"failures":[],"tindex":"ec52011e-daaa-11e4-9455-e9b463d0c493","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"ec52011f-daaa-11e4-9455-b7fcbbcb3585","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"ec520120-daaa-11e4-9455-ff8b82e9c792","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"ec520121-daaa-11e4-9455-a38f275643dd","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"ec520122-daaa-11e4-9455-75e3b8a0a3ba","variableMapping":{"store":"storing"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,16,30,31,32,18,33,34,35,19,36,37,38,39,40,41,42,43,20,44,45,46,47,48,49,50,51,52,21,53,54],"tindex":"ec520123-daaa-11e4-9455-170d1ba3f90f","variableMapping":{"id":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"ec520124-daaa-11e4-9455-899b3b4e5c0b","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"from","tmpNode":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"ec520125-daaa-11e4-9455-f1d82d98fd66","variableMapping":{"radiusInMeter":"fwdIncline","com.graphhopper.util.DistanceCalcEarth.C":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"ec520126-daaa-11e4-9455-55d6b648e1e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"ec520127-daaa-11e4-9455-d3ff16790580","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[7,8,10,11,13,14,15],"tindex":"ec531298-daaa-11e4-9455-19b804bc8da7","variableMapping":{"res":"bits","maxBit":"bits","value":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-1},{"failures":[55,56,57,58,59],"tindex":"ec531299-daaa-11e4-9455-9b29562d9c62","variableMapping":{"midLat":"orientation","lat":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"ec5360ba-daaa-11e4-9455-3db2b23a4ddd","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":0},{"failures":[],"tindex":"ec5360bb-daaa-11e4-9455-6151bd2ca2db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[0,1,3,4,5,6,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"ec550e6c-daaa-11e4-9455-7f3c08b2664d","variableMapping":{"arrayLength":"size","maxGeoRef":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[79,80,56,57,81,82,83,58,84],"tindex":"ec550e6d-daaa-11e4-9455-315c1a95c9de","variableMapping":{"factor":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[85,86,87,88],"tindex":"ec550e6e-daaa-11e4-9455-f5c3e08c6f9e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"ec550e6f-daaa-11e4-9455-275b8f0d031f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"ec550e70-daaa-11e4-9455-6131421b3742","variableMapping":{"i":"level"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"ec550e71-daaa-11e4-9455-c192a5e2e67b","variableMapping":{"minLon":"java.lang.Double.MAX_VALUE","java.lang.Double.MAX_VALUE":"maxLon","com.graphhopper.util.shapes.BBox.INVERSE":"com.graphhopper.util.shapes.BBox.INVERSE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[89,90,91,92,93,94,95,96,26,97,30,98,99,100,101,102,17,18,103,36,37,38,104,40,105,44,46,47,106,49,107,53,108,57],"tindex":"ec550e72-daaa-11e4-9455-f17a36cd0982","variableMapping":{"eleDelta":"backSpeed","decEleSum":"backSpeed","fullDist2D":"backSpeed","decDist2DSum":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"ec550e73-daaa-11e4-9455-89b40240f776","variableMapping":{"fwdFaster":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[109,110,111],"tindex":"ec550e74-daaa-11e4-9455-cd8fe4af6c39","variableMapping":{"size":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"ec550e75-daaa-11e4-9455-59c8569dd940","variableMapping":{"currentBucket":"length","currentIndex":"segmentSizeIntsPower","bucketSize":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"ec550e76-daaa-11e4-9455-9b91b5ebf32c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ec550e77-daaa-11e4-9455-fdaa03d4854b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"ec550e78-daaa-11e4-9455-010787c8d1f4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"ec553589-daaa-11e4-9455-033b419119dd","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"ec55358a-daaa-11e4-9455-7551392e5839","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"ec55358b-daaa-11e4-9455-b19684ffa766","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[112,113,114,115,116,117,118,119,120,95,121,23,24,96,25,122,26,27,28,29,16,30,31,123,17,32,18,33,34,35,19,36,124,37,38,39,125,104,40,41,42,43,20,44,45,126,46,47,48,127,106,49,50,51,52,21,53,54,128],"tindex":"ec55358c-daaa-11e4-9455-1975615124c6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[],"tindex":"ec55358d-daaa-11e4-9455-a164b541be62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"ec55358e-daaa-11e4-9455-395907d9eb74","variableMapping":{"currEdge":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[62,74,129,130],"tindex":"ec55358f-daaa-11e4-9455-0d88787694cd","variableMapping":{"segmentsToMap":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[7,8,9,11,12,131,13,14,15,132,133,134,135,136,137,138,139,140],"tindex":"ec553590-daaa-11e4-9455-81cf0f29f3fc","variableMapping":{"segmentSizeInBytes":"allBits","capacity":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:328","type":"CtIfImpl","sourcecode":"if (long < (int))\n    long = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"ec553591-daaa-11e4-9455-5d596e72d846","variableMapping":{"y":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","angle":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"ec553592-daaa-11e4-9455-2b1db9947877","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"ec553593-daaa-11e4-9455-8932fe013254","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[141],"tindex":"ec553594-daaa-11e4-9455-d3a017f63ef4","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:206","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"ec553595-daaa-11e4-9455-5fe48ed5fa62","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[],"tindex":"ec553596-daaa-11e4-9455-b5bbf2177a97","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:112","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[142,143,144,60,77],"tindex":"ec555ca7-daaa-11e4-9455-19bdacde07d4","variableMapping":{"shift":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[7,8,9,10,11,12,14,15],"tindex":"ec555ca8-daaa-11e4-9455-931ff4e199d8","variableMapping":{"eleDelta":"lat","decEleSum":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"ec555ca9-daaa-11e4-9455-f337f7f269d5","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"ec555caa-daaa-11e4-9455-4bbe43c214c2","variableMapping":{"i":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[122,26,16,18,19,125,40,20,127,49,21],"tindex":"ec555cab-daaa-11e4-9455-5b8832a10d48","variableMapping":{"wayTypeName":"pavementName","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[145,146,89,90,91,92,93,147,94,148,149,112,113,114,115,150,116,117,118,119,151,152,120,95,121,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,79,80,170,171,74,172,55,56,57,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],"tindex":"ec555cac-daaa-11e4-9455-dff133c9f4be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"ec555cad-daaa-11e4-9455-35cb9b9e7d45","variableMapping":{"initLeafSize":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[96,230,231],"tindex":"ec555cae-daaa-11e4-9455-972953e1aa34","variableMapping":{"size":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[144],"tindex":"ec555caf-daaa-11e4-9455-af077f4024e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:250","type":"CtIfImpl","sourcecode":"if (!boolean)\n    return com.graphhopper.storage.GraphHopperStorage.reverseFlags(long, long);\n"},"status":-1},{"failures":[232],"tindex":"ec555cb0-daaa-11e4-9455-c996c883f396","variableMapping":{"val":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[],"tindex":"ec555cb1-daaa-11e4-9455-6b29f627e240","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"ec555cb2-daaa-11e4-9455-3b2fd2125af0","variableMapping":{"edgeTo":"int1","edgeFrom":"int1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-2},{"failures":[],"tindex":"ec555cb3-daaa-11e4-9455-915aa2d5589c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[148,233,11,71,234,181,235,236,237,238,239,240,241,189,242,243,244,245,246,247,248],"tindex":"ec555cb4-daaa-11e4-9455-095198448ba7","variableMapping":{"bm":"spatialKey"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"ec555cb5-daaa-11e4-9455-ff697f559f43","variableMapping":{"intIndex":"shift","len":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ec555cb6-daaa-11e4-9455-89582cb0c4dc","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ec555cb7-daaa-11e4-9455-df0b4665429e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"ec5582c8-daaa-11e4-9455-5b19f2b754ac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"ec5582c9-daaa-11e4-9455-734dbaadaa40","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[22,23,24,25,26,27,28,29,16,30,31,32,18,33,34,35,19,36,37,38,39,40,41,42,43,20,44,45,46,47,48,49,50,51,52,21,53,54],"tindex":"ec5582ca-daaa-11e4-9455-d5f9d6a1990a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"ec5582cb-daaa-11e4-9455-93d5fc4517da","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,16,30,31,32,18,33,34,35,19,36,37,38,39,40,41,42,43,20,44,45,46,47,48,49,50,51,52,21,53,54,249,250,251,252],"tindex":"ec5582cc-daaa-11e4-9455-1594e5c298da","variableMapping":{"maxLeafEntries":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"ec5582cd-daaa-11e4-9455-6da49d20df95","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[145,89,93,147,94,149,114,116,117,157,158,159,161,166,167,169,79,80,170,171,74,172,55,56,57,173,174,175,176,177,178,179,181,187,189,190,191,192,193,194,195,196,197,253,200,201,202,203,204,205,206,254,208,209,210,211,212,213,255,256,257,229],"tindex":"ec5582ce-daaa-11e4-9455-17dd065e6735","variableMapping":{"segmentSizeInBytes":"index","length":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[92,113,230],"tindex":"ec5582cf-daaa-11e4-9455-d76bbb711600","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[112,258,259],"tindex":"ec5582d0-daaa-11e4-9455-41bb84781b89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"ec5582d1-daaa-11e4-9455-235600a2644a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:394","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"ec5582d2-daaa-11e4-9455-555172596a9a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"ec5582d3-daaa-11e4-9455-33858f80cabc","variableMapping":{"res":"mask","value":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[112,113,114,115,116,117,118,119,120,95,121,23,24,96,25,122,26,27,28,29,16,30,31,123,17,32,18,33,34,35,19,36,124,37,38,39,125,104,40,41,42,43,20,44,45,126,46,47,48,127,106,49,50,51,52,21,53,54,128],"tindex":"ec5582d4-daaa-11e4-9455-e35dc7f2a878","variableMapping":{"versionHint":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"ec5582d5-daaa-11e4-9455-e1ecca73592e","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[118,23,260,24,122,26,261,16,123,262,263,18,264,19,124,38,125,40,265,20,126,47,127,49,266,21,128],"tindex":"ec55a9e6-daaa-11e4-9455-395fcd159d6b","variableMapping":{"lastKey":"value","key":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"ec55a9e7-daaa-11e4-9455-4f6e16b4c7bd","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,196,286,287,288,289,290,291,292,293,205,294,295,296,297,298,299,300,301,212,302],"tindex":"ec55a9e8-daaa-11e4-9455-c1ca5541a59c","variableMapping":{"cap":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"ec55a9e9-daaa-11e4-9455-c78fa53a42ab","variableMapping":{"da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[303],"tindex":"ec55a9ea-daaa-11e4-9455-25eccf900e26","variableMapping":{"str":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-1},{"failures":[],"tindex":"ec55a9eb-daaa-11e4-9455-2f12b1f2f82e","variableMapping":{"start":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[7,8,233,9,10,11,12,13,14,15,304,305],"tindex":"ec55a9ec-daaa-11e4-9455-03770a624aa1","variableMapping":{"towerNodeDistance":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"ec55a9ed-daaa-11e4-9455-29f167b13ddd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"ec55a9ee-daaa-11e4-9455-e54c480a702b","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[306,144,60,74,77],"tindex":"ec55a9ef-daaa-11e4-9455-473855496335","variableMapping":{"numTiles":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"ec55a9f0-daaa-11e4-9455-d9336fb035ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ec55a9f1-daaa-11e4-9455-53b22e4a2e3e","variableMapping":{"bytePos":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"ec55a9f2-daaa-11e4-9455-adb8cb58eb6b","variableMapping":{"distance":"otherValue","speed":"otherValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,196,286,287,288,289,290,291,292,293,205,294,295,296,297,298,299,300,301,212,302],"tindex":"ec55a9f3-daaa-11e4-9455-c930a34a2086","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[171],"tindex":"ec55a9f4-daaa-11e4-9455-9372acb41515","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"ec55a9f5-daaa-11e4-9455-b1a2c84782f6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[92,307,308,96,85,25,122,26,309,310,311,230,312,313,231,314,315,316,98,99,317,318,258,319,100,101,320,321,322,323,324,325,102,86,17,32,18,33,144,60,61,62,326,327,63,64,328,65,66,329,67,68,330,69,70,71,72,73,74,75,76,77,331,332,241,248,333,334,269,335,336,337,338,339,340,341,270,249,271,272,342,273,343,344,345,274,275,346,347,348,349,350,190,276,277,351,352,353,354,355,356,357,358,359,360,361,362,363,364,191,278,365,192,193,366,367,368,194,369,279,370,371,372,373,374,375,376,280,250,281,282,377,283,378,379,380,284,285,195,381,382,383,384,385,196,286,386,387,388,197,389,253,198,390,391,200,392,393,201,202,394,395,396,203,397,287,398,399,400,401,402,403,404,288,251,289,290,405,291,406,407,408,292,293,204,409,410,411,412,413,205,294,414,415,416,206,417,254,207,418,419,420,208,209,421,422,423,210,424,295,425,426,427,428,429,430,431,296,252,297,298,432,299,433,434,435,300,301,211,436,437,438,439,440,212,302,441,442,443,213,444,255,214,445,446],"tindex":"ec55d106-daaa-11e4-9455-293c1c03f46a","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[145,146,89,90,91,92,93,147,94,148,149,447,448,112,113,114,115,150,116,117,118,119,151,152,120,95,121,449,160,161,450,162,163,164,165,166,167,451,168,169,79,80,452,453,311,267,454,455,268,456,457,170,171,142,458,0,459,1,2,3,460,4,143,5,461,6,306,144,60,61,62,326,327,63,64,328,65,66,329,67,68,330,69,70,71,72,73,74,75,76,77,462,463,464,172,55,56,57,465,466,173,467,468,469,470,471,472,234,473,474,475,476,477,331,478,479,480,481,482,332,132,304,179,180,181,235,133,483,134,135,236,237,238,239,240,241,182,183,184,185,186,484,485,486,137,305,187,188,189,242,138,487,139,140,243,244,245,246,247,248,249,190,360,361,362,363,364,191,278,365,192,193,366,367,194,369,279,370,371,372,373,374,375,376,280,250,281,282,377,283,378,379,380,284,285,195,381,382,383,384,385,196,286,386,387,388,197,389,253,198,390,391,200,393,201,202,394,395,203,397,287,398,399,400,401,402,403,404,288,251,289,290,405,291,406,407,408,292,293,204,409,410,411,412,413,205,294,414,415,416,206,417,254,207,418,419,420,208,209,421,422,210,424,295,425,426,427,428,429,430,431,296,252,297,298,432,299,433,434,435,300,301,211,436,437,438,439,440,212,302,441,442,443,213,444,255,214,445,446,488,489,490,491,492,493,494,495,496,497,498],"tindex":"ec55d107-daaa-11e4-9455-6319f580e620","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"ec55d108-daaa-11e4-9455-cf936fbde147","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[317],"tindex":"ec55d109-daaa-11e4-9455-0b16f04b9ebf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"ec55d10a-daaa-11e4-9455-c1f0d86923da","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":72,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":161,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":108,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":191,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":334,"com.graphhopper.reader.OSMReaderTest.testFerry":112,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":469,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":33,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":188,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":146,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":84,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":288,"com.graphhopper.coll.CompressedArrayTest.testCompress":15,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":103,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":1,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":346,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":486,"com.graphhopper.util.AngleCalcTest.testOrientation":81,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":215,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":5,"com.graphhopper.GraphHopperTest.testPrepare":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":142,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":66,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":172,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":19,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":463,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":137,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":37,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":489,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":61,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":180,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":200,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":131,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":306,"com.graphhopper.GraphHopperTest.testLoadOSM":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":236,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":181,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":308,"com.graphhopper.reader.OSMReaderTest.testSort":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":44,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":202,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":217,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":442,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":356,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":166,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":449,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":416,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":384,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":429,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":392,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":203,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":280,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":30,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":487,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":485,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":327,"com.graphhopper.coll.OSMIDMapTest.testGetLong":177,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":326,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":398,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":379,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":192,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":284,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":83,"com.graphhopper.coll.CompressedArrayTest.testCompress2":14,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":301,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":251,"com.graphhopper.GraphHopperAPITest.testLoad":472,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":368,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":491,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":309,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":297,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":295,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":259,"com.graphhopper.storage.LevelGraphStorageTest.testClone":371,"com.graphhopper.reader.OSMReaderTest.testBarriers":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":397,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":484,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":64,"com.graphhopper.util.GHUtilityTest.testCopy":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":248,"com.graphhopper.routing.PathTest.testFindInstruction":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":264,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":287,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":231,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":471,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":474,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":443,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":414,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":465,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":291,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":365,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":338,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":422,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":498,"com.graphhopper.util.InstructionListTest.testWayList2":56,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":237,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":445,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":38,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":170,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":209,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":375,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":256,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":289,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":63,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":424,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":116,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":74,"com.graphhopper.coll.OSMIDMapTest.testGet":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":314,"com.graphhopper.routing.PathBidirRefTest.testExtract":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":41,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":176,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":195,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":244,"com.graphhopper.storage.RAMDataAccessTest.testCopy":223,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":419,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":276,"com.graphhopper.storage.RAMDataAccessTest.testSegments":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":241,"com.graphhopper.util.GHUtilityTest.testSort2":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":69,"com.graphhopper.reader.OSMReaderTest.testMain":114,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":99,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":394,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":250,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":283,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":263,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":390,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":163,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":46,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":490,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":380,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":95,"com.graphhopper.storage.StorablePropertiesTest.testStore":229,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":257,"com.graphhopper.storage.GraphHopperStorageTest.testClone":426,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":352,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":100,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":432,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":339,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":29,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":253,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":372,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":239,"com.graphhopper.reader.OSMReaderTest.testRelation":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":275,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":382,"com.graphhopper.util.GHUtilityTest.testSortDirected":468,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":53,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":162,"com.graphhopper.GraphHopperTest.testFootOnly":148,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":32,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":138,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":458,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":343,"com.graphhopper.search.NameIndexTest.testCreate":159,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":227,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":160,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":494,"com.graphhopper.routing.QueryGraphTest.testOneWay":451,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":179,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":7,"com.graphhopper.reader.OSMReaderTest.testWithBounds":120,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":222,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":417,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":454,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":347,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":23,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":369,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":85,"com.graphhopper.coll.GHTBitSetTest.testEnsureCapacity":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":124,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":319,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":406,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":210,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":60,"com.graphhopper.util.InstructionListTest.testWayList":55,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":444,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":87,"com.graphhopper.GraphHopperAPITest.testDisconnected179":234,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":340,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":51,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":448,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":274,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":488,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":358,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":91,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":428,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":184,"com.graphhopper.routing.util.EncodedValueTest.testSwap":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":461,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":438,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":143,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":20,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":76,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":423,"com.graphhopper.coll.GHTBitSetTest.testClear":109,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":126,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":420,"com.graphhopper.routing.PathTest.testWayList":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":318,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":141,"com.graphhopper.coll.OSMIDMapTest.testGet2":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":77,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":386,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":409,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":434,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":402,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":139,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":140,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":243,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":122,"com.graphhopper.util.GHUtilityTest.testSort":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":483,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":43,"com.graphhopper.search.NameIndexTest.testPut":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":418,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":425,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":305,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":476,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":480,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":496,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":106,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":478,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":393,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":154,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":407,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":267,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":497,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":190,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":96,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":149,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":388,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":303,"com.graphhopper.util.AngleCalcTest.testAtan2":82,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":362,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":42,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":290,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":78,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":158,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":249,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":431,"com.graphhopper.util.InstructionListTest.testEmptyList":464,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":97,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":324,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":98,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":316,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":70,"com.graphhopper.reader.PrinctonReaderTest.testRead":447,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":189,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":403,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":8,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":333,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":408,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":260,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":47,"com.graphhopper.reader.OSMReaderTest.testFoot":113,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":155,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":349,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":134,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":198,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":86,"com.graphhopper.reader.OSMReaderTest.testOneWay":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":135,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":298,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":302,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":35,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":221,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":345,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":2,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":101,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":459,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":481,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":342,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":450,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":421,"com.graphhopper.routing.PathBidirRefTest.testExtract2":453,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":495,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":238,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":331,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":156,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":31,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":118,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":359,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":482,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":235,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":441,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":374,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":322,"com.graphhopper.GraphHopperTest.testFootAndCar":92,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":211,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":282,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":247,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":225,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":323,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":399,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":73,"com.graphhopper.GraphHopperTest.testPrepareOnly":145,"com.graphhopper.GraphHopperTest.testVia":89,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":477,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":269,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":151,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":364,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":57,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":439,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":312,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":119,"com.graphhopper.util.AngleCalcTest.testCombined":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":344,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":102,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":387,"com.graphhopper.coll.GHTBitSetTest.testCopy":110,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":286,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":201}}]
