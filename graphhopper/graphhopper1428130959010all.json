[{"failures":[],"tindex":"977cf339-da98-11e4-a04d-315379e54ba4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"977e04aa-da98-11e4-a04d-f9b5a0d46927","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1032","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[],"tindex":"977e04ab-da98-11e4-a04d-737eeb2acee9","variableMapping":{"speed":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"977e04ac-da98-11e4-a04d-f9996d1bc3e9","variableMapping":{"str":"name","this":"value","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"977e04ad-da98-11e4-a04d-9fd1548fac62","variableMapping":{"E_ADDITIONAL":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[115],"tindex":"977e04ae-da98-11e4-a04d-bbdee8019c42","variableMapping":{"dx":"fwdIncline","dy":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"977e04af-da98-11e4-a04d-d3a7d75ee99d","variableMapping":{"mSize":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"977e04b0-da98-11e4-a04d-7dd1d16f9cff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[36,43,52,54,62,83,84,91,99,101,109],"tindex":"977e2bc1-da98-11e4-a04d-1fa34ba70b9f","variableMapping":{"hash":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[14,150],"tindex":"977e2bc2-da98-11e4-a04d-8579d9737898","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"977e2bc3-da98-11e4-a04d-4d29ac604eba","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[30,31],"tindex":"977e2bc4-da98-11e4-a04d-b1470b3e4c94","variableMapping":{"turnRestrictionBit":"relBitMask","shift":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"977e2bc5-da98-11e4-a04d-b9afc5c2a37a","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"index","tmpNode":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"977e2bc6-da98-11e4-a04d-0d3a0d9fde7d","variableMapping":{"newUniqueOsmId":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[52,54,62,99,101,109],"tindex":"977e2bc7-da98-11e4-a04d-517f65598833","variableMapping":{"sacScale":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[],"tindex":"977e2bc8-da98-11e4-a04d-6d4f95000347","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"977e2bc9-da98-11e4-a04d-097beeb78a9f","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"977e2bca-da98-11e4-a04d-19a8f2548bb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"977e2bcb-da98-11e4-a04d-cb79d1c5860a","variableMapping":{"high":"minutes","guess":"minutes","low":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":0},{"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,116,167,168,169,170,171,172,173,174,175,117,118,176,119,177,178,179,120,121,180,181,182,183,184,185,122,123,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,124,203,204,205,206,207,208,209,210,211,125,126,212,127,213,214,215,128,129,216,217,218,219,220,221,130,131,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,132,304,305,306,307,308,309,310,311,312,133,134,313,135,314,315,316,136,137,317,318,319,320,321,322,138,139,323,324,325,326,327,328,329,330,331,332,333,0,2,3,4,5,6,7,8,9,10,334,335,336,14,15,16,17,18,19,20,21,22,24,25,26,27,29,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344,345,345,346,346,347,347,348,348,349,350,351,352,353,354,148,355,356,149,357,358,48,115,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,114,405,406,407,408,409,410,411],"tindex":"977e52dc-da98-11e4-a04d-694fe8655515","variableMapping":{"edgePointer":"todoBytes","edgeId":"segmentsToCreate","baseNode":"segmentsToCreate","adjNode":"segmentsToCreate","nextEdge":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:804","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.AssertionError((((((((\"endless loop detected for \" + (int)) + \", \") + (int)) + \", \") + (long)) + \", \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"977e52dd-da98-11e4-a04d-63b929d50708","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"977e52de-da98-11e4-a04d-9d9d9c22a16b","variableMapping":{"index":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[412,413,414,415,416,417,158,161,168,418,419,195,197,204,221,233,237,298,305,322,420,333,0,6,7,8,10],"tindex":"977e52df-da98-11e4-a04d-ad564a5dc0e6","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"bytePos","speed":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"977e52e0-da98-11e4-a04d-2dfe6c3ffc78","variableMapping":{"index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"977e52e1-da98-11e4-a04d-59a340e68a49","variableMapping":{"tmpNo":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[14,27,29,71],"tindex":"977e52e2-da98-11e4-a04d-bda9d1749148","variableMapping":{"is3D":"isRoundabout"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"977e52e3-da98-11e4-a04d-c79a18ef20c0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"977e52e4-da98-11e4-a04d-79d0ad81d028","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"977e52e5-da98-11e4-a04d-0b754c8ac45d","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"977e52e6-da98-11e4-a04d-b511fd6f8d2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[421,422,423,424,425,426,427,428,429],"tindex":"977e52e7-da98-11e4-a04d-d7b2b212691f","variableMapping":{"high":"spatialKey","low":"bits","guess":"bits","guessedKey":"bits","key":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[158,161,162,195,197,198,430,298,299,0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,24,25,26,27,29],"tindex":"977e79f8-da98-11e4-a04d-df6dfef26f93","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"977e79f9-da98-11e4-a04d-c5b425b88bb8","variableMapping":{"hash":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[151,152,153,154,155,156,157,159,160,163,164,431,165,166,116,167,168,169,170,171,172,173,174,175,117,118,176,119,177,178,179,120,121,180,181,182,183,184,185,122,123,186,187,188,189,190,191,192,193,194,196,199,200,432,201,202,124,203,204,205,206,207,208,209,210,211,125,126,212,127,213,214,215,128,129,216,217,218,219,220,221,130,131,222,223,224,225,226,227,228,229,230,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,300,301,433,302,303,132,304,305,306,307,308,309,310,311,312,133,134,313,135,314,315,316,136,137,317,318,319,320,321,322,138,139,323,324,325,326,327,328,329,330,331,332,333,0,1,2,3,4,5,6,434,7,9,334,335,336,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344,345,345,346,346,347,347,348,348,349,350,351,352,353,354,148,355,356,149,357,358,48,115,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,114,405,406,407,408,409,410,411],"tindex":"977e79fa-da98-11e4-a04d-41c944c2fdae","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[36,43,52,54,62,83,84,91,99,101,109],"tindex":"977e79fb-da98-11e4-a04d-c1637535734d","variableMapping":{"currentEntry":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"977e79fc-da98-11e4-a04d-1bd8202ceca6","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":0},{"failures":[],"tindex":"977e79fd-da98-11e4-a04d-bf535df61957","variableMapping":{"logMessagesPercentage":"resultOrientation","logMessages":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[435],"tindex":"977e79fe-da98-11e4-a04d-e7af3df2cdcf","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"977e79ff-da98-11e4-a04d-e3380c245fcd","variableMapping":{"values":"a","index":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:325","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return int[][int];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[360],"tindex":"977e7a00-da98-11e4-a04d-d7ff5ef1ce9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[70],"tindex":"977ea111-da98-11e4-a04d-77a00fa85838","variableMapping":{"sacScale":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[32],"tindex":"977ea112-da98-11e4-a04d-875d959450e9","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"977ea113-da98-11e4-a04d-3d830616c169","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[150],"tindex":"977ea114-da98-11e4-a04d-a55944525905","variableMapping":{"str":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:430","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"977ea115-da98-11e4-a04d-c50b8b22991a","variableMapping":{"elevation":"closed","withElevation":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:79","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"977ea116-da98-11e4-a04d-53a62f04b832","variableMapping":{"p":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[14,150],"tindex":"977ea117-da98-11e4-a04d-59f6e2c6159b","variableMapping":{"str":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:82","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"977ea118-da98-11e4-a04d-1f09fb9c037c","variableMapping":{"segmentSizeInBytes":"start","index":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"977ea119-da98-11e4-a04d-f17892feb242","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"977ea11a-da98-11e4-a04d-bfbc99520f82","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[159,116,174,117,118,119,120,121,122,123,124,210,125,126,127,128,129,130,131,132,311,133,134,135,136,137,138,139,140,436,141,142,143,144,145,146,147,29,148,356,149],"tindex":"977ea11b-da98-11e4-a04d-5b60cf1cfdec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"977ea11c-da98-11e4-a04d-bf9a48852a2d","variableMapping":{"turnCostIndex":"segmentSizeIntsPower","NO_TURN_ENTRY":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"977ea11d-da98-11e4-a04d-c1e75ec763fe","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1032","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[155,352,32,48,115,360,370],"tindex":"977ea11e-da98-11e4-a04d-3978ff8d1d67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:55","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"977ea11f-da98-11e4-a04d-ffedd33bda1f","variableMapping":{"tmp":"lastPrio","tmpNo":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:145","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-2},{"failures":[437],"tindex":"977ea120-da98-11e4-a04d-0f1e6417a971","variableMapping":{"bytePos":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"977ec831-da98-11e4-a04d-ade06b9a6129","variableMapping":{"acceptBit":"ferryBit","way":"way","sidewalks":"ferries"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[438,439,440,441,442,443,444,412,445,446,447,448,413,449,450,451,452,453,454,455,414,456,457,458,459,415,460,461,462,463,464,465,466,467,468,416,469,470,471,472,473,474,475,158,161,162,165,180,122,189,191,192,195,476,197,198,201,216,130,225,227,228,477,250,251,252,262,270,271,272,282,286,287,288,289,478,290,479,430,298,299,302,317,138,326,328,329,480,481,140,482,420,483,484,485,486,487,436,141,142,488,143,489,490,491,144,145,492,493,494,495,496,333,146,147,497,498,499,500,501,502,503,504,505,506,507,508,509,510,0,2,3,4,5,6,7,8,9,10,511,512,513,514,515,14,15,16,17,18,19,20,21,22,24,25,26,27,29,337,338,340,341,342,343,344,345,347,348,353,354,48,115,380,402,403,404,114,409],"tindex":"977ec832-da98-11e4-a04d-49ea18de5dad","variableMapping":{"edgeId":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"977ec833-da98-11e4-a04d-39db5744891b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"977ec834-da98-11e4-a04d-33878eb909f0","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":0},{"failures":[],"tindex":"977ec835-da98-11e4-a04d-2b703d1fea14","variableMapping":{"shift":"mask","tmpValue":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"977ec836-da98-11e4-a04d-4111931937ef","variableMapping":{"i":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"977ec837-da98-11e4-a04d-596b35351cbf","variableMapping":{"systemProperty":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[151],"tindex":"977ec838-da98-11e4-a04d-557a27e88fe9","variableMapping":{"i":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[31],"tindex":"977ec839-da98-11e4-a04d-a5532ca28ed5","variableMapping":{"longSegmentSize":"relBitMask","bufferStart":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"977ec83a-da98-11e4-a04d-4136043f3645","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"977ec83b-da98-11e4-a04d-25bab1b46c82","variableMapping":{"allIter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"977ec83c-da98-11e4-a04d-5b62ea149844","variableMapping":{"is3D":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[],"tindex":"977ec83d-da98-11e4-a04d-9bee45ef2107","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[412,445,447,449,450,451,452,414,456,458,460,461,462,463,464,161,165,180,122,189,192,195,197,201,216,130,225,228,234,239,240,241,252,272,298,302,317,138,326,329,480,492,333,146,500,503,506,507,508,509,510,0,3,4,6,8,9,14,16,17,18,19,20,21,22,24,25,26,27,29,338,342,345,348,353,380,403,404,409],"tindex":"977eef4e-da98-11e4-a04d-b515960feffc","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[159,116,174,117,118,119,120,121,122,123,124,210,125,126,127,128,129,130,131,132,311,133,134,135,136,137,138,139,140,436,141,142,143,144,145,146,147,148,149],"tindex":"977eef4f-da98-11e4-a04d-a1325182b793","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"key","n":"key","edgeIds":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[175,211,312,332,14,15,29,516,32,517],"tindex":"977eef50-da98-11e4-a04d-ed58024d9377","variableMapping":{"capacity":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"977eef51-da98-11e4-a04d-d17dc5005507","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"9780c412-da98-11e4-a04d-a7a9067348b6","variableMapping":{"err":"length","dLat":"length","tmpErr":"length","x1":"length","sLon":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":0},{"failures":[],"tindex":"9780c413-da98-11e4-a04d-65ed2d073a9b","variableMapping":{"pos":"index","mSize":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[],"tindex":"9780c414-da98-11e4-a04d-094399c32f7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[2,361,363,372,376,379,380,381,383,386,392,396],"tindex":"9780eb25-da98-11e4-a04d-5defad3a2b79","variableMapping":{"id":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"9780eb26-da98-11e4-a04d-5bde8c7e6ed7","variableMapping":{"logMessagesPercentage":"fwdSpeed","logMessages":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"9780eb27-da98-11e4-a04d-3d93c6e94e53","variableMapping":{"high":"bits","low":"bits","guess":"bits","guessedKey":"bits","key":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"9780eb28-da98-11e4-a04d-3d28d24c06b7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[437],"tindex":"9780eb29-da98-11e4-a04d-2d633447eb73","variableMapping":{"str":"str","name":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:82","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"9780eb2a-da98-11e4-a04d-a35a140d7248","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"9780eb2b-da98-11e4-a04d-e14d85f429b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[151,152,412,413,414,415,416,417,158,161,162,168,418,419,195,197,198,204,221,233,237,250,251,252,253,255,258,259,260,261,262,263,264,265,266,270,271,272,273,275,278,279,280,281,282,283,284,286,287,288,289,478,290,298,299,305,322,420,333,0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,24,25,26,27,29,369,373,374,377],"tindex":"9780eb2c-da98-11e4-a04d-db73e9ae7b31","variableMapping":{"lat":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"9780eb2d-da98-11e4-a04d-c5eebd838301","variableMapping":{"turnCostIndex":"index","NO_TURN_ENTRY":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"9780eb2e-da98-11e4-a04d-b34604a8a10f","variableMapping":{"angle":"resultOrientation","com.graphhopper.util.AngleCalc.PI3_4":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"9780eb2f-da98-11e4-a04d-3f326226aecb","variableMapping":{"lastTime":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"9780eb30-da98-11e4-a04d-231067e650b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"9780eb31-da98-11e4-a04d-3156d2adcaa8","variableMapping":{"weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-2},{"failures":[],"tindex":"9780eb32-da98-11e4-a04d-eb53be624bd2","variableMapping":{"retBucket":"i","bucketSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[334,21,518,519,520,521],"tindex":"97811243-da98-11e4-a04d-f7df628b51a6","variableMapping":{"need":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"97811244-da98-11e4-a04d-c158ea70cebd","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"97811245-da98-11e4-a04d-2f17035852d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"97811246-da98-11e4-a04d-858f66b4a8e3","variableMapping":{"size":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"97811247-da98-11e4-a04d-7d3c9fd466a7","variableMapping":{"shortTripsSpeed":"longTripsSpeed","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:487","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failures":[],"tindex":"97811248-da98-11e4-a04d-fff995bbbb4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"97811249-da98-11e4-a04d-7d6313c9ff3d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"9781124a-da98-11e4-a04d-336dcec99f31","variableMapping":{"node":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":185,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":378,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":67,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":481,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":405,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":100,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":271,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":66,"com.graphhopper.storage.MMapDataAccessTest.testSegments":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":210,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":453,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":512,"com.graphhopper.coll.CompressedArrayTest.testCompress":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":42,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":329,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":492,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":267,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":454,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":448,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":394,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":501,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":370,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":402,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":43,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":399,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":164,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":268,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":96,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":362,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":368,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":251,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":195,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":470,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":397,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":258,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":252,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":110,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":198,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":456,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":324,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":298,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":502,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":344,"com.graphhopper.storage.RAMDataAccessTest.testHeader":413,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":334,"com.graphhopper.storage.MMapDataAccessTest.testHeader":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":224,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":464,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":471,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":184,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":419,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":308,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":476,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":205,"com.graphhopper.reader.OSMNodeTest.testSetTags":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":52,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":275,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":273,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":487,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":365,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":364,"com.graphhopper.coll.OSMIDMapTest.testGetLong":509,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":212,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":203,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":178,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":161,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":120,"com.graphhopper.coll.CompressedArrayTest.testCompress2":428,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":82,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":211,"com.graphhopper.GraphHopperAPITest.testLoad":151,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":431,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":234,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":77,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":133,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":132,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":150,"com.graphhopper.storage.LevelGraphStorageTest.testClone":168,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":202,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":519,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":367,"com.graphhopper.util.GHUtilityTest.testCopy":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":483,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":457,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":284,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":477,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":451,"com.graphhopper.routing.PathTest.testFindInstruction":354,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":124,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":79,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":400,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":243,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":325,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":222,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":127,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":60,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":516,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":170,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":484,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":472,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":241,"com.graphhopper.util.InstructionListTest.testWayList2":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":497,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":259,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":48,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":299,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":172,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":446,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":455,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":521,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":125,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":286,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":366,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":414,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":380,"com.graphhopper.coll.OSMIDMapTest.testGet":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":209,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":418,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":80,"com.graphhopper.routing.PathBidirRefTest.testExtract":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":104,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":180,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":279,"com.graphhopper.storage.RAMDataAccessTest.testCopy":412,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":103,"com.graphhopper.storage.RAMDataAccessTest.testSegments":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":264,"com.graphhopper.util.GHUtilityTest.testSort2":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":375,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":70,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":499,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":175,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":119,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":193,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":117,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":49,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":233,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":179,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":27,"com.graphhopper.storage.StorablePropertiesTest.testStore":430,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":444,"com.graphhopper.storage.GraphHopperStorageTest.testClone":305,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":498,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":74,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":313,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":93,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":485,"com.graphhopper.routing.PathTest.testTime":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":88,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":191,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":169,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":261,"com.graphhopper.reader.OSMReaderTest.testRelation":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":145,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":182,"com.graphhopper.util.GHUtilityTest.testSortDirected":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":63,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":462,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":340,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":274,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":363,"com.graphhopper.reader.OSMElementTest.testSetTags":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":385,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":489,"com.graphhopper.search.NameIndexTest.testCreate":441,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":449,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":337,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":237,"com.graphhopper.routing.QueryGraphTest.testOneWay":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":262,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":39,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":250,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":421,"com.graphhopper.reader.OSMReaderTest.testWithBounds":26,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":64,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":226,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":493,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":30,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":166,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":218,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":213,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":302,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":361,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":327,"com.graphhopper.util.InstructionListTest.testWayList":403,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":466,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":102,"com.graphhopper.GraphHopperAPITest.testDisconnected179":152,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":486,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":248,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":482,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":58,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":336,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":144,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":231,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":504,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":288,"com.graphhopper.routing.util.EncodedValueTest.testSwap":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":395,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":320,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":372,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":393,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":109,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":382,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":282,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":113,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":297,"com.graphhopper.routing.PathTest.testWayList":353,"com.graphhopper.storage.MMapDataAccessTest.testCopy":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":503,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":141,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":437,"com.graphhopper.coll.OSMIDMapTest.testGet2":507,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":383,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":415,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":186,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":513,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":107,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":207,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":306,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":277,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":445,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":56,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":83,"com.graphhopper.util.GHUtilityTest.testSort":410,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":468,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":496,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":106,"com.graphhopper.search.NameIndexTest.testPut":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":229,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":432,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":245,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":293,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":53,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":291,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":85,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":514,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":381,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":148,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":240,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":333,"com.graphhopper.routing.PathTest.testFound":351,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":32,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":188,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":105,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":126,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":440,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":332,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":310,"com.graphhopper.util.InstructionListTest.testEmptyList":401,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":90,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":373,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":68,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":376,"com.graphhopper.reader.PrinctonReaderTest.testRead":335,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":326,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":475,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":272,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":436,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":510,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":480,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":215,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":465,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":518,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":50,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":495,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":515,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":256,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":426,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":33,"com.graphhopper.reader.OSMReaderTest.testOneWay":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":257,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":134,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":139,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":40,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":461,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":55,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":389,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":386,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":396,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":387,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":460,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":488,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":339,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":28,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":300,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":238,"com.graphhopper.routing.PathBidirRefTest.testExtract2":350,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":260,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":438,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":322,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":479,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":94,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":505,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":253,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":323,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":171,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":317,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":84,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":283,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":420,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":467,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":520,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":204,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":379,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":140,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":24,"com.graphhopper.reader.OSMElementTest.testHasTag":12,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":157,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":114,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":321,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":517,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":490,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":47,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":187,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":123,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":197}}]
