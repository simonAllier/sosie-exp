[{"failures":[],"tindex":"423b3e08-db2c-11e4-ab0a-bbb255988f44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"423c2869-db2c-11e4-ab0a-63216512b635","variableMapping":{"r":"java.lang.Double.MAX_VALUE","angle":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"423c286a-db2c-11e4-ab0a-65afdf553fa1","variableMapping":{"storedKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[0],"tindex":"423c286b-db2c-11e4-ab0a-9153139b44f6","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"423c286c-db2c-11e4-ab0a-65e2577040bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[1,2,3,4],"tindex":"423c286d-db2c-11e4-ab0a-ed8152d0c606","variableMapping":{"bytePos":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"423c286e-db2c-11e4-ab0a-916fd1c24059","variableMapping":{"closestNode":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"423c286f-db2c-11e4-ab0a-3f63777ec779","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[5],"tindex":"423c2870-db2c-11e4-ab0a-c99fca8e6d37","variableMapping":{"size":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"423c4f81-db2c-11e4-ab0a-d7220fcdf5df","variableMapping":{"initLeafSize":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[2,27,28,29,30,31,32,33,34,35,36],"tindex":"423c4f82-db2c-11e4-ab0a-bda47f3a22a9","variableMapping":{"todoBytes":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[37],"tindex":"423c4f83-db2c-11e4-ab0a-c191ebe58eef","variableMapping":{"currentEntry":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"423c4f84-db2c-11e4-ab0a-e73ec9620f9a","variableMapping":{"mGarbage":"blockByDefault"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"423c4f85-db2c-11e4-ab0a-2b62353e2c70","variableMapping":{"segmentSizeInBytes":"priorityFromRelation","length":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[27,30,33,36],"tindex":"423c4f86-db2c-11e4-ab0a-9da47d1cfad2","variableMapping":{"possibleToAdd":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:85","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[38,39,40],"tindex":"423c4f87-db2c-11e4-ab0a-2de744a6a0ca","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"423c4f88-db2c-11e4-ab0a-b1e27c64ce86","variableMapping":{"turnCosts":"ele","weight":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"423c4f89-db2c-11e4-ab0a-d1426ed4e0b4","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"tmpPrevEdge","nextEdge":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-2},{"failures":[1,41,2,42,43,27,44,45],"tindex":"423c4f8a-db2c-11e4-ab0a-9b715ed25fb8","variableMapping":{"versionHint":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"423c4f8b-db2c-11e4-ab0a-6f240c4f6cbc","variableMapping":{"factor":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[46,47],"tindex":"423c4f8c-db2c-11e4-ab0a-ef6d7de3090f","variableMapping":{"str":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:420","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"423c4f8d-db2c-11e4-ab0a-eb537661e934","variableMapping":{"calcMean":"blockFords","eleCalcMean":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"423c4f8e-db2c-11e4-ab0a-ad2c9caf4f18","variableMapping":{"empty":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[46,48],"tindex":"423c769f-db2c-11e4-ab0a-5bfaa74db0a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"423c76a0-db2c-11e4-ab0a-4bf80c6a7f3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"423c76a1-db2c-11e4-ab0a-f5daf1719650","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[6,7,8,9,49,50,10,51,11,52,12,13,14,53,54,15,55,16,56,17,18,19,57,58,20,59,21,60,22,23,24,61,62,25,63,26,64,65,66,67,68],"tindex":"423c76a2-db2c-11e4-ab0a-13787c677b00","variableMapping":{"lat":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":-1},{"failures":[],"tindex":"423c76a3-db2c-11e4-ab0a-7fb703daeaa1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:158","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl com.graphhopper.coll.GHBitSetImpl = new com.graphhopper.coll.GHBitSetImpl(com.graphhopper.storage.GraphStorage.getNodes())"},"status":-2},{"failures":[],"tindex":"423c76a4-db2c-11e4-ab0a-09c0ae8e0183","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"423c76a5-db2c-11e4-ab0a-e369d1d3ce2f","variableMapping":{"time":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"423c76a6-db2c-11e4-ab0a-c1ed4daef1d9","variableMapping":{"type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[69,3,70,4],"tindex":"423c76a7-db2c-11e4-ab0a-ed46e3b8c430","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[],"tindex":"423c76a8-db2c-11e4-ab0a-1596b53fc781","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[],"tindex":"423c76a9-db2c-11e4-ab0a-1708ed9ad008","variableMapping":{"instruction":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[71],"tindex":"423c76aa-db2c-11e4-ab0a-b377cd4c30a9","variableMapping":{"size":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"423c76ab-db2c-11e4-ab0a-cb4b7ab59e7d","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"noOfStates","id":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":0},{"failures":[],"tindex":"423c76ac-db2c-11e4-ab0a-1bc5d487b744","variableMapping":{"name":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[72,70,31,32,73,74,75,76,77,78,79,33,80,81,82,83],"tindex":"423c76ad-db2c-11e4-ab0a-d790bfb58fc5","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[38,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"423c9cbe-db2c-11e4-ab0a-09d0ea2be339","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"423c9cbf-db2c-11e4-ab0a-39a3d1962a09","variableMapping":{"i":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":0},{"failures":[113],"tindex":"423c9cc0-db2c-11e4-ab0a-1d669f65255d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[5],"tindex":"423c9cc1-db2c-11e4-ab0a-6792b080b0d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"423c9cc2-db2c-11e4-ab0a-293fd2c99e9b","variableMapping":{"nodeB":"offset","edgeId":"offset","nodeA":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[114,115,6,38,84,87,88,89,90,91,93,94,116,117,97,98,100,101,102,103,104,105,106,107,108,118,109,119,120,121,122,110,111,123,124,112,125],"tindex":"423c9cc3-db2c-11e4-ab0a-ab0efa3bbc18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[87,88,89,92,93,102,103,104,105,107,108,110,111,112],"tindex":"423c9cc4-db2c-11e4-ab0a-bf4134b7b44e","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[126,39,86,127,128,5],"tindex":"423c9cc5-db2c-11e4-ab0a-89ea7080f2fa","variableMapping":{"name":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[129],"tindex":"423c9cc6-db2c-11e4-ab0a-a97a4b892586","variableMapping":{"i":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"423c9cc7-db2c-11e4-ab0a-31806b9f0b85","variableMapping":{"hash":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"423c9cc8-db2c-11e4-ab0a-8384c5c120cc","variableMapping":{"acceptBit":"flags","ferryBit":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[130,131,126,132,38,84,85,133,86,88,89,90,91,92,93,94,95,96,116,117,97,98,99,100,101,102,134,103,104,105,106,107,109,120,110,123,135,124,112],"tindex":"423c9cc9-db2c-11e4-ab0a-9f858aed630c","variableMapping":{"size":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"423c9cca-db2c-11e4-ab0a-b13a271c9a88","variableMapping":{"str":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[136,137,138,139,140],"tindex":"423c9ccb-db2c-11e4-ab0a-253c9d9353b6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[],"tindex":"423c9ccc-db2c-11e4-ab0a-bdc6b563018e","variableMapping":{"noNumberValue":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:332","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[1,2,141,3,142,29,143,70,32,82,4,144,35,145],"tindex":"423cc3dd-db2c-11e4-ab0a-899b12c3f62e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"423cc3de-db2c-11e4-ab0a-b79a83f08567","variableMapping":{"high":"endNode","guess":"endNode","low":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":0},{"failures":[],"tindex":"423cc3df-db2c-11e4-ab0a-4b3a1a83b74d","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"423cc3e0-db2c-11e4-ab0a-c34836b01700","variableMapping":{"periodicUpdates":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[38,39,146,127,147,136,48],"tindex":"423cc3e1-db2c-11e4-ab0a-b38b1254e711","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[148,149,78,150],"tindex":"423cc3e2-db2c-11e4-ab0a-7bf358a5a880","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"423cc3e3-db2c-11e4-ab0a-3fb531990e68","variableMapping":{"elevation":"closed","withElevation":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphBuilder:79","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"423cc3e4-db2c-11e4-ab0a-3727451e3ad4","variableMapping":{"p":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[38,86,88,89,90,92,93,94,96,116,97,98,100,101,102,134,103,104,105,106,107,109,119,120,110,123,124,112],"tindex":"423cc3e5-db2c-11e4-ab0a-01c290896021","variableMapping":{"val":"prevOrNextEdgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-1},{"failures":[],"tindex":"423cc3e6-db2c-11e4-ab0a-2562af7527e0","variableMapping":{"hash":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"423cc3e7-db2c-11e4-ab0a-0dda630ae444","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"423cc3e8-db2c-11e4-ab0a-bd8e38cfad47","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"423cc3e9-db2c-11e4-ab0a-2fb8bcc3ee4f","variableMapping":{"com.graphhopper.util.Constants.VERSION":"hourStr","tmp":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":0},{"failures":[114,6,38,84,85,87,88,89,90,91,93,94,95,116,117,97,98,99,100,101,102,103,104,105,107,108,118,109,119,120,121,122,110,111,123,124,112,125],"tindex":"423cc3ea-db2c-11e4-ab0a-0d592338bbf6","variableMapping":{"workerThreads":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[151,152,38,153,39,154,86,88,89,90,91,92,93,94,95,96,116,97,98,99,100,101,102,103,104,105,106,107,109,122,110,155,156,157,158],"tindex":"423ceafb-db2c-11e4-ab0a-db72d6db9e1a","variableMapping":{"nodeId":"noOfStates","mainNodes":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"423ceafc-db2c-11e4-ab0a-45db54b9fa0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"status":-2},{"failures":[159,48,47],"tindex":"423ceafd-db2c-11e4-ab0a-ff451be64bd9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"423ceafe-db2c-11e4-ab0a-4ddb9295c0d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"423ceaff-db2c-11e4-ab0a-c9a49868498e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"423ceb00-db2c-11e4-ab0a-f32f46252d30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"423ceb01-db2c-11e4-ab0a-1d17e7716c6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"423ceb02-db2c-11e4-ab0a-cf6455c2e83d","variableMapping":{"edgeId":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-2},{"failures":[],"tindex":"423ceb03-db2c-11e4-ab0a-07c9215a51d2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[160,161,81,162],"tindex":"423ceb04-db2c-11e4-ab0a-ff0004a41510","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"423ceb05-db2c-11e4-ab0a-57faebb0da15","variableMapping":{"i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"423ceb06-db2c-11e4-ab0a-d9b208a2cee4","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"423ceb07-db2c-11e4-ab0a-555e1634c220","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"423ceb08-db2c-11e4-ab0a-b5b011fc9b80","variableMapping":{"high":"weightLong","guess":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG","low":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[46,37],"tindex":"423ceb09-db2c-11e4-ab0a-9b6dac17713d","variableMapping":{"arrayLength":"minutes","maxGeoRef":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[87,88,89,92,93,102,103,104,105,107,108,110,111,112],"tindex":"423ceb0a-db2c-11e4-ab0a-774ce31d0a5d","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[126,132,38,84,153,39,85,133,154,86,146,163,164,165,46,127,166,167,168,169,147,136,170,171,172,173,174,175,176,65,177,178,1,41,2,141,179,42,43,27,44,160,45,180,181,3,182,183,28,142,29,184,185,186,187,188,30,189,161,143,190,0,191,192,159,40,193,48,194,195,47,196,128,197,5,72,70,31,32,73,74,76,77,33,80,81,82,83,4,198,199,34,144,35,200,201,202,203,204,36,205,162,145,206,158],"tindex":"423d121b-db2c-11e4-ab0a-cf98e858b82f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"423d121c-db2c-11e4-ab0a-5dd28d7f631a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"423d121d-db2c-11e4-ab0a-991bdf115afb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"423d121e-db2c-11e4-ab0a-07568728e7e7","variableMapping":{"shiftSum":"dLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"423d121f-db2c-11e4-ab0a-4513a62d0b07","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"423d1220-db2c-11e4-ab0a-3338a9ece383","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[2,27,28,29,30,31,32,33,34,35,36],"tindex":"423d1221-db2c-11e4-ab0a-85d37e47e5e8","variableMapping":{"flags":"unpavedBit","mask":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[],"tindex":"423d1222-db2c-11e4-ab0a-a904f7a69cdc","variableMapping":{"tmp":"offset","initializedCounter":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"423d1223-db2c-11e4-ab0a-193d26292ce2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[114],"tindex":"423d1224-db2c-11e4-ab0a-47c7d7270165","variableMapping":{"size":"index","from":"index","end":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[207],"tindex":"423d1225-db2c-11e4-ab0a-1f94d891b089","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[],"tindex":"423d1226-db2c-11e4-ab0a-415fe90a0c7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"423d1227-db2c-11e4-ab0a-7f020eef54fd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"423d1228-db2c-11e4-ab0a-4fdccbc6430d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[38,175,0,159,194,195,158],"tindex":"423d1229-db2c-11e4-ab0a-2dd796fa64d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"423d122a-db2c-11e4-ab0a-418a8c50e828","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":134,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":0,"com.graphhopper.reader.OSMReaderTest.testFerry":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":144,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":141,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":190,"com.graphhopper.reader.OSMReaderTest.testWithBounds":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":61,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":120,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":177,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":123,"com.graphhopper.GraphHopperTest.testPrepare":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":88,"com.graphhopper.util.InstructionListTest.testWayList":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":116,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":200,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":27,"com.graphhopper.GraphHopperAPITest.testDisconnected179":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":4,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":89,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":68,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":25,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":153,"com.graphhopper.routing.util.EncodedValueTest.testSwap":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":112,"com.graphhopper.GraphHopperTest.testLoadOSM":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":135,"com.graphhopper.reader.OSMReaderTest.testSort":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":67,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":193,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":71,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":107,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":28,"com.graphhopper.reader.OSMNodeTest.testSetTags":163,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":80,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":92,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":91,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":55,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":113,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":154,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":73,"com.graphhopper.GraphHopperAPITest.testLoad":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":105,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":196,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":66,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":17,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":37,"com.graphhopper.reader.OSMReaderTest.testBarriers":168,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":131,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":94,"com.graphhopper.util.GHUtilityTest.testCopy":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":160,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":191,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":23,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":186,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":76,"com.graphhopper.util.InstructionListTest.testWayList2":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":182,"com.graphhopper.reader.OSMReaderTest.testFoot":127,"com.graphhopper.reader.OSMReaderTest.testOneWay":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":198,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":181,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":93,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":195,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":100,"com.graphhopper.reader.OSMReaderTest.testMain":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":40,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":162,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":33,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":82,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":136,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":9,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":3,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":47,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":194,"com.graphhopper.GraphHopperTest.testFootAndCar":39,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":130,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":49,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":115,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":117,"com.graphhopper.reader.OSMReaderTest.testRelation":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":103,"com.graphhopper.GraphHopperTest.testPrepareOnly":126,"com.graphhopper.GraphHopperTest.testVia":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":22,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":189,"com.graphhopper.reader.OSMElementTest.testHasTag":164,"com.graphhopper.GraphHopperTest.testFootOnly":86,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":158,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":41,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":48,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":178,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":90,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":52,"com.graphhopper.reader.OSMElementTest.testSetTags":165,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":118}}]
