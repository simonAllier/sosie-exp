[{"failures":[],"tindex":"3ba31947-db92-11e4-b073-05e405297ba8","variableMapping":{"storedKey":"forwardBit","key":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-2},{"failures":[],"tindex":"3ba31948-db92-11e4-b073-2580a0bbefe6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"3ba31949-db92-11e4-b073-87b3581098f5","variableMapping":{"this":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"3ba3405a-db92-11e4-b073-b594de38078d","variableMapping":{"size":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"3ba3405b-db92-11e4-b073-19e9ada162d8","variableMapping":{"err":"allBits","tmpErr":"i","y1":"i","dLon":"allBits","sLat":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[20,21],"tindex":"3ba3405c-db92-11e4-b073-e751ae75e5d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[22,23,24,25],"tindex":"3ba3405d-db92-11e4-b073-0b7fc9fac42c","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[26],"tindex":"3ba3405e-db92-11e4-b073-2f77f6400e31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"3ba3405f-db92-11e4-b073-3d5fb86b88c9","variableMapping":{"oldValueIndex":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"3ba34060-db92-11e4-b073-8b6480c2c5bb","variableMapping":{"costs":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[],"tindex":"3ba34061-db92-11e4-b073-cba9ef9137fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[],"tindex":"3ba34062-db92-11e4-b073-43075333a0cf","variableMapping":{"originalEdgesCount":"hash","edgeDifference":"hash","contractedNeighbors":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,27,28,29,30,31,60,32,33,34,61,35,36,37,38,39,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,11,169,170,171,172,173,12,174,13,14,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,16,195,196,197,198,199,17,200,18,19,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,40,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,41,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,22,346,347,348,349,350,351,352,353,354,355,356,357,23,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,26,373,374,375,376,377,378,379,380,24,381,382,383,384,385,386,387,388,389,390,391,392,393,25,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"tindex":"3ba38d83-db92-11e4-b073-effd8c849d1c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"3ba38d84-db92-11e4-b073-cbda9155b00a","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return \"destination: \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[342,344,353,360,368,377,379,388,395,396,404],"tindex":"3ba38d85-db92-11e4-b073-6bc8dfb09607","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"3ba38d86-db92-11e4-b073-03c44cf5afe3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"3ba38d87-db92-11e4-b073-6d57c6971bb2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"3ba38d88-db92-11e4-b073-9154915b40f4","variableMapping":{"tmp":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[27,473],"tindex":"3ba38d89-db92-11e4-b073-5b488cae72c3","variableMapping":{"index":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"3ba3b49a-db92-11e4-b073-9dbf7a9c9ced","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[39,333],"tindex":"3ba3b49b-db92-11e4-b073-1989743b9357","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[86,132,219,263,40,461,472],"tindex":"3ba3b49c-db92-11e4-b073-b9a35614e4cb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[],"tindex":"3ba3dbad-db92-11e4-b073-39994f3e5f30","variableMapping":{"keyIndex":"wayType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-2},{"failures":[0,1,3,474,4,5,8,9,10],"tindex":"3ba3dbae-db92-11e4-b073-3348e2e157d6","variableMapping":{"towerNodeDistance":"lon","zeroCounter":"spatialKey"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:740","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    (long)++;\n    double = 1.0E-4;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"3ba3dbaf-db92-11e4-b073-1da259c1aeea","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[475,476],"tindex":"3ba3dbb0-db92-11e4-b073-f34da3dd1ef1","variableMapping":{"cap":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[27,323],"tindex":"3ba3dbb1-db92-11e4-b073-696bb99b74b5","variableMapping":{"cp":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"3ba402c2-db92-11e4-b073-6f7faa348f55","variableMapping":{"costs":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":0},{"failures":[],"tindex":"3ba402c3-db92-11e4-b073-d395b914f436","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3ba402c4-db92-11e4-b073-c77d5dd77b9c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"3ba402c5-db92-11e4-b073-f7b83f9fba72","variableMapping":{"systemProperty":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[46,51,52,53,55,56,58,59,70,76,77,79,80,84,91,93,99,101,104,106,111,113,116,122,123,125,126,130,137,139,145,147,150,152,157,165,181,194,207,209,210,212,213,217,224,226,232,234,237,239,244,247,253,254,256,257,261,268,270,276,278,281,283,288,290,291,331,332,333,334,335,419,420,425,437,438,439,440,441,443,445,447,448,449,451,452,453,454,455,456,457,458,459,463,464,465,466,468,469,470,471,472],"tindex":"3ba429d6-db92-11e4-b073-0331821af57d","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"3ba429d7-db92-11e4-b073-c5bb208e1bd1","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"3ba78538-db92-11e4-b073-4f69083461f6","variableMapping":{"unpavedBit":"encoded","shift":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[342,344,353,360,368,377,379,388,395,396,404],"tindex":"3ba78539-db92-11e4-b073-3fbc5b7fc9e2","variableMapping":{"ret":"paveType","retBucket":"paveType","i":"paveType","bucketSize":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"3ba7853a-db92-11e4-b073-87f46d008557","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:188","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":0},{"failures":[63,65,68,166,168,295,302],"tindex":"3ba7853b-db92-11e4-b073-5507805358fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[477],"tindex":"3ba7853c-db92-11e4-b073-b948703c1371","variableMapping":{"flags":"bytes","scDirMask":"bytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[],"tindex":"3ba7853d-db92-11e4-b073-e3ba63aad26f","variableMapping":{"nodeId":"shift","mainNodes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"3ba7853e-db92-11e4-b073-85935afb1774","variableMapping":{"initLeafSize":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"3ba7853f-db92-11e4-b073-0f80aba04fe2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[353,357,368,371,388,392,404,408],"tindex":"3ba78540-db92-11e4-b073-15c4f6c0cb73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"3ba78541-db92-11e4-b073-d19eada091f4","variableMapping":{"noNumberValue":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:332","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"3ba7ac52-db92-11e4-b073-93aa1184e797","variableMapping":{"freeIndex":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-2},{"failures":[331,336],"tindex":"3ba7ac53-db92-11e4-b073-5ff87e4c3568","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"3ba7ac54-db92-11e4-b073-673a1bc5593d","variableMapping":{"nanoTime":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[342,344,353,360,368,377,379,388,395,396,404],"tindex":"3ba7ac55-db92-11e4-b073-41ae3aa0d6d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[],"tindex":"3ba7ac56-db92-11e4-b073-31148b8b87ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[54,478],"tindex":"3ba7ac57-db92-11e4-b073-b355c614a918","variableMapping":{"entry":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"3ba7ac58-db92-11e4-b073-8594dd6e71cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[437,439,443,445,447,448],"tindex":"3ba7ac59-db92-11e4-b073-df9621e2444f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[],"tindex":"3ba7ac5a-db92-11e4-b073-b3c14ca89aae","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"3ba7ac5b-db92-11e4-b073-793e68bff20a","variableMapping":{"segmentsToMap":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":0},{"failures":[342,344,353,360,368,377,379,388,395,404],"tindex":"3ba7ac5c-db92-11e4-b073-591e99db2c17","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[333],"tindex":"3ba7ac5d-db92-11e4-b073-2d62e998b257","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"3ba7ac5e-db92-11e4-b073-4db3d4dfff5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"3ba7ac5f-db92-11e4-b073-0dfa6ce9fce7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:485","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[0,1,2,3,474,4,5,8,9,10],"tindex":"3ba7ac60-db92-11e4-b073-670e8c94b6ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"3ba7ac61-db92-11e4-b073-29e600eee0f0","variableMapping":{"high":"weightLong","guess":"weightLong","low":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[14,19],"tindex":"3ba7ac62-db92-11e4-b073-13ff82fc1022","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-1},{"failures":[27,473],"tindex":"3ba7ac63-db92-11e4-b073-3d47b9cb511c","variableMapping":{"str":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"3ba7d374-db92-11e4-b073-798b5069a9cd","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"3ba7d375-db92-11e4-b073-d5b6dcc3ac50","variableMapping":{"workerThreads":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"3ba7d376-db92-11e4-b073-199dfe35a876","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[312],"tindex":"3ba7d377-db92-11e4-b073-8d8c7c03d165","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3ba7d378-db92-11e4-b073-3bcc832c24ac","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3ba7d379-db92-11e4-b073-fdb636be805d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[342,377],"tindex":"3ba7d37a-db92-11e4-b073-eb4a05f760b3","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"3ba7d37b-db92-11e4-b073-31dfa3f56d5f","variableMapping":{"high":"child","guess":"child","low":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"3ba7d37c-db92-11e4-b073-2d8cc28f79a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"3ba7d37d-db92-11e4-b073-a7f5bb9b2881","variableMapping":{"red":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"3ba7d37e-db92-11e4-b073-a383942b3385","variableMapping":{"java.lang.Double.MAX_VALUE":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[],"tindex":"3ba7d37f-db92-11e4-b073-6d98114012e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[54,27,28,29,30,31,60,32,33,34,35,36,37,38,479,39,295,296,297,40,298,300,301,303,316,317,321,322,323,337,480],"tindex":"3ba7d380-db92-11e4-b073-cfd0ac91a2c7","variableMapping":{"initialized":"isRoundabout"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"3ba7d381-db92-11e4-b073-69c7bcf1d0b0","variableMapping":{"i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"3ba7d382-db92-11e4-b073-bba4757d5b93","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:200","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[54,28,39,295,322,475,476,41,340,342,343,344,353,357,375,377,378,379,388,392,480],"tindex":"3ba7fa93-db92-11e4-b073-130769dc1a74","variableMapping":{"size":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[27,28,29,30,31,60,32,33,34,35,36,37,38,39,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,165,181,194,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,293,40,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,41,337,338,339,340,341,342,343,344,345,22,346,347,348,349,350,351,352,353,354,355,356,357,372,26,373,374,375,376,377,378,379,380,24,381,382,383,384,385,386,387,388,389,390,391,392,25,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,411,412,413,414,421,433,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"tindex":"3ba7fa94-db92-11e4-b073-b9a1dfcb8a62","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"entryVal","entryVal":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:170","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"3ba7fa95-db92-11e4-b073-576e217b93ac","variableMapping":{"shift":"shift","preferWayEncoder":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[323],"tindex":"3ba7fa96-db92-11e4-b073-83e4dcee9333","variableMapping":{"flags":"ferryBit","tmpValue":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"3ba7fa97-db92-11e4-b073-7d2779d6c95e","variableMapping":{"id":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[342,353,360,368,377,388,395,396,404],"tindex":"3ba7fa98-db92-11e4-b073-7db7c22bfd25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 3))\n    return \"\";\n"},"status":-1},{"failures":[],"tindex":"3ba7fa99-db92-11e4-b073-33e188894aa9","variableMapping":{"item":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"3ba7fa9a-db92-11e4-b073-8596e8293000","variableMapping":{"id":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"3ba7fa9b-db92-11e4-b073-953918a91135","variableMapping":{"start":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[50,51,52,53,54,28,29,30,31,60,32,33,34,35,36,37,39,290,291,293,294,295,296,297,40,298,300,301,302,303,41,331,332,333,334,335,336,428,461],"tindex":"3ba7fa9c-db92-11e4-b073-2df8865e0a7b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-1},{"failures":[],"tindex":"3ba821ad-db92-11e4-b073-db0812cf4ea3","variableMapping":{"mKeys":"arr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:62","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[312,316,323,339,344,355,358,360,370,374,379,390,406],"tindex":"3ba821ae-db92-11e4-b073-0f1ff3550457","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[],"tindex":"3ba821af-db92-11e4-b073-db6adc6894ca","variableMapping":{"size":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"3ba821b0-db92-11e4-b073-c75d3e1cb0e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:111","type":"CtLocalVariableImpl","sourcecode":"byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int))"},"status":-2},{"failures":[],"tindex":"3ba821b1-db92-11e4-b073-a79c5eade7b8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[27,319],"tindex":"3ba821b2-db92-11e4-b073-e97495f63143","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"3ba821b3-db92-11e4-b073-31a135e2df47","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3ba821b4-db92-11e4-b073-0f67b11c5c16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"3ba821b5-db92-11e4-b073-25570ddbf6b6","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"3ba821b6-db92-11e4-b073-1355e1a51386","variableMapping":{"currentBucket":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[356,361,391,407],"tindex":"3ba821b7-db92-11e4-b073-5712af7771dc","variableMapping":{"value":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"3ba821b8-db92-11e4-b073-f57e67cc1cff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"3ba821b9-db92-11e4-b073-a9370b096ca3","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"closed","v":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[27],"tindex":"3ba821ba-db92-11e4-b073-e58a49a9ec59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":101,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":467,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":67,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":480,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":161,"com.graphhopper.GraphHopperAPITest.testNoLoad":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":209,"com.graphhopper.reader.OSMReaderTest.testFerry":27,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":55,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":343,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":171,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":294,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":131,"com.graphhopper.coll.CompressedArrayTest.testCompress":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":367,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":287,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":229,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":445,"com.graphhopper.GraphHopperTest.testPrepare":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":466,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":434,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":341,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":459,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":368,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":43,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":360,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":339,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":451,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":197,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":344,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":113,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":6,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":448,"com.graphhopper.GraphHopperTest.testLoadOSM":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":198,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":330,"com.graphhopper.reader.OSMReaderTest.testSort":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":354,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":117,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":282,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":247,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":242,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":428,"com.graphhopper.routing.DijkstraTest.initializationError":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":152,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":100,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":259,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":114,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":377,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":121,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":174,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":173,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":454,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":135,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":141,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":92,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":70,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":94,"com.graphhopper.coll.CompressedArrayTest.testCompress2":9,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":132,"com.graphhopper.GraphHopperAPITest.testLoad":290,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":74,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":305,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":264,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":254,"com.graphhopper.storage.LevelGraphStorageTest.testClone":79,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":473,"com.graphhopper.reader.OSMReaderTest.testBarriers":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":380,"com.graphhopper.util.GHUtilityTest.testCopy":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":456,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":402,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":370,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":364,"com.graphhopper.routing.PathTest.testFindInstruction":418,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":123,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":57,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":311,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":376,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":283,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":268,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":150,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":386,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":413,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":214,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":250,"com.graphhopper.util.InstructionListTest.testWayList2":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":202,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":288,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":340,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":409,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":372,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":182,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":455,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":60,"com.graphhopper.routing.AStarTest.initializationError":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":469,"com.graphhopper.coll.OSMIDMapTest.testGet":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":130,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":312,"com.graphhopper.routing.PathBidirRefTest.testExtract":419,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":346,"com.graphhopper.util.GHUtilityTest.testSort2":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":464,"com.graphhopper.reader.OSMReaderTest.testMain":29,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":348,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":7,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":355,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":239,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":86,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":90,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":111,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":87,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":374,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":93,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":38,"com.graphhopper.storage.GraphHopperStorageTest.testClone":256,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":323,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":266,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":321,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":406,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":215,"com.graphhopper.routing.PathTest.testTime":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":401,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":109,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":204,"com.graphhopper.reader.OSMReaderTest.testRelation":61,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":228,"com.graphhopper.util.GHUtilityTest.testSortDirected":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":389,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":424,"com.graphhopper.GraphHopperTest.testFootOnly":302,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":359,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":12,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":452,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":224,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":421,"com.graphhopper.routing.QueryGraphTest.testOneWay":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":205,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":196,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":0,"com.graphhopper.reader.OSMReaderTest.testWithBounds":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":332,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":230,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":313,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":475,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":76,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":371,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":144,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":194,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":137,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":252,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":450,"com.graphhopper.util.InstructionListTest.testWayList":52,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":22,"com.graphhopper.GraphHopperAPITest.testDisconnected179":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":474,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":384,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":352,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":297,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":258,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":446,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":338,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":461,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":411,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":444,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":353,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":119,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":471,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":357,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":246,"com.graphhopper.routing.PathTest.testWayList":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":243,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":318,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":472,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":351,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":269,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":128,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":13,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":14,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":381,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":395,"com.graphhopper.util.GHUtilityTest.testSort":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":350,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":157,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":255,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":169,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":187,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":26,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":115,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":301,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":397,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":470,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":331,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":234,"com.graphhopper.routing.PathTest.testFound":415,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":41,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":303,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":106,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":393,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":349,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":134,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":219,"com.graphhopper.util.InstructionListTest.testEmptyList":50,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":458,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":462,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":369,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":465,"com.graphhopper.reader.PrinctonReaderTest.testRead":58,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":172,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":129,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":208,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":139,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":375,"com.graphhopper.reader.OSMReaderTest.testFoot":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":232,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":432,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":18,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":19,"com.graphhopper.reader.OSMReaderTest.testOneWay":39,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":265,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":151,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":365,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":226,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":440,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":15,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":437,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":447,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":438,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":307,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":222,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":423,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":249,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":479,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":21,"com.graphhopper.routing.PathBidirRefTest.testExtract2":420,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":449,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":404,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":278,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":192,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":407,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":245,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":308,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":385,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":443,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":199,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":281,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":48,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":325,"com.graphhopper.GraphHopperTest.testFootAndCar":40,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":273,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":88,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":396,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":212,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":329,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":125,"com.graphhopper.GraphHopperTest.testPrepareOnly":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":468,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":164,"com.graphhopper.GraphHopperTest.testVia":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":210,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":35,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":66,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":54,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":309,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":225,"com.graphhopper.routing.AStarBidirectionTest.initializationError":433,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":337,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":105,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":103,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":116}}]
