[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"01785f7f-da42-11e4-88f7-b701c734c0ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"01799800-da42-11e4-88f7-6b1e10c8dd72","variableMapping":{"latSimilar":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[19],"tindex":"01799801-da42-11e4-88f7-dbba2eeaf86d","variableMapping":{"red":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[20,21,22,23,24],"tindex":"01799802-da42-11e4-88f7-4530247f182d","variableMapping":{"cap":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"01799803-da42-11e4-88f7-19a52b62c7ac","variableMapping":{"from":"segmentSizeInBytes","hash":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"01799804-da42-11e4-88f7-8b6f5296070b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[152,153],"tindex":"01799805-da42-11e4-88f7-03f6cb20d6fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[26,70,13,17,126,128,134],"tindex":"01799806-da42-11e4-88f7-6b7d86f38e6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[],"tindex":"01799807-da42-11e4-88f7-6f5a9eecc70d","variableMapping":{"dataAccess":"location","type":"type","com.graphhopper.storage.DAType.RAM_STORE":"type","com.graphhopper.storage.DAType.RAM":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:171","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"RAM_STORE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"0179bf18-da42-11e4-88f7-532170f66912","variableMapping":{"bytes":"relationFlags","capacity":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":0},{"failures":[32,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"0179bf19-da42-11e4-88f7-6702396557cd","variableMapping":{"shift":"shift","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[],"tindex":"0179bf1a-da42-11e4-88f7-d5de6f4992ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"0179bf1b-da42-11e4-88f7-3ded5a391b8e","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"high","id":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[58,179,180,181,182,183,184,185,186,187,188,73,189,87,190,95,96,98,102,103,109,110,191,192,193,194,195,196,197,131,198,199,200,201,202,203,204,205,206,137,207],"tindex":"0179bf1c-da42-11e4-88f7-1761085e9fb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"0179bf1d-da42-11e4-88f7-918a487d27db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"0179bf1e-da42-11e4-88f7-8d9d842318b7","variableMapping":{"sortedNodes":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:307","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHTreeMapComposed.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot prepare as no unprepared nodes where found. Called preparation twice?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[],"tindex":"0179bf1f-da42-11e4-88f7-5d74c29eb007","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[26,27,29,30,208,209,210,211,212,213,214,215,216,217,23,218,219,220,221,222,223,224,225,226,69,227,228,24,229,230,231,232,233,234,235,236,237,238,239,240],"tindex":"0179bf20-da42-11e4-88f7-9f58e0a6b21a","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"0179bf21-da42-11e4-88f7-2d265f7c2996","variableMapping":{"dist":"maxLat","com.graphhopper.util.DistanceCalcEarth.R":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"0179bf22-da42-11e4-88f7-0367c52d59ba","variableMapping":{"fromNode":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"0179bf23-da42-11e4-88f7-c785f5c465e9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"0179e634-da42-11e4-88f7-8f6028a00963","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:500","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"0179e635-da42-11e4-88f7-97b400b74d65","variableMapping":{"edgeId":"unvisitedDeadEnds"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"0179e636-da42-11e4-88f7-cd9c406984de","variableMapping":{"baseNode":"length","id":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[],"tindex":"0179e637-da42-11e4-88f7-5ddd88575068","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"0179e638-da42-11e4-88f7-9fdcdb4c763a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[],"tindex":"0179e639-da42-11e4-88f7-0721039e9b70","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"0179e63a-da42-11e4-88f7-ed64c5f7a4ad","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"0179e63b-da42-11e4-88f7-d1c19a20ebb4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"0179e63c-da42-11e4-88f7-97bd3ce0b95a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[241,25,26,27,28,242,29,243,30,31,32,244,245,20,246,247,248,249,250,33,34,35,36,251,252,253,37,254,255,256,257,258,259,260,46,261,47,48,49,50,51,52,53,262,54,55,56,57,58,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,154,285,155,286,156,287,288,289,290,157,291,292,293,294,158,295,296,297,159,298,299,300,301,302,303,304,305,306,307,308,21,309,310,162,163,311,312,164,313,314,315,316,165,317,318,319,166,320,321,322,167,323,324,325,168,326,327,328,169,329,330,170,179,331,180,181,152,153,332,333,171,334,172,335,173,336,337,338,339,174,340,341,342,343,175,344,345,346,176,347,348,64,65,349,350,351,352,66,353,354,355,356,357,358,67,359,360,68,361,362,363,364,22,209,210,211,212,213,214,215,216,217,23,218,219,220,221,222,223,224,225,226,69,227,228,24,365,229,366,230,231,232,233,234,235,236,367,237,238,239,240,368,70,369,370,371,372,71,373,182,374,375,376,377,378,379,380,183,381,184,185,382,186,383,384,385,187,188,72,386,387,388,389,390,73,189,391,392,393,74,394,75,395,396,397,398,399,400,11,401,76,402,77,403,12,404,13,14,405,406,407,408,409,410,411,412,413,414,415,416,417,418,78,79,80,81,419,82,420,421,422,423,424,425,426,15,427,83,428,84,429,16,430,17,18,431,432,433,434,435,436,437,85,86,87,88,89,90,91,92,93,94,190,438,95,96,97,98,99,100,101,102,103,104,105,106,107,439,108,109,110,111,112,113,114,115,116,117,118,119,126,127,440,128,441,442,443,444,129,445,191,446,447,448,449,450,451,452,192,453,193,194,454,195,455,456,457,196,197,130,458,459,460,461,462,131,198,463,464,465,132,466,133,467,468,469,470,471,472,473,474,475,199,476,134,477,478,479,480,135,481,200,482,483,484,485,486,487,488,201,489,202,203,490,204,491,492,493,205,206,136,494,495,496,497,498,137,207,499,500,501,138,502,139,503,504,505],"tindex":"017a0d4d-da42-11e4-88f7-df5b496e7454","variableMapping":{"val":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","existing":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","key":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"017a0d4e-da42-11e4-88f7-1b66dd193424","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[179,181,182,185,187,73,189,87,96,102,109,110,191,194,196,131,198,200,203,205,137,207],"tindex":"017a0d4f-da42-11e4-88f7-bb0b9e7b84c4","variableMapping":{"index":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[265,270,271,295,317,329,344,506],"tindex":"017a0d50-da42-11e4-88f7-df0cfee1b5fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[262,160],"tindex":"017a0d51-da42-11e4-88f7-6da5a948d6ec","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"017a0d52-da42-11e4-88f7-e3941f4d207b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[58,179,180,181,182,183,184,185,186,187,188,73,189,87,190,95,96,98,102,103,109,110,191,192,193,194,195,196,197,131,198,199,200,201,202,203,204,205,206,137,207],"tindex":"017a0d53-da42-11e4-88f7-ff4c82a26d49","variableMapping":{"id":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"017a0d54-da42-11e4-88f7-f55675e69910","variableMapping":{"lon1":"d2","lon2":"epsilon","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:99","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) > 180.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"017a0d55-da42-11e4-88f7-29a557b66c97","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[26,27,28,242,29,31,32,20,246,47,48,49,0,1,217,220,221,224,2,3,507,4,508,5,6,7,8,9,10,398,399,11,401,76,402,77,403,12,404,13,14,405,406,407,408,410,411,15,427,83,428,84,429,16,430,17,18,431,432,433,434,436,437],"tindex":"017a0d56-da42-11e4-88f7-a11326413ee7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"status":-1},{"failures":[],"tindex":"017a0d57-da42-11e4-88f7-15471b0062e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:479","type":"CtLocalVariableImpl","sourcecode":"java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null)"},"status":-2},{"failures":[],"tindex":"017a3468-da42-11e4-88f7-b78c270ef4d9","variableMapping":{"java.lang.Double.MAX_VALUE":"maxSpeed","existingDirectWeight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"017a3469-da42-11e4-88f7-e507bc2d9819","variableMapping":{"tmp":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"017a346a-da42-11e4-88f7-f5d403a179ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"017a346b-da42-11e4-88f7-4b1fc199aadf","variableMapping":{"lastTime":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"017a346c-da42-11e4-88f7-2dbd71fb512d","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"found","v":"found"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[46,509],"tindex":"017a346d-da42-11e4-88f7-47db039b8ac9","variableMapping":{"initLeafSize":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"017a346e-da42-11e4-88f7-27ad3132cbb4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"017a346f-da42-11e4-88f7-5553c22654b2","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[],"tindex":"017a3470-da42-11e4-88f7-e726f75a851e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"017a3471-da42-11e4-88f7-e3e215dd633b","variableMapping":{"lastInBoundsPillarNode":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[58,179,180,181,182,183,184,185,186,187,188,73,189,87,190,95,96,98,102,103,109,110,191,192,193,194,195,196,197,131,198,199,200,201,202,203,204,205,206,137,207],"tindex":"017a3472-da42-11e4-88f7-15e523ea7853","variableMapping":{"entries":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[46,261,47,48,49,50,51,52,53,54,55,56,57,58,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,298,510,300,301,302,303,304,305,306,307,308,21],"tindex":"017a3473-da42-11e4-88f7-ed6bcf7caa5b","variableMapping":{"cap":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[281,282,300,348,22,23,472],"tindex":"017a5b84-da42-11e4-88f7-f3f0c4a546cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:55","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"017a5b85-da42-11e4-88f7-71ed8bfbf656","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"017a5b86-da42-11e4-88f7-13e7faa3fb4a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[241,25,26,27,28,242,29,243,30,31,32,244,245,20,246,248,249,250,33,34,35,36,251,252,253,37,254,256,257,258,511,38,39,40,512,41,42,43,44,45,259,260,46,261,47,48,49,50,51,52,53,262,54,55,56,57,513,58,59,60,61,62,63,281,282,303,179,331,180,181,152,153,347,348,64,65,352,352,66,66,353,353,354,354,355,355,356,356,357,357,358,358,67,67,359,359,360,360,68,68,361,362,22,209,210,211,212,213,214,215,216,217,23,218,219,220,221,222,223,224,225,226,69,227,228,24,365,229,230,231,232,233,234,235,236,367,237,238,239,240,368,70,369,370,371,372,71,373,182,374,375,376,377,378,379,380,183,381,184,185,382,186,383,384,385,187,188,72,386,387,388,389,390,73,189,391,392,393,74,394,75,395,396,397,398,399,400,11,401,76,402,77,403,12,404,13,14,405,406,407,408,410,411,412,413,414,415,417,418,514,78,79,80,81,419,82,420,421,422,423,425,426,15,427,83,428,84,429,16,430,17,18,431,432,433,434,436,437,85,86,87,88,89,90,91,92,93,94,190,438,95,96,97,98,99,100,101,102,103,104,105,106,107,439,108,109,110,111,112,113,114,115,116,117,118,119,126,127,440,128,441,442,443,444,129,445,191,446,447,448,449,450,451,452,192,453,193,194,454,195,455,456,457,196,197,130,458,459,460,461,462,131,198,463,464,465,132,466,133,467,468,469,515,516,517,518,519,520,521,470,471,472,473,474,475,199,476,134,477,478,479,480,135,481,200,482,483,484,485,486,487,488,201,489,202,203,490,204,491,492,493,205,206,136,494,495,496,497,498,137,207,499,500,501,138,502,139,503,504,505,522,523,524,525],"tindex":"017a5b87-da42-11e4-88f7-852029be4147","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[270],"tindex":"017a5b88-da42-11e4-88f7-277b4002ed16","variableMapping":{"resultOrientation":"maxSpeed","orientation":"backSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[49,54,263,289,301,311,324,338],"tindex":"017a5b89-da42-11e4-88f7-a7d42332e27b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"017a5b8a-da42-11e4-88f7-b765055bb1b0","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"017a5b8b-da42-11e4-88f7-2545644cd56e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[52],"tindex":"017a5b8c-da42-11e4-88f7-a565475c35e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:470","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"017a5b8d-da42-11e4-88f7-b7ddc691df23","variableMapping":{"cap":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":0},{"failures":[],"tindex":"017a5b8e-da42-11e4-88f7-d13e10a7aad7","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.BIKE","osmFile":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"017a5b8f-da42-11e4-88f7-3551e2c4b425","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[177],"tindex":"017a5b90-da42-11e4-88f7-c18a3126e3f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[58,180,181,182,183,184,185,187,73,189,191,192,193,194,196,131,198,19,199,200,201,202,203,205,137,207],"tindex":"017a81a1-da42-11e4-88f7-2dd6abf1a978","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"017a81a2-da42-11e4-88f7-9d79e60936e4","variableMapping":{"ab_rb":"ele","ab_ar":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[242,32,261],"tindex":"017a81a3-da42-11e4-88f7-71fc81cf5f32","variableMapping":{"res":"directionBitMask","value":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[27,29,217,220,221,224,398,76,77,403,404,405,406,407,408,410,411],"tindex":"017a81a4-da42-11e4-88f7-a30fc24313e2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[526],"tindex":"017a81a5-da42-11e4-88f7-33ea7a923502","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:463","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"017b6c06-da42-11e4-88f7-87e1aaea84b1","variableMapping":{"splitIndex":"a","entrySize":"b"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[241,25,26,27,28,242,29,30,31,32,244,20,246,248,249,250,33,34,35,36,251,252,253,37,254,256,257,258,512,259,260,46,261,47,48,49,50,51,52,53,54,55,56,57,58,281,282,303,179,331,180,181,152,153,347,348,64,65,352,352,66,66,353,353,354,354,355,355,356,356,357,357,358,358,67,67,359,359,360,360,68,68,361,362,22,209,210,211,212,213,214,215,216,217,23,218,219,220,221,222,223,224,225,226,69,227,228,24,365,229,230,231,232,233,234,235,236,367,237,238,239,240,368,70,369,370,371,71,373,182,374,375,376,377,378,379,380,183,381,184,185,382,186,383,384,385,187,188,72,386,387,388,389,390,73,189,391,392,393,74,394,75,395,396,397,398,399,400,11,401,76,402,77,403,12,404,13,14,405,406,407,408,409,410,411,412,413,414,415,416,417,418,514,78,79,80,81,419,82,420,421,422,423,424,425,426,15,427,83,428,84,429,16,430,17,18,431,432,433,434,435,436,437,85,86,87,88,89,90,91,92,93,94,190,438,95,96,97,98,99,100,101,102,103,104,105,106,107,439,108,109,110,111,112,113,114,115,116,117,118,119,126,127,440,128,441,442,443,129,445,191,446,447,448,449,450,451,452,192,453,193,194,454,195,455,456,457,196,197,130,458,459,460,461,462,131,198,463,464,465,132,466,133,467,468,469,521,470,471,472,473,474,475,199,476,134,477,478,479,135,481,200,482,483,484,485,486,487,488,201,489,202,203,490,204,491,492,493,205,206,136,494,495,496,497,498,137,207,499,500,501,138,502,139,503,504,505],"tindex":"017b6c07-da42-11e4-88f7-f7fba3d60158","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[26,27,29,32,22,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,226,69,227,228,24,365,230,236,367,240],"tindex":"017b6c08-da42-11e4-88f7-ed0328cf635c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"017b9319-da42-11e4-88f7-57a668647b8b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[526],"tindex":"017b931a-da42-11e4-88f7-4d1366a41943","variableMapping":{"str":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"017b931b-da42-11e4-88f7-ff8a5b445fcc","variableMapping":{"motorcarTag":"highway","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[241,25,26,27,28,242,29,30,31,32,244,20,246,248,249,250,33,34,35,36,251,252,253,37,254,256,257,258,512,259,260,46,261,47,48,49,50,51,52,53,54,55,56,57,58,281,282,303,179,331,180,181,152,153,347,348,64,65,352,352,66,66,353,353,354,354,355,355,356,356,357,357,358,358,67,67,359,359,360,360,68,68,361,362,22,209,210,211,212,213,214,215,216,217,23,218,219,220,221,222,223,224,225,226,69,227,228,24,365,229,230,231,232,233,234,235,236,367,237,238,239,240,368,70,369,370,371,71,373,182,374,375,376,377,378,379,380,183,381,184,185,382,186,383,384,385,187,188,72,386,387,388,389,390,73,189,391,392,393,74,394,75,395,396,397,398,399,400,11,401,76,402,77,403,12,404,13,14,405,406,407,408,410,411,412,413,414,415,417,418,514,78,79,80,81,82,420,421,422,423,425,426,15,427,83,428,84,429,16,430,17,18,431,432,433,434,436,437,438,108,126,440,128,441,442,443,129,445,191,446,447,448,449,450,451,452,192,453,193,194,454,195,455,456,457,196,197,130,458,459,460,461,462,131,198,463,464,465,132,466,133,467,468,469,527,528,529,530,531,532,533,19,534,535,536,470,471,472,473,474,475,199,476,134,477,478,479,135,481,200,482,483,484,485,486,487,488,201,489,202,203,490,204,491,492,493,205,206,136,494,495,496,497,498,137,207,499,500,501,138,502,139,503,504,505],"tindex":"017b931c-da42-11e4-88f7-158630005629","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"017b931d-da42-11e4-88f7-9fb96dcd9d13","variableMapping":{"newName":"encoder","name":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[160,310,162,163],"tindex":"017b931e-da42-11e4-88f7-f52c1935f7ba","variableMapping":{"versionHint":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[210,213,214,224,226,227,365,236,367],"tindex":"017b931f-da42-11e4-88f7-cf5205b12c6d","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[155,156,158,162,163,165,167,169,172,173,175],"tindex":"017b9320-da42-11e4-88f7-0f9e317c281e","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:430","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"017b9321-da42-11e4-88f7-9586797e525b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[179,152,153],"tindex":"017b9322-da42-11e4-88f7-ad05793e6013","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[241,25,26,27,28,242,29,30,31,32,244,20,246,46,261,47,48,49,50,51,52,53,54,55,56,57,58,217,220,221,224,398,399,11,401,76,402,77,403,12,404,13,14,405,406,407,408,409,410,411,15,427,83,428,84,429,16,430,17,18,431,432,433,434,435,436,437],"tindex":"017b9323-da42-11e4-88f7-1f47c64923b9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[537],"tindex":"017b9324-da42-11e4-88f7-730c6c73045c","variableMapping":{"str":"str","name":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[52],"tindex":"017bba35-da42-11e4-88f7-a7380ff2e97d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:470","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"017bba36-da42-11e4-88f7-e78e24eea99a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:95","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl = new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[241,25,26,27,28,242,29,30,31,32,244,36,46,261,47,48,49,50,51,52,53,54,55,56,57,513,58,265,266,267,268,270,271,272,278,154,155,286,156,288,158,296,159,160,161,300,304,307,308,309,162,163,165,318,166,321,167,169,330,170,171,172,335,173,337,175,345,176,506],"tindex":"017bba37-da42-11e4-88f7-b35a07b30213","variableMapping":{"weightLong":"acceptBit","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[282,300,348,22],"tindex":"017bba38-da42-11e4-88f7-ffde07a89b84","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[46,261,47,48,49,50,51,52,53,262,54,55,56,57,58,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,281,282,283,284,154,285,155,286,156,287,288,289,290,157,291,292,293,294,158,295,296,297,159,298,160,510,161,300,301,302,303,304,305,306,307,308,21,309,310,162,163,311,312,164,313,314,315,316,165,317,318,319,166,320,321,322,167,323,324,325,168,326,327,328,169,329,330,170,180,332,333,171,334,172,335,173,336,337,338,339,174,340,341,342,343,175,344,345,346,176,348,22,23,472],"tindex":"017bba39-da42-11e4-88f7-5946ef2a5c7d","variableMapping":{"originalEdgesCount":"shift","edgeDifference":"shift","contractedNeighbors":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[267,268,272,293,296,308,315,318,327,330,342,345],"tindex":"017bba3a-da42-11e4-88f7-2bdc193392cc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[242,261,58,300,304,307],"tindex":"017bba3b-da42-11e4-88f7-d388a32b3458","variableMapping":{"high":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[506],"tindex":"017bba3c-da42-11e4-88f7-a9c25b09a8da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[46,261,47,48,50,51,52,53,56,57,58,154,155,286,156,158,159,160,161,162,163,165,166,167,169,170,171,172,335,173,175,176],"tindex":"017bba3d-da42-11e4-88f7-338f69aa1a63","variableMapping":{"reverseOrder":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"017bba3e-da42-11e4-88f7-2b2bb121a21e","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"017bba3f-da42-11e4-88f7-7555081a93b0","variableMapping":{"val":"currDistToGoal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":0},{"failures":[],"tindex":"017bba40-da42-11e4-88f7-d53f867e3402","variableMapping":{"str":"wayTypeName","s":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:132","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"017bba41-da42-11e4-88f7-83f33eb089e2","variableMapping":{"val":"connectedId","com.graphhopper.coll.SparseIntIntArray.DELETED":"connectedId","keys":"nodeLowLink","values":"nodeIndex","i":"start","o":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"017bba42-da42-11e4-88f7-dffe00963ba8","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":498,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":225,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":475,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":506,"com.graphhopper.GraphHopperAPITest.testNoLoad":247,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":86,"com.graphhopper.reader.OSMReaderTest.testFerry":46,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":257,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":402,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":25,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":505,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":159,"com.graphhopper.storage.MMapDataAccessTest.testSegments":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":192,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":45,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":140,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":328,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":395,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":104,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":400,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":237,"com.graphhopper.GraphHopperTest.testPrepare":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":365,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":23,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":33,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":514,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":169,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":249,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":333,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":528,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":210,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":428,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":467,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":173,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":126,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":7,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":240,"com.graphhopper.GraphHopperTest.testLoadOSM":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":431,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":531,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":84,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":299,"com.graphhopper.reader.OSMReaderTest.testSort":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":344,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":441,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":392,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":70,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":116,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":358,"com.graphhopper.routing.DijkstraTest.initializationError":363,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":512,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":465,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":497,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":378,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":471,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":127,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":129,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":404,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":403,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":213,"com.graphhopper.coll.OSMIDMapTest.testGetLong":62,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":212,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":446,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":492,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":134,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":205,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":310,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":453,"com.graphhopper.GraphHopperAPITest.testLoad":20,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":480,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":530,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":301,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":184,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":182,"com.graphhopper.storage.LevelGraphStorageTest.testClone":483,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":509,"com.graphhopper.reader.OSMReaderTest.testBarriers":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":287,"com.graphhopper.util.GHUtilityTest.testCopy":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":411,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":330,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":416,"com.graphhopper.routing.PathTest.testFindInstruction":65,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":168,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":191,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":307,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":502,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":285,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":413,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":393,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":383,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":234,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":293,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":351,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":91,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":371,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":149,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":536,"com.graphhopper.util.InstructionListTest.testWayList2":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":432,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":396,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":507,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":449,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":172,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":521,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":171,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":281,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":369,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":487,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":98,"com.graphhopper.storage.RAMDirectoryTest.testSynched":515,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":193,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":214,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":373,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":50,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":142,"com.graphhopper.routing.AStarTest.initializationError":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":69,"com.graphhopper.coll.OSMIDMapTest.testGet":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":452,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":308,"com.graphhopper.routing.PathBidirRefTest.testExtract":361,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":61,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":339,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":406,"com.graphhopper.storage.RAMDataAccessTest.testCopy":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":109,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":321,"com.graphhopper.storage.RAMDataAccessTest.testSegments":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":338,"com.graphhopper.util.GHUtilityTest.testSort2":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":222,"com.graphhopper.reader.OSMReaderTest.testMain":47,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":477,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":196,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":407,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":265,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":496,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":442,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":489,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":204,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":178,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":504,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":202,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":284,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":529,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":493,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":57,"com.graphhopper.storage.StorablePropertiesTest.testStore":519,"com.graphhopper.storage.GraphHopperStorageTest.testClone":375,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":272,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":516,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":270,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":382,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":470,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":92,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":473,"com.graphhopper.routing.PathTest.testTime":348,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":314,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":139,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":484,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":277,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":103,"com.graphhopper.reader.OSMReaderTest.testRelation":262,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":495,"com.graphhopper.util.GHUtilityTest.testSortDirected":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":295,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":523,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":354,"com.graphhopper.GraphHopperTest.testFootOnly":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":322,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":268,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":518,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":12,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":99,"com.graphhopper.search.NameIndexTest.testCreate":40,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":123,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":352,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":533,"com.graphhopper.routing.QueryGraphTest.testOneWay":359,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":435,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":325,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":83,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":2,"com.graphhopper.reader.OSMReaderTest.testWithBounds":56,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":125,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":331,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":466,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":105,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":160,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":481,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":478,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":170,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":459,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":269,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":455,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":71,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":209,"com.graphhopper.util.InstructionListTest.testWayList":34,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":394,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":337,"com.graphhopper.GraphHopperAPITest.testDisconnected179":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":508,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":88,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":524,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":291,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":260,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":102,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":527,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":343,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":28,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":377,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":80,"com.graphhopper.routing.util.EncodedValueTest.testSwap":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":332,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":388,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":219,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":367,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":273,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":312,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":175,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":228,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":409,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":532,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":176,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":368,"com.graphhopper.routing.PathTest.testWayList":64,"com.graphhopper.storage.MMapDataAccessTest.testCopy":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":267,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":537,"com.graphhopper.coll.OSMIDMapTest.testGet2":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":24,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":499,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":458,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":342,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":302,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":13,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":491,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":14,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":145,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":162,"com.graphhopper.util.GHUtilityTest.testSort":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":439,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":324,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":341,"com.graphhopper.search.NameIndexTest.testPut":38,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":401,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":415,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":422,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":534,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":286,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":282,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":420,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":311,"com.graphhopper.storage.MMapDirectoryTest.testSynched":522,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":42,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":456,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":179,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":535,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":108,"com.graphhopper.routing.PathTest.testFound":347,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":244,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":300,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":501,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":526,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":472,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":340,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":194,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":208,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":39,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":438,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":120,"com.graphhopper.util.InstructionListTest.testEmptyList":250,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":329,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":223,"com.graphhopper.reader.PrinctonReaderTest.testRead":259,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":74,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":77,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":451,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":3,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":85,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":482,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":457,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":510,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":517,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":154,"com.graphhopper.reader.OSMReaderTest.testFoot":261,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":43,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":107,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":17,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":503,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":18,"com.graphhopper.reader.OSMReaderTest.testOneWay":58,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":185,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":189,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":464,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":326,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":144,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":101,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":233,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":239,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":271,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":231,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":423,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":97,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":353,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":370,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":513,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":525,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":19,"com.graphhopper.routing.PathBidirRefTest.testExtract2":362,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":165,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":433,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":511,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":390,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":424,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":319,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":119,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":304,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":425,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":429,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":391,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":255,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":486,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":274,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":72,"com.graphhopper.GraphHopperTest.testFootAndCar":242,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":163,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":89,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":298,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":147,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":447,"com.graphhopper.storage.StorablePropertiesTest.testLoad":520,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":226,"com.graphhopper.GraphHopperTest.testPrepareOnly":241,"com.graphhopper.GraphHopperTest.testVia":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":87,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":54,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":474,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":36,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":389,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":305,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":100,"com.graphhopper.routing.AStarBidirectionTest.initializationError":350,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":278,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":500,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":207,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":128}}]
