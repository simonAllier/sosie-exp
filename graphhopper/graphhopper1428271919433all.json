[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"c81935a5-dbe0-11e4-87b4-7768b2df0f5b","variableMapping":{"segmentSizePower":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"c81a9536-dbe0-11e4-87b4-136e80896b18","variableMapping":{"size":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"c81a9537-dbe0-11e4-87b4-d5268b387cbe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"c81a9538-dbe0-11e4-87b4-9d29e537519f","variableMapping":{"intVal":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"c81a9539-dbe0-11e4-87b4-35c9a5b75b55","variableMapping":{"min":"maxSpeed","dist":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":0},{"failures":[],"tindex":"c81a953a-dbe0-11e4-87b4-b17fa91f696c","variableMapping":{"allSegments":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[],"tindex":"c81a953b-dbe0-11e4-87b4-b57df14cc781","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"c81a953c-dbe0-11e4-87b4-a70ba8efbf5a","variableMapping":{"key":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"c81a953d-dbe0-11e4-87b4-ff5b6a820fa6","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1197","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":0},{"failures":[67,68,69],"tindex":"c81abc4e-dbe0-11e4-87b4-bdd6f6951b75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"c81abc4f-dbe0-11e4-87b4-77710b646121","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"c81abc50-dbe0-11e4-87b4-3b977b168f82","variableMapping":{"name":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[19,109,110,111,112],"tindex":"c81abc51-dbe0-11e4-87b4-e5da3277bcb5","variableMapping":{"directionBitMask":"turnRestrictionBit","blockByDefault":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[70,113,114],"tindex":"c81abc52-dbe0-11e4-87b4-63c3d7a60769","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"c81abc53-dbe0-11e4-87b4-a77b7fce8e95","variableMapping":{"newAdjIndex":"speed","newBaseIndex":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-2},{"failures":[],"tindex":"c81abc54-dbe0-11e4-87b4-75c76fe77198","variableMapping":{"dijkstra":"this","finishedFrom":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:280","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.routing.DijkstraBidirectionRef.boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[19,109,110,111,112],"tindex":"c81abc55-dbe0-11e4-87b4-17bc6da19058","variableMapping":{"time":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"c81abc56-dbe0-11e4-87b4-7f046f6e12d9","variableMapping":{"edgeId":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[0,127,5,7,9,128,129,130,131,132,133,134,135,136,137,138,139,140,141,81,142,143,144,145,146,147,148,82,83,84,149,85,150,151,152,86,87,153,154,155,156,157,158,88,89,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"c81abc57-dbe0-11e4-87b4-7373d44ea5eb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[0,127,1,2,3,5,6,7,8,10,11,178,179,180,181,182,183,70,184,113,114,185,186],"tindex":"c81abc58-dbe0-11e4-87b4-5f167cce518a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-1},{"failures":[],"tindex":"c81ae369-dbe0-11e4-87b4-7b6a6fc1e1d9","variableMapping":{"str":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[187,188,189,190,191,192,193,194,195,196],"tindex":"c81ae36a-dbe0-11e4-87b4-977cdbd18f82","variableMapping":{"orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[4,9,13,18,19],"tindex":"c81ae36b-dbe0-11e4-87b4-1f605103cd16","variableMapping":{"tmpNo":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"c81ae36c-dbe0-11e4-87b4-47ec782ebb5c","variableMapping":{"segmentsToMap":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":0},{"failures":[],"tindex":"c81ae36d-dbe0-11e4-87b4-4de824c459cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"c81ae36e-dbe0-11e4-87b4-8dbca4194418","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[70,114],"tindex":"c81ae36f-dbe0-11e4-87b4-8163cbdbe698","variableMapping":{"foundIndex":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"c81b3190-dbe0-11e4-87b4-8f727b4546b3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[],"tindex":"c81b3191-dbe0-11e4-87b4-4f49fa8dcd45","variableMapping":{"initLeafSize":"importance","maxLeafEntries":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[184],"tindex":"c81b3192-dbe0-11e4-87b4-a774e9d2a7ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"c81b58a3-dbe0-11e4-87b4-7fb08afe35ed","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"c81b58a4-dbe0-11e4-87b4-65443dde35fd","variableMapping":{"c":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"c81b58a5-dbe0-11e4-87b4-29701770b14f","variableMapping":{"strLen":"shift","res":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"c81b58a6-dbe0-11e4-87b4-f3745e6b42e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[197,198,199,200,201,29,202,203,204,205,206,207,208,209],"tindex":"c81b58a7-dbe0-11e4-87b4-0de4213e2e48","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[187,188,189,190,193,194,196],"tindex":"c81b58a8-dbe0-11e4-87b4-b757ead64cfe","variableMapping":{"res":"bits","maxBit":"bits","value":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-1},{"failures":[198,210,205,211,207,212,209,213],"tindex":"c81b58a9-dbe0-11e4-87b4-65da699e6c22","variableMapping":{"cap":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[],"tindex":"c81b58aa-dbe0-11e4-87b4-a754193bebf4","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","cost":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"c81b58ab-dbe0-11e4-87b4-879a762238a6","variableMapping":{"res":"turnRestrictionBit","value":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"c81b7fbc-dbe0-11e4-87b4-535625efb037","variableMapping":{"currentEntry":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[184,71],"tindex":"c81b7fbd-dbe0-11e4-87b4-c9045f935441","variableMapping":{"periodicUpdates":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[0,127,1,2,3,4,5,214,6,7,8,9,215,10,11,216,217,178,179,180,181,182,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,234,235,235,236,237,12,13,14,15,16,17,18,19,20,238,21,22,23,24,239,25,240,241,242,243,244,245,246,247,70,248,184,71,113,114,249,250,251,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,185,185,260,260,261,261,262,262,263,263,264,265,197,198,199,266,267,200,201,268,269,26,210,270,186,27,28,271,272,29,273,202,203,204,274,205,206,275,211,276,277,278,279,280,207,208,212,281,282,209,283,128,129,284,285,286,287,288,72,289,290,291,292,293,294,295,73,296,74,75,297,76,298,299,300,77,78,301,302,303,304,305,306,79,80,307,308,309,310,311,312,313,314,315,37,38,316,39,317,40,41,42,43,318,44,45,46,47,48,49,50,130,51,52,319,320,321,322,131,323,324,325,132,133,134,135,136,137,326,327,328,329,138,330,331,53,332,54,55,56,57,333,58,59,60,61,62,63,64,139,65,66,140,141,81,142,143,144,145,146,147,148,82,334,83,84,149,85,150,151,152,86,87,153,154,155,156,157,158,88,89,159,160,161,162,163,164,165,166,167,168,169,335,170,171,336,337,338,339,340,90,341,342,343,344,345,346,347,91,348,92,93,349,94,350,351,352,95,96,353,354,355,356,357,358,97,98,359,360,361,362,363,364,365,366,367,368,172,369,173,370,371,372,373,213,374,375,174,99,376,175,176,377,378,379,380,381,100,382,383,384,385,386,387,388,101,389,102,103,390,104,391,392,393,105,106,394,395,396,397,398,399,107,108,400,401,402,403,404,405,406,407,408,409,410,177],"tindex":"c81ba6ce-dbe0-11e4-87b4-3da35cf9a16f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[25,184,71],"tindex":"c81ba6cf-dbe0-11e4-87b4-751d82c28b4f","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"c81ba6d0-dbe0-11e4-87b4-f3579852e09a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[25,70,184,71,72,73,74,75,77,79,80,81,82,83,84,86,88,89,90,91,92,93,95,97,98,100,101,102,103,105,107,108],"tindex":"c81ba6d1-dbe0-11e4-87b4-e75294975bde","variableMapping":{"length":"len","factor":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[],"tindex":"c81ba6d2-dbe0-11e4-87b4-b3a9da117b18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"c81ba6d3-dbe0-11e4-87b4-51e35e77f025","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[19,411,412,116,413,414,415,416,111,417,418,119,419,420,421,122,422,423,424,425,426,125,427,428,429,430,431],"tindex":"c81bcde4-dbe0-11e4-87b4-4bbc07409d40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[187,188,189,190,191,192,193,194,195,196,317,332],"tindex":"c81bcde5-dbe0-11e4-87b4-f76eba4bc82c","variableMapping":{"r":"lat","angle":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"c81bcde6-dbe0-11e4-87b4-dbea52aa2c15","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[2,4,5,10,218,224,236,237,12,13,14,16,19,20,21,23,25,70,184,113,114,251,257,185,197,198,199,266,268,210,186,27,28,272,202,204,274,205,211,276,207,212,282,209,128,287,288,72,295,296,298,304,307,310,314,52,324,331,66,140,141,81,148,334,150,156,159,162,166,168,170,339,340,90,347,348,350,356,359,362,366,175,380,381,100,388,389,391,397,400,403,407],"tindex":"c81bcde7-dbe0-11e4-87b4-13ca6c366cc5","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,187,188,26,27,28,29,189,190,191,192,193,194,195,432,433,196,34,37,38,39,317,40,41,42,43,318,44,45,46,47,48,49,50,130,51,52,53,332,54,55,56,57,333,58,59,60,61,62,63,64,139,65,66],"tindex":"c81bcde8-dbe0-11e4-87b4-87ebf28ebb4b","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"c81bcde9-dbe0-11e4-87b4-638f4ed04ae9","variableMapping":{"currentBucket":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-3},{"failures":[201,202,204],"tindex":"c81bcdea-dbe0-11e4-87b4-b732db951a9a","variableMapping":{"shiftSum":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-1},{"failures":[],"tindex":"c81bcdeb-dbe0-11e4-87b4-ff00941ebd91","variableMapping":{"workerThreads":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[],"tindex":"c81bcdec-dbe0-11e4-87b4-092ce072e7dc","variableMapping":{"weightLong":"nanoTime","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"nanoTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[70,113,114],"tindex":"c81bcded-dbe0-11e4-87b4-0dea5554ba43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[434],"tindex":"c81bcdee-dbe0-11e4-87b4-6b7547247e95","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[435],"tindex":"c81bcdef-dbe0-11e4-87b4-01c0091a466e","variableMapping":{"str":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[411,425],"tindex":"c81bcdf0-dbe0-11e4-87b4-03cc7aeb433f","variableMapping":{"line":"highway","key":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"c81bcdf1-dbe0-11e4-87b4-3ba028bad433","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c81bcdf2-dbe0-11e4-87b4-99884e497c1f","variableMapping":{"from":"index","end":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":0},{"failures":[],"tindex":"c81bcdf3-dbe0-11e4-87b4-b1b6fe77d513","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[0,127,1,2,5,6,8,218,221,197,198,199,266,267,200,201,268,269,26,210,270,186,27,28,271,272,29,273,202,203,204,274,205,206,275,211,276,277,278,279,280,207,208,212,282,209,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,372,213,374,175,378,380,381,100,382,383,384,385,386,387,388,102,103,104,391,393,105,106,394,397,399,107,108,400,402,403,405,407,408],"tindex":"c81bf504-dbe0-11e4-87b4-ad5b2953c70b","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1432","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.loadEdgesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"c81bf505-dbe0-11e4-87b4-a5a89d55ce26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"c81bf506-dbe0-11e4-87b4-f568bec72511","variableMapping":{"maxSpeed":"lat2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[],"tindex":"c81bf507-dbe0-11e4-87b4-317450d0bb85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[238,411,412,116,413,414,415,416,417,418,119,419,420,421,122,422,423,424,425,426,125,427,428,429,430,431],"tindex":"c81bf508-dbe0-11e4-87b4-c5ad3e413993","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-1},{"failures":[436],"tindex":"c81bf509-dbe0-11e4-87b4-9b909aa11acc","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"c81bf50a-dbe0-11e4-87b4-3711059b0ccc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"c81bf50b-dbe0-11e4-87b4-7932889a8d22","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[238,115,411,437,116,438,439,440,414,441,117,416,417,118,119,442,443,444,420,445,120,446,122,123,447,448,423,449,124,425,450,125,451,452,453,428,454,126],"tindex":"c81bf50c-dbe0-11e4-87b4-093447166a92","variableMapping":{"index":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"c81bf50d-dbe0-11e4-87b4-3f17376a382b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"c81bf50e-dbe0-11e4-87b4-39ccf64e3121","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"c81bf50f-dbe0-11e4-87b4-b1b4e754eb82","variableMapping":{"fromX":"fwdDecline","toX":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"c81bf510-dbe0-11e4-87b4-a55d881a529e","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c81bf511-dbe0-11e4-87b4-9f12f844f145","variableMapping":{"shiftSum":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[8,455],"tindex":"c81bf512-dbe0-11e4-87b4-a102929ec74e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"c81bf513-dbe0-11e4-87b4-791d60d6370f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"c81bf514-dbe0-11e4-87b4-4935b771040d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"c81bf515-dbe0-11e4-87b4-69470a30ccb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"c81bf516-dbe0-11e4-87b4-b96e61718d33","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[202,275,211,207,282,372],"tindex":"c81bf517-dbe0-11e4-87b4-03f928a2238b","variableMapping":{"high":"dir","len":"flags","start":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[456],"tindex":"c81c1c28-dbe0-11e4-87b4-d5aad5f5aea8","variableMapping":{"str":"str","lonInt":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:282","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"0\" : \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"c81c1c29-dbe0-11e4-87b4-c7b9c804b0f6","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.PREFER","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[187,188,26,189,190,191,192,194,195,432,433,196,34,39,318,45,46,53,333,59,60],"tindex":"c81c1c2a-dbe0-11e4-87b4-e929447b4d13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"c81c1c2b-dbe0-11e4-87b4-3bccdc28aa64","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:281","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":0},{"failures":[],"tindex":"c81c1c2c-dbe0-11e4-87b4-279b46a8e3ad","variableMapping":{"edgeCount":"removed","this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureEdgeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"c81c1c2d-dbe0-11e4-87b4-a3cd056fd07a","variableMapping":{"mask":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-2},{"failures":[],"tindex":"c81c1c2e-dbe0-11e4-87b4-bbce402b9df7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:111","type":"CtLocalVariableImpl","sourcecode":"byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int))"},"status":-2},{"failures":[],"tindex":"c81c1c2f-dbe0-11e4-87b4-0d38d1289dfd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[457],"tindex":"c81da2d0-dbe0-11e4-87b4-8dc5e9503be0","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[187,188,189,190,192,193,194,195,196],"tindex":"c81da2d1-dbe0-11e4-87b4-17cfe2e062e4","variableMapping":{"high":"spatialKey","low":"bits","guess":"spatialKey","guessedKey":"spatialKey","key":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"c81dc9e2-dbe0-11e4-87b4-a5ec9bbf7420","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"c81dc9e3-dbe0-11e4-87b4-35ce6404906d","variableMapping":{"size":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"c81dc9e4-dbe0-11e4-87b4-6980fbaf16c1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"c81dc9e5-dbe0-11e4-87b4-211ad4f57a15","variableMapping":{"distInMeter":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"c81dc9e6-dbe0-11e4-87b4-f33046c4209b","variableMapping":{"intVal":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":399,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":273,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":174,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":141,"com.graphhopper.reader.OSMReaderTest.testFerry":12,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":224,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":225,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":41,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":127,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":91,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":235,"com.graphhopper.coll.CompressedArrayTest.testCompress":188,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":313,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":153,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":296,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":212,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":206,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":450,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":210,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":325,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":423,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":217,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":113,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":199,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":269,"com.graphhopper.coll.BitSetImplTest.testCopy":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":55,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":125,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":168,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":432,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":380,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":209,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":56,"com.graphhopper.reader.OSMReaderTest.testSort":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":454,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":171,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":308,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":164,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":185,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":361,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":30,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":398,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":293,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":169,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":412,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":339,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":421,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":44,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":28,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":43,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":200,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":100,"com.graphhopper.coll.OSMIDMapTest.testGetLong":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":267,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":341,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":392,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":175,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":105,"com.graphhopper.coll.CompressedArrayTest.testCompress2":187,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":118,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":348,"com.graphhopper.GraphHopperAPITest.testLoad":10,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":379,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":74,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":72,"com.graphhopper.storage.LevelGraphStorageTest.testClone":383,"com.graphhopper.reader.OSMReaderTest.testBarriers":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":340,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":144,"com.graphhopper.util.GHUtilityTest.testCopy":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":52,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":31,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":131,"com.graphhopper.routing.PathTest.testFindInstruction":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":422,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":90,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":218,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":455,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":404,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":437,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":309,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":298,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":279,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":376,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":145,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":285,"com.graphhopper.util.InstructionListTest.testWayList2":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":62,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":314,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":426,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":425,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":35,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":245,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":85,"com.graphhopper.storage.RAMDirectoryTest.testSynched":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":92,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":201,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":288,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":203,"com.graphhopper.coll.OSMIDMapTest.testGet":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":347,"com.graphhopper.routing.PathBidirRefTest.testExtract":264,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":242,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":451,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":88,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":66,"com.graphhopper.util.GHUtilityTest.testSort2":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":271,"com.graphhopper.reader.OSMReaderTest.testMain":14,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":427,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":49,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":336,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":389,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":104,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":407,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":431,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":102,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":115,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":393,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":24,"com.graphhopper.storage.StorablePropertiesTest.testStore":173,"com.graphhopper.storage.GraphHopperStorageTest.testClone":290,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":160,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":172,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":297,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":146,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":374,"com.graphhopper.routing.PathTest.testTime":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":444,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":405,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":384,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":87,"com.graphhopper.reader.OSMReaderTest.testRelation":238,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":396,"com.graphhopper.util.GHUtilityTest.testSortDirected":223,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":441,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":256,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":446,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":133,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":318,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":417,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":266,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":150,"com.graphhopper.search.NameIndexTest.testCreate":229,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":253,"com.graphhopper.routing.QueryGraphTest.testOneWay":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":139,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":447,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":54,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":189,"com.graphhopper.reader.OSMReaderTest.testWithBounds":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":248,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":154,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":416,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":381,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":377,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":424,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":355,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":350,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":287,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":198,"com.graphhopper.util.InstructionListTest.testWayList":180,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":311,"com.graphhopper.GraphHopperAPITest.testDisconnected179":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":147,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":193,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":237,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":166,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":292,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":134,"com.graphhopper.routing.util.EncodedValueTest.testSwap":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":69,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":304,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":67,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":442,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":428,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":274,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":429,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":283,"com.graphhopper.routing.PathTest.testWayList":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":436,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":456,"com.graphhopper.coll.OSMIDMapTest.testGet2":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":205,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":400,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":354,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":299,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":45,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":418,"com.graphhopper.util.GHUtilityTest.testSort":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":157,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":453,"com.graphhopper.search.NameIndexTest.testPut":227,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":317,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":322,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":137,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":328,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":246,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":326,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":335,"com.graphhopper.storage.MMapDirectoryTest.testSynched":409,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":70,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":158,"com.graphhopper.routing.PathTest.testFound":249,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":9,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":183,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":402,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":435,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":452,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":93,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":228,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":334,"com.graphhopper.util.InstructionListTest.testEmptyList":178,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":449,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":272,"com.graphhopper.reader.PrinctonReaderTest.testRead":236,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":310,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":42,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":82,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":190,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":140,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":438,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":411,"com.graphhopper.reader.OSMReaderTest.testFoot":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":156,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":233,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":59,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":195,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":406,"com.graphhopper.reader.OSMReaderTest.testOneWay":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":60,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":75,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":80,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":360,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":448,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":152,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":278,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":282,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":276,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":329,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":149,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":255,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":239,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":284,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":177,"com.graphhopper.routing.PathBidirRefTest.testExtract2":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":63,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":420,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":226,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":306,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":138,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":120,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":440,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":57,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":307,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":386,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":301,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":119,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":342,"com.graphhopper.storage.StorablePropertiesTest.testLoad":370,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":202,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":81,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":21,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":375,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":182,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":305,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":151,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":401,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":108,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":170}}]
