[{"failures":[],"tindex":"295fefc7-da41-11e4-98b8-9f5d4ea8441f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[0,1],"tindex":"29612848-da41-11e4-98b8-3101907bcadd","variableMapping":{"angle":"speed","com.graphhopper.util.AngleCalc.PI3_4":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"29612849-da41-11e4-98b8-99352f61cae4","variableMapping":{"mGarbage":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[],"tindex":"29614f5a-da41-11e4-98b8-55c69247a63c","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[14,2,15,4,16,17,10,11,12],"tindex":"29614f5b-da41-11e4-98b8-758bb53b837d","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,14,44,45,46,47,48,49,50,2,15,51,52,53,54,55,3,4,5,56,16,17,6,57,58,59,60,61,7,8,9,62,10,63,11,64,12,65,13,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"29619d7c-da41-11e4-98b8-878d75c1cea2","variableMapping":{"size":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"29619d7d-da41-11e4-98b8-9dbbef3a33df","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[311,312,313,314,315,316,317,318,319,320,321],"tindex":"29619d7e-da41-11e4-98b8-830dbddaa407","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[322,323,324,325,326,327,86,91],"tindex":"29619d7f-da41-11e4-98b8-ed9396e5a326","variableMapping":{"high":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[],"tindex":"29619d80-da41-11e4-98b8-4946c19c3a8a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[328,329,330,130,136,138,139,149,155,157,158,331,332,333,334,335,336,337,338,339],"tindex":"29619d81-da41-11e4-98b8-0ba4d316e9c0","variableMapping":{"encoded":"hash","backwardBit":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[257],"tindex":"29619d82-da41-11e4-98b8-f7fcb5c92791","variableMapping":{"max":"segmentSizeInBytes","tmpSize":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"29619d83-da41-11e4-98b8-c5a1fca51b11","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[340],"tindex":"29619d84-da41-11e4-98b8-4b9d8cadeeb9","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:136","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"29619d85-da41-11e4-98b8-079234d2bad7","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"29619d86-da41-11e4-98b8-9d37d632eb45","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[341,342,340,343,344,326,345,41,346,347,348,349,350,351,327,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,55,3,4,5,56,16,17,6,57,58,59,60,61,7,8,9,62,10,63,11,64,12,65,13,66,368,369,370,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,104,108,109,117,129,145,164,165,371,166,167,168,169,170,372,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,373,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,374,375,376,377,378,379,380,381,382,383,384,259,385,386,387,388,389,390,391,392,393,394,395,396,397,398,260,399,400,401,402,403,404,405,406,407,408,409,261,262,263,264,265,266,267,268,269,270,271,272,410,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"2961c497-da41-11e4-98b8-3751e7484ef4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[99,105,106,107,109,411,412,165,167,210,266,269],"tindex":"2961c498-da41-11e4-98b8-8141d06cbcf4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[413,311,414,415,314,416,417,317,418,419,320,420],"tindex":"2962aef9-da41-11e4-98b8-03beacaf5166","variableMapping":{"edgeId":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"2962aefa-da41-11e4-98b8-bbf449d27d7a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"2962aefb-da41-11e4-98b8-6946ef8a9132","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"2962aefc-da41-11e4-98b8-51d96695b290","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[23,24,421,422],"tindex":"2962aefd-da41-11e4-98b8-7f08a80647d9","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"frontIndex","speed":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[19,21,23,24,31,32,35,36,119,120,121,123],"tindex":"2962aefe-da41-11e4-98b8-b7719b88c35c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"2962aeff-da41-11e4-98b8-ad4512394d5a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[346,349,350,83,99,104,108],"tindex":"2962d610-da41-11e4-98b8-3d00c02912da","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"2962d611-da41-11e4-98b8-a33bb8790f38","variableMapping":{"encoded":"hash","backwardBit":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":0},{"failures":[],"tindex":"2962d612-da41-11e4-98b8-ebb1e75a05a8","variableMapping":{"offset":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[],"tindex":"2962d613-da41-11e4-98b8-1b8035fe6991","variableMapping":{"this":"this","value":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.round((double * 100))) / 100"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[],"tindex":"2962d614-da41-11e4-98b8-811fb29ddbef","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"maxTurnCosts","nodeId":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-2},{"failures":[322,323,324,325,326],"tindex":"2962d615-da41-11e4-98b8-1f290cbe2079","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"2962d616-da41-11e4-98b8-2391d0f9510f","variableMapping":{"forwardBit":"flags","way":"way","encoded":"flags","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:589","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":0},{"failures":[],"tindex":"2962d617-da41-11e4-98b8-f36797f701d1","variableMapping":{"incEleSum":"speed","eleDelta":"speed","incDist2DSum":"speed","decEleSum":"speed","fullDist2D":"speed","decDist2DSum":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[],"tindex":"2962d618-da41-11e4-98b8-37e65e2f0218","variableMapping":{"this":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1063","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.getGraphHopperLocation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-2},{"failures":[],"tindex":"2962d619-da41-11e4-98b8-7fbefd565e4d","variableMapping":{"pavementName":"valueStr","wayTypeName":"valueStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"2962d61a-da41-11e4-98b8-5129bfa84a27","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[],"tindex":"2962d61b-da41-11e4-98b8-b1b5ab599619","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"2962d61c-da41-11e4-98b8-c5316b4f7b1c","variableMapping":{"values":"elem","n":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[],"tindex":"2962d61d-da41-11e4-98b8-dd897fd6055c","variableMapping":{"fwdFaster":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"2962d61e-da41-11e4-98b8-03c219c15b1f","variableMapping":{"distInMeter":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[29,423,341,353,354,358,359,360,82,83,84,85,86,87,88,89,90,91,92,93,94,424,95,100,101,102,103,104,105,106,107,109],"tindex":"2962fd2f-da41-11e4-98b8-cdf71b7bf3eb","variableMapping":{"size":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","index":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"2962fd30-da41-11e4-98b8-3128db24c08a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[35],"tindex":"2962fd31-da41-11e4-98b8-6b9eee0d9ebe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[346,83,104],"tindex":"2962fd32-da41-11e4-98b8-5379a2ee9990","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"2962fd33-da41-11e4-98b8-2d93dc27591f","variableMapping":{"a_lon_deg":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","factor":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[14,45,2,15,54,55,3,4,5,56,16,17,6,57,58,59,60,61,7,8,9,62,10,11,64,12,65,13,101,102,103,104,105,107,108,110,111],"tindex":"2962fd34-da41-11e4-98b8-99cd4c106625","variableMapping":{"elevation":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[311,312,313,314,315,316,317,318,319,320,321],"tindex":"2962fd35-da41-11e4-98b8-57bcea9dbc95","variableMapping":{"workerThreads":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"2962fd36-da41-11e4-98b8-33ed391dc4ee","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"2962fd37-da41-11e4-98b8-4581be6207da","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[311,312,313,314,315,316,317,318,319,320,321],"tindex":"2962fd38-da41-11e4-98b8-4355f5eb3d3b","variableMapping":{"red":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"2962fd39-da41-11e4-98b8-c73a961342ed","variableMapping":{"width":"length","i":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"2962fd3a-da41-11e4-98b8-3f087a71f3d9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"2962fd3b-da41-11e4-98b8-cd4dadeed3ed","variableMapping":{"len":"flags","start":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[29,341,353,358,94],"tindex":"2962fd3c-da41-11e4-98b8-73d5d39d01d8","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"2962fd3d-da41-11e4-98b8-81fd2b035af4","variableMapping":{"latSize":"segmentSizePower","lonSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"2962fd3e-da41-11e4-98b8-79bdf1a62891","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"2963244f-da41-11e4-98b8-65e9f4e59737","variableMapping":{"graph":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1032","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[312,315,318,321],"tindex":"29632450-da41-11e4-98b8-7feaa1d863bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[14,45,46,47,2,15,51,52,53,54,55,3,4,5,56,16,17,6,57,58,59,60,61,7,8,9,62,10,63,11,64,12,65,13,99,100,101,102,105,106,108],"tindex":"29632451-da41-11e4-98b8-e9f779fb28f6","variableMapping":{"tmp":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"29632452-da41-11e4-98b8-7778cb412b03","variableMapping":{"maxMCSpeed":"orientation","speed":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[344,39,40,55,59,79,263],"tindex":"29632453-da41-11e4-98b8-6d22855067a3","variableMapping":{"red":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"29632454-da41-11e4-98b8-07c71a5698e3","variableMapping":{"size":"nanoTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[29,354,360,83,84,86,89,90,91,92,93,95,101,102,103,104,105,107],"tindex":"29632455-da41-11e4-98b8-79c1cfb37db5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"29632456-da41-11e4-98b8-4f202bc8ca98","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[45,2,53,3,5,6,58,61,62,63,11,64,12,65,13,101],"tindex":"29632457-da41-11e4-98b8-e3cacbde1743","variableMapping":{"size":"tmpPrevEdge","hash":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"29632458-da41-11e4-98b8-e190b382c94e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"29632459-da41-11e4-98b8-11dffd5ad44c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"2963245a-da41-11e4-98b8-3d520ba2a072","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"2963245b-da41-11e4-98b8-9364fe03d44d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[58,10,84,85,86,101,102,103,104,105,107,108,110,111,328,329,330,130,133,136,138,139,149,152,155,157,158,331,332,333,334,335,336,337,338,339],"tindex":"2963245c-da41-11e4-98b8-87dee10fcd79","variableMapping":{"java.lang.Double.MAX_VALUE":"minLonTmp","existingDirectWeight":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[425],"tindex":"29634b6d-da41-11e4-98b8-89fa6602dbdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[17,11,261,264,265,272,273,274,275,276,277,278,279,280,281,282,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"29634b6e-da41-11e4-98b8-f7ba3a0258cb","variableMapping":{"ret":"I_SKIP_EDGE1","retBucket":"I_SKIP_EDGE1","i":"I_SKIP_EDGE1","bucketSize":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"29634b6f-da41-11e4-98b8-37e28bd17581","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"29634b70-da41-11e4-98b8-2d393cc10d28","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"29634b71-da41-11e4-98b8-7775f997de19","variableMapping":{"size":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"29634b72-da41-11e4-98b8-d5105f00acf5","variableMapping":{"byteCount":"bytePos","longSegmentSize":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[29,354,360,83,84,86,89,90,91,92,93,95,101,102,103,104,105,107],"tindex":"29634b73-da41-11e4-98b8-5d4b55ab37f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"29634b74-da41-11e4-98b8-39d152b958ed","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","highway":"highway","way":"way","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"29634b75-da41-11e4-98b8-7d7ed53f7cea","variableMapping":{"ab_rb":"epsilon","ab_ar":"d2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[426,427,27,28,29,81],"tindex":"29634b76-da41-11e4-98b8-abc9b85b28b4","variableMapping":{"defaultUTurnCost":"resultOrientation","weight":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[33,37,38],"tindex":"29634b77-da41-11e4-98b8-8d78547bd5d7","variableMapping":{"allBits":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"29634b78-da41-11e4-98b8-a3a5a5b18a95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"29634b79-da41-11e4-98b8-41d569a15086","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"29634b7a-da41-11e4-98b8-8737e9da8732","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":0},{"failures":[20,26,27,28,31,32,33,34,35,36,37,42,43,45,46,47,48,49,2,51,53,54,55,4,5,17,59,60,9,10,11,64,12,13,70,96,110,111,165,167,172,173,176,180,187,189,195,197,200,202,207,210,215,216,219,223,230,232,238,240,243,245,250,375,376,379,383,389,391,397,260,401,403,408,269,274,275,278,282,289,291,297,299,302,304,309],"tindex":"2963728b-da41-11e4-98b8-87e8751b2e0d","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"2963728c-da41-11e4-98b8-490332f9c8df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[311,428,312,429,430,431,432,313,314,433,315,434,316,317,435,318,436,437,438,439,319,320,440,321,441,442],"tindex":"2963728d-da41-11e4-98b8-05f86470153c","variableMapping":{"i":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[],"tindex":"2963728e-da41-11e4-98b8-017976990100","variableMapping":{"entries":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[],"tindex":"2963728f-da41-11e4-98b8-8d7e490bdb11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[14,45,46,47,2,15,51,52,53,54,55,3,4,5,56,16,17,6,57,58,59,60,61,7,8,9,62,10,63,11,64,12,65,13,99,100,101,102,105,106,108],"tindex":"29637290-da41-11e4-98b8-cf173e2d4b07","variableMapping":{"tmp":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"29637291-da41-11e4-98b8-e1daa27af321","variableMapping":{"size":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"29637292-da41-11e4-98b8-45155a5c1f69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[349],"tindex":"29637293-da41-11e4-98b8-ef37f80bc60f","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"29637294-da41-11e4-98b8-e35fef840462","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"29637295-da41-11e4-98b8-79be3d92efb2","variableMapping":{"daType":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"29637296-da41-11e4-98b8-f30364a7890d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[18,19,20,21,443,22,23,24,25,26,27,28,29,30,31,32,423,341,33,34,35,36,37,38,342,340,444,445,446,326,345,41,346,347,348,349,350,351,327,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,42,43,367,14,44,447,45,46,47,48,49,50,2,15,51,52,53,54,55,3,4,5,56,16,17,6,57,58,59,60,61,7,8,9,62,10,63,11,64,12,65,13,66,67,68,69,70,71,72,73,74,75,76,77,368,369,78,79,80,81,370,82,83,84,85,86,87,88,89,90,91,92,93,94,424,95,96,97,98,99,100,101,102,103,104,105,448,106,107,109,449,110,111,450,112,113,114,115,451,116,117,119,120,121,122,452,123,124,125,126,127,453,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,454,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,455,163,164,165,371,166,167,168,169,170,372,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,373,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,374,375,376,377,378,379,380,381,382,383,384,259,385,386,387,388,389,390,391,392,393,394,395,396,397,398,260,399,400,401,402,403,404,405,406,407,408,409,261,262,263,264,265,266,267,268,269,270,271,272,410,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"296399a7-da41-11e4-98b8-4bacafe7cf82","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[],"tindex":"296399a8-da41-11e4-98b8-3719e3a2e0f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"296399a9-da41-11e4-98b8-1968662388a8","variableMapping":{"fromX":"minLat","toX":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":63,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":67,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":266,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":423,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":126,"com.graphhopper.GraphHopperAPITest.testNoLoad":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":375,"com.graphhopper.reader.OSMReaderTest.testFerry":82,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":31,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":0,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":152,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":100,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":181,"com.graphhopper.coll.CompressedArrayTest.testCompress":329,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":47,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":394,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":51,"com.graphhopper.GraphHopperTest.testPrepare":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":14,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":232,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":312,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":24,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":149,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":415,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":57,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":224,"com.graphhopper.coll.BitSetImplTest.testCopy":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":133,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":314,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":165,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":337,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":54,"com.graphhopper.GraphHopperTest.testLoadOSM":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":140,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":255,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":134,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":444,"com.graphhopper.reader.OSMReaderTest.testSort":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":35,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":168,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":244,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":210,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":406,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":73,"com.graphhopper.routing.DijkstraTest.initializationError":366,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":202,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":298,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":221,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":371,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":171,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":156,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":8,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":154,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":56,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":275,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":191,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":290,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":269,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":292,"com.graphhopper.coll.CompressedArrayTest.testCompress2":328,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":417,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":182,"com.graphhopper.GraphHopperAPITest.testLoad":110,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":410,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":254,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":326,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":226,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":216,"com.graphhopper.storage.LevelGraphStorageTest.testClone":277,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":38,"com.graphhopper.reader.OSMReaderTest.testBarriers":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":172,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":6,"com.graphhopper.util.GHUtilityTest.testCopy":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":164,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":453,"com.graphhopper.routing.PathTest.testFindInstruction":81,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":428,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":173,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":349,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":125,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":245,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":230,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":186,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":268,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":343,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":367,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":279,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":380,"com.graphhopper.util.InstructionListTest.testWayList2":28,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":141,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":250,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":313,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":432,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":39,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":211,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":183,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":17,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":215,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.routing.AStarTest.initializationError":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":180,"com.graphhopper.routing.PathBidirRefTest.testExtract":42,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":350,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":399,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":323,"com.graphhopper.util.GHUtilityTest.testSort2":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":9,"com.graphhopper.reader.OSMReaderTest.testMain":84,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":270,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":433,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":161,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":297,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":403,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":284,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":288,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":421,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":309,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":431,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":70,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":195,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":419,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":291,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":94,"com.graphhopper.storage.StorablePropertiesTest.testStore":411,"com.graphhopper.storage.GraphHopperStorageTest.testClone":218,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":402,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":360,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":358,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":261,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":381,"com.graphhopper.routing.PathTest.testTime":79,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":307,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":365,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":452,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":143,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":393,"com.graphhopper.reader.OSMReaderTest.testRelation":442,"com.graphhopper.util.GHUtilityTest.testSortDirected":22,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":69,"com.graphhopper.GraphHopperTest.testFootOnly":108,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":155,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":389,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":66,"com.graphhopper.routing.QueryGraphTest.testOneWay":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":454,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":132,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":331,"com.graphhopper.reader.OSMReaderTest.testWithBounds":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":34,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":386,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":395,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":437,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":274,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":429,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":194,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":187,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":214,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":3,"com.graphhopper.util.InstructionListTest.testWayList":27,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":247,"com.graphhopper.GraphHopperAPITest.testDisconnected179":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":382,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":377,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":408,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":103,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":220,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":121,"com.graphhopper.routing.util.EncodedValueTest.testSwap":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":52,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":238,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":61,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":368,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":15,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":170,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":65,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":373,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":455,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":434,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":209,"com.graphhopper.routing.PathTest.testWayList":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":407,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":13,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":193,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":178,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":157,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":289,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":316,"com.graphhopper.util.GHUtilityTest.testSort":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":398,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":207,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":372,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":127,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":150,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":123,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":114,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":1,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":112,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":324,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":188,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":33,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":287,"com.graphhopper.routing.PathTest.testFound":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":260,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":109,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":344,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":304,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":263,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":184,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":259,"com.graphhopper.util.InstructionListTest.testEmptyList":25,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":7,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":364,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":352,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":327,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":62,"com.graphhopper.reader.PrinctonReaderTest.testRead":96,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":153,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":179,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":374,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":189,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":439,"com.graphhopper.reader.OSMReaderTest.testFoot":83,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":138,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":336,"com.graphhopper.reader.OSMReaderTest.testOneWay":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":139,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":227,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":242,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":201,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":236,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":391,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":48,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":115,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":387,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":68,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":212,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":424,"com.graphhopper.routing.PathBidirRefTest.testExtract2":43,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":318,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":240,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":451,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":418,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":89,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":409,"com.graphhopper.util.SimpleIntDequeTest.testPush":422,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":135,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":243,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":443,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":362,"com.graphhopper.GraphHopperTest.testFootAndCar":104,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":235,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":163,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":11,"com.graphhopper.GraphHopperTest.testPrepareOnly":99,"com.graphhopper.GraphHopperTest.testVia":101,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":376,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":91,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":265,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":29,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":239,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":347,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":90,"com.graphhopper.routing.AStarBidirectionTest.initializationError":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":390,"com.graphhopper.util.AngleCalcTest.testCombined":426,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":341,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":303,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":301,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":167}}]
