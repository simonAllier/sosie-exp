[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"feea969e-dada-11e4-a39e-0dc7d708f4f6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[21,22,23,24,5,25,26,27,28,29,30,31],"tindex":"fef1264f-dada-11e4-a39e-97f72bec177f","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"I_LEVEL","speed":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"fef14d60-dada-11e4-a39e-85b867d6776c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"fef14d61-dada-11e4-a39e-b1b168195b28","variableMapping":{"obtained":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"fef14d62-dada-11e4-a39e-5f892a6de50d","variableMapping":{"nodeFlags":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-2},{"failures":[],"tindex":"fef210b3-dada-11e4-a39e-911bb2a9555b","variableMapping":{"size":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"fef237c4-dada-11e4-a39e-49c12408a84f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[32,33,34,35,0,36,37,38,39,1,2,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,3,76,22,23,77,4,24,78,79,5,80,81,82,83,26,27,28,29],"tindex":"fef32225-dada-11e4-a39e-4b36505c30b7","variableMapping":{"importance":"endIndexPlusOne","hash":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"fef40c86-dada-11e4-a39e-d1aeb390c3a6","variableMapping":{"time":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"fef40c87-dada-11e4-a39e-cb92e9dfc3e8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[84,21,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,45,46,47,122,48,49,50,51,123,52,124,125,53,54,55,56,57,58,3,76,22,23,24,78,5,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,25,147,26,148,149,150,27,28,151,152,29,153,154,30,155,156,31],"tindex":"fef40c88-dada-11e4-a39e-651501d240b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[157,158],"tindex":"fef40c89-dada-11e4-a39e-4f579f3d6d2c","variableMapping":{"numTiles":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[159,160,161,162,163,164,165,166,167],"tindex":"fef40c8a-dada-11e4-a39e-19be9337add2","variableMapping":{"cp":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"fef40c8b-dada-11e4-a39e-cfdb30c5dd1b","variableMapping":{"distance":"lon","speed":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[168,169],"tindex":"fef40c8c-dada-11e4-a39e-6b6bf971c220","variableMapping":{"precision":"orientation","lat":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"fef40c8d-dada-11e4-a39e-9572cb535432","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"fef40c8e-dada-11e4-a39e-d372cd0dfdac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"fef40c8f-dada-11e4-a39e-016e59daf50b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"fef40c90-dada-11e4-a39e-07f5efbf8d63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"fef40c91-dada-11e4-a39e-a9394d87e0dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"fef40c92-dada-11e4-a39e-3fb6f358c84a","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[8],"tindex":"fef433a3-dada-11e4-a39e-ad324ddb22e0","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"fef433a4-dada-11e4-a39e-8105c4d7d138","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"fef433a5-dada-11e4-a39e-011906ec7033","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"fef433a6-dada-11e4-a39e-1346574aa59b","variableMapping":{"line":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-2},{"failures":[],"tindex":"fef433a7-dada-11e4-a39e-ab98b1c1565c","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"bitsForEdgeFlags","id":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[],"tindex":"fef433a8-dada-11e4-a39e-d35ec0b9974f","variableMapping":{"intVal":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"fef433a9-dada-11e4-a39e-45b09f1eb9ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[157,170],"tindex":"fef433aa-dada-11e4-a39e-cf7463e6c278","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[],"tindex":"fef433ab-dada-11e4-a39e-a578d49f3781","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[92,101,103,106,107,112,113,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,157,83],"tindex":"fef45abc-dada-11e4-a39e-a373d1927189","variableMapping":{"elem":"a","size":"key","i":"low","element":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-1},{"failures":[],"tindex":"fef4cfed-dada-11e4-a39e-a7704c92c3d6","variableMapping":{"byteCount":"flags","longSegmentSize":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"fef4cfee-dada-11e4-a39e-6b03ab223169","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"fef4cfef-dada-11e4-a39e-897f8fbe8fb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[192],"tindex":"fef4cff0-dada-11e4-a39e-dd670b3ca6bc","variableMapping":{"speedVal":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[21,193,168,194,85,195,196,197,0,36,38,2,40,41,43,44,88,90,91,92,99,198,104,110,114,117,120,199,200,201,202,171,203,204,205,206,207,208,209,210,211,178,212,213,214,215,216,217,218,219,220,221,185,222,223,224,225,226,227,228,229,22,23,77,4,24,79,230,157,81,83,158,231,232,233,126,128,129,130,131,132,134,135,136,138,139,140,141,142,143,145,146,25,147,148,150,27,28,151,152,29,154,155,156,31],"tindex":"fef4f701-dada-11e4-a39e-07d6fbc82514","variableMapping":{"segmentSizeInBytes":"i","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"fef4f702-dada-11e4-a39e-ff90f442616c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[234,132,134,138,143],"tindex":"fef5ba53-dada-11e4-a39e-d517fedeb5c0","variableMapping":{"len":"size","start":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[235],"tindex":"fef5ba54-dada-11e4-a39e-e584286f7f38","variableMapping":{"resultOrientation":"fwdFaster","orientation":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[21,193,168,194,197,36,37,38,39,1,2,40,41,42,43,236,44,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,88,90,108,112,117,119,199,200,201,258,176,208,259,48,49,50,60,61,62,63,65,66,67,219,220,260,190,227,261,22,23,77,24,79,5,262,235,231,263,264,265,232,266,233,267,268,30],"tindex":"fef5e165-dada-11e4-a39e-2bbbf5f6383c","variableMapping":{"len":"bufferIndex","start":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[],"tindex":"fef5e166-dada-11e4-a39e-cf75271e2125","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:134","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"fef5e167-dada-11e4-a39e-a158e9ce76e3","variableMapping":{"nanoTime":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[235],"tindex":"fef5e168-dada-11e4-a39e-7b567f3d0ed0","variableMapping":{"midLat":"incEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"fef5e169-dada-11e4-a39e-3968ddded0b6","variableMapping":{"weightLong":"oldRelationFlags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[269,197,236,198,204,213,223,270,6,271,7,272,273,10,274,275,192,276,277,12,278,279,280,161,281,235,282,16,283,284,285,166,286,287,288,289,290,291,292,231,140,141,148,150,27,31],"tindex":"fef5e16a-dada-11e4-a39e-1b2a3da72732","variableMapping":{"defaultUTurnCost":"factor","weight":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-1},{"failures":[],"tindex":"fef5e16b-dada-11e4-a39e-b1e705052d48","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":-2},{"failures":[],"tindex":"fef5e16c-dada-11e4-a39e-07f4cfa20f11","variableMapping":{"low":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:692","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[293,134,138],"tindex":"fef5e16d-dada-11e4-a39e-f93eaf58579a","variableMapping":{"mGarbage":"found"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[294,295,296,297,298,299,300,301,302],"tindex":"fef5e16e-dada-11e4-a39e-49834273173e","variableMapping":{"resultOrientation":"lat","orientation":"midLat","java.lang.Math.PI":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[159,278,160,161,162,163,283,164,165,166,167],"tindex":"fef6087f-dada-11e4-a39e-ed2abd863700","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"fef60880-dada-11e4-a39e-b32248fe33e2","variableMapping":{"bytePos":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"fef60881-dada-11e4-a39e-a1c950d52047","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[38,39,41,303,304,305,9,306,307,308,309],"tindex":"fef60882-dada-11e4-a39e-0770f13b16ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[32,33,84,310,21,311,312,313,314,193,168,194,269,315,316,85,195,196,197,0,36,37,38,39,1,2,40,317,41,42,43,236,44,293,318,319,86,87,320,321,322,88,323,324,89,325,90,91,92,93,94,95,96,97,98,99,326,198,100,101,102,103,104,327,105,106,107,108,109,328,110,329,111,112,113,114,115,116,117,330,118,119,120,121,199,331,332,200,333,334,335,336,201,202,171,337,338,339,340,341,342,203,343,204,344,172,345,173,205,346,347,174,175,258,348,349,206,350,351,176,177,207,352,353,208,354,355,259,209,356,357,358,359,360,361,362,363,45,46,364,47,122,48,49,50,51,123,52,124,125,53,54,55,56,365,57,58,59,60,61,62,366,63,367,368,369,370,371,372,373,64,374,65,66,67,68,375,69,376,377,70,71,72,73,378,74,75,210,211,178,379,380,381,382,383,384,212,385,213,386,179,387,180,214,388,389,181,182,390,391,392,215,393,394,183,184,216,395,396,217,397,398,399,218,400,401,219,402,403,404,405,220,221,185,406,407,408,409,410,411,222,412,223,413,186,414,187,224,415,416,188,189,260,417,418,225,419,420,190,191,226,421,422,227,423,424,261,228,425,229,426,427,3,76,22,23,77,4,24,428,78,79,5,80,429,304,270,230,6,271,430,7,8,272,305,431,273,432,9,10,433,274,275,11,434,435,436,437,438,439,440,192,157,81,82,83,158,170,276,441,277,442,443,159,12,278,444,13,306,445,446,447,448,449,450,160,279,14,451,452,453,280,454,161,455,307,456,457,458,459,460,162,281,15,461,262,235,462,282,463,464,163,16,283,465,17,308,466,467,468,469,470,471,164,284,18,472,473,19,285,165,166,309,474,475,476,477,478,479,167,286,20,480,481,290,291,482,483,484,485,486,292,231,487,488,489,263,264,490,265,232,266,491,233,267,492,493,268,494,126,127,495,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,25,147,26,148,149,150,27,28,151,152,29,153,154,30,155,156,31],"tindex":"fef62f93-dada-11e4-a39e-358f1d20a0b0","variableMapping":{"str":"entry","d":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:276","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"fef62f94-dada-11e4-a39e-ffd9f11501c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.setProperties(double, boolean, boolean)"},"status":-2},{"failures":[44,496,157,82,83],"tindex":"fef62f95-dada-11e4-a39e-dde7bf3d9e9f","variableMapping":{"i":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"fef8eeb6-dada-11e4-a39e-d526808f0349","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[],"tindex":"fef8eeb7-dada-11e4-a39e-0d1eb61aa1a3","variableMapping":{"currentEntry":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"fef8eeb8-dada-11e4-a39e-011fed7ee8eb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"fef8eeb9-dada-11e4-a39e-751f39781aae","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-2},{"failures":[],"tindex":"fef8eeba-dada-11e4-a39e-4b7d773d95a2","variableMapping":{"currentEntry":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[497,498,499,500,501,502,503,504,505,242,506,507,246,247,250,508,509,254,255,510,511,496,512,331],"tindex":"fef8eebb-dada-11e4-a39e-09fa5cbca619","variableMapping":{"capacity":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[37,513,512,322,332,125,377,401,78,141,25,147,26,148,149,150,27,28,151,152,29,153,30,156,31],"tindex":"fef8eebc-dada-11e4-a39e-f37e01594e83","variableMapping":{"tmpNo":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[269,236,22,273,274,275,287],"tindex":"fef915cd-dada-11e4-a39e-f39fc54dce31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"fef915ce-dada-11e4-a39e-a73252eaf8e3","variableMapping":{"val":"connectedId","com.graphhopper.coll.SparseIntIntArray.DELETED":"start","keys":"nodeLowLink","values":"nodeLowLink","i":"connectedId","o":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"fef915cf-dada-11e4-a39e-bdfd4c394cdb","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"fef915d0-dada-11e4-a39e-63d5b828888e","variableMapping":{"d":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"fef915d1-dada-11e4-a39e-d9b92b62beda","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[277,442,443,278,445,447,448,160,279,451,452,454,455,456,458,162,281,461,282,463,464,283,466,468,469,164,284,472,473,285,166,474,476,477,167,286,480,481,514,515],"tindex":"fef915d2-dada-11e4-a39e-f54843233021","variableMapping":{"res":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[516],"tindex":"fef915d3-dada-11e4-a39e-3d553c2b5d8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"fef915d4-dada-11e4-a39e-d9d499a77fcf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"fef9d925-dada-11e4-a39e-edd236f04c33","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"fef9d926-dada-11e4-a39e-db43620db3fe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"fef9d927-dada-11e4-a39e-69590151f1df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[234,132,134,138,26],"tindex":"fef9d928-dada-11e4-a39e-237340dc27e4","variableMapping":{"i":"lastElem","child":"lastElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[517,518],"tindex":"fef9d929-dada-11e4-a39e-2b06c42a897e","variableMapping":{"currentBucket":"i","currentIndex":"i","bucketSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[],"tindex":"fef9d92a-dada-11e4-a39e-43cbf3d0916a","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":0},{"failures":[],"tindex":"fef9d92b-dada-11e4-a39e-a3805eefe7ce","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"fef9d92c-dada-11e4-a39e-cde82e0dddda","variableMapping":{"factor":"fwdFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"fef9d92d-dada-11e4-a39e-a36a2b7adc58","variableMapping":{"weightApproximation":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"fefa003e-dada-11e4-a39e-b77c895d4168","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.Arrays.java.util.Arrays.asList(com.graphhopper.routing.util.FlagEncoder[]))"},"status":-2},{"failures":[],"tindex":"fefa003f-dada-11e4-a39e-a73092941310","variableMapping":{"foundNext":"partOfCycleRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:809","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"fefa0040-dada-11e4-a39e-dd11559149d1","variableMapping":{"fromDist":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"fefa0041-dada-11e4-a39e-9fa5e8c19b60","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[8],"tindex":"fefac392-dada-11e4-a39e-6b4e11044451","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[519,490],"tindex":"fefac393-dada-11e4-a39e-7f3e64a17714","variableMapping":{"max":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"fefac394-dada-11e4-a39e-0f07b33f8d51","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[520,2,436,521,444,465],"tindex":"fefac395-dada-11e4-a39e-694110c50691","variableMapping":{"intIndex":"maxTurnCosts","len":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"fefac396-dada-11e4-a39e-b1ec62a2cc6a","variableMapping":{"intVal":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[8],"tindex":"fefac397-dada-11e4-a39e-dd9cb4115813","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[318,86,321,45,364],"tindex":"fefac398-dada-11e4-a39e-bb9832c8fbc4","variableMapping":{"currentBucket":"index","currentIndex":"index","bucketSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[157,158,170],"tindex":"fefac399-dada-11e4-a39e-5720facb35bb","variableMapping":{"start":"index","delta":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[514],"tindex":"fefac39a-dada-11e4-a39e-437a981881a0","variableMapping":{"bytePos":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"fefac39b-dada-11e4-a39e-e363b40cec4c","variableMapping":{"err":"len","dLat":"len","tmpErr":"len","x1":"len","sLon":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":0},{"failures":[],"tindex":"fefac39c-dada-11e4-a39e-4b9aa401c116","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"fefac39d-dada-11e4-a39e-57bdf48dfa8a","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"fefaeaae-dada-11e4-a39e-dff3c9de1534","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:413","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":0},{"failures":[522,234,523],"tindex":"fefaeaaf-dada-11e4-a39e-d14f1bd05d13","variableMapping":{"fromNode":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[516],"tindex":"fefaeab0-dada-11e4-a39e-d36f534980b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"fefaeab1-dada-11e4-a39e-391a7b4ccd26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":153,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":264,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":287,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":320,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":359,"com.graphhopper.GraphHopperAPITest.testNoLoad":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":211,"com.graphhopper.reader.OSMReaderTest.testFerry":197,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":315,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":316,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":49,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":76,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":473,"com.graphhopper.storage.MMapDataAccessTest.testSegments":501,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":343,"com.graphhopper.coll.CompressedArrayTest.testCompress":302,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":460,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":130,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":390,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":223,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":364,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":136,"com.graphhopper.GraphHopperTest.testPrepare":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":397,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":126,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":416,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":523,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":148,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":162,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":33,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":158,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":277,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":510,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":147,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":278,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":199,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":90,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":139,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":67,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":440,"com.graphhopper.reader.OSMReaderTest.testSort":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":279,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":82,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":333,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":421,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":219,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":398,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":233,"com.graphhopper.routing.DijkstraTest.initializationError":485,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":520,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":353,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":329,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":410,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":331,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":339,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":163,"com.graphhopper.reader.OSMNodeTest.testSetTags":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":201,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":481,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":52,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":28,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":51,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":145,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":144,"com.graphhopper.coll.OSMIDMapTest.testGetLong":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":345,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":337,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":327,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":88,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":106,"com.graphhopper.coll.CompressedArrayTest.testCompress2":301,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":285,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":204,"com.graphhopper.GraphHopperAPITest.testLoad":229,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":325,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":304,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":413,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":185,"com.graphhopper.storage.LevelGraphStorageTest.testClone":94,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":516,"com.graphhopper.reader.OSMReaderTest.testBarriers":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":202,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":505,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":465,"com.graphhopper.util.GHUtilityTest.testCopy":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":478,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":361,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":256,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":457,"com.graphhopper.routing.PathTest.testFindInstruction":487,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":171,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":522,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":7,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":85,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":330,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":464,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":422,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":224,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":509,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":173,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":470,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":484,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":382,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":404,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":500,"com.graphhopper.util.InstructionListTest.testWayList2":194,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":71,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":228,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":159,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":355,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":262,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":402,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":98,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":506,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":444,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":344,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":146,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":39,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":243,"com.graphhopper.routing.AStarTest.initializationError":483,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":30,"com.graphhopper.coll.OSMIDMapTest.testGet":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":203,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":8,"com.graphhopper.routing.PathBidirRefTest.testExtract":488,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":54,"com.graphhopper.storage.RAMDataAccessTest.testCopy":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":183,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":280,"com.graphhopper.storage.RAMDataAccessTest.testSegments":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":75,"com.graphhopper.util.GHUtilityTest.testSort2":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":151,"com.graphhopper.reader.OSMReaderTest.testMain":36,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":446,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":14,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":55,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":396,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":198,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":34,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":103,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":120,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":515,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":100,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":282,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":513,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":105,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":236,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":508,"com.graphhopper.storage.GraphHopperStorageTest.testClone":407,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":274,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":414,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":20,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":383,"com.graphhopper.routing.PathTest.testTime":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":477,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":118,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":438,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":182,"com.graphhopper.reader.OSMReaderTest.testRelation":317,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":328,"com.graphhopper.util.GHUtilityTest.testSortDirected":313,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":518,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":519,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":284,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":248,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":265,"com.graphhopper.GraphHopperTest.testFootOnly":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":454,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":60,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":123,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":499,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":462,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":214,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":254,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":263,"com.graphhopper.routing.QueryGraphTest.testOneWay":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":378,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":456,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":294,"com.graphhopper.reader.OSMReaderTest.testWithBounds":43,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":257,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":503,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":18,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":250,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":179,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":354,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":391,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":461,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":349,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":373,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":205,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":220,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":141,"com.graphhopper.util.InstructionListTest.testWayList":168,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":13,"com.graphhopper.GraphHopperAPITest.testDisconnected179":426,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":384,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":468,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":450,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":77,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":409,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":61,"com.graphhopper.routing.util.EncodedValueTest.testSwap":514,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":137,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":441,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":150,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":482,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":135,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":434,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":474,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":160,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":156,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":365,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":511,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":452,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":401,"com.graphhopper.routing.PathTest.testWayList":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":475,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":386,"com.graphhopper.coll.OSMIDMapTest.testGet2":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":31,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":449,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":415,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":341,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":408,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":104,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":125,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":252,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":249,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":308,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":517,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":165,"com.graphhopper.util.GHUtilityTest.testSort":311,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":498,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":393,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":288,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":336,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":122,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":360,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":369,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":512,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":16,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":491,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":235,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":367,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":332,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":309,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":291,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":346,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":157,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":394,"com.graphhopper.routing.PathTest.testFound":486,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":80,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":192,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":116,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":507,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":447,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":172,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":502,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":213,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":222,"com.graphhopper.util.InstructionListTest.testEmptyList":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":27,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":437,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":305,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":152,"com.graphhopper.reader.PrinctonReaderTest.testRead":195,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":50,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":342,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":240,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":210,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":347,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":466,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":241,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":521,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":463,"com.graphhopper.reader.OSMReaderTest.testFoot":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":215,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":268,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":119,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":453,"com.graphhopper.reader.OSMReaderTest.testOneWay":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":377,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":186,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":191,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":352,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":458,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":247,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":389,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":411,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":129,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":246,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":230,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":504,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":387,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":490,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":403,"com.graphhopper.routing.PathBidirRefTest.testExtract2":489,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":496,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":167,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":363,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":420,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":480,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":2,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":400,"com.graphhopper.util.SimpleIntDequeTest.testPush":35,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":372,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":68,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":226,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":312,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":435,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":260,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":57,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":380,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":439,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":497,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":338,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":154,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":362,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":178,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":41,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":87,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":269,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":419,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":271,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":388,"com.graphhopper.routing.AStarBidirectionTest.initializationError":494,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":276,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":115,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":113,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":200}}]
