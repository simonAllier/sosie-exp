[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"13b90f89-dbeb-11e4-a480-d1ac559f6a00","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[],"tindex":"13b90f8a-dbeb-11e4-a480-038b90e14319","variableMapping":{"defaultUTurnCost":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","edgeId":"mpInteger","prevOrNextEdgeId":"val","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,8,13,34,40,45,48,51,54,59,80,86,91,94,238,239,240,241,242,243,244,245,246,247,248,102,107,128,134,139,142,249,250,251,252,253,254,255,256,257,258,259,184,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,217,284,285,286,287],"tindex":"13b95dab-dbeb-11e4-a480-6f2e89b10bd8","variableMapping":{"currentBucket":"indexDivisor","retBucket":"indexDivisor","currentIndex":"indexDivisor","bucketSize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[8,13,14,15,21,22,24,37,42,45,49,51,54,59,60,61,67,68,70,83,88,91,95,97,98,99,100,102,107,108,109,115,116,118,131,136,139,143,145,146,147,153,154,156,169,174,177,181,183,260,288,266,272,185,289,186,290,187,192,198,202,205,208,210,211,220],"tindex":"13b95dac-dbeb-11e4-a480-7b58ae951aa6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"13b95dad-dbeb-11e4-a480-6d8c9a034b5c","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[281,291,285,286],"tindex":"13b95dae-dbeb-11e4-a480-5581387a6fd9","variableMapping":{"incEleSum":"baseOrientation","eleDelta":"resultOrientation","incDist2DSum":"resultOrientation","decEleSum":"resultOrientation","fullDist2D":"baseOrientation","decDist2DSum":"baseOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-1},{"failures":[292,293],"tindex":"13b95daf-dbeb-11e4-a480-730907daa27e","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"13b95db0-dbeb-11e4-a480-a9c6a68177e1","variableMapping":{"baseUrl":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"13b95db1-dbeb-11e4-a480-4f7e4abe915f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"13b95db2-dbeb-11e4-a480-071958c6c733","variableMapping":{"location":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphBuilder:55","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":0},{"failures":[],"tindex":"13b95db3-dbeb-11e4-a480-e37fcde104bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"13b95db4-dbeb-11e4-a480-216b7948829d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"13b95db5-dbeb-11e4-a480-05dab9a3ffea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:566","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[],"tindex":"13b95db6-dbeb-11e4-a480-d18a765b22de","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT","defaultType":"com.graphhopper.storage.DAType.RAM_INT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"13b95db7-dbeb-11e4-a480-c3c3307c7599","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"shift","id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[294,295,296,238,239,240,297,298,299,300,301,302,303,304,98,305,306,307,241,242,243,308,309,310,311,312,313,314,315,99,244,245,246,248,253,316,254,255,256,183,257,258,259,184,317,288,261,262,263,264,265,266,267,268,269,270,272,318,319,320,206,210,211,214,321,322,323,324],"tindex":"13b983c8-dbeb-11e4-a480-77411a89b96e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[289,325],"tindex":"13b983c9-dbeb-11e4-a480-1b032b4889fb","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"nextRelBit","speed":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"13b983ca-dbeb-11e4-a480-41a8e9508646","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[0,305,253,254,255,257,258,184,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,326,327,328,329,330,331,332],"tindex":"13b983cb-dbeb-11e4-a480-2d7218779606","variableMapping":{"initialized":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"13b9aadc-dbeb-11e4-a480-c9cf707f4bae","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"13b9aadd-dbeb-11e4-a480-455b640048e4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"13b9aade-dbeb-11e4-a480-f7e01bae9c9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[197,198,207,209,220],"tindex":"13b9aadf-dbeb-11e4-a480-7d237d29f281","variableMapping":{"flags":"millis","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[187,333,325,334,335,336,337,338],"tindex":"13b9aae0-dbeb-11e4-a480-29d7d6a9c4e7","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[296,339,340,299,341,307,342,343,310,344,345,346,347,348,349,350,351,352,353],"tindex":"13b9aae1-dbeb-11e4-a480-9512714791ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"13b9aae2-dbeb-11e4-a480-8f07dc90e20c","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":0},{"failures":[],"tindex":"13b9aae3-dbeb-11e4-a480-1d0ebbcbb43e","variableMapping":{"distance":"prio","maxSpeed":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"13b9aae4-dbeb-11e4-a480-bb756b211425","variableMapping":{"edgeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":0},{"failures":[],"tindex":"13b9f905-dbeb-11e4-a480-07fe81286475","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[283],"tindex":"13b9f906-dbeb-11e4-a480-3b0145962b0c","variableMapping":{"weightApproximation":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[325,354,355,335,356,357,336,358,359,338,360],"tindex":"13b9f907-dbeb-11e4-a480-8bd65e392fdf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"13b9f908-dbeb-11e4-a480-d96e74cb92c2","variableMapping":{"orientation":"absY","java.lang.Math.PI":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":0},{"failures":[],"tindex":"13b9f909-dbeb-11e4-a480-d94b2c3c6fbb","variableMapping":{"flags":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[361,362,363,188,364,365],"tindex":"13b9f90a-dbeb-11e4-a480-e3f8adb4ce7b","variableMapping":{"enableIfAssert":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"13b9f90b-dbeb-11e4-a480-912d99bdf6ea","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"13b9f90c-dbeb-11e4-a480-1d54e19d6a25","variableMapping":{"hash":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[197,198,199,202,203,214,216,217,218,220,366,328,367,332],"tindex":"13b9f90d-dbeb-11e4-a480-f38446180547","variableMapping":{"turnCostsCount":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"13b9f90e-dbeb-11e4-a480-739945677033","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"13b9f90f-dbeb-11e4-a480-877c5b6d2e45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[188],"tindex":"13b9f910-dbeb-11e4-a480-e5e7bd1cafc4","variableMapping":{"initialized":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"13b9f911-dbeb-11e4-a480-5b7c85338e53","variableMapping":{"max":"bitsForEdgeFlags","tmpSize":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"13ba2022-dbeb-11e4-a480-e1164f921f1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"13ba2023-dbeb-11e4-a480-c70f1ce365d3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:159","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[171],"tindex":"13ba2024-dbeb-11e4-a480-b1fa25ccf8a7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[260,288,261,262,264,265,266,267,270,271,272,290,187,333,325,368,354,369,370,355,334,335,356,371,372,373,357,336,358,374,375,376,359,337,338,360,377,378],"tindex":"13ba2025-dbeb-11e4-a480-3db507dc9d74","variableMapping":{"segmentSizeInBytes":"speed","index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"13ba2026-dbeb-11e4-a480-5d4867747562","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[296,339,340,299,341,307,342,343,310,344,345,379,346,347,348,349,350,351,352,353],"tindex":"13ba2027-dbeb-11e4-a480-39d7b1479643","variableMapping":{"size":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"13ba2028-dbeb-11e4-a480-35c35607741b","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"13ba2029-dbeb-11e4-a480-752bf3b37934","variableMapping":{"length":"bitsForEdgeFlags","factor":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[370,373,376],"tindex":"13ba202a-dbeb-11e4-a480-d3c80d4c2779","variableMapping":{"bytesForFlags":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[197,198,217,218,220,332],"tindex":"13ba202b-dbeb-11e4-a480-4378b29cabce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"13ba202c-dbeb-11e4-a480-dfb34668faba","variableMapping":{"location":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":0},{"failures":[294,295,254,255,256,183,257,259,184,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,366,326,328,367,332],"tindex":"13ba473d-dbeb-11e4-a480-b37df2beda1d","variableMapping":{"elevation":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"13ba473e-dbeb-11e4-a480-9be4784e031f","variableMapping":{"factor":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[15,25,26,28,32,33,40,41,61,71,72,74,78,79,86,87,109,119,120,122,126,127,134,135,147,157,158,160,164,165,172,173,380,320],"tindex":"13ba473f-dbeb-11e4-a480-5d8b5684dfe7","variableMapping":{"index":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"13ba4740-dbeb-11e4-a480-2d6775d83f4e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[15,25,26,32,40,41,61,71,72,78,86,87,109,119,120,126,134,135,147,157,158,164,172,173,380,320],"tindex":"13ba4741-dbeb-11e4-a480-db5edcd0fa57","variableMapping":{"strLen":"mSize","bLen":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[254,255,256,183,257,259,317,288,261,262,263,265,266,267,268,269,270,271,381,272,382],"tindex":"13ba4742-dbeb-11e4-a480-b7642251e775","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"13ba4743-dbeb-11e4-a480-1d4ac4651b75","variableMapping":{"keyIndex":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-2},{"failures":[],"tindex":"13ba4744-dbeb-11e4-a480-b9a5ecae1e08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"13ba4745-dbeb-11e4-a480-fbdd2b03b4e4","variableMapping":{"this":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:283","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"13ba4746-dbeb-11e4-a480-d1892702fda5","variableMapping":{"index":"capacity","entriesPerSegment":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"13ba4747-dbeb-11e4-a480-bd201c0b7e6d","variableMapping":{"scDirMask":"scDirMask","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"13ba4748-dbeb-11e4-a480-e11e40a90555","variableMapping":{"delta_lat":"fwdIncline","r_lat":"fwdIncline","a_lat":"fwdIncline","delta_lon":"fwdIncline","r_lon":"fwdIncline","a_lon":"fwdIncline","norm":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"13ba4749-dbeb-11e4-a480-a7d4bb0257cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"13ba474a-dbeb-11e4-a480-a154a99168a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"13ba474b-dbeb-11e4-a480-7149cf71415f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":0},{"failures":[],"tindex":"13ba474c-dbeb-11e4-a480-4bd410be366b","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"currDistToGoal","java.lang.Double.POSITIVE_INFINITY":"currDistToGoal","weight":"currDistToGoal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[254,255,256,183,184,317,260,288,261,263,264,265,267,268,269,270,272,361,362,188,364,365],"tindex":"13ba474d-dbeb-11e4-a480-65be5a15d760","variableMapping":{"directionBitMask":"directionBitMask","blockByDefault":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[294,295,0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,383,384,385,386,387,388,97,296,389,238,239,240,297,339,298,340,299,300,301,302,303,390,304,98,305,306,391,307,392,241,242,243,308,342,309,343,310,311,312,313,314,393,315,99,394,244,245,246,247,395,248,396,397,398,399,400,401,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,253,316,254,255,256,183,257,258,259,184,317,402,403,404,260,288,261,262,263,264,265,266,267,268,269,270,271,272,273,273,274,274,405,405,275,275,276,276,277,277,406,406,278,278,279,279,407,407,408,408,280,280,409,410,411,412,281,413,380,318,319,320,414,415,282,283,190,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,366,416,326,417,327,418,419,420,328,367,329,330,331,332,321,322,421,422,284,285,286,423,424,425,426,427,287,428,429],"tindex":"13ba6e5e-dbeb-11e4-a480-31fbd755cf3a","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"13ba6e5f-dbeb-11e4-a480-9f6a328605b0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[430,289,290,431,325,368,432,433,354,434,370,435,436,335,437,438,439,356,440,371,373,336,441,442,443,358,444,374,376,445,446,338,447,448,449,360,450,377],"tindex":"13ba6e60-dbeb-11e4-a480-03361a023c45","variableMapping":{"importance":"usedBits","hash":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"13ba6e61-dbeb-11e4-a480-3fe6c87b4bbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[333,325,368,370,334,335,371,373,336,374,376,337,338,377],"tindex":"13ba6e62-dbeb-11e4-a480-2d3b399a05bd","variableMapping":{"str":"highway","name":"highway","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.String += (java.lang.String) + \" \";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"13ba6e63-dbeb-11e4-a480-afefb9d01cf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"13ba9574-dbeb-11e4-a480-ab8cd4e7e28c","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"13ba9575-dbeb-11e4-a480-85ee3a6997db","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"empty","v":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[254,255,256,183,257,259,288,261,263,266,267,268,269,270,272,451,452,423],"tindex":"13ba9576-dbeb-11e4-a480-b951141036c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"13ba9577-dbeb-11e4-a480-6dfc40beb8e9","variableMapping":{"r":"orientation","x":"resultOrientation","absY":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"13ba9578-dbeb-11e4-a480-b7a0a56ee4a4","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"13ba9579-dbeb-11e4-a480-a55167619dc8","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"13ba957a-dbeb-11e4-a480-e91b6f46d096","variableMapping":{"d":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-2},{"failures":[380,414,415],"tindex":"13ba957b-dbeb-11e4-a480-a96f0bfcc0d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[],"tindex":"13ba957c-dbeb-11e4-a480-53417da13088","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[354,356,358,360],"tindex":"13ba957d-dbeb-11e4-a480-5baa784c699f","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:520","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"13ba957e-dbeb-11e4-a480-d3f87434c752","variableMapping":{"allowed":"flags","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[254,198,199,200,201,203,204,206,207,209,210,211,212,213,214,215,216,217,218,219,220,326,328,329,331,332],"tindex":"13ba957f-dbeb-11e4-a480-85740eb07d71","variableMapping":{"edgeId":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[],"tindex":"13ba9580-dbeb-11e4-a480-a31356c574a4","variableMapping":{"segmentsToMap":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":0},{"failures":[344,345,346,453,347,348,351,352,353],"tindex":"13ba9581-dbeb-11e4-a480-77baa7fcb007","variableMapping":{"flags":"initialBits","mask":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"13ba9582-dbeb-11e4-a480-d91e44e9a123","variableMapping":{"latSimilar":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"13ba9583-dbeb-11e4-a480-050db123059a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[253,316,254,255,256,183,257,258,259,184,317,260,288,261,262,263,264,265,266,267,268,269,270,271,381,272,289,290,187,333,325,354,454,369,455,435,355,334,335,456,356,457,372,458,459,451,460,382,461,462,452,191,194,195,463,357,336,358,464,375,445,359,337,338,465,360,466,378,423],"tindex":"13babc94-dbeb-11e4-a480-a1b8355ff4a4","variableMapping":{"shift":"acceptBit","flags":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"13babc95-dbeb-11e4-a480-394fbcd9e529","variableMapping":{"time":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"13babc96-dbeb-11e4-a480-d1a31cc5a5b0","variableMapping":{"weight":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":0},{"failures":[],"tindex":"13babc97-dbeb-11e4-a480-359c4160f3d6","variableMapping":{"time":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"13babc98-dbeb-11e4-a480-b554fc4f1842","variableMapping":{"ghLocation":"str","osmFile":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"13babc99-dbeb-11e4-a480-856c97ec4ac5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":215,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":274,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":5,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":458,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.reader.OSMReaderTest.testFerry":260,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":424,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":425,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":242,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":316,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":69,"com.graphhopper.coll.CompressedArrayTest.testCompress":353,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":142,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":166,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":118,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":391,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":329,"com.graphhopper.GraphHopperTest.testPrepare":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":214,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":207,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":284,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":354,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":322,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":307,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":414,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":199,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":239,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":51,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":349,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":332,"com.graphhopper.GraphHopperTest.testLoadOSM":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":240,"com.graphhopper.reader.OSMReaderTest.testSort":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":450,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":269,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":55,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":231,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":137,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":102,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":179,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":278,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":90,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":38,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":114,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":52,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":355,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":309,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":202,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":201,"com.graphhopper.coll.OSMIDMapTest.testGetLong":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":73,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":79,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":30,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":8,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":32,"com.graphhopper.coll.CompressedArrayTest.testCompress2":352,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":373,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":70,"com.graphhopper.GraphHopperAPITest.testLoad":294,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":12,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":188,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":119,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":109,"com.graphhopper.storage.LevelGraphStorageTest.testClone":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":60,"com.graphhopper.reader.OSMReaderTest.testBarriers":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":415,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":204,"com.graphhopper.util.GHUtilityTest.testCopy":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":454,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":227,"com.graphhopper.routing.PathTest.testFindInstruction":413,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":61,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":194,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":421,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":436,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":138,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":88,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":426,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":419,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":186,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":19,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":151,"com.graphhopper.util.InstructionListTest.testWayList2":286,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":301,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":143,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":445,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":282,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":21,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":160,"com.graphhopper.storage.RAMDirectoryTest.testSynched":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":244,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":203,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":264,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":217,"com.graphhopper.coll.OSMIDMapTest.testGet":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":68,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":195,"com.graphhopper.routing.PathBidirRefTest.testExtract":409,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":312,"com.graphhopper.storage.RAMDataAccessTest.testCopy":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":172,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":333,"com.graphhopper.storage.RAMDataAccessTest.testSegments":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":98,"com.graphhopper.util.GHUtilityTest.testSort2":427,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":212,"com.graphhopper.reader.OSMReaderTest.testMain":261,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":78,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":466,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":37,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":176,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":24,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":28,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":323,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":49,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":25,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":370,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":31,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":271,"com.graphhopper.storage.GraphHopperStorageTest.testClone":111,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":452,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":461,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":464,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":152,"com.graphhopper.routing.PathTest.testTime":412,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":443,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":47,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":303,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":165,"com.graphhopper.reader.OSMReaderTest.testRelation":430,"com.graphhopper.util.GHUtilityTest.testSortDirected":429,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":440,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":235,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":275,"com.graphhopper.GraphHopperTest.testFootOnly":184,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":431,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":342,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":416,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":161,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":225,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":273,"com.graphhopper.routing.QueryGraphTest.testOneWay":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":390,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":346,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":432,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":238,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":344,"com.graphhopper.reader.OSMReaderTest.testWithBounds":270,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":228,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":158,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":277,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":167,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":196,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":289,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":14,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":10,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":369,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":75,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":107,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":198,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":140,"com.graphhopper.util.InstructionListTest.testWayList":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":465,"com.graphhopper.GraphHopperAPITest.testDisconnected179":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":153,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":453,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":438,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":404,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":181,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":256,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":330,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":131,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":367,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":360,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":57,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":378,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":101,"com.graphhopper.routing.PathTest.testWayList":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":157,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":460,"com.graphhopper.coll.OSMIDMapTest.testGet2":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":220,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":81,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":124,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":66,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":112,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":310,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":223,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":357,"com.graphhopper.util.GHUtilityTest.testSort":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":298,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":351,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":95,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":110,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":392,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":248,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":334,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":283,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":53,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":259,"com.graphhopper.storage.MMapDirectoryTest.testSynched":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":364,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":218,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":380,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":171,"com.graphhopper.routing.PathTest.testFound":411,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":187,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":317,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":44,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":448,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":156,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":116,"com.graphhopper.util.InstructionListTest.testEmptyList":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":206,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":434,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":213,"com.graphhopper.reader.PrinctonReaderTest.testRead":403,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":243,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":155,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":252,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":145,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":437,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":435,"com.graphhopper.reader.OSMReaderTest.testFoot":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":169,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":280,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":340,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":348,"com.graphhopper.reader.OSMReaderTest.testOneWay":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":299,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":120,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":89,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":433,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":234,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":456,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":418,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":331,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":462,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":233,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":399,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":417,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":159,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":405,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":104,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":381,"com.graphhopper.routing.PathBidirRefTest.testExtract2":410,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":197,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":358,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":133,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":374,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":182,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":191,"com.graphhopper.util.SimpleIntDequeTest.testPush":324,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":401,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":297,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":128,"com.graphhopper.GraphHopperTest.testFootAndCar":183,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":315,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":149,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":216,"com.graphhopper.GraphHopperTest.testPrepareOnly":253,"com.graphhopper.GraphHopperTest.testVia":254,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":147,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":268,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":4,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":132,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":423,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":192,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":162,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":455,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":43,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":41,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":54}}]
