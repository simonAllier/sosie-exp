[{"failures":[],"tindex":"a6b6b31b-dabe-11e4-a47f-95884135bf6a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"a6b6b31c-dabe-11e4-a47f-3948ab606538","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52,53,54],"tindex":"a6b6b31d-dabe-11e4-a47f-ed07055b1cd8","variableMapping":{"high":"encoded","guess":"encoded","low":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"a6b6b31e-dabe-11e4-a47f-750c8b8d7c03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failures":[],"tindex":"a6b6da2f-dabe-11e4-a47f-893cbc479319","variableMapping":{"size":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":0},{"failures":[55,56,57,58,37],"tindex":"a6b6da30-dabe-11e4-a47f-efc9b0321841","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[],"tindex":"a6b6da31-dabe-11e4-a47f-3b0ce5c1c579","variableMapping":{"angle":"maxEle","com.graphhopper.util.AngleCalc.PI3_4":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"a6b6da32-dabe-11e4-a47f-3d7bf8fc902c","variableMapping":{"index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-2},{"failures":[],"tindex":"a6b6da33-dabe-11e4-a47f-e54f90bd29bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[59,60,61,62,63,64,65,66,0,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,1,92,93,94,95,96,97,98,99,100,101,2,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,5,132,133,134,135,6,136,137,138,139,140,7,141,142,143,144,145,146,8,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,9,172,173,174,175,176,177,178,179,180,181,10,182,183,184,185,186,12,187,188,13,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,14,214,215,216,217,218,219,220,221,222,223,15,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,56,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,30],"tindex":"a6b6da34-dabe-11e4-a47f-13dc8a04bba2","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"a6b6da35-dabe-11e4-a47f-61bf7c2b5061","variableMapping":{"algo":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[280],"tindex":"a6b6da36-dabe-11e4-a47f-8bd7921dfd74","variableMapping":{"distInMeter":"restDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"a6b6da37-dabe-11e4-a47f-11987e69f397","variableMapping":{"finishedTo":"uTurnSupport","finishedFrom":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0,72,73,75,76,80,87,89,94,96,99,101,105,107,108,109,110,112,113,115,116,120,127,129,134,6,138,140,144,8,152,153,155,156,160,167,169,174,176,179,181,185,12,13,194,195,197,198,202,209,211,216,218,221,223,227,17,281,282,18,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,255,257,258,259,260,261,262,263,264,265,269,270,271,272,274,275,276,277,278,299,300,301,302,303,304,305],"tindex":"a6b70148-dabe-11e4-a47f-717dff4c4253","variableMapping":{"bytePointer":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"a6b70149-dabe-11e4-a47f-49a0dc33b77f","variableMapping":{"width":"x1","latSimilar":"x1","lonSimilar":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"a6b7014a-dabe-11e4-a47f-0f109ffb4212","variableMapping":{"intVal":"shift","degree":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[285,289,306],"tindex":"a6b7014b-dabe-11e4-a47f-c16fc0552134","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"a6b7014c-dabe-11e4-a47f-4f45cba319e5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"a6b7014d-dabe-11e4-a47f-4d14780c7332","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:656","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[50],"tindex":"a6b7014e-dabe-11e4-a47f-d1e86c3175cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"a6b7014f-dabe-11e4-a47f-15f4e4082d7e","variableMapping":{"orientation":"fwdDecline","java.lang.Math.PI":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":0},{"failures":[],"tindex":"a6b70150-dabe-11e4-a47f-696a91d8a453","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[59,307,290,295,297,274],"tindex":"a6b70151-dabe-11e4-a47f-331545f9d146","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"a6b70152-dabe-11e4-a47f-fbbe8c6ab50d","variableMapping":{"flags":"roundaboutBit","scDirMask":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"a6b70153-dabe-11e4-a47f-9b9f404de86d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[308,309,310,230,244,311,34,39],"tindex":"a6b70154-dabe-11e4-a47f-57787019aee7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"a6b72865-dabe-11e4-a47f-67f6d2e627fc","variableMapping":{"err":"delta","dLat":"delta","tmpErr":"delta","x1":"index","sLon":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":0},{"failures":[59,60,61,62,63,64,65,66,0,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,1,92,93,94,95,96,97,98,99,100,101,2,102,103,104,105,106,312,313,314,315,316,317,318,319,320,321,322,323,3,324,325,326,327,328,329,330,331,332,333,334,335,336,107,337,338,4,339,340,341,342,343,344,345,346,347,348,349,350,351,108,352,353,354,355,356,357,109,358,359,360,361,362,363,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,5,132,133,134,135,6,136,137,138,139,140,7,141,142,143,144,145,146,8,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,9,172,173,174,175,176,177,178,179,180,181,10,182,183,184,185,186,364,365,366,367,368,369,12,187,188,13,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,14,214,215,216,217,218,219,220,221,222,223,15,224,225,226,227,228,370,371,372,373,374,17,375,376,377,281,282,18,378,379,380,381,283,284,22,382,383,384,385,285,286,287,288,289,306,246,386,280,387,388,23,389,390,307,290,291,292,293,294,391,295,392,296,393,297,298,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,299,300,394,394,395,395,396,396,397,397,301,301,398,398,399,399,400,400,401,401,402,402,403,403,404,404,24,405,25,26,27,279,28,406,407,29,30,408,409,410,31,411,32,33,34,35,36,37,38,412,39,40,41,42,413,43,414,414,415,415,416,417,418,302,303,304,305,419,420,421,422],"tindex":"a6b72866-dabe-11e4-a47f-3386f79275ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"a6b72867-dabe-11e4-a47f-09d40a7ce42d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[423,424,425,426,427,428,429,430],"tindex":"a6b72868-dabe-11e4-a47f-813ef9eb7b34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[44,46,47,48,49,50,51,52,54],"tindex":"a6b72869-dabe-11e4-a47f-8903587e4164","variableMapping":{"_location":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"a6b7286a-dabe-11e4-a47f-83e780b6c6bb","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"angle","java.lang.Double.POSITIVE_INFINITY":"angle","weight":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"a6b7286b-dabe-11e4-a47f-a9f240ea1064","variableMapping":{"iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:127","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"a6b7286c-dabe-11e4-a47f-b70cc51f0422","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"a6b74f7d-dabe-11e4-a47f-93755c50acb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"a6b74f7e-dabe-11e4-a47f-b11d3caf6ec5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[431,322,327,329,330,337,342,344,345,432,433,434,435,436,437,438,439,440,441],"tindex":"a6b74f7f-dabe-11e4-a47f-01704b8a02ea","variableMapping":{"speed":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[37],"tindex":"a6b74f80-dabe-11e4-a47f-7942bc1ce17c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"a6b74f81-dabe-11e4-a47f-7f945d29c13d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a6b74f82-dabe-11e4-a47f-913ec02b6e14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"a6b74f83-dabe-11e4-a47f-4310153577d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:566","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[442,443,444,445,446,295,297],"tindex":"a6b74f84-dabe-11e4-a47f-f55a6f9173e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[59,295,297],"tindex":"a6b74f85-dabe-11e4-a47f-6bbf3c1fba2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"a6b74f86-dabe-11e4-a47f-a1d4c7c19727","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"a6b74f87-dabe-11e4-a47f-7bc5b75e94bf","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"a6b74f88-dabe-11e4-a47f-c7a196a64f46","variableMapping":{"empty":"blockByDefault"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"a6b74f89-dabe-11e4-a47f-c5da95b0413c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"a6b74f8a-dabe-11e4-a47f-6de13a3703a2","variableMapping":{"fwdFaster":"x","incDist2DSum":"r","fwdSlower":"absY","fullDist2D":"x","restDist2D":"x","speed":"absY","decDist2DSum":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":0},{"failures":[254],"tindex":"a6b74f8b-dabe-11e4-a47f-b7a45f8f17ef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"a6b74f8c-dabe-11e4-a47f-5db3aa1fbeb8","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"size","valueIfKeyNotFound":"size","i":"size","mValues":"elem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"a6b7769d-dabe-11e4-a47f-c19cdbaaf915","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[285,289,306],"tindex":"a6b7769e-dabe-11e4-a47f-e93cb374dc7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"a6b7769f-dabe-11e4-a47f-e995384602da","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"a6b776a0-dabe-11e4-a47f-3f050f8ef7c0","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"closed","v":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"a6b776a1-dabe-11e4-a47f-2b3e9d9592fe","variableMapping":{"osmFile":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"a6b776a2-dabe-11e4-a47f-418dcd0927d3","variableMapping":{"neighborUpdates":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[],"tindex":"a6b776a3-dabe-11e4-a47f-390d504ac14a","variableMapping":{"start":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[59,290,295,296,298,256,260,278],"tindex":"a6b776a4-dabe-11e4-a47f-7120f6232167","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[447,448],"tindex":"a6b776a5-dabe-11e4-a47f-a9d351098d01","variableMapping":{"splitIndex":"segmentSizeInBytes","entrySize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"a6b776a6-dabe-11e4-a47f-95715afc2fe9","variableMapping":{"shiftSum":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"a6b776a7-dabe-11e4-a47f-d7013c888836","variableMapping":{"val":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"a6b776a8-dabe-11e4-a47f-51dbd7d247a5","variableMapping":{"weightApproximation":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"a6b776a9-dabe-11e4-a47f-5d739da83e8a","variableMapping":{"turnCosts":"angle","weight":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[],"tindex":"a6b776aa-dabe-11e4-a47f-059a66ee81e4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"a6b776ab-dabe-11e4-a47f-eb77bed5055a","variableMapping":{"bitsForEdgeFlags":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a6b776ac-dabe-11e4-a47f-4f2dbb356167","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"a6b79dbd-dabe-11e4-a47f-6bdf89337d5a","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[],"tindex":"a6b79dbe-dabe-11e4-a47f-15d489269797","variableMapping":{"red":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"a6b79dbf-dabe-11e4-a47f-d90cd4550a91","variableMapping":{"high":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-2},{"failures":[],"tindex":"a6b79dc0-dabe-11e4-a47f-e746a9cb00fe","variableMapping":{"counts":"length","counter":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[235,31],"tindex":"a6b79dc1-dabe-11e4-a47f-2ddaeeaa9245","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[390,295,392,298,255,256,257,260,261,272,274,275,276,278],"tindex":"a6b79dc2-dabe-11e4-a47f-73a16d434a30","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"a6b79dc3-dabe-11e4-a47f-912cb79b5ca3","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[55,56,57,58,37],"tindex":"a6b79dc4-dabe-11e4-a47f-71fddadfc69d","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[251],"tindex":"a6b79dc5-dabe-11e4-a47f-17572a3087b6","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[280],"tindex":"a6b79dc6-dabe-11e4-a47f-fdb2981fa7bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"a6b79dc7-dabe-11e4-a47f-076ce98b56f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[50],"tindex":"a6b79dc8-dabe-11e4-a47f-b3257c1e30b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"a6b79dc9-dabe-11e4-a47f-b17152997eea","variableMapping":{"latSize":"code","size":"code","lonSize":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":0},{"failures":[],"tindex":"a6b79dca-dabe-11e4-a47f-4794d500a7d7","variableMapping":{"foundIndex":"lastElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"a6b79dcb-dabe-11e4-a47f-45eedbcf070e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:504","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[378,449],"tindex":"a6b79dcc-dabe-11e4-a47f-e7d11dc51884","variableMapping":{"str":"str","from":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:942","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (int) + \"<->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[255,256,265,267,278],"tindex":"a6b79dcd-dabe-11e4-a47f-1da3ac56ce75","variableMapping":{"res":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[64,0,67,75,313,314,315,316,317,318,319,320,3,324,325,326,328,331,332,333,334,335,336,107,4,339,340,341,343,346,347,348,349,350,351,108,450,451,452,453,115,6,8,147,155,176,454,455,456,457,12,13,189,197,218,458,459,264,268,269,272,24,405,25,26,27,279,28,407,29,30,408,31,411,32,33,34,35,36,37,38,39,40,41,42,43,304,305],"tindex":"a6b7c4de-dabe-11e4-a47f-6f078fd8c476","variableMapping":{"id":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"a6b7c4df-dabe-11e4-a47f-73f7fe16bb2c","variableMapping":{"minDistance":"costs","rMin":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[460,31],"tindex":"a6b7c4e0-dabe-11e4-a47f-992f0ccca177","variableMapping":{"i":"minutes","to":"minutes","lonSize":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[460,31],"tindex":"a6b7c4e1-dabe-11e4-a47f-83aff8f6959c","variableMapping":{"tmpNo":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[64,0,8,366,12,13,24,28,407,29,408],"tindex":"a6b7c4e2-dabe-11e4-a47f-9d1d5a129da9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[64,0,67,71,1,97,2,104,3,324,325,4,339,340,461,6,8,147,151,9,177,10,184,462,463,464,465,466,364,12,13,189,193,14,219,15,226,467,468,469,470,471,17,281,282,18,378,22,382,383,384,385,386,280,23,389,275,394,395,397,301,398,399,400,401,403,404,24,405,25,26,27,279,28,407,29,30,408,31,411,32,33,34,35,36,37,38,39,40,41,42,43,416,417,418,419,420,421,422],"tindex":"a6b7c4e3-dabe-11e4-a47f-99824ec4f03c","variableMapping":{"numTiles":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,0,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,1,92,93,94,95,96,97,98,99,100,101,2,102,103,104,105,106,313,314,315,316,317,318,319,320,321,322,323,3,324,325,326,327,328,329,330,331,332,333,334,335,336,107,337,338,4,339,340,341,342,343,344,345,346,347,348,349,350,351,108,352,353,354,355,356,357,109,358,359,360,361,362,363,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,5,132,133,134,135,6,136,137,138,139,140,7,141,142,143,144,145,146,8,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,9,172,173,174,175,176,177,178,179,180,181,10,182,183,184,185,186,12,187,188,13,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,14,214,215,216,217,218,219,220,221,222,223,15,224,225,226,227,228,373,374,17,375,472,376,377,281,282,18,378,379,380,381,283,284,473,474,475,476,423,477,44,478,45,55,479,308,480,481,482,483,484,485,46,486,487,488,424,489,490,47,48,309,491,492,493,494,495,496,49,497,498,499,425,229,285,286,287,288,289,306,500,501,502,50,503,310,504,505,506,507,508,51,509,510,426,230,231,232,233,234,235,236,237,238,239,240,241,56,242,243,244,245,246,247,248,249,250,251,252,386,280,511,512,427,513,52,514,53,57,515,311,516,517,518,519,520,521,54,522,523,524,428,253,525,254,526,387,388,23,389,527,528,390,307,529,290,291,292,293,294,391,295,392,296,393,297,298,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,299,300,530,531,394,395,396,397,301,398,399,400,401,402,403,404,24,405,25,26,27,279,28,406,407,29,30,408,409,31,411,32,33,34,35,36,37,38,412,39,40,41,42,43,302,303,304,305,532],"tindex":"a6b7c4e4-dabe-11e4-a47f-f9ef04c1bdc2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[0,71,72,73,80,82,94,99,2,105,111,112,113,120,122,134,138,7,144,8,151,152,153,160,162,174,179,10,185,12,13,193,194,195,202,204,216,221,15,227,378,379,283,308,309,285,289,306,310,230,233,234,239,242,244,311,253,390,290,291,295,392,296,298,255,256,260,263,266,268,269,278,301,400,25,26,27,279,28,29,30,31,411,32,34,37,38,39,40,41,43,302,303,304],"tindex":"a6b7eaf5-dabe-11e4-a47f-8ff3752da376","variableMapping":{"lastKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[64,0,71,1,97,2,103,104,3,324,325,4,339,340,6,8,151,9,177,10,183,184,447,364,12,13,193,14,219,15,225,226,448,17,281,282,18,378,22,382,383,384,385,386,280,23,389,275,394,395,397,301,398,400,401,404,24,25,26,27,279,28,407,29,30,408,32,33,34,35,36,420,421,422],"tindex":"a6b7eaf6-dabe-11e4-a47f-51061a0023e8","variableMapping":{"intLen":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[64,0,75,450,451,452,453,115,6,8,155,176,454,455,456,457,12,13,197,218,458,459,24,28,407,29,408],"tindex":"a6b7eaf7-dabe-11e4-a47f-4b0b518641dc","variableMapping":{"lat":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"a6b7eaf8-dabe-11e4-a47f-432c0f4f5cd4","variableMapping":{"weightApproximation":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[431,322,329,330,337,344,345,432,433,434,435,436,437,438,439,440],"tindex":"a6b7eaf9-dabe-11e4-a47f-35376a26bc3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[73,83,84,86,90,91,97,98,113,123,124,126,130,131,136,137,153,163,164,166,170,171,177,178,195,205,206,208,212,213,219,220,285,288],"tindex":"a6b7eafa-dabe-11e4-a47f-fdd7d88371e3","variableMapping":{"size":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[460,31],"tindex":"a6b7eafb-dabe-11e4-a47f-e5b79cdf0c64","variableMapping":{"edgeId":"index","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"minutes","nodeA":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"a6b7eafc-dabe-11e4-a47f-f950bc57c6db","variableMapping":{"keyIndex":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"a6b7eafd-dabe-11e4-a47f-bdcd1d3c29e5","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[423,44,478,45,46,424,47,48,49,425,51,426,427,52,514,53,54,428,429,430,31,411,32,33,35,36,37,38,41,42,43],"tindex":"a6b7eafe-dabe-11e4-a47f-e53f529495fa","variableMapping":{"allowWrites":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":273,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":395,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":360,"com.graphhopper.GraphHopperAPITest.testNoLoad":532,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":112,"com.graphhopper.reader.OSMReaderTest.testFerry":31,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":283,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":478,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":503,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":324,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":405,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":203,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":415,"com.graphhopper.coll.CompressedArrayTest.testCompress":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":508,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":184,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":5,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":321,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":462,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":469,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":296,"com.graphhopper.GraphHopperTest.testPrepare":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":272,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":390,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":446,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":477,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":265,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":281,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":312,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":51,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":381,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":322,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":257,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":339,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":45,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":12,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":439,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":71,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":444,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":298,"com.graphhopper.GraphHopperTest.testLoadOSM":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":340,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":525,"com.graphhopper.reader.OSMReaderTest.testSort":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":486,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":189,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":463,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":180,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":8,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":142,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":400,"com.graphhopper.storage.RAMDataAccessTest.testHeader":459,"com.graphhopper.routing.DijkstraTest.initializationError":530,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":410,"com.graphhopper.storage.MMapDataAccessTest.testHeader":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":223,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":461,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":95,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":457,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":158,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":529,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":187,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":52,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":425,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":269,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":326,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":260,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":259,"com.graphhopper.coll.OSMIDMapTest.testGetLong":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":207,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":213,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":88,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":0,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":90,"com.graphhopper.coll.CompressedArrayTest.testCompress2":432,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":490,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":204,"com.graphhopper.GraphHopperAPITest.testLoad":304,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":70,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":244,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":163,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":153,"com.graphhopper.storage.LevelGraphStorageTest.testClone":75,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":460,"com.graphhopper.reader.OSMReaderTest.testBarriers":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":194,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":57,"com.graphhopper.util.GHUtilityTest.testCopy":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":107,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":495,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":362,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":510,"com.graphhopper.routing.PathTest.testFindInstruction":389,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":505,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":195,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":250,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":379,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":102,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":513,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":181,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":221,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":373,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":520,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":531,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":117,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":149,"com.graphhopper.util.InstructionListTest.testWayList2":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":524,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":347,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":44,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":423,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":473,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":386,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":79,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":126,"com.graphhopper.storage.RAMDirectoryTest.testSynched":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":205,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":313,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":261,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":35,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":454,"com.graphhopper.routing.AStarTest.initializationError":527,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":275,"com.graphhopper.coll.OSMIDMapTest.testGet":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":202,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":456,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":251,"com.graphhopper.routing.PathBidirRefTest.testExtract":299,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":1,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":480,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":332,"com.graphhopper.storage.RAMDataAccessTest.testCopy":458,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":464,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":136,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":501,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":308,"com.graphhopper.storage.RAMDataAccessTest.testSegments":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":108,"com.graphhopper.util.GHUtilityTest.testSort2":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":270,"com.graphhopper.reader.OSMReaderTest.testMain":32,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":481,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":487,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":190,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":82,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":86,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":105,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":83,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":517,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":216,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":512,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":89,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":42,"com.graphhopper.storage.StorablePropertiesTest.testStore":364,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":448,"com.graphhopper.storage.GraphHopperStorageTest.testClone":155,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":139,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":239,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":368,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":237,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":498,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":118,"com.graphhopper.routing.PathTest.testTime":388,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":494,"com.graphhopper.util.BitUtilLittleTest.testToFloat":20,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":103,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":243,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":349,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":131,"com.graphhopper.reader.OSMReaderTest.testRelation":412,"com.graphhopper.util.GHUtilityTest.testSortDirected":376,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":445,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":522,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":397,"com.graphhopper.GraphHopperTest.testFootOnly":30,"com.graphhopper.util.BitUtilLittleTest.testToInt":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":502,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":235,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":314,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":327,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":127,"com.graphhopper.search.NameIndexTest.testCreate":422,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":470,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":394,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":453,"com.graphhopper.routing.QueryGraphTest.testOneWay":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":350,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":436,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":504,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":4,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":434,"com.graphhopper.reader.OSMReaderTest.testWithBounds":41,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":16,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":467,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":523,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":224,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":286,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":132,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":252,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":429,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":72,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":68,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":521,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":426,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":215,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":109,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":209,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":151,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":256,"com.graphhopper.util.BitUtilLittleTest.testToBitString":19,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":182,"com.graphhopper.util.InstructionListTest.testWayList":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":479,"com.graphhopper.GraphHopperAPITest.testDisconnected179":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":119,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":518,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":303,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":144,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":485,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":27,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":393,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":475,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":267,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":526,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":392,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":2,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":491,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":46,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":191,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":424,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":146,"com.graphhopper.routing.PathTest.testWayList":23,"com.graphhopper.storage.MMapDataAccessTest.testCopy":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":143,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":234,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":449,"com.graphhopper.coll.OSMIDMapTest.testGet2":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":278,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":455,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":99,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":416,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":484,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":168,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":245,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":200,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":87,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":330,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":468,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":311,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":443,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":47,"com.graphhopper.util.GHUtilityTest.testSort":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":343,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":441,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":483,"com.graphhopper.search.NameIndexTest.testPut":420,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":323,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":361,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":318,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":514,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":280,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":352,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":309,"com.graphhopper.storage.MMapDirectoryTest.testSynched":370,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":417,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":474,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":276,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":285,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":6,"com.graphhopper.routing.PathTest.testFound":387,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":254,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":408,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":101,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":482,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":206,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":421,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":122,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":160,"com.graphhopper.util.InstructionListTest.testEmptyList":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":268,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":509,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":271,"com.graphhopper.reader.PrinctonReaderTest.testRead":302,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":10,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":325,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":121,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":385,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":111,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":211,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":516,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":427,"com.graphhopper.reader.OSMReaderTest.testFoot":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":134,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":404,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":418,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":344,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":438,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":500,"com.graphhopper.reader.OSMReaderTest.testOneWay":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":345,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":164,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":178,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":222,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":506,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":466,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":515,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":129,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":293,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":431,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":291,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":355,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":465,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":125,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":396,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":148,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":413,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":372,"com.graphhopper.routing.PathBidirRefTest.testExtract2":300,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":348,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":419,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":176,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":499,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":145,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":519,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":341,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":179,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":472,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":241,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":9,"com.graphhopper.GraphHopperTest.testFootAndCar":279,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":84,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":115,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":197,"com.graphhopper.storage.StorablePropertiesTest.testLoad":365,"com.graphhopper.GraphHopperTest.testPrepareOnly":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":274,"com.graphhopper.GraphHopperTest.testVia":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":113,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":39,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":63,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":175,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":378,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":248,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":128,"com.graphhopper.routing.AStarBidirectionTest.initializationError":528,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":229,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":100,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":98,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":13}}]
