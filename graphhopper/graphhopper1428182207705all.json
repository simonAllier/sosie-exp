[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"e7ae7513-db0f-11e4-89ef-c13a9814b23e","variableMapping":{"index":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"e7affbb4-db0f-11e4-89ef-e33fcd901350","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"e7affbb5-db0f-11e4-89ef-3dfb690498f9","variableMapping":{"segmentsToMap":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":0},{"failures":[0,1,12],"tindex":"e7b022c6-db0f-11e4-89ef-af63a5104631","variableMapping":{"entry":"trackType","entryVal":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[13,14],"tindex":"e7b022c7-db0f-11e4-89ef-3ba13665bb2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"e7b022c8-db0f-11e4-89ef-2b4b9e8c120f","variableMapping":{"autoRemoveTemporary":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:85","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"e7b022c9-db0f-11e4-89ef-25babf9ca915","variableMapping":{"minDistance":"eleDelta","rMin":"incEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"e7b022ca-db0f-11e4-89ef-f7b96788139a","variableMapping":{"value":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[15],"tindex":"e7b022cb-db0f-11e4-89ef-8fed0880e5d7","variableMapping":{"time":"otherValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"e7b022cc-db0f-11e4-89ef-2132fccebd3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,0,1,12,73,74,75,76,77,78,79,2,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,13,111,112,113,14,114,115,116,117,118,119,120,121,122,123,124,125,3,126,127,128,129,4,130,131,5,132,6,133,134,135,136,137,138,139,140,141,7,142,143,144,145,146,147,148,8,149,150,9,151,10,152,153,154,155,156,157,158,159,160,11,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"e7b049dd-db0f-11e4-89ef-2561a9055791","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"e7b049de-db0f-11e4-89ef-79bb240616d1","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[16,17,18,19,22,24,26,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,211,213,219,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,318,320,321,322,325,326,329,331,332,333,334,335,336,337,338,339,340,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368],"tindex":"e7b049df-db0f-11e4-89ef-d93725408caa","variableMapping":{"size":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-1},{"failures":[],"tindex":"e7b049e0-db0f-11e4-89ef-4d356032c4c6","variableMapping":{"currentBucket":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[172,174,178,189,459],"tindex":"e7b049e1-db0f-11e4-89ef-4b52abfe4b02","variableMapping":{"elem":"elem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[38,460,461,105,133,152],"tindex":"e7b049e2-db0f-11e4-89ef-0df2a3108e7a","variableMapping":{"length":"shift","factor":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"e7b049e3-db0f-11e4-89ef-0d87d228a3a8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[63,64,86,88,96,99,106,13,14,147,168,169,170,171,172,174,178,182,183,186,190,192,195,197,199,200,201,203,207,208,209,213,219,220,285,291,296,298,306,309,311,316,318,322,326,336,342,347,349,357,360,362,367,369,372,382,388,393,395,403,406,408,413,416,426,432,437,439,447,450,452,457],"tindex":"e7b049e4-db0f-11e4-89ef-25e1e86184df","variableMapping":{"high":"backwardBit","len":"backwardBit","start":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"e7b049e5-db0f-11e4-89ef-054f7d7d7a7a","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[118],"tindex":"e7b070f6-db0f-11e4-89ef-313acf8fd4a8","variableMapping":{"line":"highway","key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[21,27,32,37,38,101,462,210],"tindex":"e7b070f7-db0f-11e4-89ef-f5ab668ab50d","variableMapping":{"initLeafSize":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"e7b070f8-db0f-11e4-89ef-93e60ecdc293","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"e7b070f9-db0f-11e4-89ef-5de123c22bb3","variableMapping":{"this":"em"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[],"tindex":"e7b070fa-db0f-11e4-89ef-75a27a26abd1","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","entryVal":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"e7b070fb-db0f-11e4-89ef-1186f22c900b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[13,114],"tindex":"e7b070fc-db0f-11e4-89ef-8bccd4f9eba6","variableMapping":{"lazyUpdates":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"e7b070fd-db0f-11e4-89ef-89390a376c51","variableMapping":{"high":"length","len":"length","start":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"e7b070fe-db0f-11e4-89ef-1b5206befb0a","variableMapping":{"workerThreads":"oldValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[1,12,2,118,3,5,7,9,11],"tindex":"e7b070ff-db0f-11e4-89ef-f749e5800028","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[18,19,21,22,35,38,41,111,112,113,193,194,197,463,464,204,205,220,221,239,241,244,247,248,249,250,252,255,256,259,260,261,265,267,270,273,274,275,276,278],"tindex":"e7b07100-db0f-11e4-89ef-27408fca6117","variableMapping":{"elem":"arr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"e7b07101-db0f-11e4-89ef-8fa2c3e76b9d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"e7b07102-db0f-11e4-89ef-31f5ce03d7fd","variableMapping":{"edgeId":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"e7b07103-db0f-11e4-89ef-473173a858e9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e7b07104-db0f-11e4-89ef-1b9ad0921570","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[465,466,467,468,469,470,471,472,473,474],"tindex":"e7b09815-db0f-11e4-89ef-fbfdf38a877b","variableMapping":{"midLat":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"e7b09816-db0f-11e4-89ef-5d82ee1d5a4f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[],"tindex":"e7b09817-db0f-11e4-89ef-196727a70293","variableMapping":{"counts":"frontIndex","counter":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[],"tindex":"e7b09818-db0f-11e4-89ef-d11effb9e95c","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"e7b09819-db0f-11e4-89ef-478d547e331f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"e7b0981a-db0f-11e4-89ef-51f52912382c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"e7b0981b-db0f-11e4-89ef-dbce7409a477","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[15],"tindex":"e7b0981c-db0f-11e4-89ef-29220bfe0932","variableMapping":{"hash":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"e7b0981d-db0f-11e4-89ef-5bdf1d8dbbaf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"e7b0981e-db0f-11e4-89ef-7b7670b22618","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[174,459,475],"tindex":"e7b0981f-db0f-11e4-89ef-4ff464b59ce1","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"e7b09820-db0f-11e4-89ef-3f10971b4dae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:132","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[319],"tindex":"e7b09821-db0f-11e4-89ef-d7ec503945d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"e7b09822-db0f-11e4-89ef-9dcc321202b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[17,18,19,22,24,166,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,476],"tindex":"e7b0bf33-db0f-11e4-89ef-bfd4f346269b","variableMapping":{"bytesForFlags":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"e7b0bf34-db0f-11e4-89ef-69e694066db6","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[16,17,18,19,20,21,22,24,25,26,27,31,32,33,34,35,36,37,38,39,41,42,43,44,45,254,255,256,257,258,259,477,478,284,306,323,326,327,335,479,480,369,372,373,381,403,416,417,425,447,481,482,483,484,485,486],"tindex":"e7b0bf35-db0f-11e4-89ef-5b86401b3f17","variableMapping":{"arrayLength":"bytePos","maxGeoRef":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"e7b0bf36-db0f-11e4-89ef-13e3b7de2661","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"e7b0bf37-db0f-11e4-89ef-6df48dd2f51e","variableMapping":{"red":"i","green":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"e7b0bf38-db0f-11e4-89ef-c9da77aef8fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:366","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"e7b0bf39-db0f-11e4-89ef-91ad7a7c3608","variableMapping":{"incEleSum":"minLat","incDist2DSum":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[465,466,468,470,471,487,472,473,474,237,243,246,263,269,272],"tindex":"e7b0bf3a-db0f-11e4-89ef-d7d3042d229c","variableMapping":{"fwdFaster":"minLonTmp","incDist2DSum":"minLonTmp","fwdSlower":"midLon","fullDist2D":"minLonTmp","restDist2D":"minLonTmp","speed":"minLonTmp","decDist2DSum":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"e7b0bf3b-db0f-11e4-89ef-f52cc732142a","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":0},{"failures":[16,18,19,20,21,22,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,460,47,48,49,50,51,52,53,54,55,56,57,58,64,65,67,68,86,13,111,112,113,14,114,146,147,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,223,224,225,226,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,291,306,318,319,320,321,322,324,325,326,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,415,416,419,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,488,485,489,490,491,492,493,494,495],"tindex":"e7b0bf3c-db0f-11e4-89ef-59b254fffa84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"e7b0bf3d-db0f-11e4-89ef-0d47b98fe967","variableMapping":{"newUniqueOsmId":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[64,65,208,209,210,496,497,498,499,500],"tindex":"e7b0bf3e-db0f-11e4-89ef-11ce964c83b1","variableMapping":{"precision":"angle","lat":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"e7b0bf3f-db0f-11e4-89ef-3907ed50378c","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-2},{"failures":[1,12,2,118,3,5,6,7,9,10,11],"tindex":"e7b0e650-db0f-11e4-89ef-cbceeb05e62d","variableMapping":{"strLen":"pavementType","bLen":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[38,72,81,127,132,134,143,151,153,162],"tindex":"e7b0e651-db0f-11e4-89ef-0b8e46a21952","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"e7b0e652-db0f-11e4-89ef-9f7d1b9eac00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.Arrays.java.util.Arrays.asList(com.graphhopper.routing.util.FlagEncoder[]))"},"status":-2},{"failures":[],"tindex":"e7b0e653-db0f-11e4-89ef-cd4b3aaf34ae","variableMapping":{"bits":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"e7b0e654-db0f-11e4-89ef-75a62d3e03a2","variableMapping":{"algo":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"e7b0e655-db0f-11e4-89ef-afc4ac39da7a","variableMapping":{"location":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":0},{"failures":[178,501,502,459,475],"tindex":"e7b0e656-db0f-11e4-89ef-1100192efa57","variableMapping":{"ret":"child","retBucket":"i","i":"child","bucketSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-1},{"failures":[],"tindex":"e7b0e657-db0f-11e4-89ef-155f97e67630","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"defaultD","speed":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":0},{"failures":[],"tindex":"e7b15b88-db0f-11e4-89ef-9db02a01ebae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"e7b15b89-db0f-11e4-89ef-bf836e6757bb","variableMapping":{"high":"encoded","highKey":"encoded","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"e7b15b8a-db0f-11e4-89ef-89431a309a4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[103,129,148],"tindex":"e7b15b8b-db0f-11e4-89ef-ffb60c829f52","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"e7b15b8c-db0f-11e4-89ef-851660226f18","variableMapping":{"intVal":"child","degree":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"e7b15b8d-db0f-11e4-89ef-c54cdfeec532","variableMapping":{"autoRemoveTemporary":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:85","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[73,84,93,120,135,154],"tindex":"e7b15b8e-db0f-11e4-89ef-fb1f1ba81d36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"e7b15b8f-db0f-11e4-89ef-fb4f40f5947b","variableMapping":{"size":"usedBits","newSize":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"e7b15b90-db0f-11e4-89ef-eb1895a028c8","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":0},{"failures":[16,17,18,19,20,21,22,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,460,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,62,63,64,65,67,68,86,13,111,112,113,14,114,146,147,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,223,224,225,226,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,503,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,291,306,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,488,485,489,491,504,492,493],"tindex":"e7b15b91-db0f-11e4-89ef-0f8a96004fda","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-1},{"failures":[],"tindex":"e7b15b92-db0f-11e4-89ef-c1edd099b60c","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"e7b182a3-db0f-11e4-89ef-6f37579532e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,505,45,506,507,508,460,509,510,511,512,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,62,63,64,65,67,68,86,13,111,112,113,14,114,146,147,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,513,514,515,516,517,223,224,225,226,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,503,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,518,519,291,306,520,521,522,523,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,524,525,526],"tindex":"e7b182a4-db0f-11e4-89ef-67f3975c8b7b","variableMapping":{"name":"location","type":"type","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:101","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DAType.equals(com.graphhopper.storage.DataAccess.getType())))\n    throw new java.lang.IllegalStateException((((((\"Found existing DataAccess object \\'\" + java.lang.String) + \"\\' but types did not match. Requested:\") + com.graphhopper.storage.DAType) + \", was:\") + (com.graphhopper.storage.DataAccess.getType())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[],"tindex":"e7b182a5-db0f-11e4-89ef-1bd46c526b05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[31,44,45,527],"tindex":"e7b182a6-db0f-11e4-89ef-97b9525b9fe7","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"e7b182a7-db0f-11e4-89ef-a1be6738f899","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"e7b182a8-db0f-11e4-89ef-433d70332709","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 1))"},"status":-2},{"failures":[],"tindex":"e7b182a9-db0f-11e4-89ef-13834a0b52d0","variableMapping":{"val":"connectedId","com.graphhopper.coll.SparseIntIntArray.DELETED":"start","keys":"nodeIndex","values":"nodeLowLink","i":"connectedId","o":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"e7b182aa-db0f-11e4-89ef-65281afa395d","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"e7b182ab-db0f-11e4-89ef-595235b117e3","variableMapping":{"com.graphhopper.storage.DAType.MMAP":"type","type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":0},{"failures":[],"tindex":"e7b182ac-db0f-11e4-89ef-093afcf8aa3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"e7b182ad-db0f-11e4-89ef-5f1fad0a55b2","variableMapping":{"ar_y":"fwdIncline","ab_y":"fwdIncline","ar_x":"fwdIncline","ab_x":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"e7b182ae-db0f-11e4-89ef-7b8971681212","variableMapping":{"shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[],"tindex":"e7b182af-db0f-11e4-89ef-9d57796c12a1","variableMapping":{"fromDist":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"e7b1a9c0-db0f-11e4-89ef-4b17de4b37fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"e7b1a9c1-db0f-11e4-89ef-35e2475bf24e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[16,16,17,18,18,19,19,20,20,21,21,22,23,23,24,25,26,26,27,27,28,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,460,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,62,63,64,65,67,68,86,13,111,112,113,14,114,146,147,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,223,224,225,226,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,503,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,306,318,319,320,321,322,323,324,325,326,327,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"e7b1a9c2-db0f-11e4-89ef-11d69b4cafc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"e7b1a9c3-db0f-11e4-89ef-d5ab009e9abc","variableMapping":{"nanoTime":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"e7b1a9c4-db0f-11e4-89ef-475c064f86c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[21,26,31,32,45,71,87,90],"tindex":"e7b1a9c5-db0f-11e4-89ef-4d871380d9e6","variableMapping":{"high":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"e7b1a9c6-db0f-11e4-89ef-057275ea0309","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":357,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":198,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":323,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":462,"com.graphhopper.GraphHopperAPITest.testNoLoad":222,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":281,"com.graphhopper.reader.OSMReaderTest.testFerry":31,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":217,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":119,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":266,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":17,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":500,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":387,"com.graphhopper.coll.CompressedArrayTest.testCompress":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":125,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":170,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":301,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":432,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":262,"com.graphhopper.util.AngleCalcTest.testOrientation":496,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":176,"com.graphhopper.GraphHopperTest.testPrepare":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":165,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":439,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":190,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":207,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":503,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":205,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":4,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":188,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":369,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":331,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":459,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":179,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":247,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":491,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":241,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":70,"com.graphhopper.reader.OSMReaderTest.testSort":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":142,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":373,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":451,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":416,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":314,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":54,"com.graphhopper.storage.RAMDataAccessTest.testHeader":484,"com.graphhopper.routing.DijkstraTest.initializationError":59,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":460,"com.graphhopper.storage.MMapDataAccessTest.testHeader":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":408,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":356,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":478,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":490,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":428,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":370,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":377,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":80,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":270,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":268,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":184,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":333,"com.graphhopper.coll.OSMIDMapTest.testGetLong":516,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":397,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":348,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":326,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":350,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":498,"com.graphhopper.coll.CompressedArrayTest.testCompress2":473,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":388,"com.graphhopper.GraphHopperAPITest.testLoad":220,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":330,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":489,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":84,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":433,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":423,"com.graphhopper.storage.LevelGraphStorageTest.testClone":335,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":527,"com.graphhopper.reader.OSMReaderTest.testBarriers":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":187,"com.graphhopper.util.GHUtilityTest.testCopy":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":279,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":127,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":227,"com.graphhopper.routing.PathTest.testFindInstruction":65,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":122,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":379,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":501,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":90,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":219,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":150,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":224,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":452,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":437,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":406,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":172,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":159,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":66,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":286,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":419,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":495,"com.graphhopper.util.InstructionListTest.testWayList2":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":248,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":457,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":526,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":146,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":417,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":339,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":295,"com.graphhopper.storage.RAMDirectoryTest.testSynched":520,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":389,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":186,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":422,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":36,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":481,"com.graphhopper.routing.AStarTest.initializationError":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":200,"com.graphhopper.coll.OSMIDMapTest.testGet":513,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":386,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":477,"com.graphhopper.routing.PathBidirRefTest.testExtract":67,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":136,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":352,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":515,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":274,"com.graphhopper.storage.RAMDataAccessTest.testCopy":483,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":414,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":135,"com.graphhopper.util.GHUtilityTest.testSort2":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":195,"com.graphhopper.reader.OSMReaderTest.testMain":33,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":327,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":396,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":487,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":95,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":374,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":342,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":346,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":463,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":367,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":51,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":8,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":485,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":349,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":44,"com.graphhopper.storage.StorablePropertiesTest.testStore":524,"com.graphhopper.storage.GraphHopperStorageTest.testClone":425,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":310,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":102,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":521,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":100,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":435,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":318,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":287,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":321,"com.graphhopper.routing.PathTest.testTime":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":77,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":365,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":250,"com.graphhopper.reader.OSMReaderTest.testRelation":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":300,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":354,"com.graphhopper.util.GHUtilityTest.testSortDirected":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":161,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":50,"com.graphhopper.GraphHopperTest.testFootOnly":26,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":98,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":255,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":523,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":296,"com.graphhopper.search.NameIndexTest.testCreate":512,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":47,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":486,"com.graphhopper.routing.QueryGraphTest.testOneWay":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":251,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":468,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":239,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":465,"com.graphhopper.reader.OSMReaderTest.testWithBounds":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":162,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":302,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":332,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":128,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":400,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":99,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":393,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":421,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":181,"com.graphhopper.util.InstructionListTest.testWayList":208,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":134,"com.graphhopper.GraphHopperAPITest.testDisconnected179":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":288,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":469,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":283,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":519,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":157,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":316,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":20,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":427,"com.graphhopper.routing.util.EncodedValueTest.testSwap":15,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":129,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":445,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":192,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":103,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":202,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":420,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":277,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":504,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":145,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":415,"com.graphhopper.routing.PathTest.testWayList":64,"com.graphhopper.storage.MMapDataAccessTest.testCopy":479,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":292,"com.graphhopper.coll.OSMIDMapTest.testGet2":514,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":203,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":482,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":360,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":506,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":140,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":438,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":384,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":271,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":154,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":502,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.util.GHUtilityTest.testSort":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":305,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":139,"com.graphhopper.search.NameIndexTest.testPut":510,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":413,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":424,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":226,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":232,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":151,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":230,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":73,"com.graphhopper.storage.MMapDirectoryTest.testSynched":518,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":110,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":507,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":394,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":13,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":494,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":345,"com.graphhopper.routing.PathTest.testFound":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":306,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":27,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":71,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":362,"com.graphhopper.util.AngleCalcTest.testAtan2":497,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":138,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":390,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":476,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":511,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":291,"com.graphhopper.util.InstructionListTest.testEmptyList":206,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":126,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":196,"com.graphhopper.reader.PrinctonReaderTest.testRead":29,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":267,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":290,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":466,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":517,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":280,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":395,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":461,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":522,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":149,"com.graphhopper.reader.OSMReaderTest.testFoot":32,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":304,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":508,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":245,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":366,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":115,"com.graphhopper.reader.OSMReaderTest.testOneWay":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":246,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":434,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":449,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":123,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":298,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":429,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":171,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":169,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":233,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":294,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":49,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":418,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":505,"com.graphhopper.routing.PathBidirRefTest.testExtract2":68,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":492,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":249,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":509,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":447,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":82,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":38,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":317,"com.graphhopper.util.SimpleIntDequeTest.testPush":464,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":242,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":450,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":215,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":104,"com.graphhopper.GraphHopperTest.testFootAndCar":21,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":442,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":344,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":278,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":284,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":381,"com.graphhopper.storage.StorablePropertiesTest.testLoad":525,"com.graphhopper.GraphHopperTest.testPrepareOnly":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":199,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":282,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":41,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":322,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":210,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":88,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":39,"com.graphhopper.routing.AStarBidirectionTest.initializationError":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":297,"com.graphhopper.util.AngleCalcTest.testCombined":499,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":108,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":361,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":359,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":372}}]
