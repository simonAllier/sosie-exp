[{"failures":[],"tindex":"9ec0c8f9-db48-11e4-a939-75bc45fd802d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[0,1],"tindex":"9ec276aa-db48-11e4-a939-ad322bbce75b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"9ec276ab-db48-11e4-a939-59cc9ecd2432","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[2,3,4,5,6,7,8],"tindex":"9ec276ac-db48-11e4-a939-853cb80e3297","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"9ec276ad-db48-11e4-a939-bb3fa3c18f60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"9ec276ae-db48-11e4-a939-315a8609492d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":0},{"failures":[],"tindex":"9ec276af-db48-11e4-a939-8d4bc2f0f6a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"9ec276b0-db48-11e4-a939-c15244c93dfa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"9ec276b1-db48-11e4-a939-6d8bc0b78650","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9ec276b2-db48-11e4-a939-ed4bf985886e","variableMapping":{"java.lang.Double.MAX_VALUE":"fwdSpeed","existingDirectWeight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"9ec29cc3-db48-11e4-a939-f983e2be3556","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"9ec29cc4-db48-11e4-a939-418cd8ca6f0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"9ec29cc5-db48-11e4-a939-7bef127bb6c9","variableMapping":{"need":"noOfStates","i":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"9ec29cc6-db48-11e4-a939-3f9c272ce588","variableMapping":{"x1":"size","sLon":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"9ec29cc7-db48-11e4-a939-ab4d1749b1dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"9ec29cc8-db48-11e4-a939-4da0c0253a7c","variableMapping":{"str":"pavementName","key":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[],"tindex":"9ec29cc9-db48-11e4-a939-5b77c30ad1d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"9ec29cca-db48-11e4-a939-27f73d66a976","variableMapping":{"towerNodeDistance":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"9ec29ccb-db48-11e4-a939-176f5d0a4480","variableMapping":{"pointIndex":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-2},{"failures":[],"tindex":"9ec29ccc-db48-11e4-a939-69618afe9c70","variableMapping":{"updatedA":"del","nodeA":"del"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"9ec29ccd-db48-11e4-a939-05799d0a7241","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"9ec29cce-db48-11e4-a939-736381bf0c24","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[9],"tindex":"9ec29ccf-db48-11e4-a939-970113e67d1d","variableMapping":{"low":"minutes","guess":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"9ec29cd0-db48-11e4-a939-8d8b6005000f","variableMapping":{"high":"segmentsToCreate","guess":"segmentsToCreate","low":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"9ec29cd1-db48-11e4-a939-bba7e6a5da04","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[10,11,12,13,14,15,16,17],"tindex":"9ec2c3e2-db48-11e4-a939-155f0827a809","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[2,3,4,5,6,7,8],"tindex":"9ec2c3e3-db48-11e4-a939-d707601d9aeb","variableMapping":{"distInMeter":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"9ec2c3e4-db48-11e4-a939-b5bf56734c2c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"9ec2c3e5-db48-11e4-a939-f1c24ab84ece","variableMapping":{"remainingSegNo":"com.graphhopper.routing.util.PriorityWeighting.KEY","segmentSizeInBytes":"com.graphhopper.routing.util.PriorityWeighting.KEY","capacity":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:418","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,2,3,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,13,238,239,240,14,241,242,243,244,245,246,247,248,15,249,16,250,17,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"9ec2c3e6-db48-11e4-a939-7b2ae997e066","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , com.graphhopper.routing.util.FootFlagEncoder.int , com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"9ec2c3e7-db48-11e4-a939-752251cd16ad","variableMapping":{"edgeId":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","lastEdgeIndex":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:169","type":"CtReturnImpl","sourcecode":"return (int) > (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"9ec2c3e8-db48-11e4-a939-979bbc0baebd","variableMapping":{"flags":"directionBitMask","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,62,287,288,289,290,291,292,63,293,294,295,296,297,298,299,300,301,302,303,304,305,64,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,65,325,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,0,1,347,348,204,349,350,351,352,353,354,231,231,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,367,10,368,369,370,371,372,11,373,374,375,12,376,232,233,234,235,236,237,13,238,239,240,14,241,242,243,244,245,246,247,248,15,249,16,250,17,253,377,378,379,380,254,381,382,383,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,384,385,386],"tindex":"9ec2eaf9-db48-11e4-a939-ad3c6e4fc35f","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,62,287,288,289,290,291,292,63,294,295,296,297,298,299,300,301,302,303,304,305,64,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,326,327,387,328,329,330,331,332,333,334,388,335,336,337,338,339,340,341,342,343,344,201,345,346,0,1,347,348,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,2,3,218,219,220,221,222,223,224,349,350,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,4,406,407,408,409,410,225,411,226,227,412,413,228,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,5,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,6,446,447,448,7,449,450,451,452,453,454,455,456,457,458,459,460,8,461,462,229,351,352,353,354,230,231,355,356,357,358,359,360,361,362,363,364,365,366,367,463,10,368,369,370,371,372,11,373,374,375,12,376,232,233,234,235,236,237,13,238,239,240,14,241,242,243,244,245,246,247,248,15,249,16,250,17,251,252,253,377,378,379,380,254,381,464,382,383,255,256,465,257,258,259,260,261,262,263,264,265,466,266,267,268,269,467,270,384,385,386],"tindex":"9ec3120a-db48-11e4-a939-61d918a7abec","variableMapping":{"locs":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"9ec3120b-db48-11e4-a939-4fa757e32c32","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"9ec3120c-db48-11e4-a939-2f56777bc792","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:366","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"9ec3120d-db48-11e4-a939-398ec15be6b5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"9ec3120e-db48-11e4-a939-c53f9aaec40b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"9ec3120f-db48-11e4-a939-f9c6843acd08","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"9ec31210-db48-11e4-a939-6f8c682b7d59","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:69","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Dijkstra.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[205,209],"tindex":"9ec31211-db48-11e4-a939-479b3c398bed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"9ec31212-db48-11e4-a939-8587c7177b9c","variableMapping":{"x1":"maxLat","x2":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:150","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[202,211,398,423,438,454,261,266],"tindex":"9ec31213-db48-11e4-a939-119a92edc888","variableMapping":{"high":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[19,24,25,26,33,35,48,53,56,60,66,69,74,75,76,83,85,98,103,106,110,112,113,114,121,123,136,141,144,148,158,163,164,165,172,174,187,192,195,199,326,328,329,340,345,347,348,202,211,214,215,218,222,398,225,423,438,454,358,361,366,10,368,11,373,374,376,232,233,237,239,241,243,244,17,378,379,380,254,381,383,255,257,258,259,261,264,265,266,267,268,270,385,386],"tindex":"9ec31214-db48-11e4-a939-8f44cf62e5d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[366,373,232,233,17],"tindex":"9ec31215-db48-11e4-a939-4f89b86672da","variableMapping":{"x1":"from","sLon":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"9ec31216-db48-11e4-a939-cf5d4f4ccce1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"9ec33927-db48-11e4-a939-0dc44cc5304e","variableMapping":{"byteCount":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"9ec33928-db48-11e4-a939-29574a891bbb","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[345,347,348],"tindex":"9ec33929-db48-11e4-a939-53cfb548be86","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[19,45,51,56,273,311,66,69,95,101,106,133,138,139,144,468,469,158,184,190,195,470,471,472,473,474,475,476,477,478,479,480,481,482,333,338,353,355,362,365,249,483,484,253,379,380,381,383,257,259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"9ec3392a-db48-11e4-a939-4b3f0373a664","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[485],"tindex":"9ec3392b-db48-11e4-a939-bf2eb3d9b59c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"9ec3392c-db48-11e4-a939-e575de4bba07","variableMapping":{"lastKey":"mask","key":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"9ec3392d-db48-11e4-a939-0fd45cda6ff1","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"9ec3392e-db48-11e4-a939-8593753787ae","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9ec3392f-db48-11e4-a939-8fa43e053ed4","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[26,37,39,43,44,51,52,76,87,89,93,94,101,102,114,125,127,131,132,139,140,165,176,178,182,183,190,191,345,1],"tindex":"9ec33930-db48-11e4-a939-4144799e56d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9ec33931-db48-11e4-a939-e9efd8d832bb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"9ec33932-db48-11e4-a939-9b9f87e965ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[19,25,26,28,29,33,40,42,48,50,53,55,60,62,63,64,65,66,69,75,76,78,79,83,90,92,98,100,103,105,110,113,114,116,117,121,128,130,136,138,141,143,148,158,164,165,167,168,172,179,181,187,189,192,194,199,326,327,329,330,333,337,338,339,343,344,345,346,0,1,347,210,217,222,358,10,368,369,370,371,11,374,12,376,232,234,235,236,237,13,238,239,240,14,244,245,246,247,15,249,16,250,17,385,386],"tindex":"9ec33933-db48-11e4-a939-f1e47451c05d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-1},{"failures":[],"tindex":"9ec33934-db48-11e4-a939-1d4fb63f0e83","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[18,19,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,62,287,288,289,290,292,63,294,295,296,297,299,300,301,302,303,305,64,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,65,66,68,69,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,123,138,486,487,150,151,152,153,154,156,157,158,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,0,1,347,348,204,349,350,353,354,231,355,356,357,358,359,360,361,362,363,364,365,366,367,10,368,369,370,371,372,11,373,374,375,12,376,232,233,234,235,236,237,13,238,239,240,14,241,242,243,244,245,246,247,248,15,249,16,250,17,253,378,379,380,254,381,382,383,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,384,385,386],"tindex":"9ec36045-db48-11e4-a939-93d2d5adaed0","variableMapping":{"size":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"9ec36046-db48-11e4-a939-874bf1942623","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[271,277,279,280,488,309,315,317,318,489,490,491,492,493,494,495,496,497,498,499],"tindex":"9ec36047-db48-11e4-a939-b5bc45bd035e","variableMapping":{"len":"hash","start":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[0,1,270],"tindex":"9ec36048-db48-11e4-a939-b9cfb7c300b2","variableMapping":{"segmentSizeInBytes":"maxCount","index":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"9ec36049-db48-11e4-a939-75a390d1e256","variableMapping":{"hasOther":"synched","hasRel":"synched"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[376,232,233,249,16,17],"tindex":"9ec471ba-db48-11e4-a939-c3e602f25fd6","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[221,396,226,421,264],"tindex":"9ec471bb-db48-11e4-a939-fb590aec9a0e","variableMapping":{"flags":"turnRestrictionBit","scDirMask":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"9ec471bc-db48-11e4-a939-3152d37978f6","variableMapping":{"edgeId":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","nextEdge":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":0},{"failures":[],"tindex":"9ec471bd-db48-11e4-a939-67cc619e9bbe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[232],"tindex":"9ec471be-db48-11e4-a939-c153a30f5b41","variableMapping":{"weightLong":"flags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"9ec471bf-db48-11e4-a939-cfdde12caedd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[264],"tindex":"9ec471c0-db48-11e4-a939-f1c5474ce9a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"9ec471c1-db48-11e4-a939-73636ecd829b","variableMapping":{"distance":"durationInHours","speed":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"9ec498d2-db48-11e4-a939-274ab5b9be3d","variableMapping":{"mask":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-2},{"failures":[151],"tindex":"9ec498d3-db48-11e4-a939-37b3460778cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[2,3,4,5,6,7,8],"tindex":"9ec498d4-db48-11e4-a939-fdcf1ce87515","variableMapping":{"maxSpeed":"speed","fwdSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"9ec498d5-db48-11e4-a939-63092cd8adf6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"9ec498d6-db48-11e4-a939-11bf8785a12a","variableMapping":{"pos":"nextWayBit","mSize":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[150,11,12],"tindex":"9ec498d7-db48-11e4-a939-e1b2492c1f65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"9ec498d8-db48-11e4-a939-e18eefa4dd70","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"9ec498d9-db48-11e4-a939-01115aa65a49","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"9ec498da-db48-11e4-a939-ab1f5a6a1bfb","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[489,490,491,492,494,495,496,499],"tindex":"9ec498db-db48-11e4-a939-fb6c863c2e0e","variableMapping":{"orientation":"midLon","resultOrientation":"lon","baseOrientation":"lon","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[489,490,491,492,494,500,495,496,499],"tindex":"9ec498dc-db48-11e4-a939-b9de0ca8b166","variableMapping":{"cap":"initialBits","bytes":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-1},{"failures":[340,212,213,2,3,224,394,395,404,4,228,419,420,429,5,437,444,6,7,450,452,459,8,378,379,380,254,381,383,269],"tindex":"9ec498dd-db48-11e4-a939-d9988bec9106","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-1},{"failures":[18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,62,287,288,289,290,292,63,294,295,296,297,299,300,301,302,303,305,64,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,65,66,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,138,501,486,502,503,504,468,469,487,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,0,1,347,348,204,349,350,353,354,231,355,356,357,358,359,360,361,362,363,364,365,366,367,10,368,369,370,371,372,11,373,374,375,12,376,232,233,234,235,236,237,13,238,239,240,14,241,242,243,244,245,246,247,248,15,249,16,250,17,253,377,378,379,380,254,381,382,383,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,384,385,386],"tindex":"9ec498de-db48-11e4-a939-f127c5a2af0b","variableMapping":{"intVal":"segmentsToCreate","degree":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[0,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,2,3,218,219,220,221,222,223,224,349,350,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,4,406,407,408,225,411,226,412,228,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,5,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,6,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,8,461,462,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"9ec4bfef-db48-11e4-a939-c9ae992406b1","variableMapping":{"index":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"9ec4bff0-db48-11e4-a939-3dfec6bd191a","variableMapping":{"delNodes":"to","this":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.inPlaceNodeRemove(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[],"tindex":"9ec4bff1-db48-11e4-a939-279552578565","variableMapping":{"updatedA":"usedBits","nodeA":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"9ec4bff2-db48-11e4-a939-9133cb8d3bc0","variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:178","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[150,367,10,11,12,15],"tindex":"9ec4bff3-db48-11e4-a939-f5d16af16a4b","variableMapping":{"high":"scDirMask","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"9ec4bff4-db48-11e4-a939-e7b31c6e0ba4","variableMapping":{"i":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9ec4bff5-db48-11e4-a939-f364ac78428f","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"9ec4bff6-db48-11e4-a939-a39a194d70a4","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":0},{"failures":[350],"tindex":"9ec4bff7-db48-11e4-a939-9d4908360b8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[326,327,337,338,339,340,10,371,11,233,234,235,236,237,13,238,239,240,14,242,243,244,245,246,247,15,249,16,250,17,378,380,254,383,255],"tindex":"9ec4bff8-db48-11e4-a939-4384490d2a76","variableMapping":{"nodeId":"noOfStates","mainNodes":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"9ec4bff9-db48-11e4-a939-3ddb9bc823fb","variableMapping":{"towerNodeDistance":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"9ec4bffa-db48-11e4-a939-2b5bfd73d432","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"9ec4bffb-db48-11e4-a939-8d3b1cf0076c","variableMapping":{"a":"closed","approx":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":248,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":355,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":7,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":155,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":289,"com.graphhopper.GraphHopperAPITest.testNoLoad":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.reader.OSMReaderTest.testFerry":257,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":329,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":419,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":312,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":377,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":84,"com.graphhopper.coll.CompressedArrayTest.testCompress":490,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":459,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":59,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":133,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":35,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":374,"com.graphhopper.GraphHopperTest.testPrepare":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":247,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":417,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":14,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":337,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":293,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":460,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":342,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":161,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":309,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":347,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":234,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":239,"com.graphhopper.coll.BitSetImplTest.testCopy":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":274,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":420,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":66,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":497,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":376,"com.graphhopper.GraphHopperTest.testLoadOSM":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":275,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":413,"com.graphhopper.reader.OSMReaderTest.testSort":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":0,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":70,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":54,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":19,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":146,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":361,"com.graphhopper.routing.DijkstraTest.initializationError":229,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":105,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":188,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":31,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":67,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":74,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":448,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":6,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":316,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":244,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":307,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":314,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":464,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":237,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":88,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":94,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":180,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":158,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":182,"com.graphhopper.coll.CompressedArrayTest.testCompress2":489,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":44,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":85,"com.graphhopper.GraphHopperAPITest.testLoad":326,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":162,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":502,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":36,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":26,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":9,"com.graphhopper.storage.LevelGraphStorageTest.testClone":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":75,"com.graphhopper.reader.OSMReaderTest.testBarriers":261,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":238,"com.graphhopper.util.GHUtilityTest.testCopy":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":443,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":291,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":461,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":473,"com.graphhopper.routing.PathTest.testFindInstruction":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":456,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":76,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":208,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":328,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":392,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":55,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":103,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":89,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":403,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":227,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":230,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":169,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":118,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":487,"com.graphhopper.util.InstructionListTest.testWayList2":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":282,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":60,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":418,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":108,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":416,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":349,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":171,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":86,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":13,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":25,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":262,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":475,"com.graphhopper.routing.AStarTest.initializationError":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":249,"com.graphhopper.coll.OSMIDMapTest.testGet":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":83,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":209,"com.graphhopper.routing.PathBidirRefTest.testExtract":343,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":424,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":320,"com.graphhopper.storage.RAMDataAccessTest.testCopy":470,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":139,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":423,"com.graphhopper.storage.RAMDataAccessTest.testSegments":472,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":62,"com.graphhopper.util.GHUtilityTest.testSort2":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":245,"com.graphhopper.reader.OSMReaderTest.testMain":259,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":159,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":425,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":498,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":321,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":431,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":187,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":143,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":174,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":178,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":199,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":175,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":390,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":486,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":181,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":269,"com.graphhopper.storage.GraphHopperStorageTest.testClone":28,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":2,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":38,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":119,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":153,"com.graphhopper.routing.PathTest.testTime":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":442,"com.graphhopper.util.BitUtilLittleTest.testToFloat":481,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":197,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":168,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":223,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":132,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":186,"com.graphhopper.reader.OSMReaderTest.testRelation":466,"com.graphhopper.util.GHUtilityTest.testSortDirected":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":4,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":478,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":357,"com.graphhopper.GraphHopperTest.testFootOnly":255,"com.graphhopper.util.BitUtilLittleTest.testToInt":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":451,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":216,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":295,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":315,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":128,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":471,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":231,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":504,"com.graphhopper.routing.QueryGraphTest.testOneWay":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":285,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":494,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":455,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":273,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":491,"com.graphhopper.reader.OSMReaderTest.testWithBounds":268,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":346,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":134,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":210,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":411,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":164,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":404,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":462,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":97,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":90,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":24,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":233,"com.graphhopper.util.BitUtilLittleTest.testToBitString":480,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":57,"com.graphhopper.util.InstructionListTest.testWayList":338,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":422,"com.graphhopper.GraphHopperAPITest.testDisconnected179":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":120,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":500,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":401,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":386,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":131,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":501,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":429,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":380,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":30,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":375,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":414,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":242,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":373,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":439,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":72,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":183,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":323,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":503,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":433,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":18,"com.graphhopper.routing.PathTest.testWayList":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":17,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":428,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":41,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":203,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":81,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":318,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":436,"com.graphhopper.util.GHUtilityTest.testSort":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":278,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":499,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":454,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":110,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":310,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":299,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":302,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":394,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":360,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":68,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":383,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":438,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":345,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":469,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":138,"com.graphhopper.routing.PathTest.testFound":351,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":228,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":256,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":194,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":426,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":87,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":123,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":33,"com.graphhopper.util.InstructionListTest.testEmptyList":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":243,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":212,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":211,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":246,"com.graphhopper.reader.PrinctonReaderTest.testRead":385,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":313,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":122,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":112,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":399,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":458,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":391,"com.graphhopper.reader.OSMReaderTest.testFoot":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":136,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":365,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":279,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":496,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":449,"com.graphhopper.reader.OSMReaderTest.testOneWay":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":280,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":37,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":52,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":457,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":477,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":397,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":370,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":488,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":12,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":368,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":476,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":126,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":356,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":21,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":467,"com.graphhopper.routing.PathBidirRefTest.testExtract2":344,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":232,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":445,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":50,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":447,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":205,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":276,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":53,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":388,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":220,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":45,"com.graphhopper.GraphHopperTest.testFootAndCar":254,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":176,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":116,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":15,"com.graphhopper.GraphHopperTest.testPrepareOnly":253,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":292,"com.graphhopper.GraphHopperTest.testVia":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":114,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":266,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":154,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":49,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":340,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":206,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":129,"com.graphhopper.routing.AStarBidirectionTest.initializationError":201,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":224,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":193,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":191,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":69}}]
