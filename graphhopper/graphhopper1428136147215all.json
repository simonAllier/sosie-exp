[{"failures":[],"tindex":"a9c8aced-daa4-11e4-85bb-a5d319c8dd29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[],"tindex":"a9ca81ae-daa4-11e4-85bb-fbf1b733fb69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[],"tindex":"a9ca81af-daa4-11e4-85bb-354731e1332e","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edgeId":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeIterator:60","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"a9caa8c0-daa4-11e4-85bb-2f2dde37a694","variableMapping":{"this":"this","edgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"a9caa8c1-daa4-11e4-85bb-dfe3ea3d78d2","variableMapping":{"index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"a9caa8c2-daa4-11e4-85bb-c79006968bca","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"a9caa8c3-daa4-11e4-85bb-b902dd47390d","variableMapping":{"scDirMask":"oldRelationFlags","flags":"oldRelationFlags","dir":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a9caa8c4-daa4-11e4-85bb-e30b5c5359d1","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":0},{"failures":[],"tindex":"a9caa8c5-daa4-11e4-85bb-7d0b8f4699f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"a9caa8c6-daa4-11e4-85bb-3db2ff9d775e","variableMapping":{"width":"start","latSimilar":"len","lonSimilar":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"a9caa8c7-daa4-11e4-85bb-335fffec0540","variableMapping":{"delta_lat":"y","r_lat":"y","a_lat":"y","delta_lon":"y","r_lon":"y","a_lon":"y","norm":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"a9caa8c8-daa4-11e4-85bb-3d8a21e70899","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1378","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.checkInit()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[],"tindex":"a9caa8c9-daa4-11e4-85bb-5fc331db0d11","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"a9caa8ca-daa4-11e4-85bb-b9ae5536817b","variableMapping":{"str":"str","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":0},{"failures":[46,0,1,2,3,11,13,16,17,19,20,22,47],"tindex":"a9caa8cb-daa4-11e4-85bb-8da4f9a39f8b","variableMapping":{"i":"I_LEVEL","child":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"a9caa8cc-daa4-11e4-85bb-db5f165aa339","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"a9cacfdd-daa4-11e4-85bb-3d55fa44e214","variableMapping":{"instruction":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"a9cacfde-daa4-11e4-85bb-0734d100e9cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a9cacfdf-daa4-11e4-85bb-97198f7bab81","variableMapping":{"edgeId":"usedBits","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"a9cacfe0-daa4-11e4-85bb-451e3126bdc6","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":0},{"failures":[],"tindex":"a9cacfe1-daa4-11e4-85bb-21aef0c40692","variableMapping":{"additionalEdgeFilter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"a9cacfe2-daa4-11e4-85bb-75f6a0c470d7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[48,46,49,50,51,52,53,54,55,56,57,58,59,60,61,0,1,2,62,3,4,5,6,7,8,9,10,11,12,13,14,63,15,16,17,18,19,20,64,21,22,23,24,25,26,27,65,66,67,68,28,29,69,70,71,30,47],"tindex":"a9cacfe3-daa4-11e4-85bb-cdc2bb0d4eb8","variableMapping":{"id":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"a9cacfe4-daa4-11e4-85bb-639180bc68bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"a9cacfe5-daa4-11e4-85bb-37be242a991b","variableMapping":{"high":"segmentSizePower","low":"segmentsToCreate","guess":"length","guessedKey":"cap","key":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:477","type":"CtIfImpl","sourcecode":"if (long < long) {\n    int = int;\n} else {\n    int = int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[0,1,72,73,2,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"a9cacfe6-daa4-11e4-85bb-71b6b6ece405","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[87,88,89,34,90,91,92,93,94],"tindex":"a9cacfe7-daa4-11e4-85bb-93148a977850","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[95,96,97,98,5,6,7,10,11,13,14,15,16,18,19,20,64,21,22,23,24,25,27,66,67,68,28,69,71],"tindex":"a9cacfe8-daa4-11e4-85bb-ddf6f159b68e","variableMapping":{"foundIndex":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[],"tindex":"a9cacfe9-daa4-11e4-85bb-6d013e6a1384","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[],"tindex":"a9cacfea-daa4-11e4-85bb-7bfd8c6e8e9d","variableMapping":{"bytePointer":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:80","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"a9caf6fb-daa4-11e4-85bb-b10b5d5db425","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"a9caf6fc-daa4-11e4-85bb-83eb8a372194","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"a9caf6fd-daa4-11e4-85bb-b7409fa67832","variableMapping":{"java.lang.Integer.MAX_VALUE":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[],"tindex":"a9caf6fe-daa4-11e4-85bb-7b7d50de0264","variableMapping":{"deltaX":"java.lang.Double.MAX_VALUE","maxX":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"a9caf6ff-daa4-11e4-85bb-57b3f1f08256","variableMapping":{"costs":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[32,34,35,99,100,91,101,102,92,103,104,105,94,106],"tindex":"a9caf700-daa4-11e4-85bb-a106945ba75c","variableMapping":{"i":"speed","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"a9caf701-daa4-11e4-85bb-eff9cf9a85af","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"a9caf702-daa4-11e4-85bb-efad50bfa0aa","variableMapping":{"x1":"maxEle","x2":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"a9caf703-daa4-11e4-85bb-171de60fb7fc","variableMapping":{"minLatInit":"minLat","maxLonInit":"maxLat","minLonInit":"minLon","bounds":"this","maxLatInit":"java.lang.Double.NaN"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"a9caf704-daa4-11e4-85bb-a9d305287bbe","variableMapping":{"val":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[48],"tindex":"a9caf705-daa4-11e4-85bb-e3f473559842","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-1},{"failures":[107],"tindex":"a9caf706-daa4-11e4-85bb-171ba9b81970","variableMapping":{"y1":"edgeEntryBytes","y2":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-1},{"failures":[],"tindex":"a9caf707-daa4-11e4-85bb-2bd4bf6032b1","variableMapping":{"high":"maxValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a9caf708-daa4-11e4-85bb-c7dd1605b052","variableMapping":{"flags":"initialBits","scDirMask":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":0},{"failures":[87,88,89,33,34,35,37,39,42,43,99,90,108,91,109,110,111,112,113,101,102,92,114,115,116,117,118,103,104,93,119,94,120,121,122,123,124,106],"tindex":"a9caf709-daa4-11e4-85bb-45fcde79300b","variableMapping":{"red":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,49,50,140,141,142,51,52,53,143,54,55,56,57,58,59,144,145,146,147,60,61,0,1,72,73,2,62,74,3,148,75,76,149,77,150,151,78,79,80,81,82,83,152,153,154,13,16,17,20,155,156,157,158],"tindex":"a9cb1e1a-daa4-11e4-85bb-299d5c9e46cc","variableMapping":{"size":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"a9cb1e1b-daa4-11e4-85bb-7bea1dc3e38e","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:69","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Dijkstra.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[159,160,161,162],"tindex":"a9cb1e1c-daa4-11e4-85bb-b5ae9ec1d127","variableMapping":{"length":"bitsForEdgeFlags","factor":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-1},{"failures":[75,78,87,83,88,163,89,34,38,42,45,90,164,91,165,166,112,167,168,169,170,171,92,172,117,173,93,174,94,175,176,123,177],"tindex":"a9cb1e1d-daa4-11e4-85bb-75c1dc139bbc","variableMapping":{"shift":"value","tmpValue":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[],"tindex":"a9cb1e1e-daa4-11e4-85bb-b974a29968a2","variableMapping":{"closed":"out"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:142","type":"CtReturnImpl","sourcecode":"return boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"a9cb1e1f-daa4-11e4-85bb-f73f4fb96f76","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"a9cb1e20-daa4-11e4-85bb-99cc1d73e78b","variableMapping":{"ret":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:99","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":0},{"failures":[],"tindex":"a9cb1e21-daa4-11e4-85bb-f32ebcbec90e","variableMapping":{"line":"encoderList"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[178,179,180],"tindex":"a9cb1e22-daa4-11e4-85bb-fdbf379c08f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"a9cb1e23-daa4-11e4-85bb-13655e33cad8","variableMapping":{"width":"len","lonSimilar":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":0},{"failures":[125,126,181,182,183,184,185,186,187,188,107,48,189,46,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,159,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,160,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,127,280,128,129,130,131,281,132,282,133,134,135,136,137,138,139,49,50,283,140,284,141,142,51,52,285,53,286,143,54,55,56,57,58,59,287,144,145,146,288,289,147,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,161,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,162,339,340,341,342,343,344,1,72,73,345,3,346,347,348,349,350,351,352,75,76,149,77,150,151,78,79,87,80,81,82,353,354,83,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,368,369,370,371,372,178,152,153,154,179,180,373,374,375,4,5,6,7,8,9,10,11,12,13,14,63,15,16,17,18,19,20,64,21,22,23,24,25,26,376,27,65,66,67,68,377,28,29,69,70,71,30,155,156,378,379,380,381,382,86,383,384,385,386,47,387,388],"tindex":"a9cb4534-daa4-11e4-85bb-67e1e6725d38","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"a9cb4535-daa4-11e4-85bb-3b1ffe3600eb","variableMapping":{"flags":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a9cb4536-daa4-11e4-85bb-e1a46b04257f","variableMapping":{"angle":"java.lang.Double.MAX_VALUE","com.graphhopper.util.AngleCalc.PI3_4":"minEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"a9cb4537-daa4-11e4-85bb-cfa3e7e64fef","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"a9cb4538-daa4-11e4-85bb-e77377248892","variableMapping":{"high":"dir","highKey":"dir","key":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"a9cb4539-daa4-11e4-85bb-4bb307d7f15c","variableMapping":{"elem":"elem","keys":"elem","i":"child","key":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"a9cb453a-daa4-11e4-85bb-abc980789cbf","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[],"tindex":"a9cb453b-daa4-11e4-85bb-7bf4c2bf2c32","variableMapping":{"turnRestrictionBit":"nodeBitMask","shift":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"a9cb453c-daa4-11e4-85bb-f346c802e0f3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,194,214,220,225,228,407,408,237,257,263,268,271,128,129,130,141,142,51,144,145,146,288,147,409,302,322,328,333,336,340,341,343,344,60,0,1,72,2,62,74,3,352,76,149,77,150,151,78,79,80,81,82,353,83,355,356,358,359,360,362,363,366,371,373,374,22,380,381,382,47],"tindex":"a9cb453d-daa4-11e4-85bb-8ffe8fd3407f","variableMapping":{"mSize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"a9cb453e-daa4-11e4-85bb-91ef78546e65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"a9cb453f-daa4-11e4-85bb-b369d4aae58b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"a9cb4540-daa4-11e4-85bb-8d74411aacf7","variableMapping":{"line":"highwayValue","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:105","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-2},{"failures":[125,126,187,188,107,48,189,46,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,159,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,160,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,127,280,128,129,130,131,281,132,282,133,134,135,136,137,410,138,139,49,50,283,140,284,141,142,51,52,285,53,286,143,54,55,56,57,411,58,59,287,144,145,146,288,147,290,291,292,293,294,295,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,161,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,162,339,60,61,0,1,72,73,2,345,62,3,346,350,351,352,75,76,149,77,150,151,78,79,87,80,81,82,353,354,83,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,368,369,370,371,372,178,152,153,154,179,180,373,374,375,4,5,6,7,8,9,10,11,12,13,14,63,15,16,17,18,19,20,64,21,22,23,24,25,26,376,27,65,66,67,68,377,28,29,69,70,71,30,155,156,378,379,380,381,382,86,383,384,385,386,47,387,388],"tindex":"a9cb6b51-daa4-11e4-85bb-9965f2277e07","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"a9cb6b52-daa4-11e4-85bb-0353d82b2828","variableMapping":{"deltaX":"minLon","tmp":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"a9cb6b53-daa4-11e4-85bb-ef9cf01af978","variableMapping":{"gradient":"fwdIncline","yend":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"a9cb6b54-daa4-11e4-85bb-25e56c4389fd","variableMapping":{"mGarbage":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"a9cb6b55-daa4-11e4-85bb-a36bb20de689","variableMapping":{"need":"bitsForEdgeFlags","i":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[],"tindex":"a9cb6b56-daa4-11e4-85bb-0386ad1d203d","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[178,180],"tindex":"a9cb6b57-daa4-11e4-85bb-fbaa680a639d","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:826","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphStorage.isClosed())\n    throw new java.lang.IllegalStateException(\"You need to create a new GraphHopper instance as it is already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"a9cb6b58-daa4-11e4-85bb-f90abf10d0f7","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[6,9,10,20,21,23,26,28,29],"tindex":"a9cb6b59-daa4-11e4-85bb-d3cd87463e16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[374],"tindex":"a9cb6b5a-daa4-11e4-85bb-05354a4ef9d0","variableMapping":{"logSize":"flags","java.lang.Integer.MAX_VALUE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","logMessagesPercentage":"restDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:258","type":"CtIfImpl","sourcecode":"if ((double) == 0)\n    long = java.lang.Integer.int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[78],"tindex":"a9cb6b5b-daa4-11e4-85bb-57843c5b3a97","variableMapping":{"i":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[390,412,398,413,414,415,416,406,417,198,418,419,407,408,420,241,262,421,422,144,145,146,288,147,409,423,306,327,424,339,60,61,0,1,72,73,2,62,74,3,148,352,75,76,149,77,150,151,78,79,80,81,82,353,83],"tindex":"a9cb6b5c-daa4-11e4-85bb-e91faa9ff58d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[10,14,21,23,25,27,28,71],"tindex":"a9cb6b5d-daa4-11e4-85bb-2f9fbb28011c","variableMapping":{"key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:192","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[125,126,187,188,107,48,189,416,46,190,406,417,191,192,194,195,196,197,198,199,200,201,202,203,204,159,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,407,233,408,420,234,235,237,238,239,240,241,242,243,244,245,246,247,160,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,421,425,426,427,274,275,276,277,278,279,127,280,128,129,130,131,281,132,282,133,134,135,136,137,410,138,139,49,50,283,140,284,141,142,51,52,285,53,286,143,54,55,56,57,411,58,59,287,144,145,146,288,147,290,291,292,293,294,295,298,409,423,299,300,302,303,304,305,306,307,308,309,310,311,312,161,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,162,339,60,61,0,1,72,73,2,62,74,3,148,346,350,351,352,75,76,149,77,150,151,78,79,80,81,82,353,83,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,368,369,370,371,372,178,152,153,154,179,180,373,374,375,4,5,6,7,8,9,10,11,12,13,14,63,15,16,17,18,19,20,64,21,22,23,24,25,26,376,27,65,66,67,68,377,28,29,69,70,71,30,155,156,378,379,380,381,382,86,383,384,385,386,47,387,388],"tindex":"a9cb926e-daa4-11e4-85bb-81f68cfa85cd","variableMapping":{"size":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"a9cb926f-daa4-11e4-85bb-1baf8358a8d8","variableMapping":{"low":"I_SKIP_EDGE1","guess":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":0},{"failures":[97,13,68,28,71],"tindex":"a9cb9270-daa4-11e4-85bb-4f1b8ef6836c","variableMapping":{"java.lang.Integer.MAX_VALUE":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[428,416,190,406,417,159,429,407,430,233,408,420,160,431,410,411,144,145,146,288,289,147,432,433,298,409,423,161,434,435,436,437,424,438,439,440,441,442,443,162,444,445,446,447,448,449,450,451,452,453,454,455,456,457,339,458,459,460,461,462,463,464,465,466,467,468,60,61,0,2,62,74,148],"tindex":"a9cb9271-daa4-11e4-85bb-e9601168b988","variableMapping":{"obtained":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"a9cb9272-daa4-11e4-85bb-e9bd4c230e4b","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a9cb9273-daa4-11e4-85bb-ab5acc6410da","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"a9cb9274-daa4-11e4-85bb-9fd11850a580","variableMapping":{"red":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":0},{"failures":[374],"tindex":"a9cb9275-daa4-11e4-85bb-99cd5801a951","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:413","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[34],"tindex":"a9cb9276-daa4-11e4-85bb-ab95a630edb2","variableMapping":{"key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"a9cb9277-daa4-11e4-85bb-2d4bdd637743","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[44,469,470,471],"tindex":"a9cb9278-daa4-11e4-85bb-6d8e93706c7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"a9cb9279-daa4-11e4-85bb-85c71334967c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[90,93],"tindex":"a9cb927a-daa4-11e4-85bb-79c5dabb7368","variableMapping":{"entry":"highway","entryVal":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"a9cb927b-daa4-11e4-85bb-0925ca2f7019","variableMapping":{"freeIndex":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":0},{"failures":[],"tindex":"a9cb927c-daa4-11e4-85bb-8fb1daf9326d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"a9cbb98d-daa4-11e4-85bb-3123669173f6","variableMapping":{"tmp":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"a9cbb98e-daa4-11e4-85bb-79aae0cd3682","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[],"tindex":"a9cbb98f-daa4-11e4-85bb-cf17b3ad3ed7","variableMapping":{"lat":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":0},{"failures":[187,188,107,48,189,416,46,190,406,417,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,49,50,283,140,284,141,142,51,52,285,53,286,143,54,55,56,57,411,58,59,60,0,1,2,62,3,4,5,6,7,8,9,10,11,12,13,14,63,15,16,17,18,19,20,64,21,22,23,24,25,26,376,27,65,66,67,68,377,28,29,69,70,71,30,378,385,47],"tindex":"a9cbb990-daa4-11e4-85bb-a17d8b5fa109","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":64,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":356,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":416,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":435,"com.graphhopper.reader.OSMReaderTest.testFerry":352,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":383,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":35,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":142,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":61,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":247,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":41,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":336,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":453,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":161,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":283,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":397,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":69,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":464,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":26,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":319,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":14,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":287,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":42,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":156,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":192,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":12,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":129,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":407,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":194,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":30,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":130,"com.graphhopper.reader.OSMReaderTest.testSort":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":124,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":153,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":420,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":331,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":465,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":362,"com.graphhopper.storage.RAMDataAccessTest.testHeader":412,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":346,"com.graphhopper.storage.MMapDataAccessTest.testHeader":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":267,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":218,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":419,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":309,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":430,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":164,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":118,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":53,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":17,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":50,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":52,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":8,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":196,"com.graphhopper.coll.OSMIDMapTest.testGetLong":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":250,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":256,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":210,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":406,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":212,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":102,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":160,"com.graphhopper.GraphHopperAPITest.testLoad":125,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":193,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":425,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":313,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":304,"com.graphhopper.storage.LevelGraphStorageTest.testClone":198,"com.graphhopper.reader.OSMReaderTest.testBarriers":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":11,"com.graphhopper.util.GHUtilityTest.testCopy":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":44,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":431,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":395,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":38,"com.graphhopper.routing.PathTest.testFindInstruction":372,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":215,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":239,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":378,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":275,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":332,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":265,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":385,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":68,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":251,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":200,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":439,"com.graphhopper.util.InstructionListTest.testWayList2":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":135,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":174,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":373,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":423,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":175,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":400,"com.graphhopper.storage.RAMDirectoryTest.testSynched":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":10,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":303,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":150,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":22,"com.graphhopper.coll.OSMIDMapTest.testGet":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":246,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":418,"com.graphhopper.routing.PathBidirRefTest.testExtract":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":120,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":214,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":55,"com.graphhopper.storage.RAMDataAccessTest.testCopy":390,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":273,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":458,"com.graphhopper.storage.RAMDataAccessTest.testSegments":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":139,"com.graphhopper.util.GHUtilityTest.testSort2":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":18,"com.graphhopper.reader.OSMReaderTest.testMain":76,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":417,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":471,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":462,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":159,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":157,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":208,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":169,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":229,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":205,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":99,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":421,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":211,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":353,"com.graphhopper.storage.StorablePropertiesTest.testStore":433,"com.graphhopper.storage.GraphHopperStorageTest.testClone":306,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":461,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":85,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":428,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":315,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":187,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":470,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":440,"com.graphhopper.routing.PathTest.testTime":370,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":116,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":227,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":199,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":137,"com.graphhopper.reader.OSMReaderTest.testRelation":87,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":452,"com.graphhopper.util.GHUtilityTest.testSortDirected":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":113,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":403,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":358,"com.graphhopper.GraphHopperTest.testFootOnly":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":33,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":145,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":285,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":448,"com.graphhopper.search.NameIndexTest.testCreate":184,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":393,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":355,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":422,"com.graphhopper.routing.QueryGraphTest.testOneWay":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":410,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":128,"com.graphhopper.reader.OSMReaderTest.testWithBounds":82,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":396,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":469,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":269,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":454,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":88,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":195,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":252,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":302,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":5,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":334,"com.graphhopper.util.InstructionListTest.testWayList":381,"com.graphhopper.GraphHopperAPITest.testDisconnected179":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":441,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":437,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":110,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":467,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":72,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":308,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":146,"com.graphhopper.routing.util.EncodedValueTest.testSwap":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":70,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":325,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":29,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":123,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":24,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":411,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":426,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":177,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":298,"com.graphhopper.routing.PathTest.testWayList":371,"com.graphhopper.storage.MMapDataAccessTest.testCopy":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":444,"com.graphhopper.coll.OSMIDMapTest.testGet2":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":25,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":413,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":222,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":258,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":244,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":307,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":143,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":391,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":54,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":171,"com.graphhopper.util.GHUtilityTest.testSort":387,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":457,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":122,"com.graphhopper.search.NameIndexTest.testPut":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":272,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":305,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":284,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":292,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":100,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":361,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":374,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":233,"com.graphhopper.storage.MMapDirectoryTest.testSynched":231,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":178,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":339,"com.graphhopper.routing.PathTest.testFound":369,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":148,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":224,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":121,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":249,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":183,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":162,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":311,"com.graphhopper.util.InstructionListTest.testEmptyList":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":43,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":19,"com.graphhopper.reader.PrinctonReaderTest.testRead":350,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":51,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":245,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":434,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":254,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":405,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":163,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":90,"com.graphhopper.reader.OSMReaderTest.testFoot":75,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":349,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":456,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":31,"com.graphhopper.reader.OSMReaderTest.testOneWay":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":133,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":314,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":329,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":266,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":39,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":402,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":323,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":450,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":293,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":401,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":446,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":357,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":299,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":354,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":429,"com.graphhopper.routing.PathBidirRefTest.testExtract2":368,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":136,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":279,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":181,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":327,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":432,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":103,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":468,"com.graphhopper.util.SimpleIntDequeTest.testPush":158,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":131,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":330,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":201,"com.graphhopper.GraphHopperTest.testFootAndCar":73,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":322,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":58,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":424,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":241,"com.graphhopper.storage.StorablePropertiesTest.testLoad":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":21,"com.graphhopper.GraphHopperTest.testPrepareOnly":60,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":436,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":80,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":189,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":86,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":326,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":449,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":223,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":221,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":408}}]
