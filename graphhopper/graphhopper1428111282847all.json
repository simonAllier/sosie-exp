[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"c4b6a513-da6a-11e4-94cb-f77752b4a3c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"c4b6cc24-da6a-11e4-94cb-f1bc40ca2baf","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[142,349,350,351,156,157,158,159,160,161,162,163,164,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375],"tindex":"c4b6cc25-da6a-11e4-94cb-071b0cdfcaae","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"allBits","edgeTo":"i","edgeFrom":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"c4b6cc26-da6a-11e4-94cb-6fe154411435","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"c4b6cc27-da6a-11e4-94cb-d7cb217e07f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"c4b6cc28-da6a-11e4-94cb-a9434d62bc0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[376,377,378,379,1,2,380,381,382,383,384,385],"tindex":"c4b6cc29-da6a-11e4-94cb-078d7148b15e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"c4b6f33a-da6a-11e4-94cb-c7cdee752cfc","variableMapping":{"flags":"acceptBit","tmpValue":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[354,355,356,386,387,358,388,360,389,390,167,168,361,362,391,392,364,393,366,394,395,169,371,373,374],"tindex":"c4b6f33b-da6a-11e4-94cb-8f6e295b27f4","variableMapping":{"costs":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"c4b6f33c-da6a-11e4-94cb-abff476571a4","variableMapping":{"newAdjIndex":"speed","newBaseIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"c4b6f33d-da6a-11e4-94cb-ff517b763db5","variableMapping":{"shift":"mask","flags":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[396,397],"tindex":"c4b6f33e-da6a-11e4-94cb-0badd44f4484","variableMapping":{"str":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[8,28,44,70,84,93],"tindex":"c4b6f33f-da6a-11e4-94cb-535f71e0c35d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"c4b6f340-da6a-11e4-94cb-911cb26ac21e","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":0},{"failures":[398],"tindex":"c4b6f341-da6a-11e4-94cb-e3d5427749ec","variableMapping":{"offset":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"c4b6f342-da6a-11e4-94cb-7d85514c9691","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"c4b6f343-da6a-11e4-94cb-3ba66c104cd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[6,21,25,398,63,67,399],"tindex":"c4b6f344-da6a-11e4-94cb-07d4663438a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if (int < int)\n    return com.graphhopper.routing.util.EncodedValue.setValue(0, int);\n"},"status":-1},{"failures":[400,401,402,403,404,405,406,145,407,408,409,410,411,152,397,349,350,351,412,413,414,415,416,417,418,419,420,421,156,157,158,160,161,162,422,423,424,425,426,383,384,427,385,428,386,429,391,430,170,173,178,199,205,210,213,217,222,243,249,254,257,431,432,433,434,260,281,286,287,292,435,436,437,438,439,440,441,306,311,332,338,343,346,442,443,444,445,446,447,448],"tindex":"c4b6f345-da6a-11e4-94cb-f58e25440bd0","variableMapping":{"tmpNode":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-1},{"failures":[],"tindex":"c4b76876-da6a-11e4-94cb-0baa2553ef2d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"c4b76877-da6a-11e4-94cb-5daaf48d2042","variableMapping":{"calcPoints":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[110,113,119,120,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,156,157,158,159,160,161,162,163,164],"tindex":"c4b76878-da6a-11e4-94cb-df20331026e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,380,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,398,449,450,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,397,451,349,350,351,412,413,414,415,416,417,418,419,420,189,233,271,322],"tindex":"c4b76879-da6a-11e4-94cb-b7ae696d7d70","variableMapping":{"start":"shift","delta":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"c4b7687a-da6a-11e4-94cb-d7f6502617af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[23,25,35,65,67,77],"tindex":"c4b7687b-da6a-11e4-94cb-9b6f8b4540cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[110,119,120,124,125,126,127,130,131,142,144,145,146,148],"tindex":"c4b7687c-da6a-11e4-94cb-53a55409112b","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"c4b78f8d-da6a-11e4-94cb-d9e2b84bf96f","variableMapping":{"r":"lon","x":"lon","absY":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":0},{"failures":[18,56,449,452,58,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,453,454,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,455,456,457,458,397,451,349,350,351,412,413,414,415,416,417,418,419,420,421,159,162,459,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"c4b78f8e-da6a-11e4-94cb-65ee93244037","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"c4b78f8f-da6a-11e4-94cb-9396a07202de","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[16,37,53,79],"tindex":"c4b78f90-da6a-11e4-94cb-0345596a2d9c","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"c4b78f91-da6a-11e4-94cb-5372a99269c3","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"c4b78f92-da6a-11e4-94cb-99b26a0684a0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"c4b78f93-da6a-11e4-94cb-cbdb0e7b32a2","variableMapping":{"node":"node","directionBitMask":"directionBitMask","intendedValues":"intendedValues","restrictedValues":"intendedValues","restrictions":"restrictions","locked":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":0},{"failures":[],"tindex":"c4b7b6a4-da6a-11e4-94cb-dfead9cf8cae","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"c4b7b6a5-da6a-11e4-94cb-d51a0cb79f06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"c4b7b6a6-da6a-11e4-94cb-c58fc80a5a79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"c4b7b6a7-da6a-11e4-94cb-358b38473e8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[452],"tindex":"c4b7b6a8-da6a-11e4-94cb-dd0734d17f0c","variableMapping":{"str":"this","vers":"bitsForEdgeFlags","key":"com.graphhopper.routing.util.EncodingManager.WAY_ERR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:183","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Version of \" + java.lang.String) + \" unsupported: \") + java.lang.String) + \", expected:\") + int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"c4b7b6a9-da6a-11e4-94cb-b547849d2ea1","variableMapping":{"frontIndex":"size","endIndexPlusOne":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[380],"tindex":"c4b7b6aa-da6a-11e4-94cb-c1a9ee7036b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"c4b7b6ab-da6a-11e4-94cb-49c724b20aad","variableMapping":{"size":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"c4b7b6ac-da6a-11e4-94cb-65f3fbb0da6e","variableMapping":{"allowed":"flags","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-2},{"failures":[],"tindex":"c4b7b6ad-da6a-11e4-94cb-13cd5f902aea","variableMapping":{"need":"shift","i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[8,28,44,70,84,93,97,397,451,349,351,412,413,415,416,417,418,420,156,157,158,159,162,459],"tindex":"c4b7b6ae-da6a-11e4-94cb-cf68da621b4b","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"c4b7b6af-da6a-11e4-94cb-ad91de71e350","variableMapping":{"locs":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":0},{"failures":[],"tindex":"c4b7ddc0-da6a-11e4-94cb-e328525513dd","variableMapping":{"algo":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"c4b7ddc1-da6a-11e4-94cb-695d40b93463","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"c4b7ddc2-da6a-11e4-94cb-29d97f3933e6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[4,5,6,7,9,11,14,15,17,20,21,22,23,24,25,29,31,32,35,36,38,39,41,42,43,45,47,48,51,52,54,55,398,450,58,62,63,64,65,66,67,71,73,74,77,78,80,81,397,451,349,350,412,413,414,415,418,419,420],"tindex":"c4b7ddc3-da6a-11e4-94cb-130b6194d2ff","variableMapping":{"line":"service","key":"service"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[41,42,43],"tindex":"c4b7ddc4-da6a-11e4-94cb-f1b525072b9d","variableMapping":{"versionHint":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"c4b7ddc5-da6a-11e4-94cb-6ba81d0aaeaa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[6,14,23,25,35,42,43,51,65,67,77],"tindex":"c4b7ddc6-da6a-11e4-94cb-3306037dd284","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"c4b7ddc7-da6a-11e4-94cb-6d18e8c96251","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"c4b7ddc8-da6a-11e4-94cb-b7fdf27cd86c","variableMapping":{"maxLat":"maxLon","minLat":"maxLon","bbox":"bbox"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"c4b7ddc9-da6a-11e4-94cb-8fd0c74d6ddc","variableMapping":{"newAdjIndex":"kmInteger","newBaseIndex":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-2},{"failures":[400,460,405,406,461,59,60,145,455,407,462,149,408,463,409,410,464,411,152,153,397,451,349,350,351,412,413,414,415,416,417,418,419,420,465,466,467,421,468,156,157,158,159,160,469,161,162,459,470,471,472,473,422,423,424,425,426,382,427,385,428,357,386,429,363,391,474,475,170,173,174,178,199,205,210,213,217,218,222,243,249,254,257,286,476,435,436,437,477,438,439,303,306,307,311,332,338,343,346,478,442,443,444,479,445,446],"tindex":"c4b7ddca-da6a-11e4-94cb-1f4608b7af5b","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"c4b804db-da6a-11e4-94cb-3b17317e972c","variableMapping":{"dX":"speedVal","dY":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"c4b804dc-da6a-11e4-94cb-c7961883c4ee","variableMapping":{"weightLong":"flags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[450],"tindex":"c4b804dd-da6a-11e4-94cb-1bba24607fa9","variableMapping":{"bytePos":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[58,87,90,451,421,159,162],"tindex":"c4b804de-da6a-11e4-94cb-1fb18ec7320a","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"c4b804df-da6a-11e4-94cb-d73f9b53bc4e","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"c4b804e0-da6a-11e4-94cb-b78e44d689de","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[111,113,114,115,116,117,118,119,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,468,156,157,160,469],"tindex":"c4b804e1-da6a-11e4-94cb-a7dbce2338f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-1},{"failures":[480,481,482],"tindex":"c4b804e2-da6a-11e4-94cb-7b1ac955c913","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[461,483],"tindex":"c4b804e3-da6a-11e4-94cb-75d0356f99de","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:206","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[484,376,400,377,485,378,379,486,460,405,406,461,0,1,2,480,487,380,381,481,482,59,60,86,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,455,407,488,462,149,408,463,409,410,489,464,411,152,153,397,451,349,350,351,412,413,414,415,416,417,418,419,420,154,155,490,421,468,156,157,158,159,160,469,161,162,459,163,164,491,492,493,494,495,165,382,383,384,427,385,496,497,498,499,500,166,355,356,428,357,386,387,358,388,359,360,389,501,502,390,503,167,504,168,505,361,362,429,363,391,392,364,393,365,366,394,506,507,395,508,169,170,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,509,510,511,431,512,513,514,515,432,433,434,271,286,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"c4b804e4-da6a-11e4-94cb-f1612f1a82bb","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"c4b82af5-da6a-11e4-94cb-7f5c17cd2551","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[400,460,405,406,0,480,487,381,481,86,88,96,102,106,110,111,113,114,115,116,117,119,120,123,124,125,126,127,128,131,135,137,138,140,142,144,145,146,148,149,409,152,451,349,414,420,156,157,158,161,163,165,166,167,169,170,173,179,180,183,189,196,202,204,207,209,210,214,217,223,224,227,233,240,246,248,251,253,254,258,261,262,265,271,278,284,286,289,291,292,296,298,306,312,313,316,322,329,335,337,340,342,343,347],"tindex":"c4b82af6-da6a-11e4-94cb-d55d7a170f20","variableMapping":{"size":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"c4b82af7-da6a-11e4-94cb-adaa7df1c25b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[],"tindex":"c4b82af8-da6a-11e4-94cb-c7fb50716629","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[449,89],"tindex":"c4b82af9-da6a-11e4-94cb-712ed0f54d79","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"c4b82afa-da6a-11e4-94cb-e73a1b1c8e16","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","turnRestrictionBit":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"c4b82afb-da6a-11e4-94cb-e3f7df479e7b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"c4b82afc-da6a-11e4-94cb-c3710d10356b","variableMapping":{"com.graphhopper.util.Constants.VERSION":"wayTypeName","tmp":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":0},{"failures":[6,14,23,25,35,42,43,51,65,67,77],"tindex":"c4b82afd-da6a-11e4-94cb-af87738e6009","variableMapping":{"str":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:274","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.substring(0, ((java.lang.String.length()) - 2))) + \":\") + (java.lang.String.substring(((java.lang.String.length()) - 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[113,119,124,126,127,128,129,130,132,133,135,136,137,138,139,140,141,142,145,147,148,156,157,160,164],"tindex":"c4b82afe-da6a-11e4-94cb-0974e068cbe0","variableMapping":{"initialized":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[],"tindex":"c4b82aff-da6a-11e4-94cb-c9c3595e3678","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"encoderCount","tmpNode":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"c4b82b00-da6a-11e4-94cb-03c390f6bd05","variableMapping":{"time":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[396,397],"tindex":"c4b82b01-da6a-11e4-94cb-2173a7c3586e","variableMapping":{"id":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[484,376,400,377,485,378,379,486,460,405,406,461,0,1,2,480,487,380,381,481,482,59,60,86,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,455,455,407,407,488,488,462,462,149,149,408,408,463,463,409,409,410,410,489,489,464,464,411,411,150,151,152,153,397,451,349,350,351,412,413,414,415,416,417,418,419,420,154,155,490,421,468,156,157,158,159,160,469,161,162,459,163,164,491,492,493,494,516,495,165,517,382,383,384,427,518,385,496,497,498,499,519,500,166,355,356,428,357,386,387,358,388,359,360,389,501,502,390,520,503,167,504,168,505,361,362,429,363,391,392,364,393,365,366,394,506,507,395,521,508,169,522,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"c4b85212-da6a-11e4-94cb-b75faf619584","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"c4b85213-da6a-11e4-94cb-31fc192255e6","variableMapping":{"time":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[134,138,139,142,397,451,349,350,351,412,413,414,415,416,417,418,419,420,421,468,156,157,158,159,160,469,161,162,459,163,164,355,356,428,357,386,387,358,388,359,360,389,501,502,390,520,503,167,504,168,361,362,429,363,391,392,364,393,365,366,394,506,507,395,521,508,169],"tindex":"c4b85214-da6a-11e4-94cb-ab2690aac369","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"c4b85215-da6a-11e4-94cb-5ffb15aa45e2","variableMapping":{"compressionLevel":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[400,460,405,406,59,60,145,455,407,462,149,408,409,410,411,152,397,349,350,351,412,413,414,415,416,417,418,419,420,421,468,156,157,158,160,469,161,162,422,423,425,426,382,383,384,427,385,428,357,386,429,363,391,430,170,173,178,199,205,210,213,217,222,243,249,254,257,435,436,437,438,439,440,441,306,311,332,338,343,346,442,443,444,445,446,447,448],"tindex":"c4b85216-da6a-11e4-94cb-0b12f1eea11b","variableMapping":{"java.lang.Integer.MAX_VALUE":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[4,6,14,17,21,23,24,25,35,39,42,43,51,55,450,63,65,66,67,77,81,414],"tindex":"c4b85217-da6a-11e4-94cb-eb1d747b5fc0","variableMapping":{"nodeId":"encoded","nodeIdOffset":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"c4b85218-da6a-11e4-94cb-710ab73d2756","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[484,400,0,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,421,156,157,160,469,162,504,168,505,361,362,429,363,391,392,364,393,365,366,394,506,507,395,521,508,169,298,299,300,301,302,303,304,305,306,307,309,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"c4b85219-da6a-11e4-94cb-c5665ac75607","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"c4b8521a-da6a-11e4-94cb-c54a38f18739","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[],"tindex":"c4b8521b-da6a-11e4-94cb-b90933af2f6b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"c4b8521c-da6a-11e4-94cb-1576ac310ba4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"c4b8792d-da6a-11e4-94cb-4bf25d903e61","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"c4b8792e-da6a-11e4-94cb-65ad4c6a36c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[484,376,400,377,523,485,378,379,486,460,405,406,461,0,1,2,524,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,480,487,380,381,481,482,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,398,449,452,450,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,453,108,109,454,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,455,407,488,462,149,408,463,409,410,489,464,411,456,457,150,151,152,153,458,397,451,349,350,351,412,413,414,415,399,416,417,418,419,525,420,154,155,490,421,468,156,157,158,159,160,526,469,161,162,459,527,163,164,528,491,492,493,494,516,495,165,382,383,384,427,518,385,496,497,498,499,519,500,166,355,356,428,357,386,387,358,388,359,360,389,501,502,390,520,503,167,504,168,505,361,362,429,363,391,392,364,393,365,366,394,506,507,395,521,508,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"tindex":"c4b8a03f-da6a-11e4-94cb-9fde905f30be","variableMapping":{"versionHint":"com.graphhopper.routing.util.EncodingManager.ERR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[113,115,119,121,122,123,124,126,127,128,129,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,421,156,157,160,162,529],"tindex":"c4b8a040-da6a-11e4-94cb-8bb65fff4386","variableMapping":{"index":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:767","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[],"tindex":"c4b8a041-da6a-11e4-94cb-65879c270c0d","variableMapping":{"intVal":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"c4b8a042-da6a-11e4-94cb-231598ed245c","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"c4b8a043-da6a-11e4-94cb-93107bde35bb","variableMapping":{"maxLatTmp":"minLat","minLatTmp":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":143,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":407,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":303,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":524,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":498,"com.graphhopper.GraphHopperAPITest.testNoLoad":528,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":261,"com.graphhopper.reader.OSMReaderTest.testFerry":397,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":1,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":24,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":7,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":363,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":468,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":188,"com.graphhopper.coll.CompressedArrayTest.testCompress":353,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":13,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":115,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":281,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":505,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":476,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":479,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":121,"com.graphhopper.GraphHopperTest.testPrepare":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":110,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":135,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":460,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":517,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":379,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":309,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":361,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":481,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":20,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":510,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":133,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":357,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":25,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":527,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":170,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":373,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":124,"com.graphhopper.GraphHopperTest.testLoadOSM":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":389,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":512,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":386,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":57,"com.graphhopper.reader.OSMReaderTest.testSort":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":380,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":174,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":436,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":252,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":217,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":294,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":409,"com.graphhopper.routing.DijkstraTest.initializationError":453,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":209,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":474,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":336,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":229,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":171,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":178,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":393,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":168,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":392,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":526,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":129,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":313,"com.graphhopper.coll.OSMIDMapTest.testGetLong":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":192,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":198,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":328,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":529,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":306,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":330,"com.graphhopper.coll.CompressedArrayTest.testCompress2":352,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":242,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":41,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":189,"com.graphhopper.GraphHopperAPITest.testLoad":163,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":310,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":431,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":84,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":234,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":224,"com.graphhopper.storage.LevelGraphStorageTest.testClone":315,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":179,"com.graphhopper.reader.OSMReaderTest.testBarriers":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":482,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":504,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":265,"com.graphhopper.util.GHUtilityTest.testCopy":400,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":49,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":16,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":519,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":447,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":10,"com.graphhopper.routing.PathTest.testFindInstruction":153,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":180,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":0,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":90,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":344,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":497,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":253,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":207,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":484,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":193,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":75,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":452,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":454,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":317,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":266,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":434,"com.graphhopper.util.InstructionListTest.testWayList2":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":501,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":258,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":23,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":522,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":21,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":59,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":218,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":26,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":190,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":131,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":412,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":435,"com.graphhopper.routing.AStarTest.initializationError":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":145,"com.graphhopper.coll.OSMIDMapTest.testGet":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":187,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":91,"com.graphhopper.routing.PathBidirRefTest.testExtract":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":29,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":332,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":424,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":506,"com.graphhopper.storage.RAMDataAccessTest.testCopy":442,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":477,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":28,"com.graphhopper.storage.RAMDataAccessTest.testSegments":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":167,"com.graphhopper.util.GHUtilityTest.testSort2":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":140,"com.graphhopper.reader.OSMReaderTest.testMain":349,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":197,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":507,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":95,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":291,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":322,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":326,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":347,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":149,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":62,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":511,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":329,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":419,"com.graphhopper.storage.StorablePropertiesTest.testStore":475,"com.graphhopper.storage.GraphHopperStorageTest.testClone":226,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":290,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":102,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":100,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":236,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":298,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":267,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":301,"com.graphhopper.routing.PathTest.testTime":151,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":48,"com.graphhopper.util.BitUtilLittleTest.testToFloat":401,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":345,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":316,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":518,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":280,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":334,"com.graphhopper.reader.OSMReaderTest.testRelation":399,"com.graphhopper.util.GHUtilityTest.testSortDirected":485,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":78,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":440,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":462,"com.graphhopper.GraphHopperTest.testFootOnly":162,"com.graphhopper.util.BitUtilLittleTest.testToInt":403,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":5,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":98,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":383,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":364,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":276,"com.graphhopper.search.NameIndexTest.testCreate":473,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":445,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":455,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":514,"com.graphhopper.routing.QueryGraphTest.testOneWay":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":520,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":370,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":428,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":367,"com.graphhopper.reader.OSMReaderTest.testWithBounds":418,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":79,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":273,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":408,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":487,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":282,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":398,"com.graphhopper.util.BitUtilLittleTest.testToDouble":402,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":312,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":17,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":201,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":99,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":194,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":222,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":126,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":255,"com.graphhopper.util.InstructionListTest.testWayList":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":27,"com.graphhopper.GraphHopperAPITest.testDisconnected179":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":268,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":73,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":155,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":279,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":509,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":296,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":158,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":228,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":19,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":246,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":137,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":103,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":343,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":176,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":147,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":521,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":513,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":39,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":216,"com.graphhopper.routing.PathTest.testWayList":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":272,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":483,"com.graphhopper.coll.OSMIDMapTest.testGet2":423,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":148,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":340,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":465,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":33,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":239,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":185,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":227,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":366,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":443,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":42,"com.graphhopper.util.GHUtilityTest.testSort":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":388,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":375,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":32,"com.graphhopper.search.NameIndexTest.testPut":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":214,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":362,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":499,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":385,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":493,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":66,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":463,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":491,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":172,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":44,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":83,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":466,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":195,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":480,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":433,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":325,"com.graphhopper.routing.PathTest.testFound":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":286,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":58,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":459,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":342,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":31,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":191,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":472,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":271,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":231,"com.graphhopper.util.InstructionListTest.testEmptyList":486,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":134,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":50,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":15,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":93,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":141,"com.graphhopper.reader.PrinctonReaderTest.testRead":154,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":254,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":391,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":270,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":368,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":260,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":196,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":430,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":449,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":63,"com.graphhopper.reader.OSMReaderTest.testFoot":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":284,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":411,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":467,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":359,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":372,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":360,"com.graphhopper.reader.OSMReaderTest.testOneWay":420,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":235,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":250,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":208,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":11,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":439,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":69,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":116,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":114,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":438,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":494,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":274,"com.graphhopper.util.BitUtilLittleTest.testToLong":404,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":488,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":219,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":525,"com.graphhopper.routing.PathBidirRefTest.testExtract2":109,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":515,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":427,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":502,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":470,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":248,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":516,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":54,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":414,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":297,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":495,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":387,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":251,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":523,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":318,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":104,"com.graphhopper.GraphHopperTest.testFootAndCar":159,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":243,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":43,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":508,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":444,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":144,"com.graphhopper.GraphHopperTest.testPrepareOnly":421,"com.graphhopper.GraphHopperTest.testVia":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":262,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":416,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":302,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":247,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":461,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":88,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":277,"com.graphhopper.routing.AStarBidirectionTest.initializationError":457,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":18,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":341,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":339,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":173}}]
