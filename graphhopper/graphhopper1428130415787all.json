[{"failures":[],"tindex":"51d2be9a-da97-11e4-ad30-b544f9805742","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:99","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" }"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"51d3a8fb-da97-11e4-ad30-31c337e856ef","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"locs","tmpNode":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"51d3a8fc-da97-11e4-ad30-692f5591cd7a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"51d3a8fd-da97-11e4-ad30-c5554a46a738","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"51d3a8fe-da97-11e4-ad30-7d7cce8afcf5","variableMapping":{"high":"length","len":"length","start":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228],"tindex":"51d3a8ff-da97-11e4-ad30-f1d7452971ca","variableMapping":{"turnCostIndex":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN","nextTurnCostIndex":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[],"tindex":"51d3a900-da97-11e4-ad30-33b41e5a48aa","variableMapping":{"factor":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[229,230,231,232,233,234,235,236,237,238,239,240,241],"tindex":"51d3a901-da97-11e4-ad30-395c46849942","variableMapping":{"bytesForFlags":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[242,243,244],"tindex":"51d3d012-da97-11e4-ad30-e56720c0a23c","variableMapping":{"segmentSizeInBytes":"maxCount","index":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"51d3d013-da97-11e4-ad30-6522d7662946","variableMapping":{"encoded":"wayBitMask","backwardBit":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"51d3d014-da97-11e4-ad30-0d32df666150","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"51d3d015-da97-11e4-ad30-b1a0971d50c5","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[245],"tindex":"51d3d016-da97-11e4-ad30-67c6fec19af1","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"51d3d017-da97-11e4-ad30-a34e4b80cf9e","variableMapping":{"minDistance":"maxSpeed","rMin":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[246,247,248,249,250,251,252,253,254],"tindex":"51d3d018-da97-11e4-ad30-932d2a07b67c","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"51d57dc9-da97-11e4-ad30-e79ca6fcc3ef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,244,276,277,278,279,280,281,282,283,284,285],"tindex":"51d57dca-da97-11e4-ad30-29723aa64aef","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"51d57dcb-da97-11e4-ad30-8db4cd0c45ac","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":0},{"failures":[],"tindex":"51d57dcc-da97-11e4-ad30-69e5c140c74a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"51d57dcd-da97-11e4-ad30-256b310e462d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"51d57dce-da97-11e4-ad30-818414d4195e","variableMapping":{"deltaX":"fwdIncline","tmp":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[286],"tindex":"51d57dcf-da97-11e4-ad30-c398888db5e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[287,288],"tindex":"51d57dd0-da97-11e4-ad30-d57b9d5ed2a4","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"51d5a4e1-da97-11e4-ad30-95e66bc0976f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[242,243,244,2,18,19,26,27,41,57,58,65,66,110,126,127,134,135,169,185,186,193,194],"tindex":"51d5a4e2-da97-11e4-ad30-696fb76cb6e3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-1},{"failures":[287,289,288,290,291],"tindex":"51d5a4e3-da97-11e4-ad30-e7d78aad113d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"51d5a4e4-da97-11e4-ad30-5d23c2bf4cd5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[287,288,292,293,229,294,295,296,230,231,297,298,299,300,301,302,303,304,305,306,307,308,232,309,310,311,312,233,313,314,315,234,235,316,317,318,319,320,321,322,323,324,325,326,327,236,328,242,256,329,330,331,332,333,334,335,336,337,338,339,340,237,238,341,342,343,344,345,346,347,348,349,350,351,239,352,240,353,354,355,356,357,358,359,360,361,362,241,363,364,365,257,258,366,367,368,259,260,261,369,370,371,372,373,374,375,376,377,378,379,262,263,264,265,266,267,268,269,270,380,271,272,273,274,244,381],"tindex":"51d5a4e5-da97-11e4-ad30-cda9c4c5062f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:193","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"51d5a4e6-da97-11e4-ad30-7d3afe48a860","variableMapping":{"latlon":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397],"tindex":"51d5a4e7-da97-11e4-ad30-5bdb7a74c523","variableMapping":{"r":"minLatTmp","x":"minLatTmp","absY":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"51d5a4e8-da97-11e4-ad30-05754f2b6da8","variableMapping":{"val":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[398,399,400],"tindex":"51d5a4e9-da97-11e4-ad30-6fc81979297b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[],"tindex":"51d5a4ea-da97-11e4-ad30-85b74c173a1c","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[],"tindex":"51d5a4eb-da97-11e4-ad30-27784d03d53e","variableMapping":{"distance":"maxSpeed","maxSpeed":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[257],"tindex":"51d5a4ec-da97-11e4-ad30-1170ff69cb7a","variableMapping":{"sacScale":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"51d5a4ed-da97-11e4-ad30-ed9acf281150","variableMapping":{"incEleSum":"maxLatTmp","incDist2DSum":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[255,257,259,260,274,277,285],"tindex":"51d5cbfe-da97-11e4-ad30-63b086f02825","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"51d5cbff-da97-11e4-ad30-7950b7448a0f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"51d5cc00-da97-11e4-ad30-bf47080afa86","variableMapping":{"incDist2DSum":"fwdDecline","fullDist2D":"fwdDecline","decDist2DSum":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[398,243,2,10,11,12,14,18,19,26,27,41,49,50,51,53,57,58,65,66,110,118,119,120,122,126,127,134,135,169,177,178,179,181,185,186,193,194],"tindex":"51d5cc01-da97-11e4-ad30-25c020369c98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"51d5cc02-da97-11e4-ad30-51435b4debd1","variableMapping":{"flags2":"acceptBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit","flags1":"internalFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[401,402,247,403,404,405],"tindex":"51d5cc03-da97-11e4-ad30-490a641c011e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"51d5cc04-da97-11e4-ad30-7727982ad127","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"51d5cc05-da97-11e4-ad30-1b4559ad8df6","variableMapping":{"bit":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[246,406,401,402,247,248,403,407,404,408,287,289,249,409,410,250,251,411,412,413,288,414,290,415,416,417,418,252,419,253,420,254,421,291,422,276,277,278,281,282,423,424,425,162,163,165],"tindex":"51d5cc06-da97-11e4-ad30-5b6349c8a659","variableMapping":{"size":"index","index":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"51d5cc07-da97-11e4-ad30-d74c60c4d0a0","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[398,400],"tindex":"51d5cc08-da97-11e4-ad30-7142aafe1625","variableMapping":{"latSimilar":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[],"tindex":"51d5cc09-da97-11e4-ad30-35ccb700148d","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"51d5cc0a-da97-11e4-ad30-3fcb03000d47","variableMapping":{"line":"highway","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:105","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-2},{"failures":[257,367,261],"tindex":"51d5cc0b-da97-11e4-ad30-1f0b0ca393e3","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"51d5cc0c-da97-11e4-ad30-db0d87cb1592","variableMapping":{"empty":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[],"tindex":"51d5f21d-da97-11e4-ad30-11d9db7a31cf","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"51d5f21e-da97-11e4-ad30-79438f1cd9dc","variableMapping":{"acceptBit":"flags","internalFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"51d5f21f-da97-11e4-ad30-b7f36ea1b3fa","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"51d5f220-da97-11e4-ad30-a3617f8cb9c2","variableMapping":{"initLeafSize":"toSize","maxLeafEntries":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[404,426,427,428,429],"tindex":"51d5f221-da97-11e4-ad30-dfa3e35e9c43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[243],"tindex":"51d5f222-da97-11e4-ad30-b15cd615d1f9","variableMapping":{"size":"biggestStart","newSize":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[294,309,313,328,350,363,375,378,263,269,244],"tindex":"51d5f223-da97-11e4-ad30-1dfc8a57686d","variableMapping":{"oldValueIndex":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"51d5f224-da97-11e4-ad30-e1c9c9fdb20c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"51d5f225-da97-11e4-ad30-c7576c5c0c7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"51d5f226-da97-11e4-ad30-7df8f3af0b10","variableMapping":{"bytePos":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[247,251,253,254,291],"tindex":"51d5f227-da97-11e4-ad30-cfd1982404fa","variableMapping":{"max":"value","tmpSize":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"51d5f228-da97-11e4-ad30-f1b6b3a47061","variableMapping":{"tmp":"i","initializedCounter":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,244,422,276,277,278,279,280,281,282,283,423,284,4,25,430,431,432,43,64,76,433,434,77,78,83,88,97,102,435,436,112,133,151,156,437,438,439,171,207,211,219,224],"tindex":"51d64049-da97-11e4-ad30-7f8c3b5cb306","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"51d6404a-da97-11e4-ad30-532466832098","variableMapping":{"splitIndex":"indexDivisor","entrySize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"51d6404b-da97-11e4-ad30-8d5421bd358d","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"51d6404c-da97-11e4-ad30-8dd59759b807","variableMapping":{"initLeafSize":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"51d6404d-da97-11e4-ad30-57e2ecc3c2c6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"51d6404e-da97-11e4-ad30-3bd882af954a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"51d6404f-da97-11e4-ad30-7990c9bef0d9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"51d64050-da97-11e4-ad30-192a08ed35c7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"51d64051-da97-11e4-ad30-7bca9f64d0e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDirectory:31","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(\"\", false)"},"status":-2},{"failures":[440],"tindex":"51d64052-da97-11e4-ad30-5724bace1c95","variableMapping":{"valueStr":"key","field":"str","key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[311],"tindex":"51d64053-da97-11e4-ad30-09e3353338bd","variableMapping":{"initialBits":"flags","allBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"51d64054-da97-11e4-ad30-53420a9fd748","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"51d64055-da97-11e4-ad30-25e93bf11e32","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[401,402,247,403,404,408],"tindex":"51d66766-da97-11e4-ad30-45d6be509931","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-1},{"failures":[],"tindex":"51d66767-da97-11e4-ad30-fdabf1db2b83","variableMapping":{"err":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","dLat":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","tmpErr":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","x1":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","sLon":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"51d66768-da97-11e4-ad30-37f635f83ba1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"51d66769-da97-11e4-ad30-e1cf88357987","variableMapping":{"line":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"51d6676a-da97-11e4-ad30-8b24158e3777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[293,229,294,295,296,230,231,297,298,299,300,301,302,303,304,305,306,307,308,232,309,310,311,312,233,313,314,315,234,235,316,317,318,319,320,321,322,323,324,325,326,327,236,328,338,339,340,237,238,341,342,343,344,345,346,347,348,349,350,351,239,352,240,353,354,355,356,357,358,359,360,361,362,241,363,375,379],"tindex":"51d6676b-da97-11e4-ad30-31242e9d0421","variableMapping":{"i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-1},{"failures":[246,401,247,248,408,287,289,249,409,410,250,251,411,412,413,288,290,415,416,417,418,252,419,253,420,254,421,291,277,278,279,280,281,283,423,441,442],"tindex":"51d6676c-da97-11e4-ad30-5b6f54587bf9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[246,406,401,443,402,444,445,446,247,248,403,407,404,408,287,289,249,409,410,250,251,411,412,413,288,414,290,415,416,417,418,252,419,253,420,254,421,291,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,310,311,398,463,242,243,399,400,331,262,263,264,265,266,267,268,269,270,271,272,273,274,244,464,465,466,422,277,278,279,280,281,282,283,423,284,467,468,469,285,470,471,472,473,474,475,476,477,478,479,480,25,430,481,431,38,39,40,41,42,43,44,45,46,47,48,49,482,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,483,484,485,486,487,488,424,489,425,392,490,491,492,493,494,393,495,496,394,497,498,499,500,501,502,503,504,505,506,507,508,395,509,510,511,512,513,396,514,515,397,516,517,518,519,520,521,76,433,434,77,78,522,435,107,108,109,110,111,112,113,114,115,116,117,118,523,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,161,162,381,163,164,165,524,438,166,167,168,169,170,171,172,173,174,175,176,177,525,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,203,219,220,222,225,226,227,228,441,442],"tindex":"51d6676d-da97-11e4-ad30-d32c17b11c16","variableMapping":{"index":"bytePos","entriesPerSegment":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:99","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[367,262],"tindex":"51d6676e-da97-11e4-ad30-533088b9874c","variableMapping":{"distance":"longTripsSpeed","speed":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[246,406,401,443,402,444,445,446,247,248,403,407,404,408,287,289,249,409,410,250,251,411,412,413,288,414,290,415,416,417,418,252,419,253,420,254,421,291,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456,457,457,458,458,459,460,526,292,461,462,310,311,398,463,242,243,399,400,331,262,263,264,265,266,267,268,269,270,271,272,273,274,244,464,465,466,422,276,277,278,279,280,281,282,283,423,284,527,467,468,469,285,470,471,472,473,474,475,476,477,478,479,480,25,430,481,431,432,528,38,39,40,41,42,43,44,45,46,47,48,49,482,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,483,484,485,486,487,488,424,489,425,392,490,491,492,493,494,393,495,496,394,497,498,499,500,501,502,503,504,505,506,507,508,395,509,510,511,512,513,396,514,515,397,516,517,518,519,520,521,529,76,433,434,77,78,522,435,436,530,107,108,109,110,111,112,113,114,115,116,117,118,523,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,161,162,381,163,164,437,165,524,438,439,531,166,167,168,169,170,171,172,173,174,175,176,177,525,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,217,219,220,222,223,225,226,441,442],"tindex":"51d68e7f-da97-11e4-ad30-a3acc112a9a6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-1},{"failures":[],"tindex":"51d68e80-da97-11e4-ad30-81e01681fee8","variableMapping":{"b":"finishedFrom","updateBestPath":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:298","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":0},{"failures":[287,288,292,310,311,379,381],"tindex":"51d68e81-da97-11e4-ad30-99f47ace0519","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:55","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , 30)"},"status":-1},{"failures":[297,316,371,376],"tindex":"51d68e82-da97-11e4-ad30-1bffdf83c2ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"51d68e83-da97-11e4-ad30-ff5c6ccc523e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[287,289,249,409,410,250,251,411,412,413,288,414,290,415,416,417,418,252,419,253,420,254,421,291,256,329,330,331,332,333,334,335,336,337,364,365,257,258,366,367,368,259,260,261,369,370,371,372,373,374,379,280,423,0,1,2,3,4,5,6,7,8,9,10,480,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,430,37,481,431,432,528,38,532,39,40,41,42,43,44,45,46,47,48,49,482,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,488,502,508,521,522,435,436,530,107,533,108,109,110,111,112,113,114,115,116,117,118,523,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,161,162,381,163,164,437,165,524,438,439,531,166,534,167,168,169,170,171,172,173,174,175,176,177,525,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"tindex":"51d68e84-da97-11e4-ad30-65f734420c93","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"51d68e85-da97-11e4-ad30-9f43d9be81d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[],"tindex":"51d68e86-da97-11e4-ad30-8f6bac4e4be7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"51d79ff7-da97-11e4-ad30-03cc79e36224","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":0},{"failures":[],"tindex":"51d79ff8-da97-11e4-ad30-8b05b4a8462a","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"finishedFrom","v":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"51d79ff9-da97-11e4-ad30-b79221c5102a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[92,106],"tindex":"51d79ffa-da97-11e4-ad30-1524c2069811","variableMapping":{"empty":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[308,327,336,349,362,261],"tindex":"51d79ffb-da97-11e4-ad30-47b75d8104b3","variableMapping":{"sacScale":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":419,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":448,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":255,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":437,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":505,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":1,"com.graphhopper.reader.OSMReaderTest.testFerry":262,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":470,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":471,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":492,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":276,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":328,"com.graphhopper.storage.MMapDataAccessTest.testSegments":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":49,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":79,"com.graphhopper.coll.CompressedArrayTest.testCompress":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":346,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":142,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":20,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":523,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":425,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":80,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":403,"com.graphhopper.GraphHopperTest.testPrepare":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":252,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":246,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":429,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":288,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":467,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":529,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":347,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":479,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":392,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":399,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":229,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":249,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":118,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":152,"com.graphhopper.coll.BitSetImplTest.testCopy":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":511,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":430,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":389,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":167,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":428,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":408,"com.graphhopper.GraphHopperTest.testLoadOSM":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":516,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":512,"com.graphhopper.reader.OSMReaderTest.testSort":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":307,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":242,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":272,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":432,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":137,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":435,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":33,"com.graphhopper.storage.RAMDataAccessTest.testHeader":102,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":454,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":464,"com.graphhopper.storage.MMapDataAccessTest.testHeader":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":69,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":145,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":155,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":191,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":211,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":221,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":115,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":37,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":39,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":177,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":495,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":489,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":494,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":250,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":52,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":58,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":183,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":438,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":185,"com.graphhopper.coll.CompressedArrayTest.testCompress2":382,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":239,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":482,"com.graphhopper.GraphHopperAPITest.testLoad":441,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":534,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":220,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":329,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":119,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":110,"com.graphhopper.storage.LevelGraphStorageTest.testClone":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":40,"com.graphhopper.reader.OSMReaderTest.testBarriers":266,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":400,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":411,"com.graphhopper.util.GHUtilityTest.testCopy":475,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":502,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":349,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":343,"com.graphhopper.routing.PathTest.testFindInstruction":462,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":41,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":426,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":335,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":472,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":314,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":504,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":138,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":123,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":67,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":445,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":524,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":323,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":377,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":6,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":107,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":157,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":228,"com.graphhopper.util.InstructionListTest.testWayList2":469,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":517,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":310,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":436,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":175,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":99,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":297,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":50,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":76,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":251,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":267,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":48,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":207,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":336,"com.graphhopper.routing.PathBidirRefTest.testExtract":459,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":300,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":498,"com.graphhopper.storage.RAMDataAccessTest.testCopy":97,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":26,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":339,"com.graphhopper.storage.RAMDataAccessTest.testSegments":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":299,"com.graphhopper.util.GHUtilityTest.testSort2":474,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":521,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":417,"com.graphhopper.reader.OSMReaderTest.testMain":264,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":301,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":499,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":528,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":525,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":181,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":202,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":178,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":451,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":62,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":233,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":184,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":274,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":95,"com.graphhopper.storage.GraphHopperStorageTest.testClone":112,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":29,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":261,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":259,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":7,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":163,"com.graphhopper.routing.PathTest.testTime":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":357,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":200,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":519,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":19,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":189,"com.graphhopper.reader.OSMReaderTest.testRelation":380,"com.graphhopper.util.GHUtilityTest.testSortDirected":477,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":326,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":91,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":450,"com.graphhopper.GraphHopperTest.testFootOnly":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":340,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":367,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":393,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":150,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":520,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":15,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":103,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":447,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":224,"com.graphhopper.routing.QueryGraphTest.testOneWay":456,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":386,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":510,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":384,"com.graphhopper.reader.OSMReaderTest.testWithBounds":273,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":106,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":206,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":71,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":452,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":337,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":375,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":168,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":531,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":350,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":484,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":368,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":31,"com.graphhopper.storage.MMapDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":54,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":108,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":455,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":289,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":215,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":140,"com.graphhopper.util.InstructionListTest.testWayList":468,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":298,"com.graphhopper.GraphHopperAPITest.testDisconnected179":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":8,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":63,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":321,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":466,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":18,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":305,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":279,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":407,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":131,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":293,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":248,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":38,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":421,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":533,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":218,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":309,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":522,"com.graphhopper.storage.MMapDataAccessTest.testCopy":151,"com.graphhopper.routing.PathTest.testWayList":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":366,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":291,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":88,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":509,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":304,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":124,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":46,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":113,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":394,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":98,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":497,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":318,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":427,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":352,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":149,"com.graphhopper.util.GHUtilityTest.testSort":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":514,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":303,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":74,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":532,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":490,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":506,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":78,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":485,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":234,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":311,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":483,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":481,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":254,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":398,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":227,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":25,"com.graphhopper.routing.PathTest.testFound":526,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":284,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":379,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":82,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":197,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":440,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":302,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":51,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":405,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":205,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":480,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":93,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":117,"com.graphhopper.util.InstructionListTest.testEmptyList":527,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":413,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":500,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":365,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":348,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":364,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":418,"com.graphhopper.reader.PrinctonReaderTest.testRead":465,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":139,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":160,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":493,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":10,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":0,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":319,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":345,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":146,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":376,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":313,"com.graphhopper.reader.OSMReaderTest.testFoot":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":23,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":458,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":201,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":515,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":338,"com.graphhopper.reader.OSMReaderTest.testOneWay":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":397,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":120,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":344,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":90,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":17,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":444,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":391,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":401,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":404,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":443,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":486,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":331,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":491,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":13,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":449,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":275,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":530,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":225,"com.graphhopper.routing.PathBidirRefTest.testExtract2":460,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":360,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":508,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":518,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":204,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":241,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":36,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":487,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":513,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":174,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":370,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":128,"com.graphhopper.GraphHopperTest.testFootAndCar":280,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":179,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":240,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":501,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":4,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":374,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":371,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":446,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":253,"com.graphhopper.GraphHopperTest.testPrepareOnly":422,"com.graphhopper.GraphHopperTest.testVia":277,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":507,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":2,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":271,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":164,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":132,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":333,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":16,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":256,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":196,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":194,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":431}}]
