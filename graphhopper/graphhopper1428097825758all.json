[{"failures":[0,1,2,3,4],"tindex":"6fab5868-da4b-11e4-b037-e3894d342530","variableMapping":{"acceptBit":"directionBitMask","ferryBit":"directionBitMask","footTag":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"6fab5869-da4b-11e4-b037-1d662a860387","variableMapping":{"size":"y2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6fab586a-da4b-11e4-b037-33bcd3be4056","variableMapping":{"freeIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-2},{"failures":[56],"tindex":"6fab586b-da4b-11e4-b037-bfc5e141fe9c","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[5,6,7,8,9,10,12,13,14,15,16,17,18,57,58,59,60,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,61,62,63,64,65,66,67,42,43,44,45,68,69,46,47,48,49,50,70,51,52,71,72,53,54,55,73,74,75,76,77,78,79,80],"tindex":"6fab7f7c-da4b-11e4-b037-397e6a6f3d76","variableMapping":{"currentEntry":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[81,82],"tindex":"6fab7f7d-da4b-11e4-b037-2131bd13c522","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,67],"tindex":"6fab7f7e-da4b-11e4-b037-87ead7bc0461","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"i","i":"value","mValues":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:118","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.coll.SparseIntIntArray.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"6fab7f7f-da4b-11e4-b037-67bec5700200","variableMapping":{"time":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[116,117,118],"tindex":"6fab7f80-da4b-11e4-b037-170d0b6f3c75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,46,72,152,80],"tindex":"6fab7f81-da4b-11e4-b037-3bc7223d69e1","variableMapping":{"flags2":"ferryBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"internalFlags","flags1":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"6fab7f82-da4b-11e4-b037-87b1811f9e8f","variableMapping":{"min":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN","tmpSize":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-2},{"failures":[130,153,154,139,155,156,157,158,159,75],"tindex":"6fab7f83-da4b-11e4-b037-c719cbc5b922","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"6fab7f84-da4b-11e4-b037-ed933f3a04d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[122],"tindex":"6fab7f85-da4b-11e4-b037-c539750e1cfc","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"6fab7f86-da4b-11e4-b037-9d91a6734fc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"6fab7f87-da4b-11e4-b037-dd8f2c3d02b8","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[160,161,162,163,164,165,166,83,167,168,169,170,171,172,173,84,174,85,86,175,87,176,177,178,179,88,180,181,182,183,184,185,89,90,186,187,188,189,190,191,192,193,194,5,195,6,7,8,9,196,10,11,12,13,14,15,16,17,18,197,198,199,200,201,202,203,57,58,59,204,60,205,206,207,208,209,210,24,25,211,26,212,27,28,29,30,213,31,32,33,34,35,36,37,38,39,214,215,216,217,218,219,220,221,91,222,223,224,225,226,227,228,92,229,93,94,230,95,231,232,233,234,96,235,236,237,238,239,240,97,98,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,107,270,271,272,273,274,275,276,108,277,278,279,280,281,282,283,109,284,110,111,285,112,286,287,288,289,113,290,291,292,293,294,295,114,115,296,297,298,299,300,301,302,303,304,40,41,305,306,307,308,309,310,311,312,313,314,315,316,119,63,64,317,318,116,65,66,67,117,118,319,320,56,321,322,323,324,325,325,326,326,327,327,328,328,329,329,330,330,331,331,332,332,333,333,334,334,335,335,336,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,81,351,352,353,354,355,356,357,358,42,82,359,360,43,44,361,362,45,363,364,365,366,367,368,68,46,47,48,49,50,70,51,52,71,369,72,53,54,55,73,74,75,76,77,78,79,152,80,370,371,372],"tindex":"6faba698-da4b-11e4-b037-d12dcbd6bb08","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[136],"tindex":"6faba699-da4b-11e4-b037-03b1df78b521","variableMapping":{"high":"shift","guess":"shift","low":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"6faba69a-da4b-11e4-b037-49779a205ac3","variableMapping":{"this":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"6faba69b-da4b-11e4-b037-ff0e6c9c0d1e","variableMapping":{"splitIndex":"encoderCount","entrySize":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"6faba69c-da4b-11e4-b037-7901e60cf709","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[339,341,342,343,345,347,349,373,374,375,376,377],"tindex":"6faba69d-da4b-11e4-b037-1bf2b014db58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[130,154,139,156,158,159,75],"tindex":"6faba69e-da4b-11e4-b037-5f987db782fe","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"6faba69f-da4b-11e4-b037-47197d6fb34d","variableMapping":{"minResolutionInMeter":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":0},{"failures":[],"tindex":"6faba6a0-da4b-11e4-b037-9f135c4ded9c","variableMapping":{"high":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[119,123,126,46,47,48,49,50,51,369,72,53,55,75,76,77,78,79,152,80],"tindex":"6fabcdb1-da4b-11e4-b037-bbae99beaf9f","variableMapping":{"fullyLoaded":"isRoundabout"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:658","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"6fabcdb2-da4b-11e4-b037-35721ccaa189","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[],"tindex":"6fabcdb3-da4b-11e4-b037-75875fe29d9e","variableMapping":{"segmentSizeInBytes":"shift","capacity":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"6fabcdb4-da4b-11e4-b037-c50b91c722ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[378],"tindex":"6fabcdb5-da4b-11e4-b037-4fc845b961c3","variableMapping":{"baseUrl":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"6fabcdb6-da4b-11e4-b037-ffa5439e106b","variableMapping":{"baseNode":"size","id":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"6fabcdb7-da4b-11e4-b037-671f2ed6c2a0","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"6fabcdb8-da4b-11e4-b037-31df2f6b8277","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"6fabcdb9-da4b-11e4-b037-e101a3443949","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"6fabcdba-da4b-11e4-b037-efaad7b85354","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[161,165,166,83,173,174,183,186,189,193,214,216,220,221,91,228,229,238,241,244,248,379,380,99,381,250,382,383,384,385,271,275,276,108,283,284,293,296,299,303,40,305,306,116,117,118,386,329,332,337,339,340,345,346,347,350,81,351,355,358,359,43,44,368,72,80,371,372],"tindex":"6fabcdbb-da4b-11e4-b037-b38dc78cf8cc","variableMapping":{"high":"flags","highKey":"dir","key":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"6fabcdbc-da4b-11e4-b037-fd107e850710","variableMapping":{"node":"skippedEdge1","lg":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:299","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraphStorage.getLevel(int)) != 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"6fabcdbd-da4b-11e4-b037-8fd605f5845a","variableMapping":{"weight":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"6fabcdbe-da4b-11e4-b037-dd488139beba","variableMapping":{"numTiles":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-2},{"failures":[387],"tindex":"6fabcdbf-da4b-11e4-b037-2b81881890d8","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[266,66,0,388,319,120,389,390,121,391,392,393,394,122,123,395,396,397,124,125,126,398,399,400,386,401,127,320,56,402,403,128,404,129,130,131,405,153,1,406,407,408,409,410,411,132,412,154,413,133,414,134,415,416,135,136,417,418,137,419,138,139,140,420,155,2,421,422,423,424,425,426,141,427,156,428,142,157,378,143,144,3,429,430,431,432,433,434,145,435,158,436,146,437,148,438,149,439,4,440,441,442,443,444,150,445,159,151,322,81,82,369,72,53,54,55,73,74,75,76,446,77,78,79,152,80],"tindex":"6fabf4d0-da4b-11e4-b037-d114705ea650","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:193","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"6fabf4d1-da4b-11e4-b037-1d00fa4722c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"6fabf4d2-da4b-11e4-b037-534509363d4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[314,323],"tindex":"6fabf4d3-da4b-11e4-b037-fdc92427e495","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"6fabf4d4-da4b-11e4-b037-6fe94855b0ec","variableMapping":{"distance":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[75],"tindex":"6fabf4d5-da4b-11e4-b037-c72d879f13b7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"6fabf4d6-da4b-11e4-b037-7d52a46b63a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[447],"tindex":"6fabf4d7-da4b-11e4-b037-df2d5a759985","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[339,341,342,343,345,347,349,351,352,353,356,357,42,82,360,43,361,362,45,363,364,365,366,367,368,373,374,375,376,377],"tindex":"6fabf4d8-da4b-11e4-b037-bb3cb2be76c6","variableMapping":{"turnCostIndex":"i","nextTurnCostIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[56],"tindex":"6fabf4d9-da4b-11e4-b037-17c16e36958b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[119,134,135,136,68,69,46,47,48,49,50,70,51,52,71,369,72,53,54,55,73,74,75,76,77,78,79,152,80],"tindex":"6fabf4da-da4b-11e4-b037-65eef5b17f0d","variableMapping":{"flags":"includeWay","mask":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[161,169,174,176,178,185,186,188,193,18,202,210,39,214,216,224,229,231,233,240,241,243,248,448,250,449,450,251,383,451,385,271,279,284,286,288,295,296,298,303,40,305,314,315,316,116,65,67,117,319,386,323,339,340,341,342,343,345,347,349,352,353,356,82,360,361,45,364,365,366,368,69,47,48,49,50,70,51,72,53,55,75,76,77,79],"tindex":"6fac1beb-da4b-11e4-b037-3d036e6e3db7","variableMapping":{"len":"directionBitMask","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[337,345,346,81,351,352,355,356,45,364,365,366,368],"tindex":"6fac1bec-da4b-11e4-b037-67ace57cb605","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-1},{"failures":[],"tindex":"6fac1bed-da4b-11e4-b037-6748f14b3628","variableMapping":{"factor":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"6fac1bee-da4b-11e4-b037-59f59198be11","variableMapping":{"remainingSegNo":"encoderCount","segmentSizeInBytes":"encoderCount","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:418","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[129,131,132,138,140,141,143,145,149,150],"tindex":"6fac1bef-da4b-11e4-b037-ff037a390a93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"6fac1bf0-da4b-11e4-b037-7354190f4f74","variableMapping":{"initLeafSize":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":0},{"failures":[],"tindex":"6fac1bf1-da4b-11e4-b037-71992c621a6c","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"6fac1bf2-da4b-11e4-b037-edf4241b2d43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"6fac1bf3-da4b-11e4-b037-6738ec1f2da2","variableMapping":{"flags":"acceptBit","tmpValue":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"6fac1bf4-da4b-11e4-b037-59e04203fc34","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[350,81,351,356,365,366,368],"tindex":"6fac1bf5-da4b-11e4-b037-77cc54552b05","variableMapping":{"includeWay":"millis"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:347","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[447,369],"tindex":"6fac1bf6-da4b-11e4-b037-c74a05dc64eb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[452,453,454,455,161,162,165,180,89,189,191,192,6,7,8,57,58,59,204,60,27,28,29,456,457,214,216,217,220,235,97,244,246,247,251,269,271,272,275,290,114,299,301,302,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,310,314,315,316,119,320,56,323,324,325,326,328,329,330,331,332,333,335,336,365,482,483,484,485,486,68,69,46,47,48,49,50,70,51,52,71,369,72,53,54,55,73,74,75,76,77,78,79,152,80,487,488,489],"tindex":"6fac1bf7-da4b-11e4-b037-5d8292bf7a16","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"6fac1bf8-da4b-11e4-b037-1d3ed5ba2ce8","variableMapping":{"versionHint":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"6fac1bf9-da4b-11e4-b037-31a71b76f837","variableMapping":{"factor":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[264,345,349],"tindex":"6fac1bfa-da4b-11e4-b037-6feb51b536f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[161,165,166,83,173,174,176,183,186,189,193,214,216,220,221,91,228,229,231,238,241,244,248,379,380,99,381,250,449,382,383,384,385,271,275,276,108,283,284,286,293,296,299,303,40,305,306,310,116,117,118,389,397,386,329,332,339,340,345,347,350,351,359,43,44,368,371,372],"tindex":"6fac430b-da4b-11e4-b037-272478eab3e7","variableMapping":{"acceptBit":"backwardBit","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"6fac430c-da4b-11e4-b037-af4146a7cc35","variableMapping":{"minLat":"minLon","bbox":"bbox"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"6fac430d-da4b-11e4-b037-719007227a14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"6fac430e-da4b-11e4-b037-9d4d14325cb1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[160,161,162,163,164,165,166,83,167,168,169,170,171,172,173,84,174,85,86,175,87,176,177,178,179,88,180,181,182,183,184,185,89,90,186,187,188,189,190,191,192,193,194,5,195,6,7,8,9,196,10,11,12,13,14,15,16,17,18,197,198,199,200,201,202,203,57,58,59,204,60,205,206,207,208,209,210,24,25,211,26,212,27,28,29,30,213,31,32,33,34,35,36,37,38,39,214,215,216,217,218,219,220,221,91,222,223,224,225,226,227,228,92,229,93,94,230,95,231,232,233,234,96,235,236,237,238,239,240,97,98,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,107,270,271,272,273,274,275,276,108,277,278,279,280,281,282,283,109,284,110,111,285,112,286,287,288,289,113,290,291,292,293,294,295,114,115,296,297,298,299,300,301,302,303,304,40,41,305,306,307,308,309,310,311,312,313,314,315,316,119,63,64,317,318,116,65,66,67,117,118,319,320,56,321,322,323,324,325,325,326,326,327,327,328,328,329,329,330,330,331,331,332,332,333,333,334,334,335,335,336,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,81,351,352,353,354,355,356,357,358,42,82,359,360,43,44,361,362,45,363,364,365,366,367,368,68,46,47,48,49,50,70,51,52,71,369,72,53,54,55,73,74,75,76,77,78,79,152,80,370,371,372],"tindex":"6fac430f-da4b-11e4-b037-11f1c85d6f27","variableMapping":{"index":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"6fac4310-da4b-11e4-b037-7930a4cbbeb1","variableMapping":{"p":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[264,345,349],"tindex":"6fac4311-da4b-11e4-b037-750efd85be22","variableMapping":{"elevation":"found","withElevation":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:79","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"6fac4312-da4b-11e4-b037-f3125edfb929","variableMapping":{"maxMCSpeed":"r","speed":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":0},{"failures":[],"tindex":"6fac4313-da4b-11e4-b037-ed6d8cab6537","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"6fac4314-da4b-11e4-b037-e185c1a9f1d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"6fac4315-da4b-11e4-b037-c34cf6a5ccbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[83,84,85,86,179,89,90,91,92,93,94,234,97,98,99,100,101,102,490,105,106,107,108,109,110,111,289,114,115,67],"tindex":"6fac4316-da4b-11e4-b037-0bd7b45438e4","variableMapping":{"factor":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"6fac6a27-da4b-11e4-b037-f7fff1ca8db8","variableMapping":{"freeIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[378,143,144],"tindex":"6fac6a28-da4b-11e4-b037-ff86e3c6545b","variableMapping":{"ghLocation":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[56],"tindex":"6fac6a29-da4b-11e4-b037-597594785659","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[452,453,454,455,161,162,165,180,89,189,191,192,6,7,8,57,58,59,204,60,27,28,29,456,214,216,217,220,235,97,244,246,247,251,269,271,272,275,290,114,299,301,302,460,472,310,314,315,316,119,320,56,323,324,325,326,328,329,330,331,332,333,335,336,365,482,483,485,486,68,69,46,47,48,49,50,70,51,52,71,369,72,53,54,55,73,74,75,76,77,78,79,152,80],"tindex":"6fac6a2a-da4b-11e4-b037-99f3b6d5f907","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"6fac6a2b-da4b-11e4-b037-cfaf59b0fd36","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[],"tindex":"6fac6a2c-da4b-11e4-b037-2b768d4dbbbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"6fac6a2d-da4b-11e4-b037-63cfebf784f0","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[160,161,164,165,166,83,167,168,169,170,171,172,173,84,174,85,86,175,87,176,177,178,179,88,180,181,182,183,185,89,90,186,187,188,189,190,191,192,193,194,5,195,6,7,8,9,196,10,11,12,13,14,15,16,17,18,197,198,199,200,201,202,57,58,59,204,60,205,206,207,208,209,210,24,25,211,26,212,27,28,29,30,213,31,32,33,34,35,36,37,38,39,214,215,216,219,220,221,91,222,223,224,225,226,227,228,92,229,93,94,230,95,231,232,233,234,96,235,236,237,238,240,97,98,241,242,243,244,245,246,247,248,249,250,251,253,255,256,258,260,261,262,263,264,265,266,267,268,107,270,271,274,275,276,108,277,278,279,280,281,282,283,109,284,110,111,285,112,286,287,288,289,113,290,291,292,293,295,114,115,296,297,298,299,300,301,302,303,304,40,41,305,306,307,308,309,310,311,312,314,315,316,119,63,64,317,318,116,65,66,67,117,118,319,320,56,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,81,351,352,353,354,355,356,357,358,42,82,359,360,43,44,361,362,45,363,364,365,366,367,368,68,46,47,48,49,50,70,51,52,71,369,72,53,54,55,73,74,75,76,77,78,79,152,80,370,371,372],"tindex":"6fac6a2e-da4b-11e4-b037-add34391b41f","variableMapping":{"flags":"bytePos","mask":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"6fac6a2f-da4b-11e4-b037-a3e03654caea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"6fac6a30-da4b-11e4-b037-85ae5ec3e1a3","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1378","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.checkInit()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[251],"tindex":"6fac6a31-da4b-11e4-b037-a54b7acdb945","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"6fac9142-da4b-11e4-b037-15d8b2fb4d54","variableMapping":{"intIndex":"i","len":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,75],"tindex":"6fac9143-da4b-11e4-b037-570cd9005f58","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"6fac9144-da4b-11e4-b037-69e2516fbba9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[119,120,121,391,122,123,395,396,124,125,126,127,128,129,130,131,153,132,154,133,134,135,136,137,138,139,140,155,141,156,142,157,143,144,145,158,146,147,148,149,150,159,151,68,69,46,47,48,49,50,70,51,52,71,369,72,53,54,55,73,74,75,76,77,78,79,152,491,80],"tindex":"6fac9145-da4b-11e4-b037-9bdb688e345c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[452,453,454,455,161,162,165,180,89,189,191,192,6,7,8,57,58,59,204,60,27,28,29,456,457,214,216,217,220,235,97,244,246,247,251,269,271,272,275,290,114,299,301,302,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,310,314,315,316,119,320,56,323,324,325,326,328,329,330,331,332,333,335,336,365,482,483,484,485,486,68,69,46,47,48,49,50,70,51,52,71,369,72,53,54,55,73,74,75,76,77,78,79,152,80,487,488,489],"tindex":"6fac9146-da4b-11e4-b037-7f70713d3347","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"6fac9147-da4b-11e4-b037-a13408d3d10c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"6fac9148-da4b-11e4-b037-b1051b4952e9","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"6fac9149-da4b-11e4-b037-53d47e4a4250","variableMapping":{"segmentsToMap":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"6fac914a-da4b-11e4-b037-13cca3d4aba5","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:170","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":295,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":363,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":147,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":269,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":380,"com.graphhopper.reader.OSMReaderTest.testFerry":369,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":306,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":139,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":28,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":69,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":92,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":470,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":444,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":192,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":341,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":174,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":211,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":471,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":464,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":347,"com.graphhopper.GraphHopperTest.testPrepare":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":45,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":337,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":82,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":314,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":203,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":150,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":64,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":418,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":352,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":358,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":7,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":214,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":275,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":376,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":350,"com.graphhopper.GraphHopperTest.testLoadOSM":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":13,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":8,"com.graphhopper.reader.OSMReaderTest.testSort":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":427,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":66,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":217,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":474,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":187,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":161,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":332,"com.graphhopper.storage.RAMDataAccessTest.testHeader":465,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":243,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":457,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":294,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":257,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":171,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":265,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":129,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":146,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":31,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":87,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":355,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":354,"com.graphhopper.coll.OSMIDMapTest.testGetLong":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":230,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":222,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":287,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":271,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":289,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":88,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":378,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":229,"com.graphhopper.GraphHopperAPITest.testLoad":40,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":0,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":85,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":83,"com.graphhopper.storage.LevelGraphStorageTest.testClone":278,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":447,"com.graphhopper.reader.OSMReaderTest.testBarriers":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":405,"com.graphhopper.util.GHUtilityTest.testCopy":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":433,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":159,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":468,"com.graphhopper.routing.PathTest.testFindInstruction":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":441,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":91,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":121,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":305,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":300,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":404,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":188,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":241,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":95,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":410,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":416,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":280,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":164,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":263,"com.graphhopper.util.InstructionListTest.testWayList2":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":14,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":246,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":23,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":320,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":282,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":472,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":420,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":93,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":57,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":356,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":73,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":365,"com.graphhopper.coll.OSMIDMapTest.testGet":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":228,"com.graphhopper.routing.PathBidirRefTest.testExtract":317,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":391,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":421,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":35,"com.graphhopper.storage.RAMDataAccessTest.testCopy":461,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":476,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":2,"com.graphhopper.storage.RAMDataAccessTest.testSegments":467,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":18,"com.graphhopper.util.GHUtilityTest.testSort2":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":361,"com.graphhopper.reader.OSMReaderTest.testMain":53,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":272,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":122,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":451,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":284,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":61,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":112,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":303,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":110,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":238,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":403,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":288,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":152,"com.graphhopper.storage.StorablePropertiesTest.testStore":456,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":460,"com.graphhopper.storage.GraphHopperStorageTest.testClone":168,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":194,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":124,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":175,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":158,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":267,"com.graphhopper.routing.PathTest.testTime":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":432,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":301,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":279,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":104,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":292,"com.graphhopper.reader.OSMReaderTest.testRelation":446,"com.graphhopper.util.GHUtilityTest.testSortDirected":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":412,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":480,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":328,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":438,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":396,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":213,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":353,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":449,"com.graphhopper.search.NameIndexTest.testCreate":455,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":466,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":325,"com.graphhopper.routing.QueryGraphTest.testOneWay":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":440,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":6,"com.graphhopper.reader.OSMReaderTest.testWithBounds":79,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":469,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":154,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":459,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":245,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":330,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":392,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":134,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":276,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":273,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":411,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":151,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":237,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":231,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":165,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":351,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":190,"com.graphhopper.util.InstructionListTest.testWayList":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":155,"com.graphhopper.GraphHopperAPITest.testDisconnected179":41,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":408,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":372,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":67,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":426,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":48,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":170,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":348,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":417,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":346,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":299,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":429,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":141,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":367,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":254,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":142,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":160,"com.graphhopper.routing.PathTest.testWayList":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":395,"com.graphhopper.coll.OSMIDMapTest.testGet2":483,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":368,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":477,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":296,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":487,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":425,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":388,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":226,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":32,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":33,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":462,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":481,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":1,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":143,"com.graphhopper.util.GHUtilityTest.testSort":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":424,"com.graphhopper.search.NameIndexTest.testPut":453,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":248,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":200,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":207,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":130,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":56,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":205,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":488,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":366,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":116,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":262,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":251,"com.graphhopper.routing.PathTest.testFound":321,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":71,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":136,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":298,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":387,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":423,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":94,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":374,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":454,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":250,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":173,"com.graphhopper.util.InstructionListTest.testEmptyList":313,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":394,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":393,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":445,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":362,"com.graphhopper.reader.PrinctonReaderTest.testRead":371,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":29,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":100,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":379,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":443,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":128,"com.graphhopper.reader.OSMReaderTest.testFoot":72,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":382,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":11,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":302,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":12,"com.graphhopper.reader.OSMReaderTest.testOneWay":80,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":86,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":90,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":442,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":479,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":153,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":450,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":342,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":349,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":21,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":340,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":478,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":27,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":327,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":163,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":491,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":260,"com.graphhopper.routing.PathBidirRefTest.testExtract2":318,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":145,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":202,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":452,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":185,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":436,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":75,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":120,"com.graphhopper.util.SimpleIntDequeTest.testPush":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":409,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":9,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":186,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":399,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":180,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":38,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":463,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":414,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":223,"com.graphhopper.GraphHopperTest.testPrepareOnly":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":364,"com.graphhopper.GraphHopperTest.testVia":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":99,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":77,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":268,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":119,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":184,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":389,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":76,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":127,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":297,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":115,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":216}}]
