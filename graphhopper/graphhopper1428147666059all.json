[{"failures":[],"tindex":"7c155997-dabf-11e4-bddd-8befa831db3c","variableMapping":{"red":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"7c155998-dabf-11e4-bddd-15136b1c270d","variableMapping":{"defaultUTurnCost":"factor","weight":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-1},{"failures":[46,47],"tindex":"7c155999-dabf-11e4-bddd-97d26f7090b3","variableMapping":{"locs":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"7c1580aa-dabf-11e4-bddd-f51c11f4f7a5","variableMapping":{"compressionLevel":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":0},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,3,61,62,63,64,65,66,67,68,69,4,70,71,72,73,74,75,76,77,78,79,80,5,81,82,83,84,85,86,87,88,6,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,46,105,106,107,108,39,109,110,111,112,113,114,115,116,117,118,119,42,43,120,121,122,123,124,45],"tindex":"7c1580ab-dabf-11e4-bddd-67f814c4da93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[12],"tindex":"7c1580ac-dabf-11e4-bddd-afb29aab14df","variableMapping":{"sacScale":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"7c1580ad-dabf-11e4-bddd-59dd5eb4f370","variableMapping":{"tmpNo":"nextTurnBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[46,108,47],"tindex":"7c1580ae-dabf-11e4-bddd-13876de4cbc5","variableMapping":{"locs":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[18,19,20,125,22,23,126,26,27,28,127,30,31,128],"tindex":"7c1580af-dabf-11e4-bddd-65a5cf905313","variableMapping":{"indexWithMaxDist":"speed","lastIndex":"speed","fromIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"7c1580b0-dabf-11e4-bddd-475763c2e5eb","variableMapping":{"newAdjIndex":"mSize","newBaseIndex":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[48,49,50,0,53,129,130,131,132,133,134,135,136,137,138,59,139,140,141,142,143,67,68,144,145,146,147,148,149,150,151,152,153,154,155,156,87,157,158,159,160,161,162,163,164,165,166,100,101,102,167,168,39,169,170,171,172,173,174,175,123],"tindex":"7c1580b1-dabf-11e4-bddd-29ada0813dbc","variableMapping":{"edgeId":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[49,0,176,177,178,179,180,39,169],"tindex":"7c1580b2-dabf-11e4-bddd-53d74b6893ca","variableMapping":{"val":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[181,12,182,18,20,183,22,23,184,26,28,185,186],"tindex":"7c15a7c3-dabf-11e4-bddd-771418358af4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[],"tindex":"7c15a7c4-dabf-11e4-bddd-69ad7f327a4f","variableMapping":{"height":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:415","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = int + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"7c15a7c5-dabf-11e4-bddd-db017ffcf122","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"7c15a7c6-dabf-11e4-bddd-df894e9fe55d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"7c15a7c7-dabf-11e4-bddd-859352de0fc8","variableMapping":{"size":"hash","hash":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[52,187,166,99,188,182],"tindex":"7c15a7c8-dabf-11e4-bddd-d303a1b07788","variableMapping":{"high":"encoded","low":"backwardBit","guess":"backwardBit","guessedKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"7c15a7c9-dabf-11e4-bddd-eb166ac2f3fe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"7c15a7ca-dabf-11e4-bddd-498d74e14d59","variableMapping":{"y":"defaultD","angle":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[189,114,190,117,191,119,121,122,124],"tindex":"7c15a7cb-dabf-11e4-bddd-d11d57c18fd4","variableMapping":{"skippedEdge1":"skippedEdge2","skippedEdge2":"skippedEdge2","from":"skippedEdge2","edgeState":"iter","graph":"graph","empty":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[192,193],"tindex":"7c15a7cc-dabf-11e4-bddd-8b0cb8966cf2","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[165,96,166,97,100,101,167,109,111,114,115,194,116,195,41,117,118,196,191,119,197,198,199,42,200,43,44,201,120,202,121,203,122,123,124,204,45],"tindex":"7c15a7cd-dabf-11e4-bddd-e3b2fc0b7d93","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[14],"tindex":"7c15a7ce-dabf-11e4-bddd-693acace29c9","variableMapping":{"weightApproximation":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"7c15a7cf-dabf-11e4-bddd-d99fa1eee82a","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1433","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.loadWayGeometryHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":0},{"failures":[],"tindex":"7c15a7d0-dabf-11e4-bddd-05e34f45e754","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"7c15cee1-dabf-11e4-bddd-29819f1460b2","variableMapping":{"line":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[1,52,53,205,54,129,130,55,56,57,206,58,2,187,3,4,5,6,207,7,103,8,9,208,10,181,11,209,210,12,188,211,13,212,14,15,182,213,214,215,104,216,217,218,219,220,16,106,17,221,18,222,223,224,19,20,225,226,227,228,229,230,231,232,233,234,21,183,125,235,236,22,237,23,126,238,239,240,241,242,243,244,24,184,245,246,25,247,26,248,249,250,27,28,251,252,253,254,255,256,257,258,259,260,29,185,127,261,262,30,263,31,264,265,266,267,268,269,270,271,32,186,128,272],"tindex":"7c15cee2-dabf-11e4-bddd-4d872cb4fd37","variableMapping":{"i":"shift","to":"shift","lonSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"7c15cee3-dabf-11e4-bddd-65d4a88e15b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"7c15cee4-dabf-11e4-bddd-6b5ad9dcfe20","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"7c15cee5-dabf-11e4-bddd-392393bf443d","variableMapping":{"encodingManager":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:138","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"Encoding manager was not set.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":0},{"failures":[181,13,182,183,184,185,186],"tindex":"7c15cee6-dabf-11e4-bddd-651b4ccc7694","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[273,274,275,276,277,278,279,280,281,282],"tindex":"7c15cee7-dabf-11e4-bddd-47d7b5ba9938","variableMapping":{"midLat":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[222,224,20,234,23,244,248,250,28,260,263,31,271],"tindex":"7c15cee8-dabf-11e4-bddd-dbea136ff518","variableMapping":{"osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[181],"tindex":"7c15cee9-dabf-11e4-bddd-651fe95a0665","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"7c15ceea-dabf-11e4-bddd-07bc2355379a","variableMapping":{"tmpNo":"sLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"7c15ceeb-dabf-11e4-bddd-8b61c8367b34","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:613","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[],"tindex":"7c15ceec-dabf-11e4-bddd-87876f4c296d","variableMapping":{"type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[],"tindex":"7c15ceed-dabf-11e4-bddd-6d3a5e1ef085","variableMapping":{"com.graphhopper.routing.AlgorithmOptions.ASTAR":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:192","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AlgorithmOptions.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"7c15ceee-dabf-11e4-bddd-3d246594c7ae","variableMapping":{"mmapDA":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:147","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[283,284,285,286,287,288,289,290,48,49,50,0,291,292,51,293,294,295,1,52,53,205,54,129,130,55,56,57,206,58,2,187,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,138,312,313,59,314,315,316,139,317,318,319,320,60,321,322,323,324,325,3,326,327,328,329,61,330,62,331,332,140,333,334,335,336,63,141,337,64,338,65,142,339,143,340,66,341,67,342,68,343,344,345,144,346,347,348,349,69,350,351,352,353,354,4,355,356,357,358,70,359,71,360,361,145,362,363,364,365,72,146,366,73,367,74,147,368,148,369,75,370,371,372,373,374,375,76,376,377,378,379,380,149,381,150,382,383,384,385,386,387,388,389,390,391,77,392,393,151,152,153,154,394,395,396,397,398,78,399,400,155,401,156,402,403,404,405,406,407,408,409,410,411,79,5,83,412,87,413,414,415,157,416,417,418,419,88,420,421,422,423,424,6,425,426,427,428,89,429,90,430,431,158,432,433,434,435,91,159,436,92,437,93,160,438,161,439,94,440,95,441,165,96,166,97,98,99,100,101,102,167,168,103,46,105,106,107,108,47,246,25,442,38,39,169,443,444,445,445,170,170,446,446,447,447,171,171,172,172,448,448,173,173,174,174,449,449,450,450,175,175,189,451,109,110,111,112,113,452,114,190,115,194,116,195,40,41,117,118,196,191,119,197,198,199,42,200,43,44,201,120,202,121,203,122,123,124,204,45],"tindex":"7c15f5ff-dabf-11e4-bddd-a52db3ee8634","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[283,284,285,286,287,288,453,289,290,48,49,50,0,291,292,51,293,294,295,1,52,53,205,54,129,130,55,56,454,57,206,58,2,455,187,307,308,309,310,311,138,312,313,59,314,315,316,456,139,317,318,319,320,60,321,322,323,324,325,3,326,327,328,329,61,330,62,331,332,140,333,334,335,336,63,141,337,64,338,65,142,339,143,340,66,341,67,457,342,68,343,344,345,458,144,346,347,348,349,69,350,351,352,353,354,4,355,356,357,358,70,359,71,360,361,145,362,363,364,365,72,146,366,73,367,74,147,368,148,369,75,370,371,372,373,374,459,375,76,376,377,378,379,380,149,381,150,382,383,384,385,386,387,388,389,390,460,391,77,393,151,152,153,461,154,394,395,396,397,462,398,78,399,400,155,401,156,402,403,404,405,406,407,408,409,410,463,411,79,464,465,466,467,468,80,469,470,471,472,473,5,474,475,476,477,81,478,82,479,480,481,482,483,484,485,83,486,487,84,488,85,489,490,491,492,86,493,412,87,413,414,415,494,157,416,417,418,419,88,420,421,422,423,424,6,425,426,427,428,89,429,90,430,431,158,432,433,434,435,91,159,436,92,437,93,160,438,161,439,94,440,95,441,495,165,96,166,97,98,99,100,496,101,102,167,168,497,207,7,103,8,9,208,10,181,11,209,210,12,188,211,13,212,14,15,182,213,214,215,104,216,217,218,219,498,220,499,46,105,106,107,108,47,17,221,18,222,223,224,19,20,225,226,227,228,229,230,231,232,233,234,21,183,125,235,236,22,237,23,126,238,239,240,241,242,243,244,24,184,245,246,25,247,26,248,249,250,27,28,251,252,253,254,255,256,257,258,259,260,29,185,127,261,262,30,263,31,264,265,266,267,268,269,270,271,32,186,128,272,33,36,37,500,501,502,503,442,38,39,169,443,444,445,170,446,447,171,172,448,173,174,449,450,175,504,189,451,505,109,110,111,112,113,452,114,190,115,194,116,195,40,41,117,118,196,191,119,197,198,199,42,200,43,44,201,120,202,121,203,122,123,124,204,45],"tindex":"7c161d10-dabf-11e4-bddd-618eb91ec865","variableMapping":{"tmpNo":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"7c161d11-dabf-11e4-bddd-898959f4ca3a","variableMapping":{"p":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[],"tindex":"7c161d12-dabf-11e4-bddd-a7b9e8582f78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7c161d13-dabf-11e4-bddd-593e9c838c1a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"7c161d14-dabf-11e4-bddd-75c6419178b1","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"7c161d15-dabf-11e4-bddd-d5b29b9b9a3b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[273,274,275,276,278,279,506,507,280,281,282,379,383,385,386,508,399,403,405,406,199],"tindex":"7c161d16-dabf-11e4-bddd-799e8a8bc87a","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"allBits","nodeId":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"7c161d17-dabf-11e4-bddd-c30b2dc86288","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[509,166,99,447,199,121],"tindex":"7c161d18-dabf-11e4-bddd-9d15588ada24","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-1},{"failures":[],"tindex":"7c161d19-dabf-11e4-bddd-773ff8021e50","variableMapping":{"nodeB":"length","edgeId":"length","nodeA":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"7c161d1a-dabf-11e4-bddd-efb5ba9739b2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[376,377,149,150,382,384,387,388,389,390,391,77,166,97,100,199,44,201,121],"tindex":"7c161d1b-dabf-11e4-bddd-353cd9d3fa61","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"nodeB","id":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"7c161d1c-dabf-11e4-bddd-f531aca2a58a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[307,308,309,310,311,138,312,313,59,314,315,316,456,139,317,318,319,320,60,321,322,323,324,325,3,326,327,328,329,61,330,62,331,332,140,333,334,335,336,63,141,337,64,338,65,142,339,143,340,66,341,67,457,342,68,343,344,345,458,144,346,347,348,349,69,350,351,352,353,354,4,355,356,357,358,70,359,71,360,361,145,362,363,364,365,72,146,366,73,367,74,147,368,148,369,75,370,76,77,78,79,464,465,466,467,468,80,469,470,471,472,473,5,474,475,476,477,81,478,82,479,480,481,482,483,484,485,83,486,487,84,488,85,489,490,491,492,86,493,412,87,413,414,415,494,157,416,417,418,419,88,420,421,422,423,424,6,425,426,427,428,89,429,90,430,431,158,432,433,434,435,91,159,436,92,437,93,160,438,161,439,94,440,99,207,7,103,8,9,208,10,181,11,209,210,12,188,211,13,212,14,15,182,213,214,215,104,216,217,499,16,17,236,22,237,23,126,262,30,263,31,40,41,117,118,196,191,119,197,198,199,42,200,43,44,201,120,202,121,203,122,123,124,204,45],"tindex":"7c16442d-dabf-11e4-bddd-cd65e8aad258","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"7c16442e-dabf-11e4-bddd-2317995e6921","variableMapping":{"resultOrientation":"java.lang.Double.MAX_VALUE","orientation":"minLon","java.lang.Math.PI":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"7c16442f-dabf-11e4-bddd-0b0f0a50e975","variableMapping":{"edgeTo":"code","edgeFrom":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[],"tindex":"7c164430-dabf-11e4-bddd-fd1ecb797f02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"7c164431-dabf-11e4-bddd-135e33af3a5a","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"index","entityType":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"7c177cb2-dabf-11e4-bddd-c5c2f4b45cc5","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"7c177cb3-dabf-11e4-bddd-2d2b6898a9dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:200","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[285,287,48,49,50,0,51,295,510,511,512,513,514,1,52,53,205,54,129,130,55,56,57,206,58,2,187,131,132,515,133,134,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,135,533,534,136,535,536,537,538,539,540,541,542,543,544,545,546,547,137,548,549,550,551,552,553,554,555,556,557,558,559,303,304,307,308,309,310,311,138,312,313,59,314,316,139,317,318,319,320,60,321,322,323,324,325,326,327,328,329,61,330,62,331,332,140,333,334,335,336,63,141,337,64,338,65,142,339,143,340,66,341,67,457,342,68,343,345,144,346,347,348,349,69,350,351,352,353,354,355,356,357,358,70,359,71,360,361,145,362,363,364,365,72,146,366,73,367,74,147,368,148,369,75,370,459,376,377,378,379,380,149,381,150,382,383,384,385,386,387,388,389,390,460,391,77,393,151,152,153,461,154,462,155,401,156,406,463,464,465,466,467,468,80,469,470,471,472,473,474,475,476,477,81,478,82,479,480,481,482,483,484,485,83,486,487,84,488,85,489,490,491,492,86,493,412,87,413,157,417,424,158,159,160,161,439,440,560,162,163,164,165,96,166,97,98,99,100,101,102,167,168,246,25,39,169,445,170,446,447,171,172,448,173,174,450,175,189,451,109,110,111,112,113,452,114,190,115,194,116,195,40,41,117,118,196,191,119,197,198,199,200,43,44,201,120,202,121,203,122,123,124,204],"tindex":"7c177cb4-dabf-11e4-bddd-e9309936702d","variableMapping":{"currentEntry":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"7c17a3c5-dabf-11e4-bddd-01fbbaf98b23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[561,562,563,192,193],"tindex":"7c17a3c6-dabf-11e4-bddd-2da86bfc5ecc","variableMapping":{"bitsForEdgeFlags":"minElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"7c17a3c7-dabf-11e4-bddd-bdaf36271796","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"7c17a3c8-dabf-11e4-bddd-c30619a0da44","variableMapping":{"counts":"maxTurnCosts","counter":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[16,25,38,40],"tindex":"7c17a3c9-dabf-11e4-bddd-ef84b16f2323","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"7c17a3ca-dabf-11e4-bddd-73815ee5f4ac","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"7c17a3cb-dabf-11e4-bddd-0d8bb629f96f","variableMapping":{"nodeB":"minutes","edgeId":"minutes","nodeA":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7c17a3cc-dabf-11e4-bddd-973200e4ff80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"7c17a3cd-dabf-11e4-bddd-39984a9c7f92","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"7c17a3ce-dabf-11e4-bddd-4131b41ac79b","variableMapping":{"turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"7c17a3cf-dabf-11e4-bddd-d55cdd9970c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[273],"tindex":"7c17a3d0-dabf-11e4-bddd-a70aaae7ec01","variableMapping":{"flags":"hash","mask":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"7c17a3d1-dabf-11e4-bddd-c91bfed5b596","variableMapping":{"high":"ferryBit","highKey":"ferryBit","key":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[109,111,112,113,452,114,115,116,195,41,117,118,119,197,199,42,43,44,120,202,121,203,122,123,124,204,45],"tindex":"7c17a3d2-dabf-11e4-bddd-e7d511d4afe8","variableMapping":{"a":"elem","high":"size","len":"size","start":"size","key":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:387","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-1},{"failures":[],"tindex":"7c17a3d3-dabf-11e4-bddd-77fc6dae67cb","variableMapping":{"str":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"7c17a3d4-dabf-11e4-bddd-03311a24af48","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7c17a3d5-dabf-11e4-bddd-8f2d4b51f445","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"7c17a3d6-dabf-11e4-bddd-b33d20993162","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"7c17a3d7-dabf-11e4-bddd-97c936953273","variableMapping":{"java.lang.Double.MAX_VALUE":"maxSpeed","existingDirectWeight":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[283,284,285,286,287,288,289,290,48,49,50,0,291,292,51,293,294,295,510,511,512,1,52,53,205,54,129,130,55,56,454,57,206,58,2,455,187,131,132,515,133,134,564,516,135,534,542,543,547,555,556,307,308,309,310,311,138,312,313,59,314,315,316,139,317,318,319,320,60,321,322,323,324,325,3,326,327,328,329,61,330,62,331,332,140,333,334,335,336,63,141,337,64,338,65,142,339,143,340,66,341,67,342,68,343,344,345,144,346,347,348,349,69,350,351,352,353,354,4,355,356,357,358,70,359,71,360,361,145,362,363,364,365,72,146,366,73,367,74,147,368,148,369,75,370,371,372,373,374,375,76,376,377,378,379,380,149,381,150,382,383,384,385,386,387,388,389,390,391,77,392,393,151,152,153,154,394,395,396,397,398,78,399,400,155,401,156,402,403,404,405,406,407,408,409,410,411,79,5,83,412,87,413,414,415,157,416,417,418,419,88,420,421,422,423,424,6,425,426,427,428,89,429,90,430,431,158,432,433,434,435,91,159,436,92,437,93,160,438,161,439,94,440,560,162,163,164,95,441,165,166,97,98,99,100,101,102,167,168,103,46,105,106,107,108,47,246,25],"tindex":"7c17c9e8-dabf-11e4-bddd-4d48574f6ee4","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"7c17c9e9-dabf-11e4-bddd-59c48310614e","variableMapping":{"defaultValue":"otherValue","flags":"flags","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[565],"tindex":"7c17c9ea-dabf-11e4-bddd-a343ae0a6701","variableMapping":{"str":"str","edge":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:448","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[273,274,275,276,277,278,279,506,507,280,281,282,508],"tindex":"7c17c9eb-dabf-11e4-bddd-2560258bbc4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[454,218,220,222,224,20,229,234,235,23,240,244,245,248,250,28,255,260,261,263,31,266,271,272,566,567],"tindex":"7c17c9ec-dabf-11e4-bddd-23dff11fea03","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-1},{"failures":[],"tindex":"7c17c9ed-dabf-11e4-bddd-f7087f034ff1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[16],"tindex":"7c17c9ee-dabf-11e4-bddd-018d3126d315","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[283,284,285,286,287,288,289,290,48,49,50,0,291,292,51,293,294,295,1,52,53,205,54,129,130,55,56,57,206,58,2,187,297,298,299,568,300,303,304,305,306,307,308,309,310,311,312,313,59,316,139,317,318,319,320,60,321,322,323,324,325,3,326,327,328,329,61,330,62,331,332,140,333,334,335,63,141,337,64,338,65,142,339,143,340,66,341,67,342,68,345,144,346,347,348,349,69,350,351,352,353,354,4,355,356,357,358,70,359,71,360,361,145,362,363,364,72,146,366,73,367,74,147,368,148,369,75,370,371,372,373,374,375,76,376,377,378,379,380,149,381,150,382,383,384,385,386,387,388,389,390,391,77,393,151,152,153,154,394,395,396,397,398,78,399,400,155,401,156,402,403,404,405,406,407,408,409,410,411,79,5,83,412,87,415,157,416,417,418,419,88,420,421,422,423,424,6,425,426,427,428,89,429,90,430,431,158,432,433,434,91,159,436,92,437,93,160,438,161,439,94,440,95,441,165,166,97,98,99,100,101,102,167,168,103,46,105,106,107,108,47,246,25,39,169,443,444,445,170,446,447,171,172,448,173,174,449,450,175,189,451,109,110,111,112,113,452,114,190,115,194,116,195,40,41,117,118,196,191,119,197,198,199,42,200,43,44,201,120,202,121,203,122,123,124,204,45],"tindex":"7c17c9ef-dabf-11e4-bddd-b7aed8e29073","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"7c17f100-dabf-11e4-bddd-917efd4d476a","variableMapping":{"size":"bytes","i":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"7c17f101-dabf-11e4-bddd-4b274c8fd12b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[1,2,187,182],"tindex":"7c17f102-dabf-11e4-bddd-7fa0e1f22999","variableMapping":{"entry":"motorcarTag","entryVal":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[],"tindex":"7c17f103-dabf-11e4-bddd-19670867b9fb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[273,274,275,276,277,278,279,280,281,282],"tindex":"7c17f104-dabf-11e4-bddd-4f40d1933726","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[283,284,285,286,287,288,289,48,49,50,0,291,292,51,293,294,295,1,52,53,205,54,129,130,55,56,57,206,58,2,455,187,307,309,310,311,313,59,316,139,317,318,319,320,60,321,322,323,324,3,326,327,328,329,61,330,62,331,332,334,335,63,141,337,64,338,65,142,143,340,66,341,67,457,342,68,345,144,346,347,348,349,69,350,351,352,353,4,355,356,357,358,70,359,71,360,361,363,364,72,146,366,73,367,74,147,148,369,75,370,371,372,373,374,375,76,376,377,379,380,149,381,150,382,383,384,385,386,387,388,389,390,391,77,393,151,152,153,154,394,395,396,397,398,78,399,400,155,401,156,402,403,404,405,406,407,408,409,410,411,79,464,465,466,467,468,80,469,470,471,472,5,474,475,476,477,81,478,82,479,480,483,484,83,486,487,84,488,85,489,491,492,86,493,412,87,415,157,416,417,418,419,88,420,421,422,423,6,425,426,427,428,89,429,90,430,431,433,434,91,159,436,92,437,93,160,161,439,94,440,95,441,165,96,166,97,98,99,100,101,102,167,168,207,7,103,8,9,10,181,11,209,12,188,211,13,212,14,15,182,214,104,216,217,218,498,220,16,46,105,106,107,108,47,17,18,222,224,19,20,226,227,229,234,21,183,235,22,23,238,240,244,24,184,245,246,25,26,248,250,27,28,252,253,255,260,29,185,261,262,30,263,31,264,266,271,32,186,272,33,36,37,38,39,169,443,444,445,170,447,171,172,448,173,174,449,450,175,189,451,109,110,111,112,113,452,114,190,115,194,116,195,40,41,117,118,196,191,119,197,198,199,42,200,43,44,201,120,202,121,203,122,123,124,204,45],"tindex":"7c17f105-dabf-11e4-bddd-c10e3e70fdee","variableMapping":{"index":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"7c17f106-dabf-11e4-bddd-d1e26cea68c3","variableMapping":{"alreadyRun":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"7c17f107-dabf-11e4-bddd-e902470fad62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[30],"tindex":"7c17f108-dabf-11e4-bddd-17de945dd921","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[1,52,53,205,54,129,130,55,56,57,206,58,2,187,376,377,379,380,149,381,150,382,383,384,385,386,387,388,389,390,460,391,77,399,400,155,401,156,402,403,404,405,406,407,408,409,410,463,411,79,95,441,165,96,166,97,98,99,100,101,102,167,168,199,44,201,121],"tindex":"7c181819-dabf-11e4-bddd-9d7fac84a253","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"7c18181a-dabf-11e4-bddd-6f6d4ef8d195","variableMapping":{"i":"tmpEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":63,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":203,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":33,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":138,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":373,"com.graphhopper.GraphHopperAPITest.testNoLoad":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":465,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":291,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":126,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":381,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":96,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":180,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":341,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":261,"com.graphhopper.storage.MMapDataAccessTest.testSegments":527,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":354,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":514,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":533,"com.graphhopper.coll.CompressedArrayTest.testCompress":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":243,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":439,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":111,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":481,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":6,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":378,"com.graphhopper.util.AngleCalcTest.testOrientation":176,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":534,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":553,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":115,"com.graphhopper.GraphHopperTest.testPrepare":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":490,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":189,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":42,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":48,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":392,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":244,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":284,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":379,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":18,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":198,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":424,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":523,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":401,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":369,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":497,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":67,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":506,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":524,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":139,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":195,"com.graphhopper.GraphHopperTest.testLoadOSM":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":407,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":156,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":499,"com.graphhopper.reader.OSMReaderTest.testSort":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":106,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":343,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":537,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":437,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":87,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":491,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":173,"com.graphhopper.storage.RAMDataAccessTest.testHeader":554,"com.graphhopper.routing.DijkstraTest.initializationError":503,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":74,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":516,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":525,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":336,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":568,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":421,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":505,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":457,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":69,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":144,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":32,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":384,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":201,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":382,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":496,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":472,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":191,"com.graphhopper.coll.OSMIDMapTest.testGetLong":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":196,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":357,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":361,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":330,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":59,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":331,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":178,"com.graphhopper.coll.CompressedArrayTest.testCompress2":281,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":431,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":4,"com.graphhopper.GraphHopperAPITest.testLoad":95,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":456,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":299,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":207,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":425,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":417,"com.graphhopper.storage.LevelGraphStorageTest.testClone":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":47,"com.graphhopper.reader.OSMReaderTest.testBarriers":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":346,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":197,"com.graphhopper.util.GHUtilityTest.testCopy":287,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":538,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":184,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":459,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":557,"com.graphhopper.routing.PathTest.testFindInstruction":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":240,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":347,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":561,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":10,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":51,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":249,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":372,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":93,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":89,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":548,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":73,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":113,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":258,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":498,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":502,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":321,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":469,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":526,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":306,"com.graphhopper.util.InstructionListTest.testWayList2":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":408,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":94,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":224,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":246,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":413,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":323,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":551,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":225,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":509,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":539,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":355,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":393,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":119,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":416,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":129,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":536,"com.graphhopper.routing.AStarTest.initializationError":501,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":123,"com.graphhopper.coll.OSMIDMapTest.testGet":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":181,"com.graphhopper.routing.PathBidirRefTest.testExtract":443,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":228,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":515,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":388,"com.graphhopper.storage.RAMDataAccessTest.testCopy":549,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":540,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":370,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":486,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":227,"com.graphhopper.storage.RAMDataAccessTest.testSegments":556,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":79,"com.graphhopper.util.GHUtilityTest.testSort2":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":120,"com.graphhopper.reader.OSMReaderTest.testMain":53,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":360,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":507,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":389,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":12,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":344,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":3,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":329,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":66,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":567,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":171,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":26,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":298,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":62,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":2,"com.graphhopper.storage.StorablePropertiesTest.testStore":135,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":137,"com.graphhopper.storage.GraphHopperStorageTest.testClone":419,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":488,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":14,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":427,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":307,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":186,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":470,"com.graphhopper.routing.PathTest.testTime":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":268,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":143,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":216,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":410,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":334,"com.graphhopper.reader.OSMReaderTest.testRelation":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":480,"com.graphhopper.util.GHUtilityTest.testSortDirected":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":29,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":544,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":447,"com.graphhopper.GraphHopperTest.testFootOnly":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":13,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":151,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":564,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":383,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":220,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":521,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":451,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":81,"com.graphhopper.search.NameIndexTest.testCreate":164,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":555,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":445,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":302,"com.graphhopper.routing.QueryGraphTest.testOneWay":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":463,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":276,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":239,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":513,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":155,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":273,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":558,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":531,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":185,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":547,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":105,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":475,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":482,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":218,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":317,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":315,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":259,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":245,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":363,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":70,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":157,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":41,"com.graphhopper.util.InstructionListTest.testWayList":49,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":438,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":518,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":226,"com.graphhopper.GraphHopperAPITest.testDisconnected179":441,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":471,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":399,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":528,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":467,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":256,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":107,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":233,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":98,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":420,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":152,"com.graphhopper.routing.util.EncodedValueTest.testSwap":566,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":221,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":434,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":433,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":43,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":500,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":190,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":234,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":204,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":460,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":301,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":559,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":235,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":412,"com.graphhopper.routing.PathTest.testWayList":39,"com.graphhopper.storage.MMapDataAccessTest.testCopy":522,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":492,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":474,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":565,"com.graphhopper.coll.OSMIDMapTest.testGet2":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":45,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":541,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":64,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":510,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":362,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":232,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":429,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":7,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":351,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":386,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":550,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":545,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":253,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":563,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":263,"com.graphhopper.util.GHUtilityTest.testSort":288,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":520,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":485,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":34,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":231,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":238,"com.graphhopper.search.NameIndexTest.testPut":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":75,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":458,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":154,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":396,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":27,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":25,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":394,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":342,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":264,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":37,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":359,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":46,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":305,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":83,"com.graphhopper.routing.PathTest.testFound":442,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":16,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":168,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":65,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":535,"com.graphhopper.util.AngleCalcTest.testAtan2":177,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":309,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":230,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":356,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":562,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":163,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":530,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":5,"com.graphhopper.util.InstructionListTest.testEmptyList":290,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":423,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":546,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":270,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":104,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":210,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":209,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":202,"com.graphhopper.reader.PrinctonReaderTest.testRead":293,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":160,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":529,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":150,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":352,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":134,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":464,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":71,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":254,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":517,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":248,"com.graphhopper.reader.OSMReaderTest.testFoot":52,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":484,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":512,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":279,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":405,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":236,"com.graphhopper.reader.OSMReaderTest.testOneWay":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":406,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":426,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":436,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":367,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":241,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":543,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":82,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":422,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":112,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":508,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":110,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":397,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":542,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":103,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":532,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":476,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":446,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":414,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":455,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":303,"com.graphhopper.routing.PathBidirRefTest.testExtract2":444,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":409,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":560,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":128,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":55,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":493,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":398,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":402,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":92,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":453,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":214,"com.graphhopper.GraphHopperTest.testFootAndCar":99,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":158,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":391,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":552,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":468,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":519,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":122,"com.graphhopper.GraphHopperTest.testPrepareOnly":165,"com.graphhopper.GraphHopperTest.testVia":166,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":466,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":57,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":311,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":435,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":9,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":56,"com.graphhopper.util.AngleCalcTest.testCombined":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":478,"com.graphhopper.routing.AStarBidirectionTest.initializationError":504,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":17,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":338,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":337,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":68}}]
