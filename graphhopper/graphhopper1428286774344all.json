[{"failures":[],"tindex":"5e4fd463-dc03-11e4-b7bf-f1634457df5d","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[0],"tindex":"5e50e5d4-dc03-11e4-b7bf-eb1b012cd566","variableMapping":{"midLat":"speed","spatialKey":"backwardBit","bits":"backwardBit","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[],"tindex":"5e50e5d5-dc03-11e4-b7bf-b33aa499943f","variableMapping":{"i":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[1],"tindex":"5e50e5d6-dc03-11e4-b7bf-c3d8fbc3d75f","variableMapping":{"maxMCSpeed":"backSpeed","speed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"5e50e5d7-dc03-11e4-b7bf-5bf2e257d09a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"5e50e5d8-dc03-11e4-b7bf-733d5103616f","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"5e50e5d9-dc03-11e4-b7bf-e3df19c1f115","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[2],"tindex":"5e50e5da-dc03-11e4-b7bf-33511db8d2ca","variableMapping":{"r":"decDist2DSum","x":"decDist2DSum","absY":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,1,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"5e510ceb-dc03-11e4-b7bf-d1d8cb4a0ea6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"5e510cec-dc03-11e4-b7bf-371b97449118","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[23,63,73,77,90,94,105],"tindex":"5e510ced-dc03-11e4-b7bf-13254b757029","variableMapping":{"size":"code","newSize":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[107,108],"tindex":"5e510cee-dc03-11e4-b7bf-d743b819fbb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[48,50,58,61,63,64,72,76,77,86,89,93,94,103],"tindex":"5e510cef-dc03-11e4-b7bf-4f3f824f47a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-1},{"failures":[29,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,107,108],"tindex":"5e510cf0-dc03-11e4-b7bf-b3d5ac894db3","variableMapping":{"oldPriorities":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"5e510cf1-dc03-11e4-b7bf-c1c85b44ef0b","variableMapping":{"from":"to","to":"to","reverse":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"5e510cf2-dc03-11e4-b7bf-2d42ce296e77","variableMapping":{"cap":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"5e510cf3-dc03-11e4-b7bf-632294430e63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"5e510cf4-dc03-11e4-b7bf-a9a1a8f303c4","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"5e510cf5-dc03-11e4-b7bf-f17136d9acd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:346","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":0},{"failures":[],"tindex":"5e513406-dc03-11e4-b7bf-31e8f86769fe","variableMapping":{"distance":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":0},{"failures":[29,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,107,108],"tindex":"5e515b17-dc03-11e4-b7bf-77f642f83cea","variableMapping":{"entries":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[43],"tindex":"5e515b18-dc03-11e4-b7bf-53bd0ce82a5d","variableMapping":{"node":"node","directionBitMask":"directionBitMask","intendedValues":"intendedValues","restrictedValues":"intendedValues","restrictions":"restrictions","locked":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[147],"tindex":"5e515b19-dc03-11e4-b7bf-4347b02089bf","variableMapping":{"numTiles":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":-1},{"failures":[3,9,10,148],"tindex":"5e515b1a-dc03-11e4-b7bf-ed2d7799374d","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1083","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.setNodesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"5e515b1b-dc03-11e4-b7bf-9fe29ffa3018","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"length","edge":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-2},{"failures":[3,4,5,6,9,10,12,149,150,151,118,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,147,179,180,181,182,183],"tindex":"5e51822c-dc03-11e4-b7bf-8b2e078e6be0","variableMapping":{"size":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"5e51822d-dc03-11e4-b7bf-7dc7f2def2e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[23,49,50,202,55,59,63,203,68,71,204,205,73,75,77,206,83,87,90,92,94,207,100,104,105,106],"tindex":"5e51822e-dc03-11e4-b7bf-f91e7c4e284e","variableMapping":{"i":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[],"tindex":"5e5308cf-dc03-11e4-b7bf-87afb816d44d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[5,6,9,208,150,118,152,153,154,155,156,158,159,160,162,163,164,165,166,167,168,169,171,172,173,175,176,209,177,210,178,211,212,147,179,180,182,183],"tindex":"5e5308d0-dc03-11e4-b7bf-e9ac16c80b8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"5e5308d1-dc03-11e4-b7bf-9b5c4d7fd942","variableMapping":{"index":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"5e5308d2-dc03-11e4-b7bf-11495276fde4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"5e5308d3-dc03-11e4-b7bf-79bb6040e16e","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"5e532fe4-dc03-11e4-b7bf-936fab57ecf9","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[23,50,63,73,77,90,94,105,106],"tindex":"5e532fe5-dc03-11e4-b7bf-452a2dbec1f1","variableMapping":{"arrayLength":"code","maxGeoRef":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"5e532fe6-dc03-11e4-b7bf-d318a00e3a4a","variableMapping":{"fromDist":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"5e532fe7-dc03-11e4-b7bf-3f63f9fbd0a6","variableMapping":{"lastKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":0},{"failures":[29,107,108],"tindex":"5e532fe8-dc03-11e4-b7bf-81e84dede7a5","variableMapping":{"segmentSizeInBytes":"maxCount","index":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"5e532fe9-dc03-11e4-b7bf-5f119cd4e1e1","variableMapping":{"java.lang.Integer.MAX_VALUE":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[14,44],"tindex":"5e532fea-dc03-11e4-b7bf-81c69bce4c78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"5e532feb-dc03-11e4-b7bf-8159e7a2e0ed","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"5e532fec-dc03-11e4-b7bf-b1429d385611","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"5e532fed-dc03-11e4-b7bf-df4aa560a10f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[3,4,5,6,9,10,12,208,149,213,214,215,216,217,218,219,220,221,222,151,118,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,210,178,211,212,147,179,180,181,182,183],"tindex":"5e532fee-dc03-11e4-b7bf-f9ba7954cd23","variableMapping":{"width":"I_LEVEL","lonSimilar":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"5e5356ff-dc03-11e4-b7bf-7b284caf551e","variableMapping":{"offset":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"5e535700-dc03-11e4-b7bf-aff6779a211f","variableMapping":{"index":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[223],"tindex":"5e535701-dc03-11e4-b7bf-e1a4f6c7cdad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[],"tindex":"5e535702-dc03-11e4-b7bf-976fb39c9a3c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"5e535703-dc03-11e4-b7bf-23f5f9916609","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[5,6,9,12,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,171,172,173,174,175,176,177,147,179,183],"tindex":"5e535704-dc03-11e4-b7bf-3b8f01ae6162","variableMapping":{"store":"reverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[2],"tindex":"5e535705-dc03-11e4-b7bf-417517e94578","variableMapping":{"weightApproximation":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"5e535706-dc03-11e4-b7bf-9976898eb874","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":0},{"failures":[184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,224],"tindex":"5e535707-dc03-11e4-b7bf-0911eb7f0f63","variableMapping":{"lastKey":"hash","key":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"5e535708-dc03-11e4-b7bf-29ad3ad54353","variableMapping":{"iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"5e535709-dc03-11e4-b7bf-d371a2781cd3","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"5e53570a-dc03-11e4-b7bf-8bed2cc8f98d","variableMapping":{"java.lang.Double.MAX_VALUE":"java.lang.Double.POSITIVE_INFINITY","java.lang.Integer.MAX_VALUE":"maxTurnCosts","storedInt":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:371","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[48,49,50],"tindex":"5e537e1b-dc03-11e4-b7bf-653f64bbf4e4","variableMapping":{"line":"trackType","key":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[5,6,7,8,9,11,27,33,38,40,41,1,45,50,225,56,226,60,61,63,227,69,76,77,228,84,93,94,229,101,0],"tindex":"5e537e1c-dc03-11e4-b7bf-ddd6cb8959bb","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":-1},{"failures":[146,230],"tindex":"5e537e1d-dc03-11e4-b7bf-e128971cc926","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"minOnewayNetworkSize","edgeTo":"removed","edgeFrom":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[],"tindex":"5e537e1e-dc03-11e4-b7bf-83c2fb09444f","variableMapping":{"high":"flags","highKey":"flags","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"5e537e1f-dc03-11e4-b7bf-6f3ee80de360","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"5e537e20-dc03-11e4-b7bf-233fe4c81bd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[49,55,68,75,77,83,92,94,100],"tindex":"5e537e21-dc03-11e4-b7bf-6b22aec4f58d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-1},{"failures":[],"tindex":"5e537e22-dc03-11e4-b7bf-2186a3e0b37b","variableMapping":{"ret":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","retBucket":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","i":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","storedKey":"forwardBit","bucketSize":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"5e537e23-dc03-11e4-b7bf-a3462ad99aac","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":0},{"failures":[152,153,162,164,175],"tindex":"5e537e24-dc03-11e4-b7bf-e1a9b8b010c7","variableMapping":{"tmp":"dist"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[2],"tindex":"5e537e25-dc03-11e4-b7bf-b71d753095ea","variableMapping":{"tmp":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[8,12,15],"tindex":"5e537e26-dc03-11e4-b7bf-6f6ccdd55975","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[18,24,39],"tindex":"5e537e27-dc03-11e4-b7bf-09e1dbf959e6","variableMapping":{"high":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"5e537e28-dc03-11e4-b7bf-9118157ba188","variableMapping":{"freeIndex":"speed","currentIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":0},{"failures":[],"tindex":"5e537e29-dc03-11e4-b7bf-7160de5ea2b9","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[15,21,29,2,231,0,232],"tindex":"5e537e2a-dc03-11e4-b7bf-574d53a6e19f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[55,68,83,100],"tindex":"5e537e2b-dc03-11e4-b7bf-3fa3e5bb26ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"5e537e2c-dc03-11e4-b7bf-1f5c42a72313","variableMapping":{"segmentSizeInBytes":"element","indexDivisor":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"5e537e2d-dc03-11e4-b7bf-e1bab7a50d82","variableMapping":{"intLow":"code","intHigh":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[23,63,73,77,90,94,105],"tindex":"5e537e2e-dc03-11e4-b7bf-fd8d123df842","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[],"tindex":"5e53a53f-dc03-11e4-b7bf-a19864acc698","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[76,93],"tindex":"5e53a540-dc03-11e4-b7bf-79217571266f","variableMapping":{"prevEle":"speed","ele":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[184,185,186,188,189,190,191,193,194,195,196,197,198,199,200,201,224],"tindex":"5e53a541-dc03-11e4-b7bf-b39917b59b2a","variableMapping":{"factor":"maxLatTmp","delta_lon":"minLatTmp","a_lon":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[],"tindex":"5e53a542-dc03-11e4-b7bf-51e9e2d0abee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[5,6,7,8,9,11,12,233,234,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,147,179,183],"tindex":"5e53a543-dc03-11e4-b7bf-c19fe9c3944e","variableMapping":{"initializedCounter":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"5e53a544-dc03-11e4-b7bf-c7f2f7386ba5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:59","type":"CtLocalVariableImpl","sourcecode":"final java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> = new java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>()"},"status":-2},{"failures":[235,236,237,223,238,239,150,151,118,240,241,242,119,120,122,123,243,244,124,245,246,126,127,247,248,249,250,251,252,253,128,129,131,132,254,255,133,256,257,135,136,258,259,260,261,262,263,137,138,140,141,264,265,142,266,267,144,145,268,269,270,271],"tindex":"5e53a545-dc03-11e4-b7bf-dba411a5e190","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[44],"tindex":"5e53a546-dc03-11e4-b7bf-f7d62f8eb709","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[34,51,65,79,96],"tindex":"5e53a547-dc03-11e4-b7bf-2ff8f098712b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"5e53a548-dc03-11e4-b7bf-af846386923c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,272,273,14,15,16,17,18,19,20,21,22,24,25,26,27,29,274,275,276,277,278,279,208,280,281,282,283,284,285,33,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,186,308,309,310,311,312,187,313,188,189,314,315,316,317,318,319,149,213,320,191,321,322,323,214,215,192,216,193,194,217,218,219,220,221,222,235,236,324,237,325,223,238,239,150,326,151,327,328,118,240,148,329,330,331,241,242,119,332,333,334,335,336,337,338,120,339,121,122,340,123,243,341,244,124,125,342,343,344,245,345,246,126,127,247,248,346,249,347,348,349,250,251,252,350,351,352,353,354,253,128,355,356,357,358,359,360,361,129,362,130,131,363,132,254,364,255,133,134,365,366,367,256,368,257,135,136,369,258,370,259,371,372,373,260,261,374,262,375,376,377,378,379,263,137,380,381,382,383,384,385,386,138,387,139,140,388,141,264,389,265,142,143,390,391,392,266,393,267,144,145,394,268,395,269,396,397,398,270,271,233,234,399,146,400,107,108,401,230,88,2,402,403,404,232,405,406,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,209,177,210,178,211,212,407,147,179,180,181,182,183,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419],"tindex":"5e53cc59-dc03-11e4-b7bf-497004ec0a3c","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"5e53cc5a-dc03-11e4-b7bf-c9accebdfbb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:127","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"5e53cc5b-dc03-11e4-b7bf-1b3568b21502","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"5e53cc5c-dc03-11e4-b7bf-e7f28694bc27","variableMapping":{"red":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-3},{"failures":[59,71,73,87,90,104,105,106],"tindex":"5e53cc5d-dc03-11e4-b7bf-cd0bd5a3e837","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"5e53cc5e-dc03-11e4-b7bf-afce96d7e788","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[420,421,422,423,158,171,173],"tindex":"5e53cc5f-dc03-11e4-b7bf-391ee7241d2b","variableMapping":{"importance":"i","hash":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"5e53f370-dc03-11e4-b7bf-cd1899c73af4","variableMapping":{"baseUrl":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"5e53f371-dc03-11e4-b7bf-57760bedb18b","variableMapping":{"java.lang.Integer.MAX_VALUE":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"5e53f372-dc03-11e4-b7bf-cd3c23570e9d","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[5,420,424,421,422,425,423,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,210,178,211,212,407,147,180,182,183],"tindex":"5e53f373-dc03-11e4-b7bf-87e391a51eb9","variableMapping":{"id":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[5,6,7,8,9,11,12,233,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,171,172,173,174,175,176,177,147,179,183],"tindex":"5e53f374-dc03-11e4-b7bf-452659dfbd59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"5e53f375-dc03-11e4-b7bf-d5faae540523","variableMapping":{"foundNext":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:809","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[14,44,426],"tindex":"5e53f376-dc03-11e4-b7bf-d1db6aef652a","variableMapping":{"retBucket":"index","bucketSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":170,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":409,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":60,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":328,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":298,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":276,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":277,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":64,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":323,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":4,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":138,"com.graphhopper.coll.CompressedArrayTest.testCompress":185,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":227,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":373,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":178,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":180,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":176,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":255,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":162,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":283,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":302,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":68,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":287,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":191,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":401,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":72,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":154,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":310,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":374,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":200,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":241,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":422,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":183,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":314,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":311,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":84,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":376,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":258,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":350,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":198,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":415,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":395,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":345,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":359,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":150,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":382,"com.graphhopper.reader.OSMNodeTest.testSetTags":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":92,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":216,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":157,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":388,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":380,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":341,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":148,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":124,"com.graphhopper.coll.CompressedArrayTest.testCompress2":184,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":134,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":387,"com.graphhopper.GraphHopperAPITest.testLoad":233,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":324,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":34,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":130,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":128,"com.graphhopper.storage.LevelGraphStorageTest.testClone":333,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":426,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":159,"com.graphhopper.util.GHUtilityTest.testCopy":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":222,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":203,"com.graphhopper.routing.PathTest.testFindInstruction":406,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":137,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":420,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":36,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":275,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":297,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":370,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":254,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":212,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":240,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":231,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":335,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":353,"com.graphhopper.util.InstructionListTest.testWayList2":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":315,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":88,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":351,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":139,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":158,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":253,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":386,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":37,"com.graphhopper.routing.PathBidirRefTest.testExtract":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":80,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":79,"com.graphhopper.util.GHUtilityTest.testSort2":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":167,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":329,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":206,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":85,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":219,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":41,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":377,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":339,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":123,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":205,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":250,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":121,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":89,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":236,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":244,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":27,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":261,"com.graphhopper.storage.GraphHopperStorageTest.testClone":356,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":1,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":363,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":57,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":151,"com.graphhopper.routing.PathTest.testTime":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":54,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":348,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":317,"com.graphhopper.reader.OSMReaderTest.testRelation":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":115,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":344,"com.graphhopper.util.GHUtilityTest.testSortDirected":281,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":101,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":411,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":192,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":155,"com.graphhopper.reader.OSMElementTest.testSetTags":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":318,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":408,"com.graphhopper.routing.QueryGraphTest.testOneWay":417,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":309,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":195,"com.graphhopper.reader.OSMReaderTest.testWithBounds":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":396,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":400,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":413,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":105,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":330,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":392,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":264,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":354,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":416,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":153,"com.graphhopper.util.InstructionListTest.testWayList":284,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":78,"com.graphhopper.GraphHopperAPITest.testDisconnected179":234,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":98,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":228,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":7,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":358,"com.graphhopper.routing.util.EncodedValueTest.testSwap":204,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":181,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":256,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":179,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":83,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":174,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":87,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":252,"com.graphhopper.routing.PathTest.testWayList":405,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":111,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":175,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":391,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":364,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":193,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":96,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":421,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.util.GHUtilityTest.testSort":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":224,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":270,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":355,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":321,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":307,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":292,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":93,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":2,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":290,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":389,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":146,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":289,"com.graphhopper.routing.PathTest.testFound":404,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":0,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":13,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":346,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":81,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":140,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":424,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":288,"com.graphhopper.util.InstructionListTest.testEmptyList":282,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":69,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":168,"com.graphhopper.reader.PrinctonReaderTest.testRead":272,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":214,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":110,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":390,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":332,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":90,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":188,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":199,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":349,"com.graphhopper.reader.OSMReaderTest.testOneWay":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":189,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":131,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":136,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":268,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":67,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":95,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":211,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":210,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":322,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":410,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":28,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":352,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":223,"com.graphhopper.routing.PathBidirRefTest.testExtract2":403,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":316,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":58,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":35,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":312,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":369,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":336,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":365,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":122,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":381,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":171,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":109,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":24,"com.graphhopper.reader.OSMElementTest.testHasTag":30,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":327,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":33,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":368,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":38,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":248,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":127,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":375}}]
