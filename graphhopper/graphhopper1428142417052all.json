[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"42f4fb41-dab3-11e4-b852-cd0d1143629b","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33],"tindex":"42fc7552-dab3-11e4-b852-994736b5f10e","variableMapping":{"numTiles":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,4,9,217,10,11,12,13,14,15,16,17,18,19,20,218,21,219,220,221,222,223,224,225,22,226,227,228,23,229,230,231,232,233,234,235,24,236,237,238,239,240,241,242,243,244,245,25,246,26,247,248,249,250,251,252,253,254,255,27,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,28,29,286,287,288,289,290,291,292,30,293,294,295,296,297,298,299,300,31,301,32,302,303,304,305,306,307,308,309,310,33,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"tindex":"42fc9c63-dab3-11e4-b852-9f8cad81f15d","variableMapping":{"line":"encoderList"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"42fc9c64-dab3-11e4-b852-751003bd19c1","variableMapping":{"precision":"midLon","lat":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"42fc9c65-dab3-11e4-b852-7964a007e923","variableMapping":{"nodeId":"shift","mainNodes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[352],"tindex":"42fc9c66-dab3-11e4-b852-ff0db6b768d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"42fc9c67-dab3-11e4-b852-01e1b25661e3","variableMapping":{"size":"length","from":"segmentSizePower","end":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[241],"tindex":"42fc9c68-dab3-11e4-b852-d74522419d9a","variableMapping":{"tmp":"restDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[10,16,21],"tindex":"42fc9c69-dab3-11e4-b852-d9bb3ddbe547","variableMapping":{"size":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"42fc9c6a-dab3-11e4-b852-e91200149a3a","variableMapping":{"java.lang.Integer.MAX_VALUE":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"42fcc37b-dab3-11e4-b852-194c78e8d88d","variableMapping":{"high":"key","len":"key","start":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"42fcc37c-dab3-11e4-b852-57f4c6dcc9a5","variableMapping":{"tmp":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"42fcc37d-dab3-11e4-b852-df87dca5b762","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"42fcc37e-dab3-11e4-b852-63464ef17d72","variableMapping":{"numTiles":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[342,343,344,345,346,347,348,350,351],"tindex":"42fcc37f-dab3-11e4-b852-df4a786152a1","variableMapping":{"resultOrientation":"midLat","orientation":"lat","java.lang.Math.PI":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"42fcc380-dab3-11e4-b852-97e7907a7135","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[267],"tindex":"42fcc381-dab3-11e4-b852-c9253ea607ff","variableMapping":{"midLat":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"42fcc382-dab3-11e4-b852-99870390f6ea","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[241],"tindex":"42fcea93-dab3-11e4-b852-df5ed93b2573","variableMapping":{"factor":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[353,354,355,356,357,358,359,360,361],"tindex":"42fcea94-dab3-11e4-b852-7d414b2c3ac9","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"y","speed":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[34,362,363],"tindex":"42fcea95-dab3-11e4-b852-73c9707bb698","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[42,85,88,364,365,136,1],"tindex":"42fd11a6-dab3-11e4-b852-972d21ce0c2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[],"tindex":"42fd11a7-dab3-11e4-b852-3918f73f2edd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"42fd11a8-dab3-11e4-b852-5924193baa72","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[],"tindex":"42fd11a9-dab3-11e4-b852-a7b311cfb027","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"42fd11aa-dab3-11e4-b852-d7bfc7097ab8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[366,367,23,244,26,299,32],"tindex":"42fd11ab-dab3-11e4-b852-b121a1021d00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[],"tindex":"42fd11ac-dab3-11e4-b852-c17485d72199","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[316,317,318,321,322,333,335,336,337,339,368,362,369,370],"tindex":"42fd11ad-dab3-11e4-b852-e1bf84d81a6c","variableMapping":{"indexWithMaxDist":"from","lastIndex":"skippedEdge1","fromIndex":"skippedEdge1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"42fd11ae-dab3-11e4-b852-0fdd6e8f1b4b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[371,39,42,43,372,85,86,88,89,373,374,375,376,377,378,379,380,381,382,383,136,137,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,0,384,5,7,9],"tindex":"42fd11af-dab3-11e4-b852-eb6d49a4d802","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"42fd11b0-dab3-11e4-b852-170cb92b70c5","variableMapping":{"turnCostsCount":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"42fd11b1-dab3-11e4-b852-e5292fca7052","variableMapping":{"lastKey":"oldRelationFlags","key":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"42fd11b2-dab3-11e4-b852-1bed7f1e517c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"42fd38c3-dab3-11e4-b852-01d569b75e25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"42fd38c4-dab3-11e4-b852-9bb5a1ada4d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[385,386,387,388,389,390,391,371,392,393,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,394,395,396,372,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,397,398,399,400,401,131,402,340,403,404,405,406,407,408,364,409,410,411,412,413,414,132,415,416,417,418,341,419,420,421,422,423,424,365,425,426,427,428,429,430,133,431,376,377,378,379,380,381,432,433,434,435,436,134,383,437,438,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,439,440,441,442,443,0,384,1,2,3,4,5,444,6,7,8,9,445,446,447,448,449,450,451,452,453,217,10,11,12,13,14,15,16,17,366,18,19,20,218,454,21,219,219,455,455,456,456,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,467,468,469,353,354,470,471,22,472,352,473,240,241,277,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,368,474,475,476,477,478,479,480,362,369,481,482,363,370,483,484,485,486,487,358,359,360,488,489,490,491,492,493,494],"tindex":"42fd38c5-dab3-11e4-b852-951608be5a3b","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"42fd38c6-dab3-11e4-b852-b1475f8ed570","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"42fd38c7-dab3-11e4-b852-f7491851e702","variableMapping":{"instruction":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"42fd38c8-dab3-11e4-b852-654b4d771c2c","variableMapping":{"prepareAlgo":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"42fd38c9-dab3-11e4-b852-d3fab33672eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[402,407,364,409,495,418,423,365,425,342,343,344,345,347,348,496,497,349,350,351],"tindex":"42fd38ca-dab3-11e4-b852-cf7abf625f94","variableMapping":{"segmentSizePower":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[217,10,11,12,14,15,16,17,20,218,21,498,225,227,23,229,24,238,243,244,25,246,26,27,258,259,285,28,29,30,295,296,298,299,31,301,32,33,313,314],"tindex":"42fd38cb-dab3-11e4-b852-13bb26cbe9d1","variableMapping":{"line":"tt","lon":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n    int = -int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,415,416,417,418,341,419,420,421,422,423,424,365,425,426,427,428,429,375,430,133,0,384,1,2,5,6,8,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,368,474,475,476,477,478,479,480,362,369,481,482,363,370,485,490,492],"tindex":"42fd5fdc-dab3-11e4-b852-ad4a29d2d6ab","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1378","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.checkInit()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"42fd5fdd-dab3-11e4-b852-e91861f23388","variableMapping":{"high":"flags","len":"flags","start":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"42fd5fde-dab3-11e4-b852-514fddd8d7ad","variableMapping":{"bytePos":"nodeEntryBytes","inner":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getHeader(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[385,48,49,58,71,76,79,83,94,95,104,117,122,125,129,131,132,133,134,142,143,152,165,170,173,177,180,181,190,203,208,211,215,1,2,3,4,5,7,8,452,453,10,11,13,16,17,20,458,461,470,352,473,273,277,316,317,328,329,330,339,368,475,476,362,369,481,370,485,360,488],"tindex":"42fd5fdf-dab3-11e4-b852-6fad5ae3cdde","variableMapping":{"tmpDegreeCounter":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[225],"tindex":"42fd5fe0-dab3-11e4-b852-e9d1fff61d43","variableMapping":{"intVal":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[384,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,218,454,21,239,262,264,265,267,269],"tindex":"42fd5fe1-dab3-11e4-b852-7f547f8e577a","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[262],"tindex":"42fd5fe2-dab3-11e4-b852-e126b7397952","variableMapping":{"name":"highwayValue","this":"this","refName":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:444","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"42fd5fe3-dab3-11e4-b852-c3e9cad6cac4","variableMapping":{"ar_y":"fwdDecline","ab_y":"fwdDecline","ar_x":"fwdDecline","ab_x":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"42fd5fe4-dab3-11e4-b852-f9f020dd03d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[446,16,499,247,272,302],"tindex":"42fd5fe5-dab3-11e4-b852-4b37ddf9f8f4","variableMapping":{"nodeB":"maxTurnCosts","edgeId":"shift","nodeA":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"42fd5fe6-dab3-11e4-b852-b3313629c8f5","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"42fd5fe7-dab3-11e4-b852-2badac662490","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"42fd5fe8-dab3-11e4-b852-79d3f059a39e","variableMapping":{"i":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"42fd5fe9-dab3-11e4-b852-2b834c7a7df3","variableMapping":{"com.graphhopper.storage.DAType.MMAP":"defaultType","type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[247,272,302],"tindex":"42fd5fea-dab3-11e4-b852-656428425f0f","variableMapping":{"neighborUpdates":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[],"tindex":"42fd86fb-dab3-11e4-b852-6beef7f937c6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"42fd86fc-dab3-11e4-b852-23abd772b48d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"42fd86fd-dab3-11e4-b852-9fae99054679","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:132","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[1,218,500,246,261,267,301],"tindex":"42fd86fe-dab3-11e4-b852-25d68843f833","variableMapping":{"str":"str","destination":"str","counter":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:268","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n    if (java.lang.String.trim().isEmpty())\n        continue;\n    \n    if (int > 0)\n        java.lang.String += \", \";\n    \n    java.lang.String += java.lang.String.trim();\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[],"tindex":"42fd86ff-dab3-11e4-b852-0799ab00f315","variableMapping":{"flags":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[501],"tindex":"42fd8700-dab3-11e4-b852-e7abe06a9a65","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"42fd8701-dab3-11e4-b852-7fbfaf2aad3d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"42fd8702-dab3-11e4-b852-d1777f0ad97d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[],"tindex":"42fd8703-dab3-11e4-b852-2b380cd003e4","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"empty","v":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[500,502,268],"tindex":"42fd8704-dab3-11e4-b852-4d5840aa674f","variableMapping":{"str":"str","latInt":"mpInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:284","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"_0\" : \"_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[13,18,230,249,260,275,286,304],"tindex":"42fd8705-dab3-11e4-b852-e10ae33d573d","variableMapping":{"size":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[8,281],"tindex":"42fd8706-dab3-11e4-b852-b7040b8ffa69","variableMapping":{"reverseSpeed":"speedEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[503,504,505,506,507,508,39,42,51,509,510,85,88,97,119,511,512,136,145,167,183,205,0,5,6,7,9],"tindex":"42fd8707-dab3-11e4-b852-81a6b8d1f21c","variableMapping":{"counter":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[513,503,514,515,516,517,505,518,519,520,377,378],"tindex":"42fd8708-dab3-11e4-b852-094cb9598cd6","variableMapping":{"origEdgeId":"segmentSizePower","mainEdges":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"42fd8709-dab3-11e4-b852-357c27fec350","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"42fd870a-dab3-11e4-b852-23866878d08a","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[385,386,387,388,389,390,391,371,393,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,394,395,372,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,397,398,399,400,373,401,131,402,340,403,404,405,406,407,408,364,409,410,411,412,413,374,414,132,415,416,417,418,341,419,420,421,422,423,424,365,425,426,427,428,429,375,430,133,431,376,377,378,379,380,381,432,433,434,435,382,436,134,383,437,438,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,439,440,441,442,443,0,384,1,2,3,4,5,444,6,7,8,9,445,446,447,447,448,448,449,450,451,452,453,217,10,11,12,13,14,15,16,17,366,18,19,20,218,454,21,219,219,455,455,456,456,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,467,468,469,353,354,470,471,22,472,352,473,240,241,277,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,368,474,475,476,477,478,479,480,362,369,481,482,363,370,483,484,485,486,487,358,359,360,488,489,490,491,492,493,494],"tindex":"42fdae1b-dab3-11e4-b852-cb00c19ba51d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[36,38,318,322,326,328,331,335,336,337,339,475,362,481,363],"tindex":"42fdae1c-dab3-11e4-b852-1bbf347a3722","variableMapping":{"flags":"weightLong","nodeFlags":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-1},{"failures":[237,257,294,312],"tindex":"42fee69d-dab3-11e4-b852-3b67859d4fec","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[228,23,229,231,233,24,236,238,243,245,250,252,253,27,256,258,259,285,29,287,289,290,30,293,295,296,298,300,305,307,308,33,311,313,314],"tindex":"42fee69e-dab3-11e4-b852-25633fbc34e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:434","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[10,16,21,367,498,225,23,232,24,238,244,25,26,251,27,259,28,29,288,30,296,299,31,32,306,33,314],"tindex":"42fee69f-dab3-11e4-b852-ffd2b5529f0a","variableMapping":{"len":"value","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"42fee6a0-dab3-11e4-b852-b15f882aacf2","variableMapping":{"size":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[446,16,499,247,272,302],"tindex":"42fee6a1-dab3-11e4-b852-119d174dae79","variableMapping":{"lat":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[0,384,1,2,3,4,5,6,7,8,9,217,10,11,12,13,14,15,16,17,18,19,20,218,21,367,498,225,227,23,24,237,238,239,244,25,246,26,248,27,257,259,262,263,264,265,267,269,278,281,282,284,28,29,30,294,296,299,31,301,32,303,33,312,314],"tindex":"42fee6a2-dab3-11e4-b852-0fcf4818ba43","variableMapping":{"lastTime":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"42fee6a3-dab3-11e4-b852-8d0d05c4f6dc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"42fee6a4-dab3-11e4-b852-ff069bcced6e","variableMapping":{"need":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[385,42,47,48,49,56,58,71,76,79,83,85,88,93,94,95,102,104,117,122,125,129,136,141,142,143,150,152,165,170,173,177,179,180,181,188,190,203,208,211,215,452,453,10,21,458,461,470,352,473,316,317,321,324,327,329,330,339,368,475,476,362,369,481,370,485,488],"tindex":"42ff0db5-dab3-11e4-b852-55b1984b7915","variableMapping":{"numTiles":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[],"tindex":"42ff0db6-dab3-11e4-b852-5f4b7f4287f5","variableMapping":{"weightApproximation":"eleDelta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[521,522,362],"tindex":"42ff0db7-dab3-11e4-b852-3b3547b6f074","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,0,4,8,9,217,10,11,12,13,14,15,16,17,18,19,20,218,21,219,220,221,222,223,224,225,239,240,241,242,243,244,245,25,246,26,247,248,249,250,251,252,253,254,255,27,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,28,29,286,287,288,289,290,291,292,30,293,294,295,296,297,298,299,300,31,301,32,302,303,304,305,306,307,308,309,310,33,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"tindex":"42ff0db8-dab3-11e4-b852-ef16a26b9a10","variableMapping":{"val":"entryVal","existing":"entryVal","key":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"42ff0db9-dab3-11e4-b852-ebecce72bf1d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[385,3,4,7,8,316,318,322,325,330,333,334,335,337,368,369],"tindex":"42ff0dba-dab3-11e4-b852-0ffa1e6bcca4","variableMapping":{"initialized":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"42ff0dbb-dab3-11e4-b852-f7ccdb04810f","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:424","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[23,24,25,26,27,28,29,30,31,32,33],"tindex":"42ff0dbc-dab3-11e4-b852-c3f8e50394ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"42ff0dbd-dab3-11e4-b852-059c73c2e290","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"42ff0dbe-dab3-11e4-b852-bf9bde430062","variableMapping":{"dist":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[13,18,230,249,260,275,286,304],"tindex":"42ff0dbf-dab3-11e4-b852-75d04ad02a70","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[523],"tindex":"42ff0dc0-dab3-11e4-b852-b3379457649e","variableMapping":{"maxSpeed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[1,4,10,21,263,269],"tindex":"42ff34d1-dab3-11e4-b852-f3fffc60fb6a","variableMapping":{"bits":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"42ff34d2-dab3-11e4-b852-65710949ae7f","variableMapping":{"toStr":"value","fromStr":"key","from":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:38","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || (java.lang.String.equals(java.lang.String)))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":334,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":455,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":39,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":502,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":180,"com.graphhopper.reader.OSMReaderTest.testFerry":217,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":488,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":420,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":384,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":361,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":103,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":448,"com.graphhopper.coll.CompressedArrayTest.testCompress":351,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":235,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":176,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":477,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":200,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":417,"com.graphhopper.util.AngleCalcTest.testOrientation":355,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":517,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":481,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":333,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":368,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":522,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":326,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":487,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":484,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":45,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":418,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":352,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":318,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":404,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":85,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":496,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":47,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":521,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":370,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":405,"com.graphhopper.reader.OSMReaderTest.testSort":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":311,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":89,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":171,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":136,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":213,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":461,"com.graphhopper.storage.RAMDataAccessTest.testHeader":504,"com.graphhopper.routing.DijkstraTest.initializationError":220,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":446,"com.graphhopper.storage.MMapDataAccessTest.testHeader":508,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":124,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":72,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":510,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":148,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":86,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":25,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":93,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":424,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":422,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":321,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":320,"com.graphhopper.coll.OSMIDMapTest.testGetLong":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":107,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":113,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":64,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":42,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":66,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":357,"com.graphhopper.coll.CompressedArrayTest.testCompress2":350,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":285,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":104,"com.graphhopper.GraphHopperAPITest.testLoad":385,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":46,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":275,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":153,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":143,"com.graphhopper.storage.LevelGraphStorageTest.testClone":51,"com.graphhopper.reader.OSMReaderTest.testBarriers":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":94,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":323,"com.graphhopper.util.GHUtilityTest.testCopy":492,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":291,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":237,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":232,"com.graphhopper.routing.PathTest.testFindInstruction":354,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":95,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":281,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":485,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":245,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":398,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":172,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":122,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":490,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":479,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":254,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":223,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":53,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":185,"com.graphhopper.util.InstructionListTest.testWayList2":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":411,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":177,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":31,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":299,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":523,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":240,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":302,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":518,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":194,"com.graphhopper.storage.RAMDirectoryTest.testSynched":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":105,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":376,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":322,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":14,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":505,"com.graphhopper.routing.AStarTest.initializationError":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":336,"com.graphhopper.coll.OSMIDMapTest.testGet":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":102,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":509,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":282,"com.graphhopper.routing.PathBidirRefTest.testExtract":466,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":305,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":427,"com.graphhopper.storage.RAMDataAccessTest.testCopy":503,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":304,"com.graphhopper.storage.RAMDataAccessTest.testSegments":516,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":132,"com.graphhopper.util.GHUtilityTest.testSort2":491,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":331,"com.graphhopper.reader.OSMReaderTest.testMain":11,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":306,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":497,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":428,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":210,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":58,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":83,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":501,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":59,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":243,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":511,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":65,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":218,"com.graphhopper.storage.StorablePropertiesTest.testStore":383,"com.graphhopper.storage.GraphHopperStorageTest.testClone":145,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":269,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":371,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":267,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":294,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":186,"com.graphhopper.routing.PathTest.testTime":469,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":290,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":81,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":274,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":380,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":413,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":199,"com.graphhopper.reader.OSMReaderTest.testRelation":366,"com.graphhopper.util.GHUtilityTest.testSortDirected":494,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":256,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":395,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":457,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":377,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":423,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":498,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":195,"com.graphhopper.search.NameIndexTest.testCreate":390,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":515,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":219,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":512,"com.graphhopper.routing.QueryGraphTest.testOneWay":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":374,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":345,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":231,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":447,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":403,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":342,"com.graphhopper.reader.OSMReaderTest.testWithBounds":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":257,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":513,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":192,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":459,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":471,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":283,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":367,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":44,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":255,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":116,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":109,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":141,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":317,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":174,"com.graphhopper.util.InstructionListTest.testWayList":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":303,"com.graphhopper.GraphHopperAPITest.testDisconnected179":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":346,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":182,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":252,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":453,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":310,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":147,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":482,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":297,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":328,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":369,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":33,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":91,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":314,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":135,"com.graphhopper.routing.PathTest.testWayList":353,"com.graphhopper.storage.MMapDataAccessTest.testCopy":507,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":264,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":500,"com.graphhopper.coll.OSMIDMapTest.testGet2":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":339,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":506,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":76,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":309,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":158,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":100,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":146,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":63,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":425,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":28,"com.graphhopper.util.GHUtilityTest.testSort":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":408,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":230,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":308,"com.graphhopper.search.NameIndexTest.testPut":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":129,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":341,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":400,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":381,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":246,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":241,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":432,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":286,"com.graphhopper.storage.MMapDirectoryTest.testSynched":394,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":450,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":337,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":470,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":205,"com.graphhopper.routing.PathTest.testFound":468,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":9,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":225,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":78,"com.graphhopper.util.AngleCalcTest.testAtan2":356,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":307,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":106,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":389,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":190,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":150,"com.graphhopper.util.InstructionListTest.testEmptyList":486,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":429,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":329,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":260,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":332,"com.graphhopper.reader.PrinctonReaderTest.testRead":452,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":421,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":189,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":343,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":179,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":250,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":499,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":244,"com.graphhopper.reader.OSMReaderTest.testFoot":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":203,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":451,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":465,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":82,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":364,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":226,"com.graphhopper.reader.OSMReaderTest.testOneWay":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":409,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":154,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":169,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":123,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":233,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":520,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":248,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":478,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":495,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":475,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":435,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":476,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":519,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":193,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":456,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":138,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":454,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":372,"com.graphhopper.routing.PathBidirRefTest.testExtract2":467,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":412,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":387,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":295,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":216,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":278,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":406,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":170,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":271,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":162,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":430,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":514,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":183,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":224,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":480,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":97,"com.graphhopper.storage.StorablePropertiesTest.testLoad":437,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":335,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":181,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":18,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":38,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":166,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":279,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":196,"com.graphhopper.routing.AStarBidirectionTest.initializationError":221,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":239,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":77,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":75,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":88}}]
