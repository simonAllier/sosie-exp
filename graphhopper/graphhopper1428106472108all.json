[{"failures":[],"tindex":"9256d5fe-da5f-11e4-b0b6-01e5292d6468","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"925946ff-da5f-11e4-b0b6-6110cd6db39a","variableMapping":{"k":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"92594700-da5f-11e4-b0b6-35bb698951ea","variableMapping":{"nodeThis":"nextRelBit","nextEdgeOther":"nextRelBit","nodeOther":"usedBits","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"92596e11-da5f-11e4-b0b6-936f99769fcb","variableMapping":{"java.lang.Integer.MAX_VALUE":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[11],"tindex":"92596e12-da5f-11e4-b0b6-ebe6c4c8dcb2","variableMapping":{"name":"hourStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-1},{"failures":[12,13],"tindex":"92596e13-da5f-11e4-b0b6-49d7d1938121","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"92596e14-da5f-11e4-b0b6-79a1fd80fc35","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"92596e15-da5f-11e4-b0b6-df30cf2776a7","variableMapping":{"distance":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"92596e16-da5f-11e4-b0b6-037a02529890","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","edgeId":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeIterator:60","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"92596e17-da5f-11e4-b0b6-a9a11de4b1c6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[14],"tindex":"92596e18-da5f-11e4-b0b6-addc3be22d5e","variableMapping":{"fwdFaster":"fwdSlower","incDist2DSum":"fwdSlower","fwdSlower":"fwdSlower","fullDist2D":"fwdSlower","restDist2D":"fwdSlower","speed":"fwdSlower","decDist2DSum":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"92596e19-da5f-11e4-b0b6-09b91fa8a86d","variableMapping":{"index":"segmentSizeInBytes","entrySize":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"925bdf1a-da5f-11e4-b0b6-b17c9f337a13","variableMapping":{"tmpDegreeCounter":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"925bdf1b-da5f-11e4-b0b6-75206d2f70fe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"925bdf1c-da5f-11e4-b0b6-011a2483f7c2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"925bdf1d-da5f-11e4-b0b6-ed4c8a36d916","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","edge":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"925bdf1e-da5f-11e4-b0b6-d913bc61ace9","variableMapping":{"pos":"subNetworks","mSize":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"925bdf1f-da5f-11e4-b0b6-3b283eeed884","variableMapping":{"lazyUpdates":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"925bdf20-da5f-11e4-b0b6-7ddb01abc473","variableMapping":{"str":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:284","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\",\"))\n    return \"destinations: \" + java.lang.String;\nelse\n    return \"destination: \" + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"925bdf21-da5f-11e4-b0b6-e5d0175cf13f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[47],"tindex":"925bdf22-da5f-11e4-b0b6-159b34ea9410","variableMapping":{"segmentSizeInBytes":"maxCount","length":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"925bdf23-da5f-11e4-b0b6-5d3e14414b16","variableMapping":{"a":"finishedFrom","approx":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"tindex":"925bdf24-da5f-11e4-b0b6-05043e24ba82","variableMapping":{"intLen":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[],"tindex":"925c0635-da5f-11e4-b0b6-d719929fa029","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,141,68,69,70,71,72,73,74,75,76,142,143,77,144,145,146,147,148,149,150,151,152,78,79,80,81,82,83,84,85,86,87,153,154,88,155,156,157,158,159,160,161,162,163,89,90,91,92,93,94,95,164,96,97,98,14,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,165,166,167,137,138,139,140],"tindex":"925c0636-da5f-11e4-b0b6-25a74459a37c","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[168,169,170,0,1,171,172,2,3,4,173,5,174,6,175,7,176,177,178,179,8,9,180,181,10,182,183,184,112,117,121,122,185,124,125,126,128,129,130,131,186,134,187],"tindex":"925c0637-da5f-11e4-b0b6-efeca5d3710c","variableMapping":{"bytePos":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":-1},{"failures":[188,125],"tindex":"925c0638-da5f-11e4-b0b6-375d838aa93e","variableMapping":{"name":"str","location":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:66","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-1},{"failures":[189,190],"tindex":"925c0639-da5f-11e4-b0b6-75c57fe67610","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[191,192,193,194,195,196,197,198,199,200,201,202,203,176,204,205,206,207,208,177,209,210,178,211,212,213,182,214,183,184,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"925c063a-da5f-11e4-b0b6-31d3732550d7","variableMapping":{"cap":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[187],"tindex":"925c063b-da5f-11e4-b0b6-a9231450ceeb","variableMapping":{"size":"encoderCount","i":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-1},{"failures":[24,25,26,27,28,29,215,30,31,34],"tindex":"925c063c-da5f-11e4-b0b6-b1c2d5a2f5cc","variableMapping":{"nameIndexRef":"spatialKey"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"925c063d-da5f-11e4-b0b6-d1deee724114","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[216,217,1,218,219,4,220,174,6,221,222,223,9,224],"tindex":"925c2d4e-da5f-11e4-b0b6-61ffe474f59f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"925c2d4f-da5f-11e4-b0b6-977da35eb4b7","variableMapping":{"todoBytes":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"925c2d50-da5f-11e4-b0b6-07bfd85dd345","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"925c2d51-da5f-11e4-b0b6-1ddd9c41d541","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"925c2d52-da5f-11e4-b0b6-410f44f0539f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[225,40,226,227,228,229,230,231,232,12,233,234,235,236,237,238,239,240,241,242,13,243,244,114],"tindex":"925c2d53-da5f-11e4-b0b6-ed2eb7b326a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"925c2d54-da5f-11e4-b0b6-239b4b8408a1","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":0},{"failures":[],"tindex":"925c2d55-da5f-11e4-b0b6-25fadeeb7226","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"925c2d56-da5f-11e4-b0b6-997e6c19609a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"925c2d57-da5f-11e4-b0b6-af2802ca3f7d","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[15,245,246,16,247,62,63,64,248,17,249,18,19,250,251,252,253,254,255,20,256,65,66,67,257,21,258,22,23,259,260,261,262,263,264,24,25,234,237,238,241,114,115,116,117,118,120,121,26,27,28,29,30,31,32,33,34,125,126,127,265,266],"tindex":"925c2d58-da5f-11e4-b0b6-c7f01d3a3220","variableMapping":{"edgeId":"allBits","nextEdge":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[201,123,135],"tindex":"925c2d59-da5f-11e4-b0b6-f7b65b8319c5","variableMapping":{"newUniqueOsmId":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[24,25,26,27,28,29,215,30,31,34],"tindex":"925c2d5a-da5f-11e4-b0b6-93826357212e","variableMapping":{"distance":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[14],"tindex":"925c2d5b-da5f-11e4-b0b6-3dc88d14ddab","variableMapping":{"closestEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[177,211],"tindex":"925c546c-da5f-11e4-b0b6-f160f8fa30c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"925c546d-da5f-11e4-b0b6-13f6ba0903a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[],"tindex":"925c546e-da5f-11e4-b0b6-c778dcaa5044","variableMapping":{"high":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"925c546f-da5f-11e4-b0b6-59b0962ee4b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:538","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        double double = com.graphhopper.routing.util.EncodedValue.getValue(long);\n        if (double == 0)\n            return ((double)(com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n        return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.getDouble(long, int);\n}"},"status":-2},{"failures":[],"tindex":"925c5470-da5f-11e4-b0b6-c99c20efed12","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[],"tindex":"925c5471-da5f-11e4-b0b6-3bc54fb0eb98","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"925c5472-da5f-11e4-b0b6-4df1b05ee1e2","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1470","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[],"tindex":"925c5473-da5f-11e4-b0b6-cb80c2b00141","variableMapping":{"segmentSizeInBytes":"usedBits","capacity":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"925c5474-da5f-11e4-b0b6-6167fdc69219","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":0},{"failures":[],"tindex":"925c5475-da5f-11e4-b0b6-a7f45352bd06","variableMapping":{"newAdjIndex":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","newBaseIndex":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[267,268,216,170,269,0,217,1,171,270,271,272,172,273,274,275,276,2,277,278,218,279,280,219,3,4,281,282,173,283,284,285,286,5,287,288,220,289,191,290,291,174,292,6,221,293,294,175,295,296,297,7,298,299,300,192,193,194,195,196,197,198,199,200,201,202,203,176,204,205,206,207,208,177,209,210,178,211,212,98,14,301,222,179,302,8,223,9,180,303,304,305,181,306,307,308,309,10,310,311,224,312,213,182,214,313,183,184,314,228,235,123,124,125,126,127,128,129,130,131,186,132,133,134,135,136],"tindex":"925c5476-da5f-11e4-b0b6-cfb6e3b5d0f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:193","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"cycleway\") , 30)"},"status":-1},{"failures":[93,315,191,194,195,199,200,201,113,114,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,187,136],"tindex":"925c5477-da5f-11e4-b0b6-85c5439f4385","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[11,197],"tindex":"925c5478-da5f-11e4-b0b6-f9e7bde8bb1d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"925c5479-da5f-11e4-b0b6-6329ccb3b654","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"turnRestrictionBit","roundaboutBit":"turnRestrictionBit","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","forwardBit":"flags","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[],"tindex":"925c7a8a-da5f-11e4-b0b6-d10807a5239e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"925c7a8b-da5f-11e4-b0b6-fb760d783b09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"925c7a8c-da5f-11e4-b0b6-2fe48bdd90f0","variableMapping":{"capacity":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"925c7a8d-da5f-11e4-b0b6-1b3e26c34131","variableMapping":{"name":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"925c7a8e-da5f-11e4-b0b6-f5d1f779a6c7","variableMapping":{"minLatInit":"maxLat","maxLonInit":"java.lang.Double.NaN","minLonInit":"maxLon","bounds":"this","maxLatInit":"java.lang.Double.NaN"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"925c7a8f-da5f-11e4-b0b6-0f3f5966eba5","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizeInBytes","edge":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"925c7a90-da5f-11e4-b0b6-8da35d1df9bd","variableMapping":{"size":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"925c7a91-da5f-11e4-b0b6-57bc61d87104","variableMapping":{"workerThreads":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[93,315,216,170,269,0,217,1,270,273,274,2,277,278,218,279,280,219,3,4,283,284,5,287,288,220,289,191,174,6,221,295,7,298,299,300,193,194,195,196,197,199,200,201,177,178,211,222,179,302,8,223,9,303,306,307,10,310,311,224,312,182,184,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,186,132,133,134,135,187,136],"tindex":"925c7a92-da5f-11e4-b0b6-7f6ab1415752","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-1},{"failures":[],"tindex":"925c7a93-da5f-11e4-b0b6-9b4286d83c75","variableMapping":{"updatedA":"length","nodeA":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"925c7a94-da5f-11e4-b0b6-75777806bbce","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"925c7a95-da5f-11e4-b0b6-9db703e78d0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"925c7a96-da5f-11e4-b0b6-85601739ec39","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[171,176,180,214,185,130],"tindex":"925c7a97-da5f-11e4-b0b6-714c84788c6f","variableMapping":{"currentEntry":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[212,228,235,244],"tindex":"925c7a98-da5f-11e4-b0b6-b7b03fc0e335","variableMapping":{"flags":"defaultValue","scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[93,182,183,184,114,115,116,117,118,120,121,123,124,125,127,130,131,132,133,134,135,136],"tindex":"925c7a99-da5f-11e4-b0b6-8da1a43c0222","variableMapping":{"time":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"925ca1aa-da5f-11e4-b0b6-71e5a0af7ac6","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"925ca1ab-da5f-11e4-b0b6-1789259c4852","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-2},{"failures":[],"tindex":"925ca1ac-da5f-11e4-b0b6-13c36ea1dfd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[225,40,44,226,227,228,229,230,231,232,316,12,233,317,234,236,237,238,239,240,241,242,101,13,243,244,114,115,118,121],"tindex":"925ca1ad-da5f-11e4-b0b6-45fa4708ef17","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"925ca1ae-da5f-11e4-b0b6-7ba12e6bc0c2","variableMapping":{"longSegmentSize":"nodeBitMask","bufferStart":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[315,277,287,298,194,199,200,310],"tindex":"925ca1af-da5f-11e4-b0b6-114fedf7c0b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[35,37,38,39,44,46,229,230,231,12,233,234,235,237,240,241,318,242,13,243,244],"tindex":"925ca1b0-da5f-11e4-b0b6-7dabbceef283","variableMapping":{"foundIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-1},{"failures":[268,202,301],"tindex":"925ca1b1-da5f-11e4-b0b6-51dae1ce75c9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"925ca1b2-da5f-11e4-b0b6-ebbf6540fa2b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"925ca1b3-da5f-11e4-b0b6-510cdd677eed","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"925ca1b4-da5f-11e4-b0b6-43143999b043","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"925ca1b5-da5f-11e4-b0b6-3f7a27a39c14","variableMapping":{"silent":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"925ca1b6-da5f-11e4-b0b6-915d54698245","variableMapping":{"time":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"925ca1b7-da5f-11e4-b0b6-173d639b8814","variableMapping":{"y1":"baseOrientation","x1":"resultOrientation","y2":"baseOrientation","x2":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[319,320,267,321,322,48,323,324,49,50,325,326,327,51,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,52,348,349,350,351,352,53,353,354,355,356,54,357,55,56,358,359,360,57,58,59,60,361,61,245,246,362,16,247,62,63,64,248,17,249,18,19,250,251,252,253,363,254,255,20,256,65,66,67,257,21,258,22,23,259,260,261,262,364,263,264,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,68,405,406,407,408,409,410,411,412,413,414,415,416,69,70,417,418,419,71,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,72,440,441,442,443,444,73,445,446,447,448,74,449,75,76,450,451,78,452,453,454,455,456,79,457,458,80,81,459,460,461,82,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,83,482,483,484,485,486,84,487,488,489,490,85,491,86,87,492,493,494,495,496,497,498,89,499,500,501,90,91,92,93,502,503,504,505,506,94,95,164,96,97,189,507,290,47,190,508,208,98,14,509,314,99,100,225,510,40,511,41,42,43,512,44,226,45,513,46,227,228,229,230,231,232,316,12,233,317,234,235,514,236,237,238,239,240,241,318,242,101,13,243,244,515,516,102,102,103,103,517,517,104,104,105,105,106,106,107,107,108,108,109,109,518,518,110,110,111,111,112,113,114,115,116,117,118,519,119,120,121,122,520,185,123,124,125,126,127,128,129,130,131,186,132,133,134,135,187,136,521,521,522,522,165,166,167,523,524,265,266,137,138,139,140],"tindex":"925cc8c8-da5f-11e4-b0b6-9b55ac065120","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[170,179],"tindex":"925cc8c9-da5f-11e4-b0b6-133fc0431675","variableMapping":{"osmFile":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"925cc8ca-da5f-11e4-b0b6-a940572467a3","variableMapping":{"updatedA":"locs","nodeA":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"925cc8cb-da5f-11e4-b0b6-4550012f0ca9","variableMapping":{"res":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[],"tindex":"925cc8cc-da5f-11e4-b0b6-7123be3a89bd","variableMapping":{"dLat":"segmentSizePower","dLon":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"925cc8cd-da5f-11e4-b0b6-59ac31cc386c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"925cc8ce-da5f-11e4-b0b6-9b0429b8a389","variableMapping":{"java.lang.Double.MAX_VALUE":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"925cc8cf-da5f-11e4-b0b6-41cdc3f2be89","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"i","edgeTo":"allBits","edgeFrom":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[319,320,267,321,322,48,323,324,49,50,325,326,51,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,52,348,349,350,351,352,53,353,354,355,356,54,357,55,56,358,359,360,57,58,59,60,61,245,246,362,16,247,62,63,64,248,17,249,18,19,250,251,252,253,254,255,20,256,65,66,67,257,21,258,22,23,259,260,261,262,263,264,365,366,367,368,370,371,372,373,374,375,377,378,525,526,527,528,529,530,531,532,533,390,68,416,69,70,417,418,71,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,72,440,441,442,443,444,73,445,446,447,448,74,449,75,76,450,451,79,458,80,81,459,460,82,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,83,482,483,484,485,486,84,487,488,489,490,85,491,86,87,492,493,497,498,89,499,500,501,90,91,92,93,502,503,504,505,506,189,507,290,47,190,508,208,98,14,509,314,99,100,225,510,40,511,41,42,43,512,44,226,45,513,46,227,228,229,230,231,232,316,12,233,317,234,235,514,236,237,238,239,240,241,318,242,101,13,243,244,515,516,102,102,103,103,517,517,104,104,105,105,106,106,107,107,108,108,109,109,518,518,110,110,111,111,112,113,114,115,116,117,118,119,120,121,122,185,123,124,125,126,127,128,129,130,131,132,133,134,135,136,523,524,265,266],"tindex":"925cc8d0-da5f-11e4-b0b6-0fa4c4016dc2","variableMapping":{"lastKey":"bytePos","key":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"925cc8d1-da5f-11e4-b0b6-2d60ae869f81","variableMapping":{"str":"name","this":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg())\n    java.lang.String += \"_INT\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":352,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":318,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":48,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":315,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":380,"com.graphhopper.reader.OSMReaderTest.testFerry":123,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":505,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":506,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":217,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":63,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":113,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":471,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":142,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":522,"com.graphhopper.coll.CompressedArrayTest.testCompress":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":297,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":41,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":400,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":362,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":143,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":45,"com.graphhopper.GraphHopperTest.testPrepare":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":411,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":225,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":437,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":269,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":235,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":360,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":504,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":326,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":216,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":525,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":317,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":520,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":79,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":32,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":51,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":227,"com.graphhopper.GraphHopperTest.testLoadOSM":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":259,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":528,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":67,"com.graphhopper.reader.OSMReaderTest.testSort":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":277,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":81,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":145,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":447,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":69,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":412,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":108,"com.graphhopper.storage.RAMDataAccessTest.testHeader":159,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":185,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":490,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":426,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":457,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":82,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":337,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":249,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":248,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":519,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":316,"com.graphhopper.coll.OSMIDMapTest.testGetLong":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":232,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":329,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":481,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":344,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":49,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":346,"com.graphhopper.coll.CompressedArrayTest.testCompress2":24,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":219,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":472,"com.graphhopper.GraphHopperAPITest.testLoad":265,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":327,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":527,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":206,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":431,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":421,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":11,"com.graphhopper.storage.LevelGraphStorageTest.testClone":331,"com.graphhopper.reader.OSMReaderTest.testBarriers":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":462,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":180,"com.graphhopper.util.GHUtilityTest.testCopy":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":299,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":376,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":162,"com.graphhopper.routing.PathTest.testFindInstruction":100,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":175,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":348,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":463,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":178,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":502,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":302,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":373,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":448,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":488,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":497,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":43,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":308,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":313,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":385,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":418,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":533,"com.graphhopper.util.InstructionListTest.testWayList2":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":260,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":450,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":467,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":170,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":98,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":335,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":171,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":394,"com.graphhopper.storage.RAMDirectoryTest.testSynched":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":473,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":12,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":420,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":128,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":101,"com.graphhopper.coll.OSMIDMapTest.testGet":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":470,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":211,"com.graphhopper.routing.PathBidirRefTest.testExtract":515,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":52,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":251,"com.graphhopper.storage.RAMDataAccessTest.testCopy":155,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":493,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":405,"com.graphhopper.storage.RAMDataAccessTest.testSegments":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":264,"com.graphhopper.util.GHUtilityTest.testSort2":498,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":239,"com.graphhopper.reader.OSMReaderTest.testMain":125,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":480,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":33,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":194,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":459,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":338,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":342,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":169,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":358,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":105,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":484,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":222,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":526,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":345,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":135,"com.graphhopper.storage.StorablePropertiesTest.testStore":78,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":88,"com.graphhopper.storage.GraphHopperStorageTest.testClone":423,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":408,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":201,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":455,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":199,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":433,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":288,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":386,"com.graphhopper.routing.PathTest.testTime":314,"com.graphhopper.routing.util.EncodingManagerTest.testFixWayName":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":284,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":55,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":332,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":205,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":262,"com.graphhopper.reader.OSMReaderTest.testRelation":186,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":399,"com.graphhopper.util.GHUtilityTest.testSortDirected":500,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":310,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":495,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":151,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":104,"com.graphhopper.GraphHopperTest.testFootOnly":121,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":292,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":197,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":456,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":17,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":510,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":395,"com.graphhopper.search.NameIndexTest.testCreate":140,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":160,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":102,"com.graphhopper.routing.QueryGraphTest.testOneWay":518,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":364,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":294,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":521,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":26,"com.graphhopper.reader.OSMReaderTest.testWithBounds":134,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":163,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":311,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":491,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":507,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":401,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":182,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":328,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":300,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":483,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":198,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":477,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":71,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":229,"com.graphhopper.util.InstructionListTest.testWayList":91,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":449,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":270,"com.graphhopper.GraphHopperAPITest.testDisconnected179":266,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":387,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":306,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":524,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":414,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":116,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":425,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":59,"com.graphhopper.routing.util.EncodedValueTest.testSwap":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":513,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":268,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":442,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":226,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":243,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":419,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":363,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":529,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":279,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":416,"com.graphhopper.routing.PathTest.testWayList":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":413,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":391,"com.graphhopper.coll.OSMIDMapTest.testGet2":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":244,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":148,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":354,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":482,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":275,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":207,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":18,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":19,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":156,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":250,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":304,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.util.GHUtilityTest.testSort":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":404,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":274,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":293,"com.graphhopper.search.NameIndexTest.testPut":138,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":492,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":247,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":375,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":61,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":367,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":531,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":223,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":14,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":365,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":458,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":281,"com.graphhopper.storage.MMapDirectoryTest.testSynched":494,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":166,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":478,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":189,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":532,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":68,"com.graphhopper.routing.PathTest.testFound":509,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":122,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":184,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":356,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":273,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":474,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":36,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":139,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":390,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":153,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":428,"com.graphhopper.util.InstructionListTest.testEmptyList":501,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":298,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":240,"com.graphhopper.reader.PrinctonReaderTest.testRead":523,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":64,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":469,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":27,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":379,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":479,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":179,"com.graphhopper.reader.OSMReaderTest.testFoot":124,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":111,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":22,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":31,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":56,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":23,"com.graphhopper.reader.OSMReaderTest.testOneWay":136,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":432,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":445,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":295,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":150,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":397,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":427,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":42,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":200,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":149,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":368,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":393,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":517,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":187,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":417,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":496,"com.graphhopper.routing.PathBidirRefTest.testExtract2":516,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":530,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":228,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":261,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":378,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":137,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":444,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":220,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":130,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":415,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":370,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":257,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":446,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":203,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":72,"com.graphhopper.GraphHopperTest.testFootAndCar":117,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":340,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":254,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":157,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":383,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":512,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":514,"com.graphhopper.storage.StorablePropertiesTest.testLoad":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":465,"com.graphhopper.GraphHopperTest.testPrepareOnly":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":242,"com.graphhopper.GraphHopperTest.testVia":114,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":381,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":132,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":322,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":93,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":443,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":209,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":396,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":191,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":355,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":353,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":80}}]
