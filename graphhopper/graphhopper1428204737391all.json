[{"failures":[],"tindex":"5df9d29f-db44-11e4-bee6-87e528836e2e","variableMapping":{"importance":"low","hash":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"5dfc43a0-db44-11e4-bee6-f592dabd9ab3","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.VERY_NICE","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:471","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"5dfc43a1-db44-11e4-bee6-eda1da5c4c22","variableMapping":{"high":"hash","len":"hash","start":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"5dfc6ab2-db44-11e4-bee6-5b136203a1f3","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"5dfc6ab3-db44-11e4-bee6-9bf9f10c3306","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"5dfc6ab4-db44-11e4-bee6-997160e0c705","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[40,41,42,43,44,45,46,285,47,48,286,49,50,51,52,53,54,55,56,57,58,59,60,61,287,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,288,90,91,289,92,93,94,95,96,97,98,99,100,101,102,103,104,290,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,291,292,293,294,137,138,139,140,141,142,143,144,145,146,147,295,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,296,174,175,297,176,177,178,179,180,181,182,183,184,185,186,187,188,298,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,226,231,299,300,234,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"5dfc91c5-db44-11e4-bee6-2d6e023edbf4","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"5dfc91c6-db44-11e4-bee6-5f20ab20eaa2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"5dfc91c7-db44-11e4-bee6-f9a23d72d960","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[20,312],"tindex":"5dfc91c8-db44-11e4-bee6-cb675dc1c9f6","variableMapping":{"distance":"shortTripsSpeed","speed":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"5dfc91c9-db44-11e4-bee6-b39634b5a3d3","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[],"tindex":"5e025e2a-db44-11e4-bee6-d71f5d2f120e","variableMapping":{"index":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-2},{"failures":[],"tindex":"5e025e2b-db44-11e4-bee6-0767198bf7ad","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[],"tindex":"5e025e2c-db44-11e4-bee6-5766b67cb8bf","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"sidewalks","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[325],"tindex":"5e025e2d-db44-11e4-bee6-e1de4b91574e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"5e025e2e-db44-11e4-bee6-99787662e04d","variableMapping":{"intVal":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[326,327],"tindex":"5e025e2f-db44-11e4-bee6-5dda20b31171","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"5e028540-db44-11e4-bee6-b3cf83c5f73a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[8,9,10,11,22,25,26,328,329,330,331,39,332,333,45,47,51,71,77,82,84,88,90,94,114,120,125,127,334,335,132,133,134,136,336,337,174,178,198,204,209,211,338,339,340,221,223,227,229,230,231,232,243,244,341,342,343,344,345,346,281],"tindex":"5e028541-db44-11e4-bee6-115da75dc85f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[347,348,349,350],"tindex":"5e028542-db44-11e4-bee6-ef9e70515518","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[27],"tindex":"5e028543-db44-11e4-bee6-c3456ba5e272","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"5e028544-db44-11e4-bee6-4352b4429bae","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[237,238],"tindex":"5e028545-db44-11e4-bee6-b7874f320b2a","variableMapping":{"index":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[322],"tindex":"5e028546-db44-11e4-bee6-ab517a49841a","variableMapping":{"currentEntry":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[],"tindex":"5e028547-db44-11e4-bee6-510f5de2b94d","variableMapping":{"intVal":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[351,352],"tindex":"5e028548-db44-11e4-bee6-a95c4f6883a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"5e028549-db44-11e4-bee6-d7173d2f2238","variableMapping":{"precision":"bwFaster","lat":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"5e02854a-db44-11e4-bee6-c5818d431b75","variableMapping":{"err":"importance","dLat":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"5e02854b-db44-11e4-bee6-81c72d256868","variableMapping":{"allBits":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[247,255,256,263,266,267,278,280,282],"tindex":"5e02854c-db44-11e4-bee6-1b9e6a744058","variableMapping":{"unterfrankenGraph":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:68","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Graph) instanceof com.graphhopper.storage.LevelGraph) {\n    throw new java.lang.IllegalStateException((\"run testAlgos only with a none-LevelGraph. Use prepare.chWeighting=no \" + \"Or use prepare.chWeighting=shortest and avoid the preparation\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"5e02854d-db44-11e4-bee6-7d91621c51a7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"5e02ac5e-db44-11e4-bee6-edbae4acda19","variableMapping":{"size":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"5e02ac5f-db44-11e4-bee6-a7fa2bd61a88","variableMapping":{"obtained":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"5e02ac60-db44-11e4-bee6-c30d8191bd68","variableMapping":{"compressionLevel":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[0,1,353,354],"tindex":"5e02ac61-db44-11e4-bee6-779b630e0072","variableMapping":{"initLeafSize":"frontIndex","maxLeafEntries":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"5e02ac62-db44-11e4-bee6-9bd9f3c09faf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"5e02ac63-db44-11e4-bee6-1b2186d4d9e6","variableMapping":{"wayTypeEncoder":"this","shift":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"5e02ac64-db44-11e4-bee6-2fe154be48ba","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT_STORE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"5e02ac65-db44-11e4-bee6-ad3ebbc40f43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:134","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[249,251,252,253,254,255,257,259,260,264,270,281],"tindex":"5e02ac66-db44-11e4-bee6-a5aba5eac03a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[],"tindex":"5e02ac67-db44-11e4-bee6-2198f30a9528","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"5e02ac68-db44-11e4-bee6-6361325e45b1","variableMapping":{"min":"length","tmpSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"5e02ac69-db44-11e4-bee6-c98bf4abb472","variableMapping":{"cap":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[312],"tindex":"5e02ac6a-db44-11e4-bee6-1fe7eae1f4c0","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"5e02ac6b-db44-11e4-bee6-d9f672bd3da8","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[20,32,34,355],"tindex":"5e02ac6c-db44-11e4-bee6-5d8fdc0e8dfc","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5e02d37d-db44-11e4-bee6-f17b0bc50562","variableMapping":{"tmp":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[260,261,262,281,284],"tindex":"5e02d37e-db44-11e4-bee6-016f4da96f12","variableMapping":{"from":"to","to":"skippedEdge2","reverse":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"5e02d37f-db44-11e4-bee6-63581fafa800","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"5e02d380-db44-11e4-bee6-11d3f037b39a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:311","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"|\")"},"status":0},{"failures":[],"tindex":"5e02d381-db44-11e4-bee6-33e7da57888a","variableMapping":{"acceptBit":"value","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":0},{"failures":[],"tindex":"5e02d382-db44-11e4-bee6-836676c9ac64","variableMapping":{"tmpNo":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[356,357,358,359,360,361,362,363,364,365,366],"tindex":"5e02d383-db44-11e4-bee6-9128d3fb1674","variableMapping":{"res":"flags","maxBit":"flags","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"5e02d384-db44-11e4-bee6-13a355de58a2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[323],"tindex":"5e02d385-db44-11e4-bee6-c93363400cea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"5e02d386-db44-11e4-bee6-31ad3dbf594b","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[356,357,358,359,360,361,362,363,364,365,366],"tindex":"5e02d387-db44-11e4-bee6-996ec2879867","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"5e02d388-db44-11e4-bee6-73ff0ff63d6a","variableMapping":{"flags":"relationFlags","nodeFlags":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":0},{"failures":[],"tindex":"5e02d389-db44-11e4-bee6-5bd19f50b072","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[317,367,368],"tindex":"5e02d38a-db44-11e4-bee6-dbbbe2e695ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"5e02d38b-db44-11e4-bee6-17b8278a5269","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"5e02d38c-db44-11e4-bee6-63e5b882d7b2","variableMapping":{"systemProperty":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[317,367,368],"tindex":"5e02d38d-db44-11e4-bee6-b3aa180ec29e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"5e02d38e-db44-11e4-bee6-11041baddbc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"5e02d38f-db44-11e4-bee6-fbd751e30b92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"5e02d390-db44-11e4-bee6-b79e84ddc17a","variableMapping":{"nodeFlags":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-2},{"failures":[],"tindex":"5e02faa1-db44-11e4-bee6-b3c9271c4124","variableMapping":{"high":"encoded","highKey":"encoded","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"5e02faa2-db44-11e4-bee6-132b7cda1200","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"5e02faa3-db44-11e4-bee6-19d4fa192f2f","variableMapping":{"y":"speedVal","angle":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[369],"tindex":"5e02faa4-db44-11e4-bee6-0712d20dd16c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"5e02faa5-db44-11e4-bee6-f57a76d4498c","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"5e02faa6-db44-11e4-bee6-65eaf7cd3aef","variableMapping":{"counts":"index","counter":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,34,370,371,372,373,374,375,376,377,378,40,41,42,43,44,46,285,47,49,51,52,53,54,55,56,57,58,59,60,61,287,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,288,90,92,94,95,96,97,98,99,100,101,102,103,104,290,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,379,380,381,382,383,291,384,385,386,387,388,334,389,335,390,391,392,393,394,395,396,397,398,399,292,131,132,133,134,136,400,401,402,403,404,293,405,406,336,407,337,408,409,410,411,412,413,414,415,416,417,294,295,162,296,174,176,178,179,180,181,182,183,184,185,186,187,188,298,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,219,220,221,223,224,225,226,227,229,230,231,232,234,235,236,237,238,239,240,418,326,243,244,245,246,419,341,420,421,342,343,422,344,345,423,424,346,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"5e02faa7-db44-11e4-bee6-29dbececf7b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,42,50,93,177,219,220,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"5e02faa8-db44-11e4-bee6-793d6d16150b","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[235,240],"tindex":"5e02faa9-db44-11e4-bee6-57664a6e353d","variableMapping":{"arrayLength":"removed","maxGeoRef":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"5e02faaa-db44-11e4-bee6-cbc0b7e335a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[39,425,426,427,428,45,47,48,88,90,91,174,175,221,227,229,230,232],"tindex":"5e0321bb-db44-11e4-bee6-1fb6d6148956","variableMapping":{"initLeafSize":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[11,20,21,47,52,53,60,66,74,79,86,88,90,95,96,103,109,117,122,129,138,139,146,152,160,165,172,174,179,180,187,193,201,206,213,226,302,315,429,430,431,323,357,362,327,432,369,242,243,261,262,272,274,275,284],"tindex":"5e0321bc-db44-11e4-bee6-b324d8d761f1","variableMapping":{"size":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[22,221,232],"tindex":"5e0321bd-db44-11e4-bee6-6db44af21e53","variableMapping":{"cp":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"5e0321be-db44-11e4-bee6-ffbb76352451","variableMapping":{"a":"empty","approx":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[325],"tindex":"5e0321bf-db44-11e4-bee6-e3d3e9db479d","variableMapping":{"cp":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"5e0321c0-db44-11e4-bee6-efcb34771ace","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[433,434,435,436,437,438,439,440,441,442,20,21,22,23,24,25,26,27,28,29,30,31,32,34,443,444,384,385,387,388,334,389,335,390,391,392,393,394,395,396,397,398,445,399,292,446,405,406,336,407,337,408,409,410,411,412,413,414,415,416,447,417,294,219,220,221,223,224,225,226,227,229,230,231,232,270,274,275,278],"tindex":"5e0321c1-db44-11e4-bee6-699dd40c87d0","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"5e0321c2-db44-11e4-bee6-ebc4c01b986f","variableMapping":{"line":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"5e0321c3-db44-11e4-bee6-b91a70e806f1","variableMapping":{"shiftSum":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[235,239,240],"tindex":"5e0321c4-db44-11e4-bee6-cf060acc2606","variableMapping":{"tmpEntries":"component"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[],"tindex":"5e0321c5-db44-11e4-bee6-4f6ee7a08fec","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalThreadStateException(\"already created\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[],"tindex":"5e0321c6-db44-11e4-bee6-c7443c135e95","variableMapping":{"dMinLon":"y","this":"this","dMinLat":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:667","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.min(double, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"5e0321c7-db44-11e4-bee6-c905dbd57dea","variableMapping":{"encodingManager":"em"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[],"tindex":"5e0321c8-db44-11e4-bee6-379d6d788a7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:154","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[235,239,240],"tindex":"5e0321c9-db44-11e4-bee6-111d0f13742f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[],"tindex":"5e0321ca-db44-11e4-bee6-cfdd843fd312","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"5e0348db-db44-11e4-bee6-4b7edac5e5c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[20,21,22,23,25,26,27,28,31,32,34,323,448,449,450,356,451,357,452,453,454,358,455,456,457,458,459,359,460,461,462,360,463,464,465,466,467,361,468,362,469,470,471,363,472,473,474,475,364,365,476,477,478,366,479,480,481],"tindex":"5e0348dc-db44-11e4-bee6-c987f160fdb9","variableMapping":{"segmentsToMap":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[20,312],"tindex":"5e0348dd-db44-11e4-bee6-8f46bd8a62cb","variableMapping":{"tmp":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[],"tindex":"5e0348de-db44-11e4-bee6-e73a5ae0978a","variableMapping":{"length":"capacity","factor":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"5e0348df-db44-11e4-bee6-35fb8bf9f25f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[],"tindex":"5e0348e0-db44-11e4-bee6-7727f0a09460","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[34,237],"tindex":"5e0348e1-db44-11e4-bee6-5789f87866bb","variableMapping":{"width":"maxCount","lonSimilar":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"5e0348e2-db44-11e4-bee6-65524d2bbfa3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":279,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":341,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":45,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":327,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":138,"com.graphhopper.reader.OSMReaderTest.testFerry":20,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":12,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":451,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":460,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":389,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":222,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":104,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":19,"com.graphhopper.coll.CompressedArrayTest.testCompress":444,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":212,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":157,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":386,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":257,"com.graphhopper.GraphHopperTest.testPrepare":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":278,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":247,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":352,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":450,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":360,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":1,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":49,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":387,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":239,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":448,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":263,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":407,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":357,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":88,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":440,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":51,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":351,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":260,"com.graphhopper.GraphHopperTest.testLoadOSM":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":413,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":337,"com.graphhopper.reader.OSMReaderTest.testSort":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":455,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":91,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":207,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":174,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":170,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":344,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":124,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":75,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":373,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":185,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":89,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":361,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":94,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":481,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":392,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":390,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":266,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":265,"com.graphhopper.coll.OSMIDMapTest.testGetLong":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":107,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":113,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":67,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":47,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":69,"com.graphhopper.coll.CompressedArrayTest.testCompress2":443,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":197,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":475,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":290,"com.graphhopper.GraphHopperAPITest.testLoad":219,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":50,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":372,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":299,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":189,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":180,"com.graphhopper.storage.LevelGraphStorageTest.testClone":55,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":355,"com.graphhopper.reader.OSMReaderTest.testBarriers":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":240,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":384,"com.graphhopper.util.GHUtilityTest.testCopy":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":350,"com.graphhopper.routing.PathTest.testFindInstruction":244,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":96,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":14,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":304,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":83,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":467,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":208,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":193,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":253,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":349,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":430,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":143,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":176,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":378,"com.graphhopper.util.InstructionListTest.testWayList2":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":414,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":213,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":127,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":432,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":449,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":418,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":59,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":332,"com.graphhopper.storage.RAMDirectoryTest.testSynched":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":105,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":131,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":267,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":25,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":281,"com.graphhopper.coll.OSMIDMapTest.testGet":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":103,"com.graphhopper.routing.PathBidirRefTest.testExtract":245,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":305,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":452,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":396,"com.graphhopper.storage.RAMDataAccessTest.testCopy":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":458,"com.graphhopper.storage.RAMDataAccessTest.testSegments":428,"com.graphhopper.util.GHUtilityTest.testSort2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":276,"com.graphhopper.reader.OSMReaderTest.testMain":22,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":112,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":397,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":289,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":287,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":65,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":353,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":86,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":62,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":117,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":465,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":68,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":32,"com.graphhopper.storage.StorablePropertiesTest.testStore":39,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":333,"com.graphhopper.storage.GraphHopperStorageTest.testClone":182,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":316,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":36,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":314,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":40,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":144,"com.graphhopper.routing.PathTest.testTime":242,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":478,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":84,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":321,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":416,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":156,"com.graphhopper.util.GHUtilityTest.testSortDirected":6,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":472,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":421,"com.graphhopper.GraphHopperTest.testFootOnly":231,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":459,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":312,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":391,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":431,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":368,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":152,"com.graphhopper.search.NameIndexTest.testCreate":340,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":419,"com.graphhopper.routing.QueryGraphTest.testOneWay":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":447,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":436,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":461,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":433,"com.graphhopper.reader.OSMReaderTest.testWithBounds":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":149,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":236,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":158,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":306,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":429,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":52,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":464,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":116,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":109,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":178,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":262,"com.graphhopper.util.InstructionListTest.testWayList":9,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":210,"com.graphhopper.GraphHopperAPITest.testDisconnected179":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":145,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":437,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":140,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":470,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":172,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":225,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":184,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":258,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":367,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":256,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":317,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":476,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":358,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":92,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":445,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":457,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":296,"com.graphhopper.routing.PathTest.testWayList":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":311,"com.graphhopper.coll.OSMIDMapTest.testGet2":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":284,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":347,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":194,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":101,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":183,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":395,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":364,"com.graphhopper.util.GHUtilityTest.testSort":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":410,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":442,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":454,"com.graphhopper.search.NameIndexTest.testPut":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":129,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":181,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":388,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":402,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":468,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":326,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":400,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":288,"com.graphhopper.storage.MMapDirectoryTest.testSynched":215,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":282,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":235,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":377,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":162,"com.graphhopper.routing.PathTest.testFound":241,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":232,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":323,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":81,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":325,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":453,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":106,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":339,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":295,"com.graphhopper.util.InstructionListTest.testEmptyList":7,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":270,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":274,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":308,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":463,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":277,"com.graphhopper.reader.PrinctonReaderTest.testRead":15,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":335,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":147,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":331,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":137,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":469,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":477,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":466,"com.graphhopper.reader.OSMReaderTest.testFoot":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":160,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":346,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":411,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":439,"com.graphhopper.reader.OSMReaderTest.testOneWay":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":412,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":190,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":205,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":123,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":462,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":426,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":154,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":252,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":446,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":259,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":403,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":150,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":420,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":33,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":297,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":218,"com.graphhopper.routing.PathBidirRefTest.testExtract2":246,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":375,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":261,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":415,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":480,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":173,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":301,"com.graphhopper.util.SimpleIntDequeTest.testPush":354,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":408,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":206,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":318,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":198,"com.graphhopper.GraphHopperTest.testFootAndCar":226,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":141,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":98,"com.graphhopper.GraphHopperTest.testPrepareOnly":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":280,"com.graphhopper.GraphHopperTest.testVia":223,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":139,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":29,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":44,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":11,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":202,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":302,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":153,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":324,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":80,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":78,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":90}}]
