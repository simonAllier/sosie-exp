[{"failures":[],"tindex":"3aae5825-dace-11e4-a929-b1854c156dc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"3aae5826-dace-11e4-a929-ff474868a8fb","variableMapping":{"index":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[178,179,180,181,182,183,184,75,185,186,154,187,188,189,190,191,192,193,194,195,196],"tindex":"3aae7f37-dace-11e4-a929-33c2c34b6fff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:96","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setBaseNode(int)"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,89,90,91,93,94,95,96,98,100,101,102,129,141,142,143,144,145,146,147,148,149,150,151,152,153,197,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"3aae7f38-dace-11e4-a929-15c7c0513ef3","variableMapping":{"i":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"3aae7f39-dace-11e4-a929-a1edadf14972","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[198,199,200,201,202],"tindex":"3aae7f3a-dace-11e4-a929-23f28c6ef044","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"3aae7f3b-dace-11e4-a929-5755eb684c3a","variableMapping":{"time":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"3aae7f3c-dace-11e4-a929-7fc279c50c93","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"3aae7f3d-dace-11e4-a929-2b0297fed5dc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,203,29,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,204,73,74,75,76,77,78,80,81,82,205,83,206,84,85,86,87,89,90,91,93,94,95,96,98,100,101,102,129,141,142,143,207,144,208,145,146,147,148,149,150,151,152,153,197,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"3aae7f3e-dace-11e4-a929-dfcafe9ae242","variableMapping":{"size":"segmentSizePower","capacity":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"3aaea64f-dace-11e4-a929-5362d9ce55ec","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:496","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"cannot copy EMPTY PointList\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"3aaea650-dace-11e4-a929-412b2584d5fb","variableMapping":{"a_lon_deg":"minLat","factor":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"3aaea651-dace-11e4-a929-756cbb952b49","variableMapping":{"size":"biggestStart","newSize":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":0},{"failures":[],"tindex":"3aaea652-dace-11e4-a929-e56ad55acb97","variableMapping":{"nodeId":"key","mainNodes":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[17,209,210,211,212,213,214,215,216],"tindex":"3aaea653-dace-11e4-a929-a5020e8d8ab1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[],"tindex":"3aaea654-dace-11e4-a929-3b05265276d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"3aaecd65-dace-11e4-a929-c7ae9bd5b6c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"3aaecd66-dace-11e4-a929-df1b393b8aad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[10,11,16,22,23,154,157,162,217,218],"tindex":"3aaecd67-dace-11e4-a929-792815e8959f","variableMapping":{"lastKey":"backwardBit","key":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[219,210,211,220,212,213,221,222,214,215,223,224,216,225],"tindex":"3aaef478-dace-11e4-a929-e716963d561b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"3aaef479-dace-11e4-a929-17a19de8113d","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"3aaef47a-dace-11e4-a929-8364fdc03ffc","variableMapping":{"freeIndex":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"3aaef47b-dace-11e4-a929-91d08a883920","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[10,22,23,226],"tindex":"3aaf1b8c-dace-11e4-a929-f5e3e963d901","variableMapping":{"r":"shortTripsSpeed","x":"val","absY":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[0,1,2,3,4,12,15,16,24,25,26,27,28,42,45,58,69,70,72,73,74,75,76,78,80,82,83,84,85,86,89,91,100,102,141,143,144,145,146,147,150,151,152,153,154,158,159,160,162,165,166,168,173,174,176,177],"tindex":"3aaf1b8d-dace-11e4-a929-d9715afd7a16","variableMapping":{"node":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"3aaf1b8e-dace-11e4-a929-7590264ac85f","variableMapping":{"lat":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[11,153,157,161,227,228,229],"tindex":"3aaf1b8f-dace-11e4-a929-bbafae6ca426","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"3aaf1b90-dace-11e4-a929-933d25edb314","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"3aaf42a1-dace-11e4-a929-67768e4d8b91","variableMapping":{"ab_rb":"lon","ab_ar":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[230,231,232,233,0,234,235,236,1,2,3,4,237,238,239,240,241,242,10,11,12,13,14,15,16,17,18,19,20,21,22,23,243,244,245,246,247,248,249,178,250,251,252,253,254,255,70,256,179,72,180,181,257,204,258,259,260,261,182,262,263,264,265,266,267,268,269,270,271,272,73,273,274,183,275,74,276,277,184,278,75,279,76,77,185,280,78,281,80,282,283,82,284,285,286,205,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,83,303,304,305,206,84,306,307,308,309,85,310,86,87,311,312,313,314,315,316,317,318,186,319,320,321,322,89,90,91,323,324,325,326,327,328,329,330,331,332,333,93,94,95,96,98,334,335,336,337,338,339,340,341,100,101,102,342,343,344,345,346,347,348,349,350,351,352,353,129,354,141,355,356,143,357,358,359,207,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,144,376,377,378,208,145,379,380,381,382,146,383,147,148,384,385,386,387,153,197,154,155,156,157,158,159,160,161,162,388,389,390,391,392,393,394,163,164,165,166,395,396,167,168,397,169,170,171,172,173,174,398,175,176,187,399,188,189,400,401,402,403,190,191,192,404,405,193,406,194,407,408,409,410,411,412,413,414,415,416,417,195,418,419,420,421,422,423,177,424,425,196],"tindex":"3aaf69b2-dace-11e4-a929-2f1d4b7ac2cc","variableMapping":{"freeIndex":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"3aaf69b3-dace-11e4-a929-e97422d535ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[218],"tindex":"3aaf69b4-dace-11e4-a929-5b043df82f5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[11,16,17,157,162],"tindex":"3aaf69b5-dace-11e4-a929-b7b5b511a867","variableMapping":{"currentEntry":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"3aaf69b6-dace-11e4-a929-91638ac0b42d","variableMapping":{"dist":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[426],"tindex":"3aaf69b7-dace-11e4-a929-39b13e00a319","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[219,222,224],"tindex":"3aaf69b8-dace-11e4-a929-d77fae8e85ee","variableMapping":{"initLeafSize":"speed","maxLeafEntries":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[193,406,194,177,424,196],"tindex":"3aaf69b9-dace-11e4-a929-3b938bedc684","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"3aaf69ba-dace-11e4-a929-73475cff837c","variableMapping":{"size":"maxTurnCosts","i":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":0},{"failures":[],"tindex":"3aaf69bb-dace-11e4-a929-07e18d0304c4","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[427,428,429,430,431,432,433,434,435],"tindex":"3aaf90cc-dace-11e4-a929-3591cc6642d7","variableMapping":{"distInMeter":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"3aaf90cd-dace-11e4-a929-9ba1f2e31b61","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[436,437,438,439],"tindex":"3aaf90ce-dace-11e4-a929-afbed483ff6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[226],"tindex":"3aaf90cf-dace-11e4-a929-0b1905c6692b","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"3aaf90d0-dace-11e4-a929-d9d567feaa00","variableMapping":{"allSegments":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":0},{"failures":[],"tindex":"3aaf90d1-dace-11e4-a929-b3eaba7e7a4a","variableMapping":{"shift":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":0},{"failures":[],"tindex":"3aaf90d2-dace-11e4-a929-d5b2cc8d23da","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[440,441,442,443,190,405,194,407,408,411,412,414,415,195,420,421,422,423,424,425,196],"tindex":"3aaf90d3-dace-11e4-a929-ffa1efa9c018","variableMapping":{"lastInBoundsPillarNode":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"3aaf90d4-dace-11e4-a929-978bb33bd96b","variableMapping":{"foundNext":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:809","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[442,443,190],"tindex":"3aaf90d5-dace-11e4-a929-a584d2c0443d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"3aaf90d6-dace-11e4-a929-255f1df943dc","variableMapping":{"dLat":"indexDivisor","dLon":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[11,153,157,161,227,229],"tindex":"3aafb7e7-dace-11e4-a929-2dde97c36142","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[188,190,405,411,415,423,424,196],"tindex":"3aafb7e8-dace-11e4-a929-272356713e3f","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[23],"tindex":"3aafb7e9-dace-11e4-a929-734649d328f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[10,11,22,23,153,157,161,227,228,229],"tindex":"3aafb7ea-dace-11e4-a929-8365e7227603","variableMapping":{"lastName":"highwayValue","name":"highwayValue","lastIndex":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:75","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    return long;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[154,155,158,159],"tindex":"3aafb7eb-dace-11e4-a929-0978504e78b3","variableMapping":{"err":"tmpPrevEdge","dLat":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"3aafb7ec-dace-11e4-a929-67f24f6e16d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[17,444],"tindex":"3aafb7ed-dace-11e4-a929-517c208f4adb","variableMapping":{"initLeafSize":"usedBits","maxLeafEntries":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[188,190,405,411,415,423,424,196],"tindex":"3aafb7ee-dace-11e4-a929-0de02cc7979f","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[],"tindex":"3aafb7ef-dace-11e4-a929-1bcc70f26daf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"3aafb7f0-dace-11e4-a929-01b8736bc219","variableMapping":{"precision":"angle","lat":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"3aafb7f1-dace-11e4-a929-a7344f7384ee","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[426],"tindex":"3aafb7f2-dace-11e4-a929-25d49501ac64","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"3aafb7f3-dace-11e4-a929-a1df4cd0f704","variableMapping":{"id":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"3aafb7f4-dace-11e4-a929-c906a21671f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"3aafb7f5-dace-11e4-a929-a163a327b8f1","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"3aafb7f6-dace-11e4-a929-c3ec597dd4fa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[445,197,154,155,158,159,399,188,189,400,401,402,403,190,192,404,405,193,194,407,408,409,410,411,412,413,414,415,416,417,195,418,419,420,421,422,423,177,424,425,196],"tindex":"3aafb7f7-dace-11e4-a929-1ff03a257e96","variableMapping":{"edgeId":"toSize","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"toSize","nodeA":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-1},{"failures":[],"tindex":"3aafb7f8-dace-11e4-a929-89b0c45b4db7","variableMapping":{"graph":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:613","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"3aafb7f9-dace-11e4-a929-ab67a1fba8b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[198,199,200,201,202],"tindex":"3aafb7fa-dace-11e4-a929-e14b83e2af21","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"3aafdf0b-dace-11e4-a929-9187b48aaceb","variableMapping":{"bestPath":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[230,231,232,233,0,234,235,236,1,2,3,4,237,238,239,240,241,242,10,11,12,13,14,15,16,17,18,19,20,21,22,23,446,243,244,245,447,246,247,248,249,178,250,251,252,253,69,254,255,70,71,256,179,72,180,181,257,204,258,259,260,261,182,262,263,264,265,266,267,268,269,270,271,272,73,273,274,183,448,275,74,276,277,184,278,75,279,76,77,185,280,78,281,80,81,282,283,82,284,285,286,205,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,83,303,304,305,449,206,84,306,307,308,309,85,310,86,87,311,312,313,314,315,316,317,318,186,319,320,321,322,89,90,91,323,324,325,326,327,328,329,330,331,332,333,450,93,94,95,96,98,334,335,336,337,338,339,340,341,100,101,102,342,343,344,345,346,347,348,349,350,351,352,353,129,354,141,142,355,356,143,357,358,359,207,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,144,376,377,378,451,208,145,379,380,381,382,146,383,147,148,384,385,386,387,153,197,154,155,156,157,158,159,160,161,162,388,389,390,391,392,393,394,163,164,452,453,165,166,395,396,167,167,168,168,397,397,169,169,170,170,171,171,172,172,173,173,174,174,398,398,175,175,176,176,187,399,188,189,400,401,402,403,190,191,192,404,405,193,406,194,407,408,409,410,411,412,413,414,415,416,417,195,418,419,420,421,422,423,177,424,425,196],"tindex":"3ab02d2c-dace-11e4-a929-1370088a7bc8","variableMapping":{"oldValueIndex":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"3ab02d2d-dace-11e4-a929-3380b7e6340e","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[255,70,180,264,265,266,268,272,183,184,188,400,401,402,190,192,405,193],"tindex":"3ab02d2e-dace-11e4-a929-672858c6746f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"3ab02d2f-dace-11e4-a929-834f6b8f817d","variableMapping":{"endIndexPlusOne":"value","frontIndex":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[427,428,429,430,432,433,454,455,456,434,435,321,324,326,327,457,340,343,345,346],"tindex":"3ab02d30-dace-11e4-a929-0fc17ec0ba25","variableMapping":{"size":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[230,231,232,233,0,234,235,236,1,2,3,4,237,238,239,240,241,242,10,11,12,13,14,15,16,17,18,19,20,21,22,23,178,250,251,252,253,69,254,255,70,71,256,179,72,180,181,257,204,258,259,260,261,182,262,263,264,265,266,267,268,269,270,271,272,73,273,274,183,448,275,74,276,277,184,278,75,279,76,77,185,280,78,79,281,80,81,282,283,82,284,285,286,205,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,83,303,304,305,449,206,84,306,307,308,309,85,310,86,87,311,312,313,314,315,316,88,317,318,186,319,320,321,322,89,90,91,323,324,325,326,327,328,329,330,331,92,332,333,450,93,94,95,96,97,98,334,335,336,337,99,338,339,340,341,100,101,102,342,343,344,345,346,347,348,349,350,103,351,352,104,105,106,107,108,109,110,111,112,113,114,353,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,354,141,142,355,356,143,357,358,359,207,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,144,376,377,378,451,208,145,379,380,381,382,146,383,147,148,384,385,386,387,153,197,154,155,156,157,158,159,160,161,162,388,389,390,391,392,393,394,163,164,452,453,165,166,395,396,167,167,168,168,397,397,169,169,170,170,171,171,172,172,173,173,174,174,398,398,175,175,176,176,187,399,188,189,400,401,402,403,190,191,192,404,405,193,406,194,407,408,409,410,411,412,413,414,415,416,417,195,418,419,420,421,422,423,177,424,425,196],"tindex":"3ab02d31-dace-11e4-a929-5f1ba8d36156","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"3ab02d32-dace-11e4-a929-6d9692424cf7","variableMapping":{"edgePointer":"relBitMask","edgeEntryBytes":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"3ab05443-dace-11e4-a929-bd8245520e17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:304","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"3ab05444-dace-11e4-a929-d7c68d3f93af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"3ab05445-dace-11e4-a929-a7d4c5ae9e39","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"3ab05446-dace-11e4-a929-c93b1f563543","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3ab05447-dace-11e4-a929-6fd201bd3c65","variableMapping":{"frontIndex":"maxTurnCosts","endIndexPlusOne":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[],"tindex":"3ab05448-dace-11e4-a929-078838ffaa62","variableMapping":{"hasOther":"closed","hasRel":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"3ab05449-dace-11e4-a929-03d502c1daa5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3ab0544a-dace-11e4-a929-67851054264b","variableMapping":{"distance":"factor","maxSpeed":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[],"tindex":"3ab0544b-dace-11e4-a929-bd93f5fb2c16","variableMapping":{"bit":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"3ab0544c-dace-11e4-a929-3d216724de58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[181,264,265,267,271,272,74,276,285,294,295,297,301,302,84,306,106,115,116,118,122,123,130,131,358,367,368,370,374,375,145,379,392],"tindex":"3ab0544d-dace-11e4-a929-9929d27c2923","variableMapping":{"elem":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"3ab0544e-dace-11e4-a929-01006865ddbf","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"3ab0544f-dace-11e4-a929-ff1b4e2ad982","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"3ab05450-dace-11e4-a929-35435d612557","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[10,458],"tindex":"3ab27731-dace-11e4-a929-c90c6944efec","variableMapping":{"segmentSizeInBytes":"minutes","indexDivisor":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"3ab27732-dace-11e4-a929-9da87521abe2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[11,23,209],"tindex":"3ab27733-dace-11e4-a929-d3b8e2b2f179","variableMapping":{"i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[23,254,181,262,264,265,267,271,272,74,276,285,292,294,295,297,301,302,84,306,106,114,115,116,118,122,123,130,131,358,365,367,368,370,374,375,145,379,389,391,392],"tindex":"3ab27734-dace-11e4-a929-21102e551a87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"3ab27735-dace-11e4-a929-01561120a4a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"3ab27736-dace-11e4-a929-e915c76b9c2e","variableMapping":{"nodeFlags":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-2},{"failures":[],"tindex":"3ab27737-dace-11e4-a929-e92594678ef9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":275,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":422,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.reader.OSMReaderTest.testFerry":10,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":237,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":210,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":90,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":197,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":438,"com.graphhopper.storage.MMapDataAccessTest.testSegments":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":292,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":9,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":43,"com.graphhopper.coll.CompressedArrayTest.testCompress":435,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":148,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":124,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":320,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":44,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":192,"com.graphhopper.GraphHopperTest.testPrepare":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":187,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":373,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":443,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":415,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":437,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":231,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":321,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":393,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":219,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":407,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":35,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":413,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":101,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":78,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":454,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":72,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":442,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":193,"com.graphhopper.GraphHopperTest.testLoadOSM":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":347,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":102,"com.graphhopper.reader.OSMReaderTest.testSort":13,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":391,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":81,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":381,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":141,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":137,"com.graphhopper.storage.RAMDataAccessTest.testHeader":64,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":173,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":242,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":309,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":37,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":448,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":362,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":79,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":82,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":325,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":410,"com.graphhopper.coll.OSMIDMapTest.testGetLong":27,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":409,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":302,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":269,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":70,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":271,"com.graphhopper.coll.CompressedArrayTest.testCompress2":434,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":224,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":293,"com.graphhopper.GraphHopperAPITest.testLoad":386,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":244,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":198,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":367,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":358,"com.graphhopper.storage.LevelGraphStorageTest.testClone":204,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":458,"com.graphhopper.reader.OSMReaderTest.testBarriers":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":186,"com.graphhopper.util.GHUtilityTest.testCopy":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":412,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":333,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":88,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":67,"com.graphhopper.routing.PathTest.testFindInstruction":166,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":285,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":440,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":228,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":239,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":279,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":314,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":382,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":371,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":307,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":402,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":110,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":356,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":38,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":249,"com.graphhopper.util.InstructionListTest.testWayList2":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":348,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":384,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":86,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":163,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":261,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":61,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":45,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":294,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":93,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":411,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":15,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":177,"com.graphhopper.coll.OSMIDMapTest.testGet":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":291,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":229,"com.graphhopper.routing.PathBidirRefTest.testExtract":395,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":26,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":329,"com.graphhopper.storage.RAMDataAccessTest.testCopy":59,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":130,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":212,"com.graphhopper.storage.RAMDataAccessTest.testSegments":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":199,"com.graphhopper.util.GHUtilityTest.testSort2":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":419,"com.graphhopper.reader.OSMReaderTest.testMain":12,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":301,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":330,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":282,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":263,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":267,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":185,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":170,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":222,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":243,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":270,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":22,"com.graphhopper.storage.StorablePropertiesTest.testStore":42,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":58,"com.graphhopper.storage.GraphHopperStorageTest.testClone":207,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":133,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":218,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":369,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":111,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":252,"com.graphhopper.routing.PathTest.testTime":453,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":76,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":258,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":123,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":274,"com.graphhopper.util.GHUtilityTest.testSortDirected":235,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":54,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":169,"com.graphhopper.GraphHopperTest.testFootOnly":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":226,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":203,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":119,"com.graphhopper.search.NameIndexTest.testCreate":152,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":65,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":167,"com.graphhopper.routing.QueryGraphTest.testOneWay":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":103,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":430,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":100,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":427,"com.graphhopper.reader.OSMReaderTest.testWithBounds":21,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":68,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":116,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":310,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":125,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":180,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":256,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":304,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":298,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":143,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":194,"com.graphhopper.util.InstructionListTest.testWayList":2,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":383,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":31,"com.graphhopper.GraphHopperAPITest.testDisconnected179":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":112,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":431,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":449,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":107,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":139,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":156,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":361,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":404,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":378,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":191,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":436,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":425,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":92,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":447,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":354,"com.graphhopper.storage.MMapDataAccessTest.testCopy":34,"com.graphhopper.routing.PathTest.testWayList":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":115,"com.graphhopper.coll.OSMIDMapTest.testGet2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":196,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":51,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":277,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":303,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":289,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":360,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":326,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":327,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":60,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":55,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":201,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":441,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":33,"com.graphhopper.util.GHUtilityTest.testSort":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":344,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":200,"com.graphhopper.search.NameIndexTest.testPut":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":311,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":359,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":322,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":336,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":214,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":164,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":334,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":202,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":424,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":389,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":248,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":129,"com.graphhopper.routing.PathTest.testFound":452,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":162,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":209,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":278,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":426,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":251,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":295,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":445,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":151,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":353,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":56,"com.graphhopper.util.InstructionListTest.testEmptyList":236,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":195,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":420,"com.graphhopper.reader.PrinctonReaderTest.testRead":240,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":41,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":146,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":91,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":290,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":114,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":104,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":300,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":30,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":444,"com.graphhopper.reader.OSMReaderTest.testFoot":11,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":127,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":176,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":345,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":433,"com.graphhopper.reader.OSMReaderTest.testOneWay":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":346,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":368,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":379,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":308,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":53,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":121,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":401,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":405,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":189,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":337,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":117,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":397,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":355,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":246,"com.graphhopper.routing.PathBidirRefTest.testExtract2":396,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":406,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":349,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":439,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":149,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":225,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":140,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":227,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":342,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":380,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":260,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":144,"com.graphhopper.GraphHopperTest.testFootAndCar":157,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":332,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":108,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":205,"com.graphhopper.GraphHopperTest.testPrepareOnly":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":423,"com.graphhopper.GraphHopperTest.testVia":154,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":106,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":19,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":253,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":451,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":120,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":184,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":276,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":80}}]
