[{"failures":[0,1,2,3],"tindex":"9aa68c99-db45-11e4-b098-a9b8b4149f01","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"9aa728da-db45-11e4-b098-77546fa8e3f5","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"i","nextEdge":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[],"tindex":"9aa728db-db45-11e4-b098-934279ab069e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[4,5,6,7,8,9,10],"tindex":"9aa728dc-db45-11e4-b098-e54ee7617333","variableMapping":{"high":"code","guess":"code","low":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"9aa728dd-db45-11e4-b098-ab5c42a84a81","variableMapping":{"size":"segmentsToCreate","i":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19],"tindex":"9aa728de-db45-11e4-b098-e94ee01ef162","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"9aa74fef-db45-11e4-b098-49503f605806","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[],"tindex":"9aa74ff0-db45-11e4-b098-e3d0b267f255","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"9aa74ff1-db45-11e4-b098-a7043b511d96","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","capacity":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:328","type":"CtIfImpl","sourcecode":"if (long < (int))\n    long = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[],"tindex":"9aa74ff2-db45-11e4-b098-81d2111c54ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"9aa74ff3-db45-11e4-b098-3f4fdc7f62bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"9aa74ff4-db45-11e4-b098-1905f6a9b08f","variableMapping":{"i":"segmentSizeIntsPower","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":0},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"9aa74ff5-db45-11e4-b098-7fc39fa96ef4","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[11,12,13,14,15,17,18,132,133,19,134,135,136,137,138,139,140,141,142],"tindex":"9aa74ff6-db45-11e4-b098-b53c43777240","variableMapping":{"dist":"minLonTmp","com.graphhopper.util.DistanceCalcEarth.R":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[],"tindex":"9aa74ff7-db45-11e4-b098-e7fc2807a0d4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[42,143,46],"tindex":"9aa74ff8-db45-11e4-b098-3749802a1297","variableMapping":{"edgeId":"maxCount","nextEdge":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[144,145,20,21,22,23,24,146,25,147,148,27,28,29,149,31,150,151,152,153,154,155,156,34,35,36,157,37,158,159,38,39,40,160,41,161,42,162,163,164,165,166,167,168,48,169,170,171,172,49,173,174,50,175,176,177,62,76,178,179,180,181,88,182,183,184,185,186,187,188,189,190,191,98,192,193,194,195,196,197,198,103,104,199,200,201,202,116,203,204,205,118,206,207,208,209,130,210,211,212,213,214,215,216,217,218],"tindex":"9aa77709-db45-11e4-b098-69ae06a4054f","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"9aa7770a-db45-11e4-b098-a3813572d392","variableMapping":{"periodicUpdates":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[42,143,46,219,220,221,222,223,224,225,226],"tindex":"9aa7770b-db45-11e4-b098-41218305654a","variableMapping":{"flags":"capacity","nodeFlags":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[],"tindex":"9aa7770c-db45-11e4-b098-2d23081270af","variableMapping":{"found":"found","edgeState":"edgeState","tmpIter":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-2},{"failures":[144,145,20,21,22,23,24,146,25,147,148,27,28,29,149,31,150,151,152,153,154,155,156,34,35,36,157,37,158,159,38,39,40,160,41,161,42,162,163,164,165,166,167,168,48,169,170,171,172,49,173,174,50,175,176,177,62,76,178,179,180,181,88,227,182,183,184,185,186,228,229,187,188,189,190,191,98,230,192,231,193,194,195,196,232,197,198,233,234,103,104,199,200,201,202,116,235,203,204,205,118,206,207,208,209,130,236,210,237,211,238,212,213,214,215,239,216,217,240,241,218],"tindex":"9aa7770d-db45-11e4-b098-095f9cbc66c8","variableMapping":{"len":"cap","start":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[],"tindex":"9aa7770e-db45-11e4-b098-05977a186a3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"9aa7770f-db45-11e4-b098-b7021da2f976","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[42,143,46],"tindex":"9aa77710-db45-11e4-b098-c109ce985b2a","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"9aa77711-db45-11e4-b098-8bbe8ae7d44c","variableMapping":{"r":"com.graphhopper.util.AngleCalc.PI3_4","angle":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[144,23,147,148,34,35,36,157,158,159,38,39,4,41,161,42,5,242,243,6,244,0,245,7,246,247,248,249,250,251,252,1,253,254,8,255,2,256,9,257,258,10,259,3,260],"tindex":"9aa77712-db45-11e4-b098-0da5c1307a9e","variableMapping":{"len":"value","start":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"9aa77713-db45-11e4-b098-293f68f6b079","variableMapping":{"size":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"9aa79e24-db45-11e4-b098-1d3e17771879","variableMapping":{"turnCostIndex":"element","NO_TURN_ENTRY":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"9aa79e25-db45-11e4-b098-3b72b7fdd483","variableMapping":{"index":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"9aa79e26-db45-11e4-b098-4f790b20df62","variableMapping":{"minDistance":"longTripsSpeed","rMin":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[261,262,263],"tindex":"9aa79e27-db45-11e4-b098-67abbbc63b78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:467","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[24],"tindex":"9aa79e28-db45-11e4-b098-6b4dd234c563","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"9aa79e29-db45-11e4-b098-5bdcc335f21b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":0},{"failures":[],"tindex":"9aa79e2a-db45-11e4-b098-73d6cb5e6a08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"status":-2},{"failures":[144,21,22,24,25,28,29,264,265,266,31,34,36,157,37,158,159,38,39,40,160,41,161,42,162,48,171,175,177,62,76,179,180,181,88,183,185,189,191,267,268,98,269,101,234,103,104,200,201,202,116,118,207,208,209,130,241],"tindex":"9aa79e2b-db45-11e4-b098-af46f64ef9a4","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[51,56],"tindex":"9aa79e2c-db45-11e4-b098-8309845deef0","variableMapping":{"value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"9aa79e2d-db45-11e4-b098-3fe412518c1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:222","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"9aa79e2e-db45-11e4-b098-ff7c8a64fe8c","variableMapping":{"angle":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[52,53,60,61,62,63,64,66,74,270,271],"tindex":"9aa79e2f-db45-11e4-b098-8142b6f55df9","variableMapping":{"dist":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"9aa79e30-db45-11e4-b098-499f1e124934","variableMapping":{"size":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[],"tindex":"9aa79e31-db45-11e4-b098-a9a98ff86a38","variableMapping":{"defaultSegmentSize":"skippedEdge2","graph":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:703","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[272],"tindex":"9aa79e32-db45-11e4-b098-4f0154788c52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"9aa79e33-db45-11e4-b098-bd3260955642","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[273],"tindex":"9aa7c544-db45-11e4-b098-b36e1a257c21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[149,34,274,275,273,276,277,278,279,280,6,281,282,249,283,254,8,10,284,285,48,51,52,58,64],"tindex":"9aa7c545-db45-11e4-b098-53bcdc06949c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"9aa7c546-db45-11e4-b098-8deab92cb901","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"9aa7c547-db45-11e4-b098-d9e4ba7540c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"9aa7c548-db45-11e4-b098-9113ef920ed8","variableMapping":{"finishedTo":"closed","finishedFrom":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[286],"tindex":"9aa7c549-db45-11e4-b098-81503fa81b2a","variableMapping":{"valueStr":"key","field":"str","key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[20,279],"tindex":"9aa7c54a-db45-11e4-b098-8516edff056a","variableMapping":{"lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"9aa7c54b-db45-11e4-b098-b310ba090ba3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[7,246],"tindex":"9aa7c54c-db45-11e4-b098-61938c68a60e","variableMapping":{"pointIndex":"usedBits","index":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"9aa7c54d-db45-11e4-b098-55d1e4bab872","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"9aa7c54e-db45-11e4-b098-addd99ad427a","variableMapping":{"com.graphhopper.storage.index.Location2IDQuadtree.class":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:325","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"edge filters are not yet implemented for \" + (com.graphhopper.storage.index.Location2IDQuadtree.com.graphhopper.storage.index.Location2IDQuadtree.getSimpleName())))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[34,287],"tindex":"9aa7c54f-db45-11e4-b098-c7c6215163e8","variableMapping":{"orientation":"durationInHours","resultOrientation":"durationInHours","baseOrientation":"longTripsSpeed","java.lang.Math.PI":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"9aa7c550-db45-11e4-b098-b563b7714b1f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9aa7c551-db45-11e4-b098-8bf7f8ca07fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[288],"tindex":"9aa7ec62-db45-11e4-b098-9d10634bb972","variableMapping":{"osmFile":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[144,20,21,22,23,24,146,25,147,148,26,289,34,35,36,157,37,158,159,38,39,40,160,41,161,42,11,12,290,58,291,60,13,14,292,15,16,17,18,132,133,19,134,293,294,135,295,183,184,185,296,136,297,137,138,298,299,300,301,302,303,304,139,305,189,190,191,306,140,307,141,142,308,309,310,311,312,313,314],"tindex":"9aa7ec63-db45-11e4-b098-c95b6aebbe18","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"9aa7ec64-db45-11e4-b098-1ba005b6c1d0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[276,315,284],"tindex":"9aa7ec65-db45-11e4-b098-91f988618ccc","variableMapping":{"_location":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"9aa7ec66-db45-11e4-b098-9593b60305a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"9aa7ec67-db45-11e4-b098-fbf51b1d1fbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[],"tindex":"9aa7ec68-db45-11e4-b098-d172c7efa48b","variableMapping":{"defaultUTurnCost":"speedVal","weight":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"9aa7ec69-db45-11e4-b098-898273d543a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[168],"tindex":"9aa7ec6a-db45-11e4-b098-a30e6fc79769","variableMapping":{"edgeId":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","nextEdge":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"9aa7ec6b-db45-11e4-b098-75e7fb389266","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[273],"tindex":"9aa7ec6c-db45-11e4-b098-7ba1feca0767","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"9aa7ec6d-db45-11e4-b098-cd2475af5981","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"9aa7ec6e-db45-11e4-b098-378df903329e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[144,24,146,25,148,162,76,98,192,194,232,197,198,233,234,103,104,204,205,118,211,213,239,216,217,240,241,218],"tindex":"9aa7ec6f-db45-11e4-b098-c196e814dadc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-1},{"failures":[],"tindex":"9aa7ec70-db45-11e4-b098-a786a98de510","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"9aa7ec71-db45-11e4-b098-ef9c8b3a2168","variableMapping":{"ret":"usedBits","retBucket":"usedBits","i":"nextTurnBit","bucketSize":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"9aa7ec72-db45-11e4-b098-3986e5dfb1aa","variableMapping":{"val":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"9aa7ec73-db45-11e4-b098-9f7909934e2e","variableMapping":{"index":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"9aa81384-db45-11e4-b098-ab8c4602c24c","variableMapping":{"i":"y2","lastIndex":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"9aa81385-db45-11e4-b098-99ed8837e741","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"9aa81386-db45-11e4-b098-4d63786e2400","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"9aa81387-db45-11e4-b098-118089a345ab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[4,5,6,7,246,251,8,9,10],"tindex":"9aa81388-db45-11e4-b098-fdf3dbb79063","variableMapping":{"size":"code","index":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"9aa81389-db45-11e4-b098-713480726373","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"9aa8138a-db45-11e4-b098-b5ae07428034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"9aa8138b-db45-11e4-b098-3f82f1c11ebb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[44,46,78,316,317,220,318,181,221,91,319,320,321,322,269,323,106,324,325,223,326,202,327,120,328,329,226,330,209,331],"tindex":"9aa8138c-db45-11e4-b098-6f5244cb57db","variableMapping":{"size":"start","i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"9aa8138d-db45-11e4-b098-49d1f66d91cb","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"9aa8138e-db45-11e4-b098-3d6c3977eba5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"9aa8138f-db45-11e4-b098-bfa62da5a131","variableMapping":{"value":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"9aa81390-db45-11e4-b098-89f149c8815d","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"9aa81391-db45-11e4-b098-c5c786217b08","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[144,145,20,21,22,23,24,146,25,147,148,26,289,332,333,334,27,28,29,149,30,335,336,31,337,338,339,340,341,32,33,34,35,36,157,37,158,159,38,39,40,160,41,161,42,167,168,43,44,45,143,46,47,342,343,285,48,169,170,170,171,171,344,344,172,172,49,49,173,173,174,174,50,50,175,175,345,345,176,176,177,177,346,347,51,52,53,54,348,349,55,350,351,290,56,352,57,58,291,59,353,60,354,61,62,63,355,64,65,356,66,67,68,69,70,357,71,72,73,358,74,75,359,76,178,360,361,179,77,78,362,363,79,364,365,366,80,367,81,219,316,368,317,82,369,83,220,318,180,370,371,84,372,85,181,221,86,373,87,88,374,227,182,89,375,293,294,376,135,295,183,184,185,296,136,297,137,138,298,299,300,301,303,304,377,378,379,380,381,382,383,186,228,229,187,188,384,385,386,387,388,389,139,305,189,190,191,306,140,307,141,142,308,309,310,311,313,314,94,98,103,390,104,199,391,392,200,105,106,393,394,107,395,396,397,108,398,109,222,324,399,325,110,400,111,223,326,201,401,402,112,403,113,202,327,114,404,115,116,405,235,203,117,406,407,408,409,410,411,224,412,413,414,415,416,270,417,271,205,418,419,118,206,420,421,207,119,120,422,423,121,424,425,426,122,427,123,225,328,428,329,124,429,125,226,330,208,430,431,126,432,127,209,331,128,433,129,130,434,236,210,131,435],"tindex":"9aa83aa2-db45-11e4-b098-8f3880239576","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[168],"tindex":"9aa83aa3-db45-11e4-b098-65e70fa2df13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"9aa83aa4-db45-11e4-b098-bf1af9cf6a6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:468","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[34,287,288],"tindex":"9aa83aa5-db45-11e4-b098-6dd749acf02e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"9aa83aa6-db45-11e4-b098-97d50ddda358","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"9aa83aa7-db45-11e4-b098-3b2ee4edefc7","variableMapping":{"i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"9aa83aa8-db45-11e4-b098-f5d8b9d8fade","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[436,37,158,40,437,438,439,440,441,442,443],"tindex":"9aa83aa9-db45-11e4-b098-ad3e8bf66ae2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"9aa83aaa-db45-11e4-b098-4f3704b556f8","variableMapping":{"lastTime":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[444,445],"tindex":"9aa83aab-db45-11e4-b098-112d84078aa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-1},{"failures":[],"tindex":"9aa83aac-db45-11e4-b098-3bd8812fca80","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":127,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":354,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":205,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":90,"com.graphhopper.reader.OSMReaderTest.testFerry":34,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":339,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":184,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":145,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":398,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":237,"com.graphhopper.coll.CompressedArrayTest.testCompress":12,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":68,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":268,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":81,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":376,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":211,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":73,"com.graphhopper.GraphHopperTest.testPrepare":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":65,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":83,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":56,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":333,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":47,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":351,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":190,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":103,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":132,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":75,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":308,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":191,"com.graphhopper.reader.OSMReaderTest.testSort":157,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":143,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":199,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":213,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":373,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":76,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":17,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":50,"com.graphhopper.storage.RAMDataAccessTest.testHeader":232,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":115,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":218,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":432,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":365,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":416,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":242,"com.graphhopper.reader.OSMNodeTest.testSetTags":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":200,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":427,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":297,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":349,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":120,"com.graphhopper.coll.OSMIDMapTest.testGetLong":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":348,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":393,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":429,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":118,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":226,"com.graphhopper.coll.CompressedArrayTest.testCompress2":11,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":318,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":109,"com.graphhopper.GraphHopperAPITest.testLoad":26,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":409,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":440,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":219,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":78,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":288,"com.graphhopper.storage.LevelGraphStorageTest.testClone":423,"com.graphhopper.reader.OSMReaderTest.testBarriers":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":293,"com.graphhopper.util.GHUtilityTest.testCopy":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":304,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":233,"com.graphhopper.routing.PathTest.testFindInstruction":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":255,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":106,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":249,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":434,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":378,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":87,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":114,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":335,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":325,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":419,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":445,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":424,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":361,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":414,"com.graphhopper.util.InstructionListTest.testWayList2":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":309,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":89,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":235,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":167,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":178,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":426,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":238,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":55,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":77,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":158,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":62,"com.graphhopper.coll.OSMIDMapTest.testGet":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":108,"com.graphhopper.routing.PathBidirRefTest.testExtract":346,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":164,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":299,"com.graphhopper.storage.RAMDataAccessTest.testCopy":193,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":269,"com.graphhopper.storage.RAMDataAccessTest.testSegments":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":443,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":314,"com.graphhopper.util.GHUtilityTest.testSort2":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":59,"com.graphhopper.reader.OSMReaderTest.testMain":36,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":206,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":259,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":133,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":300,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":391,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":123,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":329,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":131,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":49,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":112,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":408,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":125,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":161,"com.graphhopper.storage.StorablePropertiesTest.testStore":204,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":231,"com.graphhopper.storage.GraphHopperStorageTest.testClone":363,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":375,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":277,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":273,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":368,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":415,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":417,"com.graphhopper.routing.PathTest.testTime":285,"com.graphhopper.util.BitUtilLittleTest.testToFloat":265,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":236,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":311,"com.graphhopper.reader.OSMReaderTest.testRelation":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":322,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":431,"com.graphhopper.util.GHUtilityTest.testSortDirected":338,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":240,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":172,"com.graphhopper.GraphHopperTest.testFootOnly":147,"com.graphhopper.util.BitUtilLittleTest.testToInt":266,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":136,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":356,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":95,"com.graphhopper.search.NameIndexTest.testCreate":153,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":197,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":170,"com.graphhopper.routing.QueryGraphTest.testOneWay":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":312,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":189,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":13,"com.graphhopper.reader.OSMReaderTest.testWithBounds":41,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":234,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":192,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":45,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":405,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":283,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":7,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":119,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":420,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":256,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":402,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":110,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":179,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.util.BitUtilLittleTest.testToBitString":264,"com.graphhopper.util.InstructionListTest.testWayList":28,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":374,"com.graphhopper.GraphHopperAPITest.testDisconnected179":289,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":16,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":261,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":102,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":22,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":364,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":358,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":84,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":72,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":355,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":302,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":260,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":359,"com.graphhopper.routing.PathTest.testWayList":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":252,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":438,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":315,"com.graphhopper.coll.OSMIDMapTest.testGet2":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":64,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":239,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":128,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":401,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":281,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":396,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":138,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":194,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":241,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":250,"com.graphhopper.util.GHUtilityTest.testSort":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":307,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":442,"com.graphhopper.search.NameIndexTest.testPut":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":117,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":295,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":188,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":386,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":243,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":384,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":390,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":155,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":400,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":44,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":413,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":98,"com.graphhopper.routing.PathTest.testFound":343,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":148,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":247,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":129,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":286,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":263,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":324,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":152,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":94,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":80,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":230,"com.graphhopper.util.InstructionListTest.testEmptyList":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":437,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":353,"com.graphhopper.reader.PrinctonReaderTest.testRead":32,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":88,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":185,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":397,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":14,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":267,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":5,"com.graphhopper.reader.OSMReaderTest.testFoot":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":97,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":156,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":177,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":141,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":210,"com.graphhopper.reader.OSMReaderTest.testOneWay":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":142,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":316,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":221,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":404,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":217,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":96,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":366,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":69,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":67,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":216,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":43,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":183,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":344,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":360,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":224,"com.graphhopper.routing.PathBidirRefTest.testExtract2":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":51,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":310,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":382,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":150,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":85,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":38,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":248,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":388,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":306,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":86,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":444,"com.graphhopper.GraphHopperTest.testFootAndCar":23,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":180,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":303,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":195,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":61,"com.graphhopper.GraphHopperTest.testPrepareOnly":144,"com.graphhopper.GraphHopperTest.testVia":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":91,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":40,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":271,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":149,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":372,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":282,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":39,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":278,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":433,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":331,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":104}}]
