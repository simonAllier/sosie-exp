[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,290,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"tindex":"937d775a-da66-11e4-a352-97dfb3a720f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[251,252,253,254,255,257,259,260,261,266,267,268],"tindex":"937e139b-da66-11e4-a352-176a662639d2","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-1},{"failures":[],"tindex":"937e139c-da66-11e4-a352-5d91dc2367b4","variableMapping":{"intLow":"code","intHigh":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":0},{"failures":[265,269],"tindex":"937e139d-da66-11e4-a352-19b54b17af4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[50,329,271,272,274,305,315],"tindex":"937e139e-da66-11e4-a352-ab18aa5c168b","variableMapping":{"importance":"shift","hash":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"937e3aaf-da66-11e4-a352-55c39c7d6cd3","variableMapping":{"finishedTo":"finishedFrom","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"937e3ab0-da66-11e4-a352-d7883d11b931","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[0,1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,48,51,55,56,59,61,62,63,64,65,66,68,70,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,92,95,96,97,98,99,330,100,101,104,106,107,108,109,110,111,113,115,118,119,120,121,122,123,124,125,126,129,130,132,133,134,135,137,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,199,350,351,352,353,354,355,356,357,200,201,204,206,207,208,209,210,211,213,215,218,219,220,221,222,223,224,225,226,229,230,232,233,234,235,237,240,241,242,243,249,250,265,266,267,268,269,270,277,278,279,280,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,319,320,321,322,323,324,325,326,327,328],"tindex":"937e3ab1-da66-11e4-a352-aba2c3ecf87e","variableMapping":{"bytePos":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"937e3ab2-da66-11e4-a352-c978a2f34d25","variableMapping":{"str":"osmValue","this":"osmValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:95","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[358],"tindex":"937e3ab3-da66-11e4-a352-c1954895cf7a","variableMapping":{"val":"osmValue","osmValue":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:153","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.Object))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[359,360,361,362],"tindex":"937e3ab4-da66-11e4-a352-99db419c1848","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"937e3ab5-da66-11e4-a352-09b91846f56c","variableMapping":{"i":"y2","lastIndex":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"937e3ab6-da66-11e4-a352-fde4aff217d4","variableMapping":{"high":"dir","len":"flags","start":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[],"tindex":"937e3ab7-da66-11e4-a352-c3c6c14094fb","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"937e61c8-da66-11e4-a352-a1c48c4867c3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"937e61c9-da66-11e4-a352-d95c208fc189","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:85","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"937e61ca-da66-11e4-a352-d7272f096ade","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[265,269,270],"tindex":"937e61cb-da66-11e4-a352-7380edf09eed","variableMapping":{"entries":"nodeIndex","length":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if ((int[].int) < 1) {\n    throw new java.lang.IllegalStateException(\"depth needs to be at least 1\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[4,8,9,10,11,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,36,37,38,39,40,41,363,45,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,53,56,57,61,82,88,93,95,96,99,101,102,106,127,133,138,140,141,155,156,157,170,171,172,173,175,184,185,186,199,201,202,206,227,233,238,240,241,245,246,247,248,251,252,253,254,255,256,257,259,260,261,262,271,272,275,276,279,280,282,283,284,285,286,287,289,290,325],"tindex":"937e61cc-da66-11e4-a352-a116d8b9d032","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"937e61cd-da66-11e4-a352-29c3d599fba0","variableMapping":{"high":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"937e61ce-da66-11e4-a352-d9e5c6a60e42","variableMapping":{"min":"start","tmpSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-2},{"failures":[388,389],"tindex":"937e61cf-da66-11e4-a352-9de1e0b75a00","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-1},{"failures":[],"tindex":"937e61d0-da66-11e4-a352-bf86d059844a","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[4,8,9,10,11,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,36,37,38,39,40,41,363,45,366,367,368,370,373,378,379,380,382,385,53,56,57,61,82,88,93,96,99,101,102,106,127,133,138,141,155,156,157,184,185,186,199,201,202,206,227,233,238,241,245,246,247,248,251,252,253,254,255,256,257,259,260,261,262,271,272,275,276,279,280,282,283,284,285,286,287,289,290,325],"tindex":"937e61d1-da66-11e4-a352-1b6e9c14b8a1","variableMapping":{"remainingSegNo":"segmentSizeInBytes","segmentSizeInBytes":"segmentSizeInBytes","capacity":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:418","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"937e61d2-da66-11e4-a352-31a390717da2","variableMapping":{"java.lang.Double.MAX_VALUE":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"937e61d3-da66-11e4-a352-c3fce434d7ba","variableMapping":{"maxLeafEntries":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"937e88e4-da66-11e4-a352-33c9a6276126","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[22,23,28,36,48,62,63,72,77,85,90,93,97,107,108,117,122,130,135,138,142,332,333,198,343,349,352,390,356,207,208,217,222,230,235,238,242,249,253,254,255,260,391,392,393,394,395,266,268,272,274,283,286,291,292,293,294,295,299,300,301,303,304,305,306,307,308,311,314,315,318,319,320,321,322,324,325,326,328],"tindex":"937e88e5-da66-11e4-a352-5b28e1660364","variableMapping":{"todoBytes":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"937e88e6-da66-11e4-a352-f3960f86f68d","variableMapping":{"elem":"a","i":"key","element":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"937e88e7-da66-11e4-a352-1df15ed5c12a","variableMapping":{"line":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"937e88e8-da66-11e4-a352-1140ea69b0aa","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"937e88e9-da66-11e4-a352-c7efd2250848","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[396,397,398,399],"tindex":"937e88ea-da66-11e4-a352-e578517d8f3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"937e88eb-da66-11e4-a352-d7793c1d9bf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[2,4,8,9,10,11,14,17,18,19,20,400,401,21,23,24,25,26,27,28,29,31,32,33,34,36,37,38,39,40,41,402,403,404,405,406,407,408,409,364,366,410,372,373,375,376,378,411,384,385,387,412,413,414,48,49,50,51,52,53,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,330,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,415,167,168,170,171,172,173,174,175,184,186,191,331,332,333,334,335,336,416,337,417,338,418,339,340,341,342,343,344,345,346,347,419,420,348,349,199,350,351,352,421,353,390,422,354,355,356,357,200,201,206,208,216,227,233,238,240,243,246,247,248,251,252,253,254,255,257,259,260,261,271,272,275,276,280,281,287,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327],"tindex":"937e88ec-da66-11e4-a352-bf8a2bf5ba4f","variableMapping":{"currentEntry":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"937e88ed-da66-11e4-a352-43e02f789e1e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"937eaffe-da66-11e4-a352-47c6224a5be7","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"937eafff-da66-11e4-a352-dbdc1b9b1116","variableMapping":{"this":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:283","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"937eb000-da66-11e4-a352-cd10a9877239","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"937eb001-da66-11e4-a352-ffe581fd6e0a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"937eb002-da66-11e4-a352-573f2f382aa6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"937eb003-da66-11e4-a352-63d78a74eb08","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[423,424,425,426,427,428,429,430,153,159,161,162,431,182,188,190,191],"tindex":"937eb004-da66-11e4-a352-853d449039d7","variableMapping":{"orientation":"minLatTmp","resultOrientation":"lat","baseOrientation":"minLatTmp","java.lang.Math.PI":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"937eb005-da66-11e4-a352-afc1abffc6ef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"937eb006-da66-11e4-a352-876371471746","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[4,8,9,10,11,12,13,14,15,16,22,23,25,28,29,31,32,33,36,48,52,56,61,62,63,65,66,69,70,72,77,79,85,87,90,92,93,97,99,101,106,107,108,110,111,114,115,117,122,124,130,132,135,137,138,142,331,332,333,335,336,417,338,198,343,345,349,199,352,353,390,356,201,206,207,208,210,211,214,215,217,222,224,230,232,235,237,238,242,249,251,252,253,254,255,256,257,259,260,261,264,391,392,393,394,432,395,433,265,266,268,269,272,274,275,276,277,278,283,286,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"tindex":"937eb007-da66-11e4-a352-5d37024c5732","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,50,434,435,264,436,391,437,438,439,440,441,442,443,392,444,445,393,446,447,394,448,432,449,395,450,451,452,453,433,454,329,267,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,396,472,359,473,474,475,476,477,478,479,480,481,482,483,484,485,397,486,360,487,271,272,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,398,504,361,505,506,507,508,509,510,511,512,513,514,515,516,517,399,518,362,519,520,274,305,315],"tindex":"937ed718-da66-11e4-a352-b5b66fcf2dba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:193","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"937ed719-da66-11e4-a352-af931a358621","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[21,22,23,24,26,27,29,33,34,36,251,256,261,262,436,438,329],"tindex":"937ed71a-da66-11e4-a352-8fcac2a00bf9","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"priorityFromRelation","edgeTo":"priorityFromRelation","edgeFrom":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[439],"tindex":"937ed71b-da66-11e4-a352-7d49d57d6857","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[7,8,9,10,11,22,23,24,25,26,27,28,29,31,32,33,36,249,250,251,252,253,254,255,256,257,259,260,261,262,329,265,266,267,268,269,270,286,317],"tindex":"937ed71c-da66-11e4-a352-19d884c60709","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-1},{"failures":[],"tindex":"937ed71d-da66-11e4-a352-bd77036a767d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:468","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"937ed71e-da66-11e4-a352-c74590d8bbf1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"937ed71f-da66-11e4-a352-cda4f217ccef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"937ed720-da66-11e4-a352-cb7d75c307b5","variableMapping":{"red":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[21,445],"tindex":"937ed721-da66-11e4-a352-890f8126427b","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-1},{"failures":[],"tindex":"937ed722-da66-11e4-a352-ff4d43237e5e","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"937ed723-da66-11e4-a352-67f626d9e7e0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[48,59,62,63,70,85,91,93,97,150,253,291,293,294,299,300,301,304,306,318,328],"tindex":"937ed724-da66-11e4-a352-632713764259","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:96","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setBaseNode(int)"},"status":-1},{"failures":[521,522,523,524,367,371,379,383,525,526,53,56,65,99,101,110,132,335,199,201,210,232,251,257,259,260,262],"tindex":"937ed725-da66-11e4-a352-b39accf894b8","variableMapping":{"compressionLevel":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[443],"tindex":"937ed726-da66-11e4-a352-01afc5878b6d","variableMapping":{"tInt":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"937ed727-da66-11e4-a352-09088c830b09","variableMapping":{"finishedTo":"integ","finishedFrom":"integ"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"937ed728-da66-11e4-a352-e5a523228e92","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[],"tindex":"937efe39-da66-11e4-a352-41dd214e629e","variableMapping":{"closestEdge":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":0},{"failures":[],"tindex":"937efe3a-da66-11e4-a352-f73a79b40aeb","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[72,117,198,217],"tindex":"937efe3b-da66-11e4-a352-b9af642adb21","variableMapping":{"java.lang.Integer.MAX_VALUE":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-1},{"failures":[436,439],"tindex":"937efe3c-da66-11e4-a352-137b0aff721e","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"sidewalks","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"937efe3d-da66-11e4-a352-033120ce2ded","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"937efe3e-da66-11e4-a352-bfca6c25c3f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"937efe3f-da66-11e4-a352-7ba5ee87cebd","variableMapping":{"obj":"osmValue","this":"osmValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:927","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object.(getClass()) != (java.lang.Object.getClass())))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":0},{"failures":[4,12,15,16,56,62,63,70,77,85,90,97,99,101,107,108,115,122,130,135,142,332,333,338,343,349,352,356,201,207,208,215,222,230,235,242,249,265,269,270,283,293,294,299,301,304,305,315,316,319,328],"tindex":"937efe40-da66-11e4-a352-a12c5c1e53a1","variableMapping":{"lastTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"937efe41-da66-11e4-a352-d9e0f098c176","variableMapping":{"graphHopperFolder":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"937efe42-da66-11e4-a352-9bdd6cd8b743","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[460,462,396,478,397,492,494,398,509,510,399],"tindex":"937efe43-da66-11e4-a352-bbc5a9df1dcd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[460,462,396,478,397,492,494,398,509,510,399],"tindex":"937efe44-da66-11e4-a352-259494361ed5","variableMapping":{"intKey":"pavementType","str":"pavementName","key":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:120","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"937efe45-da66-11e4-a352-dbb8146de992","variableMapping":{"param":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:65","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":0},{"failures":[21,22,23,24,26,27,29,33,34,36,251,256,261,262,436,438,329],"tindex":"937efe46-da66-11e4-a352-f5e0f026a925","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"937efe47-da66-11e4-a352-ddd01886a4b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[30,458,462,478,490,494],"tindex":"937efe48-da66-11e4-a352-0900d5bbaa93","variableMapping":{"pointIndex":"code","index":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[439],"tindex":"937efe49-da66-11e4-a352-c16e9a40071d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"937efe4a-da66-11e4-a352-09a937e4b8c2","variableMapping":{"newName":"key","name":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[443],"tindex":"937efe4b-da66-11e4-a352-ff77ba106a20","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[508,510,512,514,515,399,518,519,520],"tindex":"937efe4c-da66-11e4-a352-755d778e34fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[443],"tindex":"937f255d-da66-11e4-a352-699036bdee71","variableMapping":{"orientation":"speed","resultOrientation":"speed","baseOrientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"937f255e-da66-11e4-a352-2ffc94d5918d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"937f255f-da66-11e4-a352-93846c3f2325","variableMapping":{"tmpNo":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-1},{"failures":[],"tindex":"937f2560-da66-11e4-a352-2fd404e126f2","variableMapping":{"weightLong":"turnRestrictionBit","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"937f2561-da66-11e4-a352-874c38ef1a55","variableMapping":{"counts":"length","counter":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[],"tindex":"937f2562-da66-11e4-a352-f1f07a90bd3e","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"937f2563-da66-11e4-a352-d31a58f6f3e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"937f2564-da66-11e4-a352-113c8d9f5f16","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"937f2565-da66-11e4-a352-c713bf51d047","variableMapping":{"java.lang.Integer.MAX_VALUE":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"937f2566-da66-11e4-a352-5fb107003b82","variableMapping":{"dist":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[272],"tindex":"937f2567-da66-11e4-a352-75b714737c26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"937f2568-da66-11e4-a352-7fc59e6f391b","variableMapping":{"highwayValue":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":0},{"failures":[265,269,270],"tindex":"937f2569-da66-11e4-a352-0bbfdbcda4b6","variableMapping":{"node":"start","onStack":"onStack"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"937f256a-da66-11e4-a352-21b686bb6f09","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"937f256b-da66-11e4-a352-7186bc340a8f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"937f256c-da66-11e4-a352-95ea23d97b43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[527],"tindex":"937f256d-da66-11e4-a352-6df26448bddc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":87,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":323,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":53,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":332,"com.graphhopper.reader.OSMReaderTest.testFerry":21,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":12,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":461,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":156,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":252,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":506,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":116,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":364,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":401,"com.graphhopper.coll.CompressedArrayTest.testCompress":430,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":485,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":241,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":419,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":217,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":152,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":365,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":382,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":301,"com.graphhopper.GraphHopperTest.testPrepare":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":422,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":291,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":459,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":315,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":397,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":1,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":478,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":457,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":307,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":185,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":462,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":99,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":427,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":61,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":389,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":304,"com.graphhopper.GraphHopperTest.testLoadOSM":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":186,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":472,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":102,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":368,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":236,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":201,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":354,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":286,"com.graphhopper.storage.RAMDataAccessTest.testHeader":383,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":17,"com.graphhopper.storage.MMapDataAccessTest.testHeader":522,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":137,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":363,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":86,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":524,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":213,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":330,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":492,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":106,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":520,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":518,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":160,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":158,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":494,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":310,"com.graphhopper.coll.OSMIDMapTest.testGetLong":40,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":309,"com.graphhopper.coll.IntIntBinHeapTest.testSize":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":120,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":126,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":78,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":56,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":80,"com.graphhopper.coll.CompressedArrayTest.testCompress2":429,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":508,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":117,"com.graphhopper.GraphHopperAPITest.testLoad":249,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":60,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":434,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":218,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":208,"com.graphhopper.storage.LevelGraphStorageTest.testClone":65,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":107,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":270,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":495,"com.graphhopper.util.GHUtilityTest.testCopy":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":516,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":360,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":386,"com.graphhopper.routing.PathTest.testFindInstruction":276,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":482,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":108,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":14,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":438,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":491,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":237,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":222,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":411,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":135,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":502,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":433,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":67,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":416,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":405,"com.graphhopper.util.InstructionListTest.testWayList2":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":505,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":193,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":460,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":458,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":271,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":69,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":463,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":369,"com.graphhopper.storage.RAMDirectoryTest.testSynched":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":118,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":170,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":311,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":325,"com.graphhopper.coll.OSMIDMapTest.testGet":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":115,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":523,"com.graphhopper.routing.PathBidirRefTest.testExtract":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":439,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":39,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":164,"com.graphhopper.storage.RAMDataAccessTest.testCopy":379,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":350,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":476,"com.graphhopper.storage.RAMDataAccessTest.testSegments":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.util.GHUtilityTest.testSort2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":320,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":467,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":359,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":353,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":72,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":76,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":97,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":73,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":489,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":525,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":79,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":34,"com.graphhopper.storage.StorablePropertiesTest.testStore":45,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":378,"com.graphhopper.storage.GraphHopperStorageTest.testClone":210,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":394,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":43,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":446,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":362,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":337,"com.graphhopper.routing.PathTest.testTime":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":515,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":95,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":66,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":450,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":195,"com.graphhopper.reader.OSMReaderTest.testRelation":30,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":347,"com.graphhopper.util.GHUtilityTest.testSortDirected":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":504,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":374,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":282,"com.graphhopper.GraphHopperTest.testFootOnly":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":477,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":171,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":445,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":159,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":404,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":488,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":343,"com.graphhopper.search.NameIndexTest.testCreate":248,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":384,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":279,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":526,"com.graphhopper.routing.QueryGraphTest.testOneWay":288,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":481,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":184,"com.graphhopper.reader.OSMReaderTest.testWithBounds":33,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":387,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":361,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":139,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":266,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":420,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":440,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":452,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":62,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":503,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":487,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":129,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":122,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":206,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":306,"com.graphhopper.util.InstructionListTest.testWayList":9,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":239,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":464,"com.graphhopper.GraphHopperAPITest.testDisconnected179":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":417,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":500,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":471,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":255,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":172,"com.graphhopper.routing.util.EncodedValueTest.testSwap":527,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":302,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":230,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":456,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":300,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":448,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":512,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":396,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":104,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":415,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":474,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":200,"com.graphhopper.routing.PathTest.testWayList":275,"com.graphhopper.storage.MMapDataAccessTest.testCopy":521,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":355,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":513,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":339,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":444,"com.graphhopper.coll.OSMIDMapTest.testGet2":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":328,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":371,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":90,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":470,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":223,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":113,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":211,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":77,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":161,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":162,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":380,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":497,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":509,"com.graphhopper.util.GHUtilityTest.testSort":5,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":469,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":480,"com.graphhopper.search.NameIndexTest.testPut":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":142,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":209,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":154,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":175,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":178,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":493,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":285,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":100,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":260,"com.graphhopper.storage.MMapDirectoryTest.testSynched":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":511,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":19,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":326,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":265,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":199,"com.graphhopper.routing.PathTest.testFound":273,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":262,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":329,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":92,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":410,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":468,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":119,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":247,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":407,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":198,"com.graphhopper.util.InstructionListTest.testEmptyList":7,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":215,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":314,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":517,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":318,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":442,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":486,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":321,"com.graphhopper.reader.PrinctonReaderTest.testRead":15,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":238,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":157,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":114,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":418,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":331,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":124,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":484,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":498,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":514,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":490,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":20,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":349,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":190,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":426,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":475,"com.graphhopper.reader.OSMReaderTest.testOneWay":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":191,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":219,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":234,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":136,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":483,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":373,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":496,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":296,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":447,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":294,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":372,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":264,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":341,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":281,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":35,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":203,"com.graphhopper.routing.PathBidirRefTest.testExtract2":278,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":413,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":305,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":194,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":399,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":245,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":519,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":436,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":501,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":187,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":235,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":432,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":227,"com.graphhopper.GraphHopperTest.testFootAndCar":256,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":510,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":167,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":335,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":451,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":449,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":316,"com.graphhopper.storage.StorablePropertiesTest.testLoad":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":110,"com.graphhopper.GraphHopperTest.testPrepareOnly":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":324,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":148,"com.graphhopper.GraphHopperTest.testVia":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":333,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":31,"com.graphhopper.reader.OSMElementTest.testHasTag":358,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":52,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":11,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":391,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":344,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":455,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":91,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":89,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":101}}]
