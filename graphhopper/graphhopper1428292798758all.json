[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"65b5906c-dc11-11e4-9ae2-fbd085b5ef3e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[67],"tindex":"65bc201d-dc11-11e4-9ae2-6dfa14b89649","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:85","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[68,69,70,2,71,72,27,48,73,74,75],"tindex":"65bc201e-dc11-11e4-9ae2-6bb5b6b4bab1","variableMapping":{"numTiles":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"65bc201f-dc11-11e4-9ae2-63c9a94d7a5f","variableMapping":{"fromNode":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[76,77,78],"tindex":"65bc2020-dc11-11e4-9ae2-9f7c5817a166","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,69,97,98,99,100,101,102,103,104,70,105,106,0,107,2,108,109,3,71,110,72,111,112,113,114,115,29,30,116,117,47,66,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"tindex":"65bc2021-dc11-11e4-9ae2-556ff0ea9cd7","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"65bc2022-dc11-11e4-9ae2-57faf6cf3ff2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"65bc2023-dc11-11e4-9ae2-d12c4999ae8a","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[87],"tindex":"65bc2024-dc11-11e4-9ae2-0d243e48e68e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"65bc2025-dc11-11e4-9ae2-d12751f19aba","variableMapping":{"size":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"65bc4736-dc11-11e4-9ae2-c32e48e70ca5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[170,92,69,171,99,100,172,101,102,103,104,70,105,106,0,107,173,1,2,108,109,3,71,110,72,111,112,20,21,24,27],"tindex":"65bc4737-dc11-11e4-9ae2-a31edc9ea1dd","variableMapping":{"red":"tmpEdge","green":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[],"tindex":"65bc4738-dc11-11e4-9ae2-9f8ab20fe266","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"65bc4739-dc11-11e4-9ae2-35438ea394f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"65bc473a-dc11-11e4-9ae2-fd2591c2c22a","variableMapping":{"algo":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"65bc473b-dc11-11e4-9ae2-cfc602440f01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"65bc473c-dc11-11e4-9ae2-3171ae8408d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"65bc473d-dc11-11e4-9ae2-ad66a1c129eb","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"65bc473e-dc11-11e4-9ae2-6b82500d7e4e","variableMapping":{"factor":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[],"tindex":"65bc473f-dc11-11e4-9ae2-7f5aa774e06f","variableMapping":{"r":"fwdSlower","x":"fwdSlower","absY":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"65bc4740-dc11-11e4-9ae2-e7dd2b5b2f4d","variableMapping":{"distance":"java.lang.Double.MAX_VALUE","dist":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"65bc4741-dc11-11e4-9ae2-7bb66966d014","variableMapping":{"origEdgeId":"segmentSizeIntsPower","mainEdges":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"65bc4742-dc11-11e4-9ae2-d50d9bb0cf1e","variableMapping":{"edgeId":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"65bc4743-dc11-11e4-9ae2-a18b32006a5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"65bd31a4-dc11-11e4-9ae2-f5f0fb27ced4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"65bd31a5-dc11-11e4-9ae2-4b9255a55484","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"65bd58b6-dc11-11e4-9ae2-cb441768356b","variableMapping":{"tmpClosestNode":"maxTurnCosts","adjNode":"maxTurnCosts","adjDist":"costs","currNormedDist":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:892","type":"CtIfImpl","sourcecode":"if (double < (double))\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"65bd58b7-dc11-11e4-9ae2-8907ae270275","variableMapping":{"intVal":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"65bd58b8-dc11-11e4-9ae2-81aae2c1e104","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"65bd58b9-dc11-11e4-9ae2-a3d697ea8260","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:39","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[],"tindex":"65bd58ba-dc11-11e4-9ae2-35d8dabd79ad","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"65bd58bb-dc11-11e4-9ae2-831295075a82","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[174,175],"tindex":"65bd58bc-dc11-11e4-9ae2-53332baa466b","variableMapping":{"freeIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[],"tindex":"65bd58bd-dc11-11e4-9ae2-a1b4267cf2d8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"65bd58be-dc11-11e4-9ae2-cf3edff8eba7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"65bd58bf-dc11-11e4-9ae2-8500076413a8","variableMapping":{"iter":"edgeState","counter":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-2},{"failures":[],"tindex":"65bd58c0-dc11-11e4-9ae2-a12e8ad6fcc9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"65bd58c1-dc11-11e4-9ae2-6384f5a2b03d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[176],"tindex":"65bd58c2-dc11-11e4-9ae2-3df054f6f1b2","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[177,178,179,180],"tindex":"65bda6e3-dc11-11e4-9ae2-09a35d84dc65","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"65bda6e4-dc11-11e4-9ae2-5d3ba9f5b1d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"65bda6e5-dc11-11e4-9ae2-61e9649b51b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"65bdcdf6-dc11-11e4-9ae2-cdb65b271752","variableMapping":{"high":"hash","len":"hash","start":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"65c19e87-dc11-11e4-9ae2-15d0ef397a8b","variableMapping":{"hasOther":"uTurnSupport","hasRel":"uTurnSupport"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[18,28],"tindex":"65c1c598-dc11-11e4-9ae2-31a1c052280f","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"65c1c599-dc11-11e4-9ae2-178b1e1d9206","variableMapping":{"bits":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-2},{"failures":[88],"tindex":"65c1c59a-dc11-11e4-9ae2-435a4a71d7f6","variableMapping":{"allBits":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[79,80,81,82,181,182,183,110,184,185,186,113,187,188,189,190,191,192,193,194,4,5,6,7,8,9,10,11,12,13,14,15,16,17,195,196,197,18,19,20,21,22,23,24,25,26,27,28,198,199,200,201,202,203,204,205,206,207,208,209,210,211,33,34,35,52,53,54,212,213,118,119,214,215,216,217,218,219,132,220,221,222,223,224,225,153,226,227,228,229,230,231,232,233,234,235,236,237,157,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"tindex":"65c1c59b-dc11-11e4-9ae2-8fce92fbb351","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-1},{"failures":[255,256,257,258,259,260,261,262,263,264,265],"tindex":"65c1c59c-dc11-11e4-9ae2-c94825bc845a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,202,203,204,205,206,212,118,226,228,229,230,231,233,234,235,236,244,246,247,248,249,251,252,253,254],"tindex":"65c1c59d-dc11-11e4-9ae2-7f3c6290cd97","variableMapping":{"size":"segmentSizePower","i":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[255,266,258,267,268,264,269],"tindex":"65c1c59e-dc11-11e4-9ae2-8b55f2007447","variableMapping":{"latSimilar":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"65c1c59f-dc11-11e4-9ae2-cb92f0f7ecdf","variableMapping":{"width":"x1","i":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[270,271,272,236,273,254],"tindex":"65c1c5a0-dc11-11e4-9ae2-43dbf2530586","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[255,256,257,258,259,260,261,262,263,264,265],"tindex":"65c1c5a1-dc11-11e4-9ae2-7936cd683619","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[274,255,256,266,257,275,258,259,260,261,262,267,276,277,268,263,278,264,265,4,5,6,7,9,10,12,15,16,17],"tindex":"65c1c5a2-dc11-11e4-9ae2-dde3d5aed86f","variableMapping":{"versionHint":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,213,118,119,214,132,220,237,157,238],"tindex":"65c1c5a3-dc11-11e4-9ae2-174be5782819","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"65c1ecb4-dc11-11e4-9ae2-b9abe3ee92f8","variableMapping":{"bytesForFlags":"bytesForFlags","acceptStr":"flagEncodersStr","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1400","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[11],"tindex":"65c1ecb5-dc11-11e4-9ae2-b7f8f1cc0c3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[279,4],"tindex":"65c1ecb6-dc11-11e4-9ae2-edad5ebcb473","variableMapping":{"eleDelta":"shortTripsSpeed","decEleSum":"shortTripsSpeed","fullDist2D":"shortTripsSpeed","decDist2DSum":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[280,281,282],"tindex":"65c1ecb7-dc11-11e4-9ae2-1197c8507e8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"65c1ecb8-dc11-11e4-9ae2-c55c915bd5b7","variableMapping":{"tmpNode":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"65c1ecb9-dc11-11e4-9ae2-bfdc95e0a3fe","variableMapping":{"high":"flags","guess":"flags","low":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":0},{"failures":[],"tindex":"65c1ecba-dc11-11e4-9ae2-9744a0243bf4","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[283,4,16,17],"tindex":"65c1ecbb-dc11-11e4-9ae2-953a5ef8c029","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[284,285,286,287,288,289,290,291,292,293],"tindex":"65c1ecbc-dc11-11e4-9ae2-113edda90353","variableMapping":{"turnRestrictionBit":"initialBits","shift":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[92,94,95,96,69,97,98,99,70,71,72,294,157,158,295,296,297,163,298,165,299,300],"tindex":"65c1ecbd-dc11-11e4-9ae2-9fe18a4d13ef","variableMapping":{"lazyUpdates":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[301,302,79,303,304,305,306,307,308,80,81,82,181,309,83,84,177,274,310,255,311,312,313,314,315,316,317,256,318,319,320,321,76,174,266,322,257,275,258,280,178,323,324,325,326,327,328,329,259,330,331,332,333,85,86,87,88,89,334,179,335,260,261,336,337,338,339,340,341,342,262,343,344,345,346,347,348,277,182,183,77,175,268,349,263,278,264,281,180,350,351,352,353,354,355,356,265,357,358,359,360,361,362,363,364,365,366,367,368,176,369,370,371,372,373,374,375,376,279,377,378,379,380,78,381,282,382,383,384,90,91,385,170,68,386,92,93,94,95,96,387,69,171,97,388,98,99,100,172,101,102,103,104,70,105,106,0,107,389,173,1,2,108,109,3,390,71,110,72,111,112,184,185,391,186,113,187,188,189,190,392,191,192,393,394,395,396,193,194,397,4,5,6,7,8,9,10,11,12,269,13,14,15,16,17,114,115,18,19,20,21,22,23,24,398,25,26,27,28,399,29,30,400,401,402,403,404,405,406,116,207,208,209,210,407,211,408,409,410,411,412,413,117,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,73,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,118,414,415,119,214,416,417,418,215,120,121,419,122,123,420,421,422,124,423,270,424,425,426,427,125,428,126,429,430,216,431,432,127,433,128,217,434,129,435,130,218,436,437,219,131,438,439,132,220,440,441,442,221,133,134,443,135,136,444,445,446,137,447,271,448,449,450,451,138,452,139,453,454,222,455,456,140,457,141,223,458,142,459,143,224,460,461,225,144,462,463,145,146,464,147,148,465,466,467,149,468,272,469,470,471,472,150,473,151,474,475,476,477,478,152,479,153,480,481,154,482,155,483,484,485,486,156,487,488,74,489,490,491,237,75,294,157,238,492,493,494,239,158,159,495,160,161,496,497,498,162,499,273,295,296,297,500,163,501,164,502,298,240,503,504,165,505,166,241,506,167,299,168,242,507,508,243,169,300],"tindex":"65c213ce-dc11-11e4-9ae2-7b14991e1c3e","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"defaultD","speed":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[],"tindex":"65c213cf-dc11-11e4-9ae2-39ac3c33635f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[177,274,310,255,311,312,313,314,315,316,317,256,318,319,320],"tindex":"65c213d0-dc11-11e4-9ae2-5f1e664ea35a","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"65c213d1-dc11-11e4-9ae2-cbebdd5f9344","variableMapping":{"type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[3,6,7,8,20,21,22,23,24,26,27,29,30,284,285,31,32,34,40,50,51,53,59,286,287,288,289,290,291,292,293],"tindex":"65c213d2-dc11-11e4-9ae2-cd2caad4c715","variableMapping":{"lastKey":"bits","key":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-1},{"failures":[236,254],"tindex":"65c213d3-dc11-11e4-9ae2-fd14f9e66166","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"65c213d4-dc11-11e4-9ae2-036883073f86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"status":-2},{"failures":[312,319,321,275,178,323,331,179,336,344,278,180,350,358,363,366,176,369,374,376,279,378,380,4,5,6,7,8,9,10,11,12,13,14,15,16,509,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"65c213d5-dc11-11e4-9ae2-33d7b40bc434","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"65c213d6-dc11-11e4-9ae2-0b6006c975a7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"65c213d7-dc11-11e4-9ae2-6b4ef2535441","variableMapping":{"freeIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-2},{"failures":[76,77,78],"tindex":"65c213d8-dc11-11e4-9ae2-9fdd52d6e9e3","variableMapping":{"maxTurnCosts":"maxTurnCosts","costs":"costs","turnRestrictionBit":"turnRestrictionBit","restricted":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"65c213d9-dc11-11e4-9ae2-53d98aad829d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[92,94,96,69,98,0,510],"tindex":"65c213da-dc11-11e4-9ae2-a10031289302","variableMapping":{"pointIndex":"toSize","index":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-1},{"failures":[],"tindex":"65c213db-dc11-11e4-9ae2-cf51361af335","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"65c213dc-dc11-11e4-9ae2-799902d4b31d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"65c213dd-dc11-11e4-9ae2-61a3f62ba9ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:59","type":"CtLocalVariableImpl","sourcecode":"final java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> = new java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>()"},"status":-2},{"failures":[],"tindex":"65c213de-dc11-11e4-9ae2-1b9ab8fa9cf7","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[87,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,27,28],"tindex":"65c213df-dc11-11e4-9ae2-6344838dea4c","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[183],"tindex":"65c23af0-dc11-11e4-9ae2-592ddede2060","variableMapping":{"angle":"fullDist2D","com.graphhopper.util.AngleCalc.PI3_4":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"65c23af1-dc11-11e4-9ae2-2139f3c11b4e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":-2},{"failures":[68,92,93,94,95,96,387,69,97,388,98,99,172,101,102,103,104,70,105,106,0,107,389,173,1,2,108,109,3,390,71,110,72,111,112,19,20,21,24,25,510],"tindex":"65c23af2-dc11-11e4-9ae2-1f813de424ca","variableMapping":{"bytesForFlags":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"65c23af3-dc11-11e4-9ae2-15ff358f9876","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[310,255,311,313,315,256,318,174,266,322,258,324,326,327,259,330,332,335,261,337,339,340,262,343,345,267,276,175,268,349,264,351,353,354,265,357,359,269],"tindex":"65c23af4-dc11-11e4-9ae2-67e8eb12da4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"65c23af5-dc11-11e4-9ae2-33a3266b2709","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"65c23af6-dc11-11e4-9ae2-01ed73d5e050","variableMapping":{"lazyUpdates":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"65c23af7-dc11-11e4-9ae2-81427ab1f1a4","variableMapping":{"keyIndex":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-2},{"failures":[],"tindex":"65c23af8-dc11-11e4-9ae2-2d626fe0a6d0","variableMapping":{"additionalEdgeFilter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"65c23af9-dc11-11e4-9ae2-1f781913a8cf","variableMapping":{"delta_lat":"minLat","r_lat":"minLat","a_lat":"minLat","delta_lon":"minLat","r_lon":"minLat","a_lon":"minLat","norm":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"65c23afa-dc11-11e4-9ae2-5f00e137592b","variableMapping":{"tmpNo":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"65c23afb-dc11-11e4-9ae2-df1a47576344","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"65c23afc-dc11-11e4-9ae2-cd443167d4e4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[511,512,513],"tindex":"65c2891d-dc11-11e4-9ae2-97644d496dd9","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[375],"tindex":"65c2891e-dc11-11e4-9ae2-13efe5bb9173","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":166,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":390,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":237,"com.graphhopper.GraphHopperAPITest.testNoLoad":400,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":145,"com.graphhopper.reader.OSMReaderTest.testFerry":4,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":83,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":53,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":19,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":423,"com.graphhopper.coll.CompressedArrayTest.testCompress":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":317,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":225,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":476,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":271,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":73,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":226,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":97,"com.graphhopper.GraphHopperTest.testPrepare":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":484,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":170,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":513,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":322,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":256,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":307,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":493,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":89,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":106,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":447,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":34,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":258,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":118,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":239,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":512,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":99,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":35,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":348,"com.graphhopper.reader.OSMReaderTest.testSort":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":330,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":214,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":229,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":459,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":132,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":485,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":189,"com.graphhopper.storage.RAMDataAccessTest.testHeader":250,"com.graphhopper.routing.DijkstraTest.initializationError":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":130,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":212,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":505,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":445,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":414,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":123,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":215,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":499,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":346,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":57,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":451,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":2,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":49,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":55,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":103,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":159,"com.graphhopper.coll.OSMIDMapTest.testGetLong":205,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":430,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":501,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":157,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":502,"com.graphhopper.coll.CompressedArrayTest.testCompress2":284,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":454,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":335,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":270,"com.graphhopper.GraphHopperAPITest.testLoad":29,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":494,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":363,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":448,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":134,"com.graphhopper.storage.LevelGraphStorageTest.testClone":160,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":283,"com.graphhopper.reader.OSMReaderTest.testBarriers":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":281,"com.graphhopper.util.GHUtilityTest.testCopy":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":341,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":319,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":412,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":253,"com.graphhopper.routing.PathTest.testFindInstruction":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":314,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":121,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":176,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":309,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":349,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":409,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":143,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":129,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":96,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":355,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":385,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":496,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":465,"com.graphhopper.util.InstructionListTest.testWayList2":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":42,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":266,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":182,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":220,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":498,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":280,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":424,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":70,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":133,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":9,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":228,"com.graphhopper.routing.AStarTest.initializationError":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":110,"com.graphhopper.coll.OSMIDMapTest.testGet":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":124,"com.graphhopper.routing.PathBidirRefTest.testExtract":90,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":369,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":204,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":61,"com.graphhopper.storage.RAMDataAccessTest.testCopy":246,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":438,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":480,"com.graphhopper.storage.RAMDataAccessTest.testSegments":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":47,"com.graphhopper.util.GHUtilityTest.testSort2":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":108,"com.graphhopper.reader.OSMReaderTest.testMain":6,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":331,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":416,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":273,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":500,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":169,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":113,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":175,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":164,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":16,"com.graphhopper.storage.StorablePropertiesTest.testStore":213,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":245,"com.graphhopper.storage.GraphHopperStorageTest.testClone":135,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":482,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":450,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":488,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":466,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":490,"com.graphhopper.routing.PathTest.testTime":396,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":340,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":508,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":383,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":44,"com.graphhopper.reader.OSMReaderTest.testRelation":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":475,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":504,"com.graphhopper.util.GHUtilityTest.testSortDirected":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":357,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":235,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":186,"com.graphhopper.GraphHopperTest.testFootOnly":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":310,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":56,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":150,"com.graphhopper.search.NameIndexTest.testCreate":201,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":251,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":184,"com.graphhopper.routing.QueryGraphTest.testOneWay":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":33,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":286,"com.graphhopper.reader.OSMReaderTest.testWithBounds":15,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":254,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":358,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":86,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":470,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":477,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":267,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":158,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":492,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":356,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":320,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":432,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":125,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":221,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":172,"com.graphhopper.util.InstructionListTest.testWayList":81,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":460,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":178,"com.graphhopper.GraphHopperAPITest.testDisconnected179":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":467,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":433,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":464,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":353,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":329,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":22,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":444,"com.graphhopper.routing.util.EncodedValueTest.testSwap":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":76,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":140,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":173,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":171,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":78,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":242,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":259,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":417,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":111,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":442,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":333,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":439,"com.graphhopper.routing.PathTest.testWayList":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":486,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":469,"com.graphhopper.coll.OSMIDMapTest.testGet2":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":112,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":232,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":167,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":328,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":452,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":364,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":58,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":163,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":59,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":247,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":350,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":260,"com.graphhopper.util.GHUtilityTest.testSort":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":479,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":293,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":312,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":327,"com.graphhopper.search.NameIndexTest.testPut":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":418,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":411,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":211,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":278,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":183,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":401,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":336,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":196,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":362,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":428,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":85,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":153,"com.graphhopper.routing.PathTest.testFound":395,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":28,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":277,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":168,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":371,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":326,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":425,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":510,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":200,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":272,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":137,"com.graphhopper.util.InstructionListTest.testEmptyList":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":382,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":318,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":372,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":453,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":109,"com.graphhopper.reader.PrinctonReaderTest.testRead":114,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":54,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":422,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":206,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":463,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":351,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":268,"com.graphhopper.reader.OSMReaderTest.testFoot":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":152,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":192,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":39,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":243,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":292,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":177,"com.graphhopper.reader.OSMReaderTest.testOneWay":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":40,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":449,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":458,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":435,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":315,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":234,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":151,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":446,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":93,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":233,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":471,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":391,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":440,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":509,"com.graphhopper.routing.PathBidirRefTest.testExtract2":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":43,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":262,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":198,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":141,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":405,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":345,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":11,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":487,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":406,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":36,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":142,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":304,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":497,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":381,"com.graphhopper.GraphHopperTest.testFootAndCar":23,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":222,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":65,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":147,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":122,"com.graphhopper.GraphHopperTest.testPrepareOnly":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":71,"com.graphhopper.GraphHopperTest.testVia":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":146,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":13,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":491,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":181,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":457,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":367,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":12,"com.graphhopper.routing.AStarBidirectionTest.initializationError":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":473,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":321,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":299,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":506,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":119}}]
