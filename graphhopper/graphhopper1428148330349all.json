[{"failures":[],"tindex":"07dd6347-dac1-11e4-b377-5593c9a78ff1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:32","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"07de4da8-dac1-11e4-b377-736ba2221ff5","variableMapping":{"size":"com.graphhopper.routing.util.PriorityWeighting.KEY","capacity":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"07de4da9-dac1-11e4-b377-5bb77256eafa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"07de4daa-dac1-11e4-b377-fdd2a7aef1e2","variableMapping":{"maxMCSpeed":"longTripsSpeed","speed":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"07de4dab-dac1-11e4-b377-9338de6aab80","variableMapping":{"i":"paveType","child":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19],"tindex":"07de74bc-dac1-11e4-b377-27a01e9aabc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"07de74bd-dac1-11e4-b377-f9a66166f7bd","variableMapping":{"factor":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[20],"tindex":"07de74be-dac1-11e4-b377-bf3c47d3cab7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"07de74bf-dac1-11e4-b377-31e3ab6147b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"07de74c0-dac1-11e4-b377-57739f8fe57c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"07de74c1-dac1-11e4-b377-99b7bcd0a66e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"07de74c2-dac1-11e4-b377-ad0a959eb0c0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[21,22,23,24,25],"tindex":"07de74c3-dac1-11e4-b377-1bba0361d167","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"07de74c4-dac1-11e4-b377-3b4632168120","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"07de74c5-dac1-11e4-b377-adceb672466e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[26],"tindex":"07de74c6-dac1-11e4-b377-9593fa3d6835","variableMapping":{"turnRestrictionBit":"flags","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"07de74c7-dac1-11e4-b377-6d8a92fc86a1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"07de74c8-dac1-11e4-b377-4b586ad44c84","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"07de74c9-dac1-11e4-b377-6157cfaf2ef5","variableMapping":{"indi":"kmInteger","dir":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:272","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalStateException((\"Indication not found \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":0},{"failures":[27,1,28,4,29,6,30,9],"tindex":"07de9bda-dac1-11e4-b377-d390742439a1","variableMapping":{"shortTripsSpeed":"speed","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:488","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[0,2,3,4,5,6,7,8,10],"tindex":"07de9bdb-dac1-11e4-b377-9373bfc1c708","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-1},{"failures":[],"tindex":"07de9bdc-dac1-11e4-b377-7b58b1a0ef73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[31,32,33,34,35,36,37],"tindex":"07de9bdd-dac1-11e4-b377-71449efb8f77","variableMapping":{"resultOrientation":"speed","orientation":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"07de9bde-dac1-11e4-b377-ff1fdcdf8560","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"07de9bdf-dac1-11e4-b377-25ea24658626","variableMapping":{"freeIndex":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[38,39,40,12,41,42,43,44,45,46,47,48,16,49,50,21,51,52,53,19,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"07de9be0-dac1-11e4-b377-69e5c74a1646","variableMapping":{"high":"flags","len":"flags","start":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"07de9be1-dac1-11e4-b377-ff58f0988ac4","variableMapping":{"com.graphhopper.util.NumHelper.DEFAULT_PRECISION":"lat","this":"this","d1":"ele","d2":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"07de9be2-dac1-11e4-b377-2b6b3dc80447","variableMapping":{"need":"noOfStates","i":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"07de9be3-dac1-11e4-b377-8d3eaff8d19b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"07de9be4-dac1-11e4-b377-216706f5f36e","variableMapping":{"i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"07de9be5-dac1-11e4-b377-6f68253df8be","variableMapping":{"val":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[38,130,39,41,42,131,61,62,63,132,133,64,134,135,136,65,137,66,67,138,68,139,69,140,70,71,72,141,73,142,74,75,76,77,78,143,79,80,144,81,145],"tindex":"07de9be6-dac1-11e4-b377-0df2289c0cde","variableMapping":{"currentEntry":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"07dec2f7-dac1-11e4-b377-adcff68186b2","variableMapping":{"midLat":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":0},{"failures":[],"tindex":"07dec2f8-dac1-11e4-b377-c1cd36d26d92","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[11,39,40,41,43,46,47,146,147,148,149,15,49,150,50,151,17,21,51,52,152,53,18,19,153,60,154,155,156,71,82,83,157,158,91,159,160,161,162,97,163,102,164,105,165,107,108,109,166,167,117,119,120,168,169,128,170],"tindex":"07dec2f9-dac1-11e4-b377-79959c7339b9","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[171],"tindex":"07dec2fa-dac1-11e4-b377-c17700336433","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[15,172],"tindex":"07dec2fb-dac1-11e4-b377-c3fd4f8b6e9b","variableMapping":{"tmp":"minutes","initializedCounter":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[130,39,40,12,41,43,13,44,173,174,61,62,63,132,133,64,134,135,136,65,137,66,67,138,68,139,69,140,70,71,72,141,73,175,74,79,176,145],"tindex":"07dec2fc-dac1-11e4-b377-0d7e35c07808","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.createAndInitPath()"},"status":-1},{"failures":[55,59],"tindex":"07dec2fd-dac1-11e4-b377-1d868c0cb058","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"07dec2fe-dac1-11e4-b377-b59a2dbbddf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:329","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[],"tindex":"07dec2ff-dac1-11e4-b377-295dc9da4117","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"07dec300-dac1-11e4-b377-37b8da1071ef","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"07dec301-dac1-11e4-b377-8fe338c6cd9f","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":0},{"failures":[70,72,142,79,81,177],"tindex":"07dec302-dac1-11e4-b377-11e50dd8bb83","variableMapping":{"guess":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"07dec303-dac1-11e4-b377-6b3ec3326470","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[],"tindex":"07dec304-dac1-11e4-b377-57fe41cee946","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"07deea15-dac1-11e4-b377-35c9fbf08a53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-2},{"failures":[],"tindex":"07deea16-dac1-11e4-b377-a9f6c54d47a7","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":0},{"failures":[],"tindex":"07deea17-dac1-11e4-b377-631f7c445004","variableMapping":{"additionalEdgeFilter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"07deea18-dac1-11e4-b377-ab56c3a9f9e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:405","type":"CtLocalVariableImpl","sourcecode":"gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = new gnu.trove.map.hash.TLongObjectHashMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>()"},"status":-2},{"failures":[130,39,40,12,41,43,13,178,15,16,49,50,21,51,52,152,53,18,19,179,180,28],"tindex":"07deea19-dac1-11e4-b377-9534dc9b73fb","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[181,182,179,180,183,184,185,186],"tindex":"07deea1a-dac1-11e4-b377-d13fd6c37eee","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"07deea1b-dac1-11e4-b377-79a6a015e1d7","variableMapping":{"ret":"element","retBucket":"element","i":"element","bucketSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[21,22,23,24,25],"tindex":"07deea1c-dac1-11e4-b377-4758b940a7dd","variableMapping":{"resultOrientation":"costs","orientation":"costs","java.lang.Math.PI":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"07deea1d-dac1-11e4-b377-3b698d890bda","variableMapping":{"dist":"minLon","com.graphhopper.util.DistanceCalcEarth.R":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"07deea1e-dac1-11e4-b377-3bab79c60ded","variableMapping":{"cap":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":0},{"failures":[130,61,63,66,139,70,71,72,73,74,79,81],"tindex":"07deea1f-dac1-11e4-b377-ddc4106864e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"07deea20-dac1-11e4-b377-1f7a3c860a28","variableMapping":{"high":"weightLong","guess":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG","low":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"07deea21-dac1-11e4-b377-4d5d6a47949b","variableMapping":{"firstLon":"shortTripsSpeed","lastLon":"durationInHours","firstLat":"shortTripsSpeed","lastLat":"shortTripsSpeed","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:365","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[],"tindex":"07deea22-dac1-11e4-b377-f982021679b0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"07deea23-dac1-11e4-b377-81b935200131","variableMapping":{"orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":0},{"failures":[187],"tindex":"07deea24-dac1-11e4-b377-9d3653c86dbb","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[188,0,1,2,187,3,5,7,189,8,9,10],"tindex":"07df1135-dac1-11e4-b377-a9a09846d5c7","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","edgeTo":"speed","edgeFrom":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"07df1136-dac1-11e4-b377-7975e9b8ee8b","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[11,38,130,39,40,12,41,42,43,13,14,44,173,190,191,192,45,46,47,178,48,193,194,149,195,196,197,198,199,200,201,15,16,49,150,50,151,17,21,51,52,152,53,18,19,202,26,203,55,56,57,58,59,204,205,206,60,207,208,208,154,154,209,209,210,210,211,211,212,212,213,213,214,214,155,155,215,215,216,216,156,156,217,218,174,61,62,63,132,133,64,134,135,136,65,137,66,67,138,68,139,69,140,70,71,72,141,73,175,142,74,75,76,77,78,143,79,176,80,144,81,145,219,82,220,221,222,83,223,224,225,226,84,227,228,229,230,231,85,232,233,234,235,86,236,87,237,238,157,239,240,241,242,88,158,243,89,244,90,91,245,246,247,92,248,249,250,251,252,253,159,254,160,255,256,257,258,259,260,261,262,263,264,93,265,266,267,268,269,94,270,271,272,273,274,275,276,277,278,279,280,95,281,282,161,283,162,284,285,286,287,288,289,290,291,292,293,96,99,102,107,294,108,295,296,297,109,298,299,300,301,110,302,303,304,305,306,111,307,308,309,310,112,311,113,312,313,166,314,315,316,317,114,167,318,115,319,116,117,320,321,322,118,323,324,325,326,327,328,329,330,331,332,333,334,177,335,336,337,338,339,340,341,119,342,343,344,120,345,346,347,348,121,349,350,351,352,353,122,354,355,356,357,123,358,124,359,360,168,361,362,363,364,125,169,365,126,366,127,128,367,368,369,129,370],"tindex":"07df1137-dac1-11e4-b377-ef6a3b88a62a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[11,38,130,39,40,12,41,42,43,13,14,45,46,47,178,149,371,372,373,374,375,376,377,15,16,49,150,50,151,17,21,51,52,152,53,18,19,153,378,379,380,381,202,26,60,207,208,154,210,211,212,213,214,155,216,156,71,82,220,83,157,158,91,247,159,254,160,271,272,273,274,275,161,283,162,102,382,383,384,385,386,387,388,107,108,295,109,166,167,117,322,389,339,119,342,120,168,169,128,369,390,391,392,393,394,395,396,397],"tindex":"07df1138-dac1-11e4-b377-d7441d7cd822","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[19,57,58],"tindex":"07df1139-dac1-11e4-b377-37ee40ae5ecc","variableMapping":{"bs":"bs","biggestStart":"maxCount","this":"this","maxCount":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"07df384a-dac1-11e4-b377-8f2f7800b877","variableMapping":{"pointIndex":"skippedEdge1","index":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"07df384b-dac1-11e4-b377-a7ecfca431f4","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[19,57,58,224,235,158,243,398,399,164,400,299,310,167,318,346,357,169,365],"tindex":"07df384c-dac1-11e4-b377-25ee4f4b1b2e","variableMapping":{"nodeB":"valueIfKeyNotFound","edgeId":"i","nodeA":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[11,130,39,41,42,13,48,193,149,174,61,62,63,132,133,64,134,135,136,65,137,66,67,138,68,139,69,140,70,71,72,141,73,175,142,74,75,76,77,78,143,79,176,80,144,81,145,249,250,251,252,253,159,254,160,255,256,257,258,259,260,261,262,263,401,264,93,177,335,336,337,338,339,340,341,119,342,344,120,345,346,347,348,121,349,350,351,352,353,354,355,356,357,123,358,124,359,360,168,361,362,363,364,125,169,365,126,366,127,128,367,368,369,129,370],"tindex":"07df384d-dac1-11e4-b377-c90a1be12872","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"07df384e-dac1-11e4-b377-cb7becc1269b","variableMapping":{"width":"lastElem","lonSimilar":"lastElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[11,38,130,39,40,12,41,42,43,13,14,44,173,190,191,192,45,46,47,178,48,193,194,149,195,196,197,198,199,200,201,15,16,49,150,50,151,17,21,51,52,152,53,18,19,202,26,203,55,56,57,58,59,204,205,206,60,207,208,208,154,154,209,209,210,210,211,211,212,212,213,213,214,214,155,155,215,215,216,216,156,156,217,218,174,61,62,63,132,133,64,134,135,136,65,137,66,67,138,68,139,69,140,70,71,72,141,73,175,142,74,75,76,77,78,143,79,176,80,144,81,145,219,82,220,221,222,83,223,224,225,226,84,227,228,229,230,231,85,232,233,234,235,86,236,87,237,238,157,239,240,241,242,88,158,243,89,244,90,91,245,246,247,92,248,249,250,251,252,253,159,254,160,255,256,257,258,259,260,261,262,263,264,93,265,266,267,268,269,94,270,271,272,273,274,275,276,277,278,279,280,95,281,282,161,283,162,284,285,286,287,288,289,290,291,292,293,96,99,102,107,294,108,295,296,297,109,298,299,300,301,110,302,303,304,305,306,111,307,308,309,310,112,311,113,312,313,166,314,315,316,317,114,167,318,115,319,116,117,320,321,322,118,323,324,325,326,327,328,329,330,331,332,333,334,177,335,336,337,338,339,340,341,119,342,343,344,120,345,346,347,348,121,349,350,351,352,353,122,354,355,356,357,123,358,124,359,360,168,361,362,363,364,125,169,365,126,366,127,128,367,368,369,129,370],"tindex":"07e15b2f-dac1-11e4-b377-714c4ce69528","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[64,70,72],"tindex":"07e15b30-dac1-11e4-b377-e742d0df9845","variableMapping":{"periodicUpdates":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"07e15b31-dac1-11e4-b377-ad8897edfd07","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"07e15b32-dac1-11e4-b377-d988419f105b","variableMapping":{"workerThreads":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"07e15b33-dac1-11e4-b377-513441f433d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[31,32,33,34,35,36,37],"tindex":"07e15b34-dac1-11e4-b377-d3674e423357","variableMapping":{"distance":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[402],"tindex":"07e15b35-dac1-11e4-b377-2d2094c7f449","variableMapping":{"todoBytes":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[130,39,40,12,41,43,178,15,16,49,50,21,51,52,152,53,18,19,403,404],"tindex":"07e15b36-dac1-11e4-b377-eb02e8fff3f8","variableMapping":{"closed":"isRoundabout"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:181","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"07e15b37-dac1-11e4-b377-b71fa024e479","variableMapping":{"radiusInMeter":"baseOrientation","lon":"baseOrientation","lat":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"07e15b38-dac1-11e4-b377-cf2a613fcc9d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"07e15b39-dac1-11e4-b377-ef2f51fab5ea","variableMapping":{"equalNormedDelta":"lat","currNormedDist":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:883","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"07e15b3a-dac1-11e4-b377-3d65e32c25f2","variableMapping":{"silent":"storing"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"07e15b3b-dac1-11e4-b377-efef726b6386","variableMapping":{"graphHopperFolder":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[31],"tindex":"07e1814c-dac1-11e4-b377-e3698ce618ac","variableMapping":{"maxMCSpeed":"maxSpeed","speed":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"07e1814d-dac1-11e4-b377-f1de63cd34a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"07e1814e-dac1-11e4-b377-8171aac78b58","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.PREFER","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:471","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"07e1814f-dac1-11e4-b377-e94364f077d6","variableMapping":{"workerThreads":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"07e18150-dac1-11e4-b377-9d421b711157","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"07e18151-dac1-11e4-b377-19ba3c562de0","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"i","sign":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[405,406],"tindex":"07e18152-dac1-11e4-b377-69f9d592512b","variableMapping":{"size":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"07e18153-dac1-11e4-b377-0590136667af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"07e18154-dac1-11e4-b377-bb55f2cda715","variableMapping":{"ghLocation":"location","osmFile":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"07e18155-dac1-11e4-b377-87e37fd250b2","variableMapping":{"bytePointer":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":0},{"failures":[11,12,13,16,407,408,409],"tindex":"07e18156-dac1-11e4-b377-f59f4cf6eaee","variableMapping":{"tt":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"07e18157-dac1-11e4-b377-ad03bcfb067e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[],"tindex":"07e18158-dac1-11e4-b377-a51f100865c9","variableMapping":{"costs":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":140,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":154,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":37,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":339,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":267,"com.graphhopper.reader.OSMReaderTest.testFerry":15,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":197,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":30,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":254,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":38,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":306,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":76,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":163,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":85,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":251,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":390,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":386,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":80,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":69,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":175,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":191,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":252,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":189,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":135,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":283,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":107,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":145,"com.graphhopper.GraphHopperTest.testLoadOSM":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":289,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":162,"com.graphhopper.reader.OSMReaderTest.testSort":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":57,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":295,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":392,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":244,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":82,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":214,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":116,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":397,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":364,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":228,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":335,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":109,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":183,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":257,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":132,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":346,"com.graphhopper.coll.OSMIDMapTest.testGetLong":380,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":313,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":358,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":119,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":359,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":187,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":111,"com.graphhopper.GraphHopperAPITest.testLoad":44,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":327,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":232,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":224,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":172,"com.graphhopper.storage.LevelGraphStorageTest.testClone":348,"com.graphhopper.reader.OSMReaderTest.testBarriers":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":134,"com.graphhopper.util.GHUtilityTest.testCopy":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":93,"com.graphhopper.routing.PathTest.testFindInstruction":207,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":299,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":48,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":408,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":367,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":266,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":90,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":115,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":310,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":341,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":349,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":222,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":334,"com.graphhopper.util.InstructionListTest.testWayList2":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":290,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":202,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":220,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":25,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":64,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":151,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":71,"com.graphhopper.coll.OSMIDMapTest.testGet":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":305,"com.graphhopper.routing.PathBidirRefTest.testExtract":217,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":409,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":168,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":261,"com.graphhopper.storage.RAMDataAccessTest.testCopy":383,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":323,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":164,"com.graphhopper.storage.RAMDataAccessTest.testSegments":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":96,"com.graphhopper.util.GHUtilityTest.testSort2":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":68,"com.graphhopper.reader.OSMReaderTest.testMain":49,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":342,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":262,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":171,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":296,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":122,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":357,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":129,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":211,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":188,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":326,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":124,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":18,"com.graphhopper.storage.StorablePropertiesTest.testStore":389,"com.graphhopper.storage.GraphHopperStorageTest.testClone":226,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":404,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":31,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":234,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":177,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":337,"com.graphhopper.routing.PathTest.testTime":206,"com.graphhopper.util.BitUtilLittleTest.testToFloat":147,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":368,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":292,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":362,"com.graphhopper.util.GHUtilityTest.testSortDirected":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":33,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":210,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.util.BitUtilLittleTest.testToInt":148,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":256,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":100,"com.graphhopper.search.NameIndexTest.testCreate":374,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":387,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":208,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":330,"com.graphhopper.routing.QueryGraphTest.testOneWay":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":161,"com.graphhopper.reader.OSMReaderTest.testWithBounds":53,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":165,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":382,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":56,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":320,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":179,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":345,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":343,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":184,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":315,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":112,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":83,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":61,"com.graphhopper.util.BitUtilLittleTest.testToBitString":146,"com.graphhopper.util.InstructionListTest.testWayList":46,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":245,"com.graphhopper.GraphHopperAPITest.testDisconnected179":173,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":281,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":201,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":58,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":106,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":144,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":241,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":176,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":297,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":401,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":186,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":219,"com.graphhopper.routing.PathTest.testWayList":60,"com.graphhopper.coll.OSMIDMapTest.testGet2":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":73,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":126,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":314,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":236,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":303,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":259,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":384,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":405,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.util.GHUtilityTest.testSort":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":286,"com.graphhopper.search.NameIndexTest.testPut":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":118,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":253,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":275,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":278,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":332,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":27,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":26,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":276,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":294,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":311,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":55,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":333,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":102,"com.graphhopper.routing.PathTest.testFound":205,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":14,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":28,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":127,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":20,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":336,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":308,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":131,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":373,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":99,"com.graphhopper.util.InstructionListTest.testEmptyList":192,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":263,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":35,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":139,"com.graphhopper.reader.PrinctonReaderTest.testRead":200,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":160,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":304,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":97,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":113,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":181,"com.graphhopper.reader.OSMReaderTest.testFoot":16,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":156,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":287,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":369,"com.graphhopper.reader.OSMReaderTest.testOneWay":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":288,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":233,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":243,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":319,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":396,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":101,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":279,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":395,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":203,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":159,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":209,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":221,"com.graphhopper.routing.PathBidirRefTest.testExtract2":218,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":331,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":291,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":371,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":88,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":407,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":284,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":89,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":350,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":157,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":355,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":264,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":385,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":402,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":301,"com.graphhopper.GraphHopperTest.testPrepareOnly":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":70,"com.graphhopper.GraphHopperTest.testVia":130,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":398,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":52,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":338,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":178,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":242,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":51,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":366,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":365,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":108}}]
