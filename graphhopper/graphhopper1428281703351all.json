[{"failures":[],"tindex":"92000fd5-dbf7-11e4-8698-bb5dc851fc97","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"92019676-dbf7-11e4-8698-c7813cabcea3","variableMapping":{"dx":"toHeight","dy":"fromHeight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[0,1,2,3],"tindex":"92019677-dbf7-11e4-8698-652858475e60","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"92019678-dbf7-11e4-8698-6f2b2b125d98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[4,5,6],"tindex":"92019679-dbf7-11e4-8698-e7a004bf8832","variableMapping":{"numTiles":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"9201bd8a-dbf7-11e4-8698-970ac978f171","variableMapping":{"i":"length","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"9201bd8b-dbf7-11e4-8698-937fcdce7c12","variableMapping":{"x1":"com.graphhopper.util.AngleCalc.PI_4","x2":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"9201bd8c-dbf7-11e4-8698-491ab637150f","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"9201bd8d-dbf7-11e4-8698-6f0c996cae5c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[7,8,9,10,11,12,13,14],"tindex":"9201bd8e-dbf7-11e4-8698-61651cb2b889","variableMapping":{"directionBitMask":"encoded","shift":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[15,16],"tindex":"9201bd8f-dbf7-11e4-8698-45397f2b08d8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-1},{"failures":[],"tindex":"9201bd90-dbf7-11e4-8698-bbca1dd5843d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[17,18],"tindex":"9201bd91-dbf7-11e4-8698-0d3341c93ebc","variableMapping":{"orientation":"longTripsSpeed","resultOrientation":"shortTripsSpeed","baseOrientation":"durationInHours","java.lang.Math.PI":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-1},{"failures":[],"tindex":"9201bd92-dbf7-11e4-8698-9147837e2086","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[19,20],"tindex":"9201bd93-dbf7-11e4-8698-17cd5b021075","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"9201bd94-dbf7-11e4-8698-bddb1fc2c076","variableMapping":{"algo":"com.graphhopper.routing.util.EncodingManager.ERR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[21,22],"tindex":"9201bd95-dbf7-11e4-8698-51da9dac619e","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[23,24,25,26,27],"tindex":"9201bd96-dbf7-11e4-8698-7db673531c19","variableMapping":{"lazyUpdates":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"9201bd97-dbf7-11e4-8698-2bd02c7a2835","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"9201bd98-dbf7-11e4-8698-5f5ebf47e55d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"9201e4a9-dbf7-11e4-8698-d71a3b9fb058","variableMapping":{"obtained":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"9201e4aa-dbf7-11e4-8698-216ad1d120fd","variableMapping":{"id":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38],"tindex":"9201e4ab-dbf7-11e4-8698-bfb37ab2f38a","variableMapping":{"edgePointer":"flags","maxEdges":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"9201e4ac-dbf7-11e4-8698-c7d4dc15d5a8","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[],"tindex":"9201e4ad-dbf7-11e4-8698-8bc57ce83937","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"9201e4ae-dbf7-11e4-8698-61b9036e33e8","variableMapping":{"y":"maxSpeed","angle":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[],"tindex":"9201e4af-dbf7-11e4-8698-cb56b3f374e0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"9201e4b0-dbf7-11e4-8698-4321f7ad5c56","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"9201e4b1-dbf7-11e4-8698-6d64222808f9","variableMapping":{"nodeFlags":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[39],"tindex":"9201e4b2-dbf7-11e4-8698-b7d370863c40","variableMapping":{"directionBitMask":"flags","blockByDefault":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"92069fa3-dbf7-11e4-8698-0d7b5e4633a3","variableMapping":{"weightApproximation":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[24,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"92069fa4-dbf7-11e4-8698-d30939bdfcca","variableMapping":{"pos":"i","mSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"92069fa5-dbf7-11e4-8698-578f8937b171","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"92069fa6-dbf7-11e4-8698-5b9a94c369ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[76,78,79],"tindex":"92069fa7-dbf7-11e4-8698-0fbf632d4ac6","variableMapping":{"size":"start","keys":"nodeIndex","child":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:114","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"9206c6b8-dbf7-11e4-8698-ab551c0dd844","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[80,15,81],"tindex":"9206c6b9-dbf7-11e4-8698-1f9db47d94b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"9206c6ba-dbf7-11e4-8698-2faa4e9bde62","variableMapping":{"r":"maxSpeed","angle":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[82,83,84,85,86,87,88,89,90,4,91,92,93,94,95,96,97,5,6],"tindex":"9206c6bb-dbf7-11e4-8698-89823c011f7d","variableMapping":{"ref":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[98,99,82,100,101,102,103,104,83,105,84,85,106,107,108,109,110,111,86,112,113,87,114,115,116,117,118,88,119,89,90,120,121,122,123,124,125,4,91,126,92,93,94,95,96,97,5,6,127,128,129,130,131,132,133,134,135,136,17,137,138,139,140,141,142,143,144,145,146,147,148,21,149,150,151,152],"tindex":"9206c6bc-dbf7-11e4-8698-e56ddcc69aea","variableMapping":{"turnCostsCount":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"9206c6bd-dbf7-11e4-8698-438e4b7447c7","variableMapping":{"allBits":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"9206c6be-dbf7-11e4-8698-0b0715664f28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"9206c6bf-dbf7-11e4-8698-cdae5bd9f17d","variableMapping":{"pointList":"pl"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:713","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":0},{"failures":[],"tindex":"9206c6c0-dbf7-11e4-8698-67e0128d20d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failures":[],"tindex":"9206c6c1-dbf7-11e4-8698-5b6c9e8ca773","variableMapping":{"val":"com.graphhopper.routing.util.EncodingManager.FOOT","existing":"com.graphhopper.routing.util.EncodingManager.BIKE2","key":"com.graphhopper.routing.util.EncodingManager.BIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[131,135,137,153,154,155],"tindex":"9206c6c2-dbf7-11e4-8698-051af9adba53","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"9206c6c3-dbf7-11e4-8698-69a5d16ecc73","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"9206c6c4-dbf7-11e4-8698-b1df7cb1b482","variableMapping":{"max":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","tmpSize":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"9206c6c5-dbf7-11e4-8698-29a9457b0478","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[156,157,158,159,160,161,162,163],"tindex":"9206c6c6-dbf7-11e4-8698-8157d864bb89","variableMapping":{"lat":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"9206edd7-dbf7-11e4-8698-dda291c70621","variableMapping":{"val":"costs","intVal":"maxTurnCosts","degree":"maxTurnCosts","invPrecision":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:263","type":"CtIfImpl","sourcecode":"if (!((double >= 0) || ((int - double) < (double))))\n    int = int - (int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[],"tindex":"9206edd8-dbf7-11e4-8698-6f03cb0251d8","variableMapping":{"maxLeafEntries":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"9206edd9-dbf7-11e4-8698-49acbf82f53a","variableMapping":{"shift":"roundaboutBit","flags":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"9206edda-dbf7-11e4-8698-036b4641c873","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9206eddb-dbf7-11e4-8698-9fde3ccbb3a4","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","speed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"9206eddc-dbf7-11e4-8698-b570d2bbc01e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"9206eddd-dbf7-11e4-8698-af3c4d25ed49","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[29,32,35,38],"tindex":"9206edde-dbf7-11e4-8698-79614dba8984","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"9206eddf-dbf7-11e4-8698-11d676905d0b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"9206ede0-dbf7-11e4-8698-4b8670ea4ad6","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"9206ede1-dbf7-11e4-8698-cfdae397e741","variableMapping":{"size":"maxCount","from":"maxCount","end":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":0},{"failures":[153],"tindex":"9206ede2-dbf7-11e4-8698-5dbc413b5388","variableMapping":{"maxLeafEntries":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[164,165,166,167,168],"tindex":"9206ede3-dbf7-11e4-8698-89e8a65ba30b","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"blockByDefault"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[169],"tindex":"9206ede4-dbf7-11e4-8698-990a0689ab54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[98,99,170,23,171,172,173,174,24,175,176,177,178,179,180,181,40,182,183,184,185,186,187,188,41,189,42,43,190,44,191,192,193,45,46,194,195,196,197,198,199,47,48,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,49,217,218,219,220,221,222,223,50,224,51,52,225,53,226,227,228,54,55,229,230,231,232,233,234,56,57,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,82,100,101,102,103,104,83,105,84,85,106,107,108,109,110,111,112,113,254,87,114,115,116,117,118,88,119,89,90,120,121,122,123,124,125,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,58,273,274,275,276,277,278,279,59,280,60,61,281,62,282,283,284,63,64,285,286,287,288,289,290,65,66,291,292,293,294,295,296,297,298,299,300,301,127,302,128,129,130,131,132,133,134,135,136,303,304,305,17,137,138,139,140,141,142,143,144,145,146,147,148,21,306,307,308,309,310,311,312,313,314,315,316,317,318,319,156,157,76,320,22,77,78,79,321,169,322,323,324,325,326,327,328,25,329,330,149,331,332,333,150,151,334,335,152,336,26,337,27,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,161,162,359,360,361,362,363,364,365,366],"tindex":"920714f5-dbf7-11e4-8698-2d0d80541f8a","variableMapping":{"segmentSizeInBytes":"segmentsToCreate","indexDivisor":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"920714f6-dbf7-11e4-8698-9d3e53f442c5","variableMapping":{"currentEntry":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"920714f7-dbf7-11e4-8698-6f67d545a2c2","variableMapping":{"orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"920714f8-dbf7-11e4-8698-8dcfb3a5fd1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[170,23,171,172,173,174,24,175,176,177,178,179,367,180,181,40,182,183,184,185,186,187,188,41,189,42,43,190,44,191,192,193,45,46,194,195,196,197,198,199,47,48,200,201,202,203,204,205,206,207,208,209,368,210,211,212,213,214,369,215,216,49,217,218,219,220,221,222,223,50,224,51,52,225,53,226,227,228,54,55,229,230,231,232,233,234,56,57,235,236,237,238,239,240,241,242,243,253,111,125,265,266,267,268,269,270,370,271,272,58,273,274,275,276,277,278,279,59,280,60,61,281,62,282,283,284,63,64,285,286,287,288,289,290,65,66,291,292,293,294,295,296,297,298,299,371,372,67,373,374,375,376,377,378,379,68,300,69,70,380,71,381,382,383,72,73,384,385,386,387,388,301,74,75,389,390,391,392,393,394,395,396,397,131,135,398,399,153,166,400,322,154,401,402,155,403,404,323,324,325,326,327,328,25,329,330,149,331,332,333,150,151,334,335,152,336,26,337,27,338,339],"tindex":"920714f9-dbf7-11e4-8698-c3615c6952bd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[405,7,28,10,31,13,37],"tindex":"920714fa-dbf7-11e4-8698-817838262192","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if (int < int)\n    return com.graphhopper.routing.util.EncodedValue.setValue(0, int);\n"},"status":-1},{"failures":[7,8,406,10,30,31,407,13,36,37],"tindex":"920714fb-dbf7-11e4-8698-77d5cad8a7e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"920714fc-dbf7-11e4-8698-35d8b3bc653e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"920714fd-dbf7-11e4-8698-83e9107b624a","variableMapping":{"mask":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-2},{"failures":[],"tindex":"920714fe-dbf7-11e4-8698-4f7ce6bf97a9","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"92073c0f-dbf7-11e4-8698-4fa6c0b004ba","variableMapping":{"maxRasterWidth2InMeterNormed":"epsilon","currNormedDist":"d1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:374","type":"CtReturnImpl","sourcecode":"return double < (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"92073c10-dbf7-11e4-8698-d535277cd391","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"92073c11-dbf7-11e4-8698-0f49762724cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"92073c12-dbf7-11e4-8698-19a364e756d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[],"tindex":"92073c13-dbf7-11e4-8698-b54fa24993d0","variableMapping":{"allBits":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[98,99,408,170,23,171,172,173,174,24,175,176,177,178,179,367,180,181,40,182,183,184,185,186,187,188,41,189,42,43,190,44,191,192,193,45,46,194,195,196,197,198,199,47,48,200,201,202,203,204,205,206,207,208,209,368,210,211,212,213,214,369,215,216,49,217,218,219,220,221,222,223,50,224,51,52,225,53,226,227,228,54,55,229,230,231,232,233,234,56,57,235,236,237,238,239,240,241,242,243,248,249,250,251,409,252,253,82,100,101,102,103,104,83,105,84,85,106,107,108,109,410,110,111,112,113,254,87,114,115,116,117,118,88,119,89,90,120,121,122,123,411,124,125,255,256,257,258,412,259,260,261,262,263,413,264,265,266,267,268,269,270,370,271,272,58,273,274,275,276,277,278,279,59,280,60,61,281,62,282,283,284,63,64,285,286,287,288,289,290,65,66,291,292,293,294,295,296,297,298,299,371,372,67,373,374,375,376,377,378,379,68,300,69,70,380,71,381,382,383,72,73,384,385,386,387,388,301,74,75,389,390,391,392,393,394,395,396,397,127,302,128,129,130,131,132,414,133,134,135,136,415,304,305,17,137,138,139,140,141,142,143,144,405,145,146,147,148,21,306,307,308,309,310,311,312,313,314,315,316,317,416,318,319,417,418,419,420,421,156,157,398,422,153,423,424,76,320,22,77,78,79,425,426,427,28,428,164,429,430,431,0,432,29,433,434,9,435,321,169,436,406,10,437,30,438,31,439,440,165,441,442,443,444,1,445,32,446,447,448,11,449,450,451,39,452,18,453,454,455,456,457,458,459,460,461,166,400,322,154,401,402,155,403,404,462,463,33,34,167,464,465,466,467,2,468,35,469,470,471,12,472,407,13,473,36,474,37,475,476,168,477,478,479,480,3,481,38,482,483,484,14,485,323,324,325,326,327,328,25,329,330,149,331,332,333,150,151,334,335,152,336,26,337,27,338,339,340,341,486,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,161,162,359,360,361,362,363,364,365,487,366],"tindex":"92073c14-dbf7-11e4-8698-c7f3f83a6d47","variableMapping":{"_location":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[127,302,128,129,130,132,133,134,135,320,22,77],"tindex":"92073c15-dbf7-11e4-8698-d13f86cae359","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-1},{"failures":[79],"tindex":"92073c16-dbf7-11e4-8698-23bb52e7c500","variableMapping":{"newAdjIndex":"start","newBaseIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[426,28,428,406,438,31,448,463,34,471,407,474,37,484],"tindex":"92073c17-dbf7-11e4-8698-d91d8704dbef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"92076328-dbf7-11e4-8698-491baee2a66b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[76,78],"tindex":"92076329-dbf7-11e4-8698-8384e7754d62","variableMapping":{"edgeId":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"9207632a-dbf7-11e4-8698-4399151937fb","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[24,40,41,43,47,48,203,208,49,50,52,56,57,238,243,58,59,61,65,66,299],"tindex":"9207632b-dbf7-11e4-8698-831e092247a8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"9207632c-dbf7-11e4-8698-c3e2e2f02037","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[19,20],"tindex":"9207632d-dbf7-11e4-8698-d1db7a420688","variableMapping":{"maxLeafEntries":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"9207632e-dbf7-11e4-8698-ab476cec52ad","variableMapping":{"tmp":"speed","initializedCounter":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[40,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77],"tindex":"9207b14f-dbf7-11e4-8698-7df5dbf31c14","variableMapping":{"index":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"9207b150-dbf7-11e4-8698-fd9a1fe51bd0","variableMapping":{"weight":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":0},{"failures":[],"tindex":"9207b151-dbf7-11e4-8698-b72258a83db9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"9207b152-dbf7-11e4-8698-55f9b66ca15f","variableMapping":{"tmp":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[98,99,170,23,171,172,173,24,175,176,179,180,181,40,182,183,184,185,186,187,188,41,189,42,43,190,44,191,192,193,45,46,194,195,196,197,199,47,48,200,201,202,203,204,205,206,207,208,209,210,211,214,215,216,49,217,218,219,220,221,222,223,50,224,51,52,225,53,226,227,228,54,55,229,230,231,232,234,56,57,235,236,237,238,239,240,241,242,243,488,244,245,489,490,491,247,492,493,248,249,250,251,252,253,82,100,101,102,103,104,83,105,84,85,106,107,108,109,110,111,112,113,254,87,114,115,116,117,118,88,119,89,90,120,121,122,123,124,125,255,256,257,258,259,260,261,262,263,264,265,266,267,270,271,272,58,273,274,275,276,277,278,279,59,280,60,61,281,62,282,283,284,63,64,285,286,287,288,290,65,66,291,292,293,294,295,296,297,298,299,300,301,127,128,129,130,131,132,133,134,135,136,303,304,305,17,137,138,139,140,141,142,143,144,145,146,147,148,21,306,307,308,309,310,311,312,313,314,315,316,317,318,319,156,157,76,320,22,77,78,79,321,169,322,323,324,325,326,327,328,25,329,330,149,331,332,333,150,151,334,335,152,336,26,337,27,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,161,162,359,360,361,362,363,364,365,366],"tindex":"9207d863-dbf7-11e4-8698-9deb080868fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[494,495,496,497,498,499,500,501,502,503,504,505,506,174,176,177,180,194,47,203,206,209,211,212,215,229,56,238,241,101,102,103,115,116,117,507,267,268,271,285,65,294,297,301,508,509,510,511,512,127,302,128,129,130,131,132,133,134,135,136,513,514,515,17,137,138,139,140,141,142,143,144,145,146,147,148,21,306,307,309,310,311,312,313,314,316,317,156,157,321,169,337,358,161,162,359,364],"tindex":"9207d864-dbf7-11e4-8698-9919b72c1b98","variableMapping":{"neighborUpdates":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[398],"tindex":"9207d865-dbf7-11e4-8698-d53f41bfc931","variableMapping":{"ret":"hash","retBucket":"hash","i":"hash","bucketSize":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[],"tindex":"9207d866-dbf7-11e4-8698-61258ebf7f9a","variableMapping":{"tmp":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"9207d867-dbf7-11e4-8698-cdc1683b9693","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":199,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":336,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":174,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":250,"com.graphhopper.GraphHopperAPITest.testNoLoad":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":372,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":360,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":116,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":302,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":163,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":50,"com.graphhopper.coll.CompressedArrayTest.testCompress":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":432,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":297,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":384,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":254,"com.graphhopper.util.AngleCalcTest.testOrientation":158,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":500,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":350,"com.graphhopper.GraphHopperTest.testPrepare":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":393,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":340,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":331,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":358,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":355,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":407,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":325,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":102,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":209,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":95,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":180,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":353,"com.graphhopper.GraphHopperTest.testLoadOSM":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":106,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":103,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":422,"com.graphhopper.reader.OSMReaderTest.testSort":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":482,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":22,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":212,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":503,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":292,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":267,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":394,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":313,"com.graphhopper.routing.DijkstraTest.initializationError":416,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":237,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":506,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":198,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":489,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":277,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":368,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":30,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":119,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":118,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":328,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":327,"com.graphhopper.coll.OSMIDMapTest.testGetLong":511,"com.graphhopper.coll.IntIntBinHeapTest.testSize":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":225,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":217,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":192,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":176,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":45,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":160,"com.graphhopper.coll.CompressedArrayTest.testCompress2":5,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":463,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":224,"com.graphhopper.GraphHopperAPITest.testLoad":98,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":367,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":245,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":166,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":60,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":58,"com.graphhopper.storage.LevelGraphStorageTest.testClone":183,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":79,"com.graphhopper.reader.OSMReaderTest.testBarriers":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":329,"com.graphhopper.util.GHUtilityTest.testCopy":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":2,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":125,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":434,"com.graphhopper.routing.PathTest.testFindInstruction":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":430,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":49,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":80,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":155,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":356,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":204,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":437,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":293,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":235,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":53,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":1,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":399,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":419,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":185,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":376,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":493,"com.graphhopper.util.InstructionListTest.testWayList2":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":107,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":298,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":240,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":423,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":321,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":51,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":25,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":272,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":141,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":502,"com.graphhopper.routing.AStarTest.initializationError":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":337,"com.graphhopper.coll.OSMIDMapTest.testGet":508,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":223,"com.graphhopper.routing.PathBidirRefTest.testExtract":318,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":403,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":477,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":510,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":121,"com.graphhopper.storage.RAMDataAccessTest.testCopy":498,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":504,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":426,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":168,"com.graphhopper.storage.RAMDataAccessTest.testSegments":501,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":111,"com.graphhopper.util.GHUtilityTest.testSort2":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":334,"com.graphhopper.reader.OSMReaderTest.testMain":138,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":478,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":96,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":483,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":391,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":189,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":44,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":207,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":42,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":232,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":406,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":193,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":148,"com.graphhopper.storage.StorablePropertiesTest.testStore":507,"com.graphhopper.storage.GraphHopperStorageTest.testClone":274,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":390,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":456,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":454,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":170,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":470,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":377,"com.graphhopper.routing.PathTest.testTime":421,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":467,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":205,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":184,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":461,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":73,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":196,"com.graphhopper.reader.OSMReaderTest.testRelation":405,"com.graphhopper.util.GHUtilityTest.testSortDirected":366,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":446,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":309,"com.graphhopper.GraphHopperTest.testFootOnly":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":88,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":341,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":436,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":381,"com.graphhopper.search.NameIndexTest.testCreate":497,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":306,"com.graphhopper.routing.QueryGraphTest.testOneWay":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":410,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":101,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":4,"com.graphhopper.reader.OSMReaderTest.testWithBounds":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":239,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":311,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":385,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":404,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":7,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":181,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":178,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":445,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":9,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":231,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":226,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":271,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":324,"com.graphhopper.util.InstructionListTest.testWayList":161,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":476,"com.graphhopper.GraphHopperAPITest.testDisconnected179":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":378,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":443,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":305,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":396,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":481,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":130,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":351,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":472,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":333,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":418,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":349,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":457,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":464,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":38,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":338,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":411,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":266,"com.graphhopper.routing.PathTest.testWayList":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":395,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":69,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":452,"com.graphhopper.coll.OSMIDMapTest.testGet2":509,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":339,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":200,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":513,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":230,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":3,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":283,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":221,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":89,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":90,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":499,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":165,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.util.GHUtilityTest.testSort":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":388,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":480,"com.graphhopper.search.NameIndexTest.testPut":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":242,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":114,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":262,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":438,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":169,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":260,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":210,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":167,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":424,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":514,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":227,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":76,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":492,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":301,"com.graphhopper.routing.PathTest.testFound":420,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":136,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":153,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":202,"com.graphhopper.util.AngleCalcTest.testAtan2":159,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":171,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":479,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":52,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":496,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":300,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":279,"com.graphhopper.util.InstructionListTest.testEmptyList":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":149,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":460,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":433,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":335,"com.graphhopper.reader.PrinctonReaderTest.testRead":304,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":117,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":68,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":91,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":512,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":371,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":182,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":10,"com.graphhopper.reader.OSMReaderTest.testFoot":137,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":387,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":515,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":94,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":425,"com.graphhopper.reader.OSMReaderTest.testOneWay":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":85,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":61,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":66,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":236,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":431,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":505,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":440,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":345,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":352,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":455,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":380,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":308,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":269,"com.graphhopper.routing.PathBidirRefTest.testExtract2":319,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":491,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":253,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":494,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":413,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":471,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":143,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":397,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":104,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":291,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":487,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":186,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":458,"com.graphhopper.GraphHopperTest.testFootAndCar":131,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":285,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":374,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":398,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":459,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":26,"com.graphhopper.GraphHopperTest.testPrepareOnly":127,"com.graphhopper.GraphHopperTest.testVia":128,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":67,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":145,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":173,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":289,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":359,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":401,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":382,"com.graphhopper.routing.AStarBidirectionTest.initializationError":417,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":435,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":201,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":48,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":211}}]
