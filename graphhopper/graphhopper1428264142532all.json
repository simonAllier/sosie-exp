[{"failures":[],"tindex":"ac7d0d97-dbce-11e4-bf1d-43e62e9ea5d8","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"ac7dd0e8-dbce-11e4-bf1d-17112fa46096","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"ac7dd0e9-dbce-11e4-bf1d-2b2c6ef217f7","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"ac7df7fa-dbce-11e4-bf1d-413ac891077e","variableMapping":{"cp":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[0,1,2],"tindex":"ac7df7fb-dbce-11e4-bf1d-695bf0284835","variableMapping":{"size":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"ac7df7fc-dbce-11e4-bf1d-732354ff911d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"ac7df7fd-dbce-11e4-bf1d-e52c9ec497c2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"ac7df7fe-dbce-11e4-bf1d-d1e8edeed3be","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"ac7df7ff-dbce-11e4-bf1d-dd37ab9aa7ba","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[3],"tindex":"ac7df800-dbce-11e4-bf1d-5bbf5b25b5e3","variableMapping":{"baseUrl":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14],"tindex":"ac7df801-dbce-11e4-bf1d-15b808552962","variableMapping":{"strLen":"wayType","bLen":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[15,16,17,18,19,20,21],"tindex":"ac7df802-dbce-11e4-bf1d-297a3d5f32ba","variableMapping":{"distInMeter":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"ac7df803-dbce-11e4-bf1d-1750109325c3","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ac7df804-dbce-11e4-bf1d-7f0e1c255c41","variableMapping":{"need":"key","i":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[22,23,24,4,25,5,6,26,27,7,8,28,29,9,30,10,11,31,12,13,14,32],"tindex":"ac7df805-dbce-11e4-bf1d-ab3ccc487c56","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"ac7df806-dbce-11e4-bf1d-9ded499e005a","variableMapping":{"i":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"ac7e1f17-dbce-11e4-bf1d-bdd323b92b04","variableMapping":{"res":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[],"tindex":"ac7e6d38-dbce-11e4-bf1d-117270cd8a21","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":0},{"failures":[],"tindex":"ac7e6d39-dbce-11e4-bf1d-8fa191c72048","variableMapping":{"high":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,22,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"ac7e6d3a-dbce-11e4-bf1d-a39908cb6a91","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"ac7e6d3b-dbce-11e4-bf1d-bdb1d45fa500","variableMapping":{"edgeTo":"code","edgeFrom":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[153,154,155,156,157,158,159,160,161],"tindex":"ac7e6d3c-dbce-11e4-bf1d-3b9a76c57b84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"ac7e6d3d-dbce-11e4-bf1d-adea6b468a18","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[41,52,53,162],"tindex":"ac7e944e-dbce-11e4-bf1d-8b134cc9758b","variableMapping":{"val":"highwayValue","defaultL":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"ac7e944f-dbce-11e4-bf1d-09d4358d67b1","variableMapping":{"orientation":"maxEle","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"ac7e9450-dbce-11e4-bf1d-ede6de3e67ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[153,154,163,155,157,158,164,165,159,160,161,166,167,168,169,170,171,172,173,174],"tindex":"ac7e9451-dbce-11e4-bf1d-2b9fa41f2003","variableMapping":{"res":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"ac7e9452-dbce-11e4-bf1d-3f5241938212","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[175,176,90,177,178,179,99,180,181,182,183,184,185,186,119,187,188],"tindex":"ac7e9453-dbce-11e4-bf1d-6fb9923aa14f","variableMapping":{"tmp":"high","initializedCounter":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"ac7e9454-dbce-11e4-bf1d-c7c0d1740614","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[189,7],"tindex":"ac7e9455-dbce-11e4-bf1d-39e92ed5b6b1","variableMapping":{"currentBucket":"nextRelBit","currentIndex":"usedBits","bucketSize":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"ac7e9456-dbce-11e4-bf1d-e1bf081f8a8a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"ac7e9457-dbce-11e4-bf1d-e349045c61e3","variableMapping":{"hasOther":"uTurnSupport","hasRel":"uTurnSupport"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"ac7e9458-dbce-11e4-bf1d-33b8a2164b6f","variableMapping":{"high":"mask","guess":"mask","low":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"ac7ebb69-dbce-11e4-bf1d-a7d7ec36dca7","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[7,8],"tindex":"ac7ebb6a-dbce-11e4-bf1d-0d541573a621","variableMapping":{"sacScale":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[],"tindex":"ac7ebb6b-dbce-11e4-bf1d-8102a9423bb5","variableMapping":{"i":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[],"tindex":"ac7ee27c-dbce-11e4-bf1d-c90a738a23ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"ac7ee27d-dbce-11e4-bf1d-33aa46096ca4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"ac7ee27e-dbce-11e4-bf1d-cda6c7bfd6bb","variableMapping":{"line":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[190],"tindex":"ac7ee27f-dbce-11e4-bf1d-09a0fb780d6c","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"defaultD","java.lang.Double.POSITIVE_INFINITY":"defaultD","weight":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[],"tindex":"ac7ee280-dbce-11e4-bf1d-1f8c8d5e8ae7","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[129,130,133,136,191,192,193,194,195],"tindex":"ac7ee281-dbce-11e4-bf1d-e33be6c3b0c9","variableMapping":{"lastTime":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"ac7ee282-dbce-11e4-bf1d-0b4ede62dec6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[196,25,5,197,27,7,198,199,30,10,200,201,13,202],"tindex":"ac7ee283-dbce-11e4-bf1d-112e139c8cf9","variableMapping":{"initLeafSize":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"ac7ee284-dbce-11e4-bf1d-631336fc6c89","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[203],"tindex":"ac7ee285-dbce-11e4-bf1d-c9a5b349c4ca","variableMapping":{"currentEntry":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"ac7ee286-dbce-11e4-bf1d-c581fe73f0e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[203],"tindex":"ac7ee287-dbce-11e4-bf1d-cbbc2d471a3a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[204,205],"tindex":"ac7ee288-dbce-11e4-bf1d-77935543a8b1","variableMapping":{"edgeId":"node","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"node","nodeA":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[196,24,206,5,207,208,209,6,17,197,199,29,210,10,211,212,213,11,19,200,214,215],"tindex":"ac7f0999-dbce-11e4-bf1d-9ba74b5ae2cf","variableMapping":{"tmpDegreeCounter":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-1},{"failures":[],"tindex":"ac7f099a-dbce-11e4-bf1d-d37e168c163d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"ac7f099b-dbce-11e4-bf1d-71064a45f61a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"ac7f099c-dbce-11e4-bf1d-234bd5c7e552","variableMapping":{"orientation":"speed","resultOrientation":"speed","baseOrientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[],"tindex":"ac7f099d-dbce-11e4-bf1d-933545172566","variableMapping":{"value":"allBits","numberOfBits":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-2},{"failures":[],"tindex":"ac7f099e-dbce-11e4-bf1d-c7326ac3d209","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[42,127,132,136,216,217,162],"tindex":"ac7f099f-dbce-11e4-bf1d-830f3fabb404","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"ac7f09a0-dbce-11e4-bf1d-97bd6a4a91b0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"ac7f09a1-dbce-11e4-bf1d-e3788087461d","variableMapping":{"segmentsToMap":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":0},{"failures":[],"tindex":"ac7f09a2-dbce-11e4-bf1d-57fcf63ecff9","variableMapping":{"str":"name","this":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:154","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    java.lang.String += \"_STORE\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[218],"tindex":"ac7f09a3-dbce-11e4-bf1d-e527721a3584","variableMapping":{"segmentSizeInBytes":"index","length":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[219],"tindex":"ac7f09a4-dbce-11e4-bf1d-5987b4bdee09","variableMapping":{"byteCount":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[220,221,222,223,33,224,225,226,34,35,36,37,227,228,229,230,231,232,41,42,43,44,45,46,47,22,48,49,50,51,52,53,233,234,235,236,237,238,239,219,240,241,242,243,218,244,245,246,85,247,248,86,87,249,250,88,251,175,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,176,268,89,269,270,271,272,273,90,177,274,275,276,91,277,92,93,278,279,94,280,95,96,281,282,97,283,178,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,179,300,98,301,302,303,304,305,99,180,306,307,308,100,309,101,102,310,311,312,313,314,315,316,317,318,319,320,166,321,103,104,105,322,167,323,168,169,324,325,326,327,328,329,106,107,108,109,110,330,331,332,333,334,335,171,336,111,112,113,337,172,338,173,174,339,340,341,342,343,344,345,114,346,115,116,347,348,117,349,185,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,186,366,118,367,368,369,370,371,119,187,372,373,374,120,375,121,122,376,377,378,379,127,128,129,130,131,132,133,134,135,136,137,380,204,381,382,188,205,383,138,139,140,141,384,385,142,143,386,144,145,146,147,148,149,387,150,151,388,389,390,391,392,393,394,395,396,397,398,399,400,401,191,192,402,403,404,405,406,407,408,409,193,410,194,411,412,413,414,415,416,417,152,418,419,195],"tindex":"ac7f09a5-dbce-11e4-bf1d-55cac940bc05","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"ac7f30b6-dbce-11e4-bf1d-d33a35d90fbb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[16,420,21],"tindex":"ac7f30b7-dbce-11e4-bf1d-a34b116c5a06","variableMapping":{"str":"str","from":"mpInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:942","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (int) + \"<->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"ac7f30b8-dbce-11e4-bf1d-f384dcc28c14","variableMapping":{"acceptBit":"acceptBit","way":"way","sidewalks":"ferries"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[420],"tindex":"ac7f30b9-dbce-11e4-bf1d-9dfbe056335f","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[],"tindex":"ac7f30ba-dbce-11e4-bf1d-a9d7c6c3968d","variableMapping":{"flags":"encoded","scDirMask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[41,42,43,44,45,46,47,22,48,49,50,51,52,53,421,422,423,424,127,128,129,130,131,132,133,134,135,136,137],"tindex":"ac7f30bb-dbce-11e4-bf1d-37f510df5961","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"ac7f30bc-dbce-11e4-bf1d-ff46c3156da5","variableMapping":{"tmp":"high","initializedCounter":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[41,42,43,45,46,47,48,49,50,51,53,129,130,131,132,136,137,425,426,427,428,429,430],"tindex":"ac7f30bd-dbce-11e4-bf1d-3140e44162b7","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[42,22,431,127,132,136,216,217,0,189,432,23,433,24,4,25,5,1,434,6,26,27,7,435,8,28,29,9,30,10,2,436,11,31,12,13,437,14,32,215],"tindex":"ac7f30be-dbce-11e4-bf1d-ff3cfae66d4f","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"ac7f30bf-dbce-11e4-bf1d-47de624eaa91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[243,318,127,128,129,130,133,134,136,390,392,396,398,399,400,401,192,402,403,404,405,406,407,408,409,193,410,194,411,412,413,414,415,416,417,152,418,419,195],"tindex":"ac7f30c0-dbce-11e4-bf1d-c5920d9c88ac","variableMapping":{"edgeId":"tmpPrevEdge","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"tmpPrevEdge","nodeA":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[],"tindex":"ac7f30c1-dbce-11e4-bf1d-91c574b442cb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[53,247,175,259,261,262,264,176,268,90,177,178,291,293,294,296,179,300,99,180,181,438,439,440,441,182,442,183,184,185,357,359,360,362,186,366,119,187,204,382,188],"tindex":"ac7f30c2-dbce-11e4-bf1d-8358f37e73a3","variableMapping":{"entries":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"ac7f30c3-dbce-11e4-bf1d-2105356e5e04","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[227,228,229,230,231,243,218,244,245,246,85,247,248,86,87,249,250,443,88,251,175,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,176,268,89,269,270,271,272,273,90,177,274,275,276,91,277,92,93,278,279,94,444,280,95,96,281,282,445,97,283,178,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,179,300,98,301,302,303,304,305,99,180,306,307,308,100,309,101,102,310,311,317,319,329,335,344,446,447,181,448,449,450,451,452,453,454,438,345,439,440,455,441,456,457,458,182,442,459,460,461,462,463,114,183,184,464,465,466,467,468,469,470,471,472,346,115,116,347,348,473,117,349,185,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,186,366,118,367,368,369,370,371,119,187,372,373,374,120,375,121,122,376,377,132,474,475,476,3,477,426,478,479,15,16,480,481,482,0,483,484,485,486,487,488,489,490,491,140,141,384,385,145,388,389,492,390,391,392,393,394,395,396,397,398,399,400,401,191,192,402,403,404,405,406,407,408,409,193,410,194,411,412,413,414,415,416,417,152,418,419,195],"tindex":"ac7f57d4-dbce-11e4-bf1d-3f63fd00ccf0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-1},{"failures":[],"tindex":"ac7f57d5-dbce-11e4-bf1d-2582f8ad2a13","variableMapping":{"calcPoints":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[153,154,163,155,156,157,158,164,165,159,43,44,45,160,161,318,319,166,321,103,104,105,322,167,323,168,169,324,325,326,327,328,329,170,171,336,111,112,113,337,172,338,173,174,339,340,341,342,343,344,378,379,129,130,131,132,133,135,136,409,411,412,415],"tindex":"ac7f57d6-dbce-11e4-bf1d-6fb4614ca430","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"status":-1},{"failures":[],"tindex":"ac7f57d7-dbce-11e4-bf1d-7d6eafd65d01","variableMapping":{"a":"closed","approx":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"ac7f57d8-dbce-11e4-bf1d-1371bb6800b1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[41,493],"tindex":"ac7f57d9-dbce-11e4-bf1d-3d6932623e58","variableMapping":{"str":"minStr","destination":"hourStr","counter":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:268","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n    if (java.lang.String.trim().isEmpty())\n        continue;\n    \n    if (int > 0)\n        java.lang.String += \", \";\n    \n    java.lang.String += java.lang.String.trim();\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"ac7f57da-dbce-11e4-bf1d-357afa40f1cc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"ac7f57db-dbce-11e4-bf1d-83a16f0ae69a","variableMapping":{"entry":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-2},{"failures":[],"tindex":"ac7f57dc-dbce-11e4-bf1d-e3178cebee20","variableMapping":{"newName":"location","this":"da","location":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:235","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.(isStoring()) && (new java.io.File(((java.lang.String) + java.lang.String)).exists()))\n    throw new java.lang.IllegalArgumentException(\"file newName already exists!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-2},{"failures":[22],"tindex":"ac7f57dd-dbce-11e4-bf1d-4b031787c31a","variableMapping":{"nameIndexRef":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"ac7f57de-dbce-11e4-bf1d-9f9613e1f073","variableMapping":{"segmentSizeInBytes":"indexDivisor","length":"indexDivisor","index":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"ac7f7eef-dbce-11e4-bf1d-dd4690c638d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:430","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"ac7f7ef0-dbce-11e4-bf1d-a1c0549292a0","variableMapping":{"distInMeter":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":0},{"failures":[],"tindex":"ac7f7ef1-dbce-11e4-bf1d-ff12b7bd1689","variableMapping":{"type":"type","defaultType":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":0},{"failures":[],"tindex":"ac7f7ef2-dbce-11e4-bf1d-635ff254b4b5","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[190],"tindex":"ac7f7ef3-dbce-11e4-bf1d-53767069d5d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"ac7f7ef4-dbce-11e4-bf1d-f9d21d2bc3d0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"ac7f7ef5-dbce-11e4-bf1d-1fdd2204711e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"ac7f7ef6-dbce-11e4-bf1d-b3a21398b63f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[25,5,27,7,30,10,13],"tindex":"ac7f7ef7-dbce-11e4-bf1d-d5c714fbc802","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"ac7f7ef8-dbce-11e4-bf1d-f3f96e971f38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[244,246,390,396,398,192,402,193,194,411,413,417,152,418,195],"tindex":"ac7f7ef9-dbce-11e4-bf1d-81cf95e086a1","variableMapping":{"factor":"weight","value":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":273,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":416,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":21,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":447,"com.graphhopper.reader.OSMReaderTest.testFerry":41,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":227,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":198,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":104,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":128,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":291,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":61,"com.graphhopper.coll.CompressedArrayTest.testCompress":161,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":122,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":459,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":320,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":62,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":398,"com.graphhopper.GraphHopperTest.testPrepare":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":468,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":206,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":221,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":205,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":196,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":402,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":408,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":112,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":94,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":164,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":401,"com.graphhopper.GraphHopperTest.testLoadOSM":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":339,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":113,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":486,"com.graphhopper.reader.OSMReaderTest.testSort":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":17,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":382,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":96,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":373,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":115,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":469,"com.graphhopper.storage.RAMDataAccessTest.testHeader":80,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":148,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":232,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":308,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":272,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":354,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":444,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":97,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":20,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":323,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":405,"com.graphhopper.coll.OSMIDMapTest.testGetLong":57,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":404,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":300,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":266,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":86,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":176,"com.graphhopper.coll.CompressedArrayTest.testCompress2":160,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":201,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":292,"com.graphhopper.GraphHopperAPITest.testLoad":378,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":443,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":236,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":425,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":359,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":185,"com.graphhopper.storage.LevelGraphStorageTest.testClone":253,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":493,"com.graphhopper.reader.OSMReaderTest.testBarriers":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":283,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":383,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":2,"com.graphhopper.util.GHUtilityTest.testCopy":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":329,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":83,"com.graphhopper.routing.PathTest.testFindInstruction":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":435,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":178,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":217,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":229,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":210,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":313,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":374,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":363,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":306,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":394,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":203,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":255,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":451,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":242,"com.graphhopper.util.InstructionListTest.testWayList2":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":464,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":340,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":376,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":101,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":488,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":138,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":257,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":1,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":293,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":106,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":406,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":46,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":152,"com.graphhopper.coll.OSMIDMapTest.testGet":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":290,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":162,"com.graphhopper.routing.PathBidirRefTest.testExtract":384,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":56,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":207,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":325,"com.graphhopper.storage.RAMDataAccessTest.testCopy":76,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":311,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":183,"com.graphhopper.storage.RAMDataAccessTest.testSegments":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.util.GHUtilityTest.testSort2":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":413,"com.graphhopper.reader.OSMReaderTest.testMain":43,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":434,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":326,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":3,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":466,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":260,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":264,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":215,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":278,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":145,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":199,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":235,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":267,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":52,"com.graphhopper.storage.StorablePropertiesTest.testStore":60,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":75,"com.graphhopper.storage.GraphHopperStorageTest.testClone":351,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":465,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":480,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":15,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":361,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":243,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":452,"com.graphhopper.routing.PathTest.testTime":491,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":92,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":484,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":342,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":270,"com.graphhopper.reader.OSMReaderTest.testRelation":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":442,"com.graphhopper.util.GHUtilityTest.testSortDirected":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":19,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":423,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":71,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":144,"com.graphhopper.GraphHopperTest.testFootOnly":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":478,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":167,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":403,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":456,"com.graphhopper.search.NameIndexTest.testCreate":126,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":81,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":142,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":239,"com.graphhopper.routing.QueryGraphTest.testOneWay":387,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":111,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":153,"com.graphhopper.reader.OSMReaderTest.testWithBounds":51,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":84,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":74,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":309,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":460,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":189,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":251,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":249,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":302,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":297,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":117,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":192,"com.graphhopper.util.InstructionListTest.testWayList":35,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":375,"com.graphhopper.GraphHopperAPITest.testDisconnected179":379,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":453,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":448,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":212,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":231,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":182,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":471,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":131,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":353,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":108,"com.graphhopper.routing.util.EncodedValueTest.testSwap":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":399,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":369,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":397,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":91,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":481,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":6,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":419,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":473,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":346,"com.graphhopper.routing.PathTest.testWayList":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":470,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":439,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":420,"com.graphhopper.coll.OSMIDMapTest.testGet2":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":195,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":68,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":274,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":301,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":288,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":168,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":265,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":169,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":77,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":72,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":429,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.util.GHUtilityTest.testSort":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":463,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":209,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":428,"com.graphhopper.search.NameIndexTest.testPut":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":310,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":445,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":321,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":110,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":332,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":30,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":139,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":330,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":280,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":430,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":39,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":418,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":204,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":241,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":114,"com.graphhopper.routing.PathTest.testFound":490,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":137,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":433,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":276,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":190,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":208,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":294,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":125,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":345,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":73,"com.graphhopper.util.InstructionListTest.testEmptyList":226,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":411,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":483,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":475,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":414,"com.graphhopper.reader.PrinctonReaderTest.testRead":230,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":120,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":105,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":289,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":58,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":446,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":299,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":432,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":29,"com.graphhopper.reader.OSMReaderTest.testFoot":42,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":40,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":462,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":173,"com.graphhopper.reader.OSMReaderTest.testOneWay":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":174,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":360,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":187,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":307,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":70,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":367,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":458,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":393,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":400,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":391,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":455,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":386,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":347,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":219,"com.graphhopper.routing.PathBidirRefTest.testExtract2":385,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":341,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":123,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":202,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":22,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":472,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":337,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":372,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":256,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":482,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":118,"com.graphhopper.GraphHopperTest.testFootAndCar":132,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":328,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":449,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":485,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":285,"com.graphhopper.GraphHopperTest.testPrepareOnly":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":417,"com.graphhopper.GraphHopperTest.testVia":129,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":316,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":181,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":49,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":246,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":37,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":474,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":457,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":487,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":275,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":177,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":95}}]
