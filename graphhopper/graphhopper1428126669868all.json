[{"failures":[],"tindex":"98513f4b-da8e-11e4-b6af-f7bbcb38e3c6","variableMapping":{"len":"nodeB","start":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9851665c-da8e-11e4-b6af-0355c893c969","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"9851665d-da8e-11e4-b6af-1b821848eab0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"status":-1},{"failures":[],"tindex":"9851665e-da8e-11e4-b6af-d740c3c96e5d","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"dLon","edgeTo":"sLat","edgeFrom":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"9851665f-da8e-11e4-b6af-f7f2f986aad3","variableMapping":{"currentBucket":"segmentSizePower","retBucket":"segmentSizePower","currentIndex":"segmentSizePower","bucketSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"98518d70-da8e-11e4-b6af-0b188665e7ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[61,62,63,64,65,66,67,68,69,70,71],"tindex":"98518d71-da8e-11e4-b6af-cb747324cca6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"98518d72-da8e-11e4-b6af-2b662f7dd972","variableMapping":{"need":"com.graphhopper.coll.SparseIntIntArray.DELETED","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":0},{"failures":[],"tindex":"98518d73-da8e-11e4-b6af-29490c9a5983","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-2},{"failures":[72,73,74],"tindex":"98518d74-da8e-11e4-b6af-ad17e123371c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"98518d75-da8e-11e4-b6af-e99d429efaee","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71],"tindex":"98518d76-da8e-11e4-b6af-fb47029eba3c","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"98518d77-da8e-11e4-b6af-f90aa317a54a","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[],"tindex":"98518d78-da8e-11e4-b6af-01ee2eb03adc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[75,76,77,78,79],"tindex":"98518d79-da8e-11e4-b6af-cf65dc918129","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[80],"tindex":"98518d7a-da8e-11e4-b6af-45b6834946d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"98518d7b-da8e-11e4-b6af-0b5135a1a251","variableMapping":{"hash":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[72,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,61,62,104,105,106,107,108,109,110,63,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,80,127,73,128,129,130,131,132,133,134,135,136,137,138,139,140,141,64,142,143,144,145,146,147,148,65,149,150,151,152,153,154,155,66,156,67,157,158,159,160,161,162,163,164,165,68,166,167,168,169,170,171,172,173,174,175,69,176,70,177,178,179,180,181,182,183,184,185,71,186,187,188,189,12,22,190],"tindex":"9851b48c-da8e-11e4-b6af-ab2e18310adf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[0,6,21,28,191,192,193,194,195],"tindex":"9851b48d-da8e-11e4-b6af-4548c39e1671","variableMapping":{"need":"nodeA","i":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"9851b48e-da8e-11e4-b6af-d58081126c73","variableMapping":{"cap":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"985202af-da8e-11e4-b6af-39ce2d00d5dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"985202b0-da8e-11e4-b6af-198877597f1c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"985202b1-da8e-11e4-b6af-efac46d04aa8","variableMapping":{"latSize":"length","lonSize":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[196,197,198],"tindex":"985229c2-da8e-11e4-b6af-bb8ab231195b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[130,199,200],"tindex":"985250d3-da8e-11e4-b6af-ed95b4886f44","variableMapping":{"version":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:82","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-1},{"failures":[8,9,201,202,14,18,22,23,26,29,30,31,33],"tindex":"985250d4-da8e-11e4-b6af-f1c1d0feff87","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-1},{"failures":[129],"tindex":"985250d5-da8e-11e4-b6af-cd4329e0dccc","variableMapping":{"eleDelta":"backSpeed","decEleSum":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"985250d6-da8e-11e4-b6af-8b5e73341e1a","variableMapping":{"res":"forwardBit","value":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"985250d7-da8e-11e4-b6af-d9ed2297b5cc","variableMapping":{"hash":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[74],"tindex":"985250d8-da8e-11e4-b6af-e3911c437736","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[72,81,82,83,85,86,87,88,92,93,94,97,100,101,103,61,62,105,107,108,63,111,113,114,140,141,64,142,144,146,65,149,151,153,154,155,66,156,67,160,162,163,68,166,168,169,173,174,175,69,176,70,180,182,183,71,186,188,189],"tindex":"985250d9-da8e-11e4-b6af-7916327c7c63","variableMapping":{"versionHint":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[203,3,6,204,81,82,83,85,86,87,88,89,92,205,206,97,100,101,61,62,106,63,118,121,134,207,208,140,64,145,65,154,66,67,157,161,68,174,69,70,177,181,71],"tindex":"985250da-da8e-11e4-b6af-c9af77b3d8f2","variableMapping":{"bytePos":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":-1},{"failures":[81,94],"tindex":"985250db-da8e-11e4-b6af-c13e29564bd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"985277ec-da8e-11e4-b6af-950fd85e30e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"985277ed-da8e-11e4-b6af-8d422e6169cc","variableMapping":{"size":"length","i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[196,35,36,39,209,210,211,40,41,43,46,212,213,214,47,48,49,52,215,216,217,53,54,55,58,218,219,220,59,60],"tindex":"985277ee-da8e-11e4-b6af-1b923f2d7276","variableMapping":{"i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"985277ef-da8e-11e4-b6af-c30e879fde76","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"985277f0-da8e-11e4-b6af-bf52060aca4f","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[],"tindex":"985277f1-da8e-11e4-b6af-8b0c3a819494","variableMapping":{"eIter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:283","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"985277f2-da8e-11e4-b6af-d1d04ecc13d8","variableMapping":{"lockFile":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:159","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"985277f3-da8e-11e4-b6af-91e245c6cd6e","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[221,222,223,224,225,226,227,228,229,21,230,231,232,233,234,235,236,237,238,239,240],"tindex":"985277f4-da8e-11e4-b6af-d9f9e6201651","variableMapping":{"bits":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[96],"tindex":"985277f5-da8e-11e4-b6af-b3bf62a70033","variableMapping":{"bytesForFlags":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[],"tindex":"985277f6-da8e-11e4-b6af-f117acb0b49b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[93,126,129,137,241],"tindex":"985277f7-da8e-11e4-b6af-9369ddf790ab","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[81,82,83,84,87,88,90,91,92,94],"tindex":"985277f8-da8e-11e4-b6af-318dad8ea623","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-1},{"failures":[],"tindex":"98529f09-da8e-11e4-b6af-ddb15dc69ed3","variableMapping":{"node":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","i":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","iter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:91","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n} else {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,242,23,24,25,26,27,28,243,29,30,31,32,33,34,244],"tindex":"98529f0a-da8e-11e4-b6af-59b2d6a9b8bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.createAndInitPath()"},"status":-1},{"failures":[],"tindex":"98529f0b-da8e-11e4-b6af-f5113efe95e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"98529f0c-da8e-11e4-b6af-e333937483cc","variableMapping":{"bits":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[97,100,114,151,154,169,174,189],"tindex":"98529f0d-da8e-11e4-b6af-3f9f279e689f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[199],"tindex":"98529f0e-da8e-11e4-b6af-71c0a9cceabc","variableMapping":{"currentEntry":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"98529f0f-da8e-11e4-b6af-ff89a4da3ac9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[245,246,241,247,248],"tindex":"9852ed30-da8e-11e4-b6af-a128047fd73e","variableMapping":{"resultOrientation":"resultOrientation","orientation":"resultOrientation","java.lang.Math.PI":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"9852ed31-da8e-11e4-b6af-819f6ce349a9","variableMapping":{"flags":"acceptBit","tmpValue":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"9852ed32-da8e-11e4-b6af-4bcbd9a9b86e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9852ed33-da8e-11e4-b6af-e9316c0a9a3b","variableMapping":{"heights":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:77","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[203,3,6,81,96,99,101,115,117,118,119,121,122,23,249,250,251,252,253,254,255,256],"tindex":"9852ed34-da8e-11e4-b6af-476222895f6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:127","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"9852ed35-da8e-11e4-b6af-7dd8d66d73fb","variableMapping":{"finishedTo":"synched","finishedFrom":"synched"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[171],"tindex":"9852ed36-da8e-11e4-b6af-d7fc59f9387b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"9852ed37-da8e-11e4-b6af-5bdd89f40b76","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[203,257,0,1,2,3,4,258,259,5,6,204,260,261,262,72,81,82,83,84,85,86,87,88,89,90,91,92,93,205,94,263,263,264,264,265,266,267,206,268,269,270,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,95,285,286,287,288,117,196,289,138,35,197,198,170,171,7,290,8,291,292,293,294,295,9,10,201,296,202,11,12,13,14,15,16,17,18,19,20,21,22,242,23,24,25,26,27,28,243,29,30,31,32,33,297,298,299,300,245,246,241,301,302,303,304,305,306,307,308,34,244,309,310,311,312,313,314,315,316,317,318,319,249,320,321,322,323,324,325,250,232,326,327,328,329,330,233,331,234,235,332,333,334,335,336,337,251,338,339,340,341,342,343,344,191,345,346,237,347,192,348,349,350,238,351,239,240,352,193,194,353,354,195,252,355,356,357,358,359,36,360,361,362,363,364,253,365,37,75,38,39,366,209,367,368,369,210,211,370,371,372,373,374,375,40,41,376,377,378,379,380,381,382,383,384,385,386,387,388,389,190,390,391,392,42,393,394,395,396,397,398,399,400,43,401,402,403,404,405,254,406,44,76,45,46,407,212,408,409,410,213,214,411,412,413,414,415,416,47,48,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,49,436,437,438,439,440,255,441,50,77,51,52,442,215,443,444,445,216,217,446,447,448,449,450,451,53,54,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,55,469,470,471,472,473,256,474,56,78,57,58,475,218,476,477,478,219,220,479,480,481,482,483,484,59,60,485,486,487,488,489,490,491,492,493,494,495,496],"tindex":"98531448-da8e-11e4-b6af-6b4157f6f20c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[221,497],"tindex":"98531449-da8e-11e4-b6af-27bf87ec3f98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"9853144a-da8e-11e4-b6af-ebc9a03e5434","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:413","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId())"},"status":-2},{"failures":[],"tindex":"9853144b-da8e-11e4-b6af-6302c25bb99a","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[112,150,167,187],"tindex":"9853144c-da8e-11e4-b6af-3da03ab2c3d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"9853144d-da8e-11e4-b6af-c58872505356","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9853144e-da8e-11e4-b6af-3d37d952176a","variableMapping":{"angle":"java.lang.Double.MAX_VALUE","com.graphhopper.util.AngleCalc.PI3_4":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[286,245,246,248],"tindex":"9853144f-da8e-11e4-b6af-3f9e24d5b980","variableMapping":{"orientation":"resultOrientation","java.lang.Math.PI":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[171],"tindex":"98531450-da8e-11e4-b6af-a3a757c0517d","variableMapping":{"tmp":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[221,222,224,497,225,226,229,230,231],"tindex":"98531451-da8e-11e4-b6af-975018d5261c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"98531452-da8e-11e4-b6af-2b2790657849","variableMapping":{"mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-2},{"failures":[12,22],"tindex":"98531453-da8e-11e4-b6af-d78a8d2e4016","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[72,81,82,83,85,86,87,88,92,93,94,97,100,101,103,61,62,105,107,108,63,111,113,114,140,141,64,142,144,146,65,149,151,153,154,155,66,156,67,160,162,163,68,166,168,169,173,174,175,69,176,70,180,182,183,71,186,188,189],"tindex":"98533b64-da8e-11e4-b6af-13151f5cc0d3","variableMapping":{"segmentSizeInBytes":"priorityFromRelation","index":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[7,9,10,11,12,13,14,17,18,28,29,30,31,33],"tindex":"98533b65-da8e-11e4-b6af-a1416c95c6bb","variableMapping":{"fullyLoaded":"reverseOrder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:658","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"98533b66-da8e-11e4-b6af-b791946fc668","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"98533b67-da8e-11e4-b6af-f7e107d8d21b","variableMapping":{"a_lat_deg":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"98533b68-da8e-11e4-b6af-7b8458f7c3e6","variableMapping":{"deltaX":"fwdDecline","tmp":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[3,6,96,99,101,115,116,117,118,119,120,121,122,123,12,13,14,15,16,17,18,19,20,21,22,242,23,24,25,26,27,28,243,29,30,31,32,33,249,250,251,252,358,359,36,360,361,362,363,364,253,365,37,75,38,39,366,209,367,368,369,210,211,370,371,372,373,374,375,40,41,376,377,378,379,380,381,382,383,384,388,389,190,390,391,392,42,393,394,395,396,397,398,399,400,43,401,402,403,404,405,254,406,44,76,45,46,407,212,408,409,410,213,214,411,412,413,414,415,416,47,48,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,49,436,437,438,439,440,255,441,50,77,51,52,442,215,443,444,445,216,217,446,447,448,449,450,451,53,54,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,55,469,470,471,472,473,256,474,56,78,57,58,475,218,476,477,478,219,220,479,480,481,482,483,484,59,60,485,486,487,488,489,490,491,492,493],"tindex":"98533b69-da8e-11e4-b6af-a3b9f1ae3f2a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[],"tindex":"98533b6a-da8e-11e4-b6af-1dc3af92a68e","variableMapping":{"keyIndex":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":0},{"failures":[],"tindex":"98533b6b-da8e-11e4-b6af-a7a92419303d","variableMapping":{"maxTurnCosts":"segmentsToCreate","turnRestrictionBit":"cap","flags":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[196,35,36,39,209,210,211,40,41,43,46,212,213,214,47,48,49,52,215,216,217,53,54,55,58,218,219,220,59,60],"tindex":"98533b6c-da8e-11e4-b6af-2b25df1212ba","variableMapping":{"strLen":"low","bLen":"low"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"98533b6d-da8e-11e4-b6af-9d42cf6e65f0","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[84,90,104,115,124,143,159,179],"tindex":"9853627e-da8e-11e4-b6af-7b2366f1755b","variableMapping":{"sacScale":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[0,1,2,5,81,82,87,94,276,279,95,119,80,128,131,135,289,35,171,7,290,8,291,292,9,10,201,202,11,12,13,14,15,18,21,22,24,25,26,27,28,29,30,31,33,34,359,36,75,367,373,376,379,383,388,400,43,76,408,414,417,420,424,435,49,77,443,449,452,455,459,468,55,78,476,482,485,488,492],"tindex":"9853627f-da8e-11e4-b6af-f3a74ddf54a6","variableMapping":{"todoBytes":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[3,72,81,97,99,100,101,119,33],"tindex":"98536280-da8e-11e4-b6af-f5c82d9d2156","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"98536281-da8e-11e4-b6af-73c291513478","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"98536282-da8e-11e4-b6af-d3a58a66aa88","variableMapping":{"precision":"lat","lat":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[],"tindex":"98536283-da8e-11e4-b6af-6df26c3c75f2","variableMapping":{"high":"flags","len":"dir","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[],"tindex":"98536284-da8e-11e4-b6af-537319518476","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 1))"},"status":-2},{"failures":[],"tindex":"98536285-da8e-11e4-b6af-81471be070f7","variableMapping":{"level":"removed","lg":"g","polledNode":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:348","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.setLevel(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"98536286-da8e-11e4-b6af-53bbcda0e1f4","variableMapping":{"high":"flags","guess":"shift","low":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"98536287-da8e-11e4-b6af-59bc452fa909","variableMapping":{"name":"location","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:178","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess == null)\n    throw new java.lang.IllegalStateException((\"Couldn\\'t remove dataAccess object:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":0},{"failures":[],"tindex":"98538998-da8e-11e4-b6af-81500a963faa","variableMapping":{"fromX":"minLon","toX":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[9,202,498,499,500,501,502],"tindex":"98538999-da8e-11e4-b6af-33f3f64aa7e7","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[72,73],"tindex":"9853899a-da8e-11e4-b6af-71a19318b7d2","variableMapping":{"midLat":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[94,196,138,35,36,37,38,39,209,210,211,40,41,42,43,44,45,46,212,213,214,47,48,49,50,51,52,215,216,217,53,54,55,56,57,58,218,219,220,59,60],"tindex":"9853899b-da8e-11e4-b6af-b382416a4671","variableMapping":{"width":"start","i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"9853899c-da8e-11e4-b6af-b19652fe0ee8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":416,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":243,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":273,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":200,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":392,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":359,"com.graphhopper.reader.OSMReaderTest.testFerry":72,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":306,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":156,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":348,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":257,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":50,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":264,"com.graphhopper.coll.CompressedArrayTest.testCompress":231,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":148,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":491,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":370,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":346,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":201,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":380,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":7,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":478,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":502,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":22,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":300,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":338,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":65,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":298,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":237,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":20,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":328,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":458,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":67,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":426,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":227,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":399,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":500,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":11,"com.graphhopper.GraphHopperTest.testLoadOSM":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":329,"com.graphhopper.reader.OSMReaderTest.testSort":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":166,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":430,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":486,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":462,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":381,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":279,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":454,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":415,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":473,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":427,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":69,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":434,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":350,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":16,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":43,"com.graphhopper.coll.OSMIDMapTest.testGetLong":312,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":436,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":409,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":394,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":213,"com.graphhopper.coll.CompressedArrayTest.testCompress2":230,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":103,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":77,"com.graphhopper.GraphHopperAPITest.testLoad":34,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":115,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":57,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":55,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":74,"com.graphhopper.storage.LevelGraphStorageTest.testClone":402,"com.graphhopper.reader.OSMReaderTest.testBarriers":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":191,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.util.GHUtilityTest.testCopy":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":109,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":150,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":318,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":145,"com.graphhopper.routing.PathTest.testFindInstruction":286,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":49,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":498,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":121,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":308,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":175,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":315,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":487,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":476,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":294,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":184,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":99,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":363,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":465,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":79,"com.graphhopper.util.InstructionListTest.testWayList2":246,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":333,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":492,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":439,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":66,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":496,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":457,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":170,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":463,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":209,"com.graphhopper.storage.RAMDirectoryTest.testSynched":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":51,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":18,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":468,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":30,"com.graphhopper.coll.OSMIDMapTest.testGet":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":441,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":122,"com.graphhopper.routing.PathBidirRefTest.testExtract":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":160,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":311,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":251,"com.graphhopper.util.GHUtilityTest.testSort2":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":26,"com.graphhopper.reader.OSMReaderTest.testMain":82,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":194,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":126,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":431,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":76,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":212,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":208,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":424,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":45,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":173,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":410,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":93,"com.graphhopper.storage.StorablePropertiesTest.testStore":494,"com.graphhopper.storage.GraphHopperStorageTest.testClone":470,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":377,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":131,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":129,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":475,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":388,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":364,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":390,"com.graphhopper.routing.PathTest.testTime":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":108,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":422,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":403,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":343,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":335,"com.graphhopper.reader.OSMReaderTest.testRelation":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":211,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":413,"com.graphhopper.util.GHUtilityTest.testSortDirected":305,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":501,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":186,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":356,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":275,"com.graphhopper.GraphHopperTest.testFootOnly":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":340,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":238,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":367,"com.graphhopper.search.NameIndexTest.testCreate":271,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":272,"com.graphhopper.routing.QueryGraphTest.testOneWay":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":224,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":144,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":327,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":221,"com.graphhopper.reader.OSMReaderTest.testWithBounds":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":39,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":277,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":456,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":371,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":97,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":400,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":396,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":185,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":151,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":448,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":128,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":443,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":467,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.util.InstructionListTest.testWayList":245,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":158,"com.graphhopper.GraphHopperAPITest.testDisconnected179":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":253,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":497,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":182,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":262,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":210,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":383,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":2,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":472,"com.graphhopper.routing.util.EncodedValueTest.testSwap":207,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":152,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":482,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":10,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":132,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":420,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":68,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":32,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":169,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":461,"com.graphhopper.routing.PathTest.testWayList":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":127,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":199,"com.graphhopper.coll.OSMIDMapTest.testGet2":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":33,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":417,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":164,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":477,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":440,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":471,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":239,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":408,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":240,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":179,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":499,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":61,"com.graphhopper.util.GHUtilityTest.testSort":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":374,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":163,"com.graphhopper.search.NameIndexTest.testPut":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":459,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":469,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":344,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":176,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":320,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":428,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":104,"com.graphhopper.storage.MMapDirectoryTest.testSynched":355,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":444,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":196,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":407,"com.graphhopper.routing.PathTest.testFound":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":375,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":101,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":204,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":419,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":162,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":52,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":270,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":75,"com.graphhopper.util.InstructionListTest.testEmptyList":299,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":124,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":149,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":27,"com.graphhopper.reader.PrinctonReaderTest.testRead":261,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":488,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":349,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":37,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":222,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":358,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":401,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":445,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":174,"com.graphhopper.reader.OSMReaderTest.testFoot":81,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":267,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":373,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":234,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":139,"com.graphhopper.reader.OSMReaderTest.testOneWay":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":235,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":58,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":453,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":146,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":178,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":369,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":293,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":291,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":117,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":366,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":274,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":205,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":464,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":357,"com.graphhopper.routing.PathBidirRefTest.testExtract2":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":63,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":334,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":268,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":484,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":113,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":87,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":384,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":330,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":485,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":405,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":133,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":479,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":62,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":195,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":437,"com.graphhopper.storage.StorablePropertiesTest.testLoad":495,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":29,"com.graphhopper.GraphHopperTest.testPrepareOnly":203,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":36,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":90,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":391,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":241,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":483,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":119,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":88,"com.graphhopper.util.AngleCalcTest.testCombined":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":368,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":137,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":418,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":48,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":429}}]
