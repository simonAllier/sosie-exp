[{"failures":[0,1,2,3,4,5],"tindex":"047f3a18-da46-11e4-b411-43199d61aecc","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"intendedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"04802479-da46-11e4-b411-ff4dd099fa09","variableMapping":{"val":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-1},{"failures":[],"tindex":"0480247a-da46-11e4-b411-3bde8bf637fa","variableMapping":{"edgeId":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"0480247b-da46-11e4-b411-1756ce5d9005","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[60,11,12,13,14,15,61,16,62,63,64,65,66,67,68,69,70,71,72,19,73,74,27,36,75,37,38,76],"tindex":"04804b8c-da46-11e4-b411-1765e5c061bd","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"04804b8d-da46-11e4-b411-47a20ada3c06","variableMapping":{"id":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"04804b8e-da46-11e4-b411-dd9f3c7c266b","variableMapping":{"counter":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":0},{"failures":[63,74,77,22],"tindex":"04804b8f-da46-11e4-b411-4b5fa296de63","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"index","entityType":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[78,55,79,80,58,81,82,83],"tindex":"04804b90-da46-11e4-b411-2b88d987a30a","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[22],"tindex":"04804b91-da46-11e4-b411-09bd5f4776fa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"04804b92-da46-11e4-b411-c5dc86b2776e","variableMapping":{"compressionLevel":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":0},{"failures":[],"tindex":"04804b93-da46-11e4-b411-6b4e6d307cbf","variableMapping":{"precision":"lat","lat":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[],"tindex":"04804b94-da46-11e4-b411-650b0ee22cb0","variableMapping":{"mSize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"04804b95-da46-11e4-b411-71e1706302a9","variableMapping":{"arrayLength":"value","maxGeoRef":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[11,14,63,74,76],"tindex":"04804b96-da46-11e4-b411-49f86e66ed91","variableMapping":{"oldValueIndex":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"04804b97-da46-11e4-b411-f779fdaee2ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[6,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,7,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,8,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,9,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,10,261,262,11,12,13,14,15,61,16,17,62,263,264,265,18,63,64,65,66,266,67,68,69,70,71,72,19,74,267,268,269,270,271,272,273,274,275,276,277,278,279,280,21,281,282,283,284,285,286,287,288,28,289,53,54,290,291,292,293,78,294,295,296,55,297,56,57,298,299,300,301,302,79,303,80,304,58,305,306,81,307,308,309,310,311,82,312,313,314,83,315,316,317,318,319,320,321,59,322,323,324,325,326,327,328],"tindex":"048072a8-da46-11e4-b411-9b57734e0a8f","variableMapping":{"shift":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"048072a9-da46-11e4-b411-a990ffccdcd3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"048072aa-da46-11e4-b411-3769ac7f06fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"048072ab-da46-11e4-b411-3fcbf9b0af77","variableMapping":{"minResolutionInMeter":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"048072ac-da46-11e4-b411-6590207dcaa1","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"048072ad-da46-11e4-b411-1be2c4c2555e","variableMapping":{"precision":"fwdSlower","lat":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"048072ae-da46-11e4-b411-89157f5cfbd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[329,330,331,332,333,334,335,336,337],"tindex":"048072af-da46-11e4-b411-d95f09958968","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[3],"tindex":"048072b0-da46-11e4-b411-7509548b4eb7","variableMapping":{"closed":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:181","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"048072b1-da46-11e4-b411-ef4b5c90d76c","variableMapping":{"size":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[53,54,78,303,80,58,315],"tindex":"048099c2-da46-11e4-b411-a9611ba74df0","variableMapping":{"includeWay":"millis"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:347","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"048099c3-da46-11e4-b411-5b385726fc9f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[262,60,11,12,13,14,15,61,16,17,62,18,63,64,65,66,266,67,68,69,70,71,72,19,74,77,338,22,59],"tindex":"048099c4-da46-11e4-b411-cbef6ca22255","variableMapping":{"includeWay":"relationFlags","encoder":"encoder","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:247","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"048099c5-da46-11e4-b411-e5ada37811a3","variableMapping":{"need":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[85,339,86,87,88,340,89,90,91,341,342,92,343,93,94,95,96,97,98,99,100,101,102,103,7,104,105,106,107,108,109,110,111,112,113,114,115,116,344,117,118,119,120,121,122,123,124,125,126,127,128,129,345,130,131,346,347,132,348,133,134,135,136,137,138,139,140,141,142,143,8,144,145,146,147,148,149,150,151,152,153,154,155,156,349,157,158,159,160,161,162,163,164,165,166,167,168,176,192,211,222,223,224,350,351,225,352,226,227,228,229,230,231,232,233,234,235,236,9,237,238,239,240,241,242,243,244,245,246,247,248,249,353,250,251,252,253,254,255,256,354,257,258,259,260,355,356,357,358,359,360,361,362,363,364,365,10,366,367,368,369,370,371,372,373,374,375,376,377,378,379,261,380,381,382,383,384,385,386,387,388,389,390,262,14,17,62,18,63,64,65,66,266,67,68,69,70,71,72,19,74,267,391,392,393,394,395,396,397,22,27,2,398,36,399,75,37,400,38,39,76,401,402,403,404,40,3,41,289,42,43,405,44,406,45,407,53,54,290,291,292,293,78,294,295,296,55,297,56,57,298,299,300,301,302,79,303,80,304,58],"tindex":"048099c6-da46-11e4-b411-11480c04bb16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , com.graphhopper.routing.util.FootFlagEncoder.int , com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"048099c7-da46-11e4-b411-7d276665983e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[21,281,408,409,410,320,321,59,411],"tindex":"048099c8-da46-11e4-b411-9f5f19e38624","variableMapping":{"val":"lon1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-1},{"failures":[412,413],"tindex":"048099c9-da46-11e4-b411-cb7386fd78ae","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-1},{"failures":[],"tindex":"048099ca-da46-11e4-b411-d1f29a4d1d53","variableMapping":{"len":"initialBits","start":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"048099cb-da46-11e4-b411-c545cd35946b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"0480c0dc-da46-11e4-b411-ababe656b732","variableMapping":{"deltaX":"backSpeed","maxX":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[78,79,80,58,82,83],"tindex":"0480c0dd-da46-11e4-b411-61a99ebc89b2","variableMapping":{"size":"key","from":"key","end":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[262,62],"tindex":"0480c0de-da46-11e4-b411-2905bb90eb6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"0480c0df-da46-11e4-b411-c1ce092811b2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"0480c0e0-da46-11e4-b411-c34c11db4fe5","variableMapping":{"flags":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"0480c0e1-da46-11e4-b411-53d8ce243355","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[33],"tindex":"0480c0e2-da46-11e4-b411-c15f3f9d2319","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"0480c0e3-da46-11e4-b411-49e3935a1975","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"size","tmpNode":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[414,26,32,33,400,38,39,48,52,53,55],"tindex":"0480c0e4-da46-11e4-b411-0b5e5a472547","variableMapping":{"radiusInMeter":"speed","lon":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"0480c0e5-da46-11e4-b411-a9c12043b1a3","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":0},{"failures":[68,396,415,403,416],"tindex":"0480c0e6-da46-11e4-b411-a719c459b724","variableMapping":{"acceptBit":"flags","internalFlags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-1},{"failures":[],"tindex":"0480c0e7-da46-11e4-b411-fd1c5b1381d0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"0480c0e8-da46-11e4-b411-ad3d5519c696","variableMapping":{"preferWayEncoder":"wayTypeEncoder","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.getValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[75],"tindex":"0480c0e9-da46-11e4-b411-ef60dc4660bb","variableMapping":{"nanoTime":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"0486181a-da46-11e4-b411-efaf3cb5b6be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"0486181b-da46-11e4-b411-1f8921d87e15","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"0486181c-da46-11e4-b411-2bfc1c8d39f7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"0486181d-da46-11e4-b411-53919deaf6a1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":0},{"failures":[],"tindex":"0486181e-da46-11e4-b411-e99b0eb789d0","variableMapping":{"next":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[21,281,408,417,409,410,320,321,59,411],"tindex":"0486181f-da46-11e4-b411-4f43bb21a99c","variableMapping":{"midLat":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"04863e30-da46-11e4-b411-cfc7550fb1ab","variableMapping":{"hash":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[24,25,418,29,30,31,419,46,47,420,49,50,51,421],"tindex":"04863e31-da46-11e4-b411-9964c70ddea4","variableMapping":{"segmentsToMap":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[26,32,33,38,39,48,52],"tindex":"04863e32-da46-11e4-b411-1da0f18e6468","variableMapping":{"eleDelta":"speed","decEleSum":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"04863e33-da46-11e4-b411-c7754261de0a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[178,197,329,330,422,331,332,333,334,335,336,337],"tindex":"04863e34-da46-11e4-b411-a9666b36517b","variableMapping":{"midLat":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"04863e35-da46-11e4-b411-3371e371b67a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[],"tindex":"04863e36-da46-11e4-b411-d121cfbc780b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[290,293,78,301,79,80,305,82,312],"tindex":"04863e37-da46-11e4-b411-750750ab6e2a","variableMapping":{"turnCostsCount":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[25,423,424,31,425,426,47,427,428,51,429],"tindex":"04863e38-da46-11e4-b411-6fce5b4824c1","variableMapping":{"i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"04863e39-da46-11e4-b411-a3aafd12a936","variableMapping":{"finishedTo":"synched","finishedFrom":"synched"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[338],"tindex":"04863e3a-da46-11e4-b411-9bdbd88c455c","variableMapping":{"edgePointer":"relBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"04863e3b-da46-11e4-b411-b576db32c63c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"04863e3c-da46-11e4-b411-01c6d260591d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[340,430,261,262,15,61,16,62],"tindex":"04863e3d-da46-11e4-b411-cf939186efd7","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"bufferIndex","edgeTo":"delta","edgeFrom":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[431,262,60,11,12,15,61,17,54,290,291,292,293,78,294,295,296,55,297,57,298,299,300,301,302,79,80,304,58,81,308,82,313,314,83,315],"tindex":"0486654e-da46-11e4-b411-47c8bf321bff","variableMapping":{"edgeTo":"int1","edgeFrom":"int0"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-1},{"failures":[],"tindex":"0486654f-da46-11e4-b411-f16473784778","variableMapping":{"silent":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"04866550-da46-11e4-b411-f98c63a5ac8a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"04866551-da46-11e4-b411-e971c6b821ee","variableMapping":{"daType":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[28],"tindex":"04866552-da46-11e4-b411-61f76800b834","variableMapping":{"deltaX":"fwdFaster","maxX":"decDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"04866553-da46-11e4-b411-3703c6687eb5","variableMapping":{"lastIndex":"capacity","fromIndex":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"04866554-da46-11e4-b411-37c0acf4a01e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"04866555-da46-11e4-b411-fd0c5bc0cd64","variableMapping":{"defaultSegmentSize":"skippedEdge1","graph":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:703","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"04866556-da46-11e4-b411-db39a1b8bcc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"04866557-da46-11e4-b411-e7ab02c3273f","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[177,183,185,186,432,196,202,204,205,329,330,422,331,333,334,433,434,335,336,337],"tindex":"04866558-da46-11e4-b411-096d7e6effd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"04866559-da46-11e4-b411-455fac159e03","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":0},{"failures":[],"tindex":"0486655a-da46-11e4-b411-b5d88a1c23cc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[6,84,85,339,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,7,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,8,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,435,436,437,438,439,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,9,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,354,257,258,259,260,10,261,262,11,12,13,14,15,61,16,17,62,263,264,265,18,63,64,65,66,266,67,68,69,70,71,72,19,74,267,268,269,270,271,272,273,274,275,276,277,278,279,280,21,281,282,283,284,285,286,287,288,28,289,53,54,290,291,292,293,78,294,295,296,55,297,56,57,298,299,300,301,302,79,303,80,304,58,305,306,81,307,308,309,310,311,82,312,313,314,83,315,316,317,318,319,320,321,59,322,323,324,325,326,327,328],"tindex":"04868c6b-da46-11e4-b411-e93f507c4a71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[340,91,129,131,440,224,262,15,61,16,62],"tindex":"04868c6c-da46-11e4-b411-8525e236afcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[6,84,85,87,90,91,92,93,94,95,96,97,98,100,102,104,105,106,107,108,109,110,111,112,115,116,117,118,119,120,122,125,126,127,128,129,345,130,131,132,133,134,135,136,137,138,140,142,144,145,146,147,148,149,150,151,152,155,156,157,158,159,160,162,165,166,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,235,237,238,239,240,241,242,243,244,245,248,249,250,251,252,253,255,257,258,259,260,355,356,357,358,359,360,362,364,366,367,368,369,370,371,372,373,374,377,378,261,380,381,382,384,387,388,389,390,263,264,265,267,268,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,400,404,45,53,290,291,292,293,78,294,295,296,55,297,298,299,300,301,302,79,303,80,304,58,306,81,307,308,309,310,311,82,313,314,83,315,316,317,319,320,321,59,322,323,324,325,326,327,328],"tindex":"04868c6d-da46-11e4-b411-5312e92ce53d","variableMapping":{"reverseSpeed":"this","flags":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[],"tindex":"04868c6e-da46-11e4-b411-27f22aa47fed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"04868c6f-da46-11e4-b411-bb5fd090ccf7","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[85,339,86,87,88,340,89,90,91,341,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,344,117,118,119,120,121,122,123,124,125,126,127,128,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,441,210,211,262,11,12,15,61,17,53,54,290,291,292,293,78,294,295,296,55,297,56,57,298,299,300,301,302,79,303,80,304,58,305,306,81,307,308,309,310,311,82,312,313,314,83,315,318,324,326],"tindex":"04868c70-da46-11e4-b411-015a447c2bd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.create(long)"},"status":-1},{"failures":[],"tindex":"04868c71-da46-11e4-b411-cd6c09215b70","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"04868c72-da46-11e4-b411-bbfcf4593efc","variableMapping":{"res":"encoded","value":"directionBitMask","maxBits":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:259","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"04868c73-da46-11e4-b411-df6dc8dfa053","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"04868c74-da46-11e4-b411-c5a492efbbf7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[329,330,331,332,333,334,335,336,337],"tindex":"0486b385-da46-11e4-b411-174e8e9f810c","variableMapping":{"oldValueIndex":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[442,443,444,445,446,340,91,93,113,118,123,125,129,131,133,153,158,163,165,179,181,198,200,213,214,215,216,430,224,226,246,251,256,257,447,448,449,450,262,11,15,61,16,17,62,64,266,67,268,271,272,274,275,278,21,281,303,319,320,321,59],"tindex":"0486b386-da46-11e4-b411-917246f9a845","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"0486b387-da46-11e4-b411-5323b57d75ad","variableMapping":{"i":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"0486b388-da46-11e4-b411-3968cbe294c9","variableMapping":{"node":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","i":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","iter":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:91","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n} else {\n    int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"0486b389-da46-11e4-b411-0914b96396fe","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":0},{"failures":[],"tindex":"0486b38a-da46-11e4-b411-0d843e3a90c4","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"0486b38b-da46-11e4-b411-059842f65a6d","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":117,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":302,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":33,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":340,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":356,"com.graphhopper.reader.OSMReaderTest.testFerry":18,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":322,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":199,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":60,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":411,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":143,"com.graphhopper.coll.CompressedArrayTest.testCompress":337,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":258,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":375,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":9,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":195,"com.graphhopper.util.AngleCalcTest.testOrientation":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":313,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":386,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":55,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":319,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":423,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":317,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":290,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":180,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":129,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":433,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":93,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":315,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":187,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":436,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":181,"com.graphhopper.reader.OSMReaderTest.testSort":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":52,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":346,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":254,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":224,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":387,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":274,"com.graphhopper.routing.DijkstraTest.initializationError":391,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":162,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":344,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":233,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":345,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":138,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":424,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":203,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":240,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":293,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":292,"com.graphhopper.coll.OSMIDMapTest.testGetLong":449,"com.graphhopper.coll.IntIntBinHeapTest.testSize":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":146,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":152,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":109,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":431,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":91,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":111,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":409,"com.graphhopper.coll.CompressedArrayTest.testCompress2":336,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":8,"com.graphhopper.GraphHopperAPITest.testLoad":6,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":343,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":435,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":237,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":228,"com.graphhopper.storage.LevelGraphStorageTest.testClone":97,"com.graphhopper.reader.OSMReaderTest.testBarriers":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":294,"com.graphhopper.util.GHUtilityTest.testCopy":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":360,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":211,"com.graphhopper.routing.PathTest.testFindInstruction":281,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":135,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":44,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":318,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":124,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":172,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":255,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":160,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":324,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":310,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":397,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":394,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":99,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":361,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":170,"com.graphhopper.util.InstructionListTest.testWayList2":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":382,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":188,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":259,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":428,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":440,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":288,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":350,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":101,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":446,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":78,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":227,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":266,"com.graphhopper.routing.AStarTest.initializationError":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":303,"com.graphhopper.coll.OSMIDMapTest.testGet":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":142,"com.graphhopper.routing.PathBidirRefTest.testExtract":279,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":406,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":113,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":168,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":380,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":192,"com.graphhopper.util.GHUtilityTest.testSort2":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":299,"com.graphhopper.reader.OSMReaderTest.testMain":64,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":151,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":36,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":384,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":7,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":107,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":127,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":104,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":29,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":169,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":110,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":19,"com.graphhopper.storage.StorablePropertiesTest.testStore":430,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":445,"com.graphhopper.storage.GraphHopperStorageTest.testClone":230,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":383,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":38,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":239,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":85,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":362,"com.graphhopper.routing.PathTest.testTime":20,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":125,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":190,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":374,"com.graphhopper.util.GHUtilityTest.testSortDirected":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":32,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":270,"com.graphhopper.GraphHopperTest.testFootOnly":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":202,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":370,"com.graphhopper.search.NameIndexTest.testCreate":444,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":267,"com.graphhopper.routing.QueryGraphTest.testOneWay":276,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":179,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":329,"com.graphhopper.reader.OSMReaderTest.testWithBounds":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":164,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":367,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":376,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":77,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":94,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":342,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":155,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":222,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":148,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":226,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":54,"com.graphhopper.util.InstructionListTest.testWayList":320,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":354,"com.graphhopper.GraphHopperAPITest.testDisconnected179":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":363,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":358,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":265,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":389,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":232,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":314,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":249,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":56,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":312,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":429,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":304,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":441,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":223,"com.graphhopper.routing.PathTest.testWayList":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":388,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":366,"com.graphhopper.coll.OSMIDMapTest.testGet2":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":58,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":154,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":242,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":140,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":231,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":108,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":205,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":1,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":426,"com.graphhopper.util.GHUtilityTest.testSort":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":379,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":34,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":0,"com.graphhopper.search.NameIndexTest.testPut":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":167,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":348,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":174,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":197,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":216,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":219,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":30,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":217,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":130,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":4,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":414,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":149,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":282,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":439,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":261,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":62,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":122,"com.graphhopper.util.AngleCalcTest.testAtan2":417,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":86,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":145,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":443,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":10,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":296,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":404,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":398,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":2,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":26,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":300,"com.graphhopper.reader.PrinctonReaderTest.testRead":264,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":200,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":141,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":365,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":355,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":150,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":396,"com.graphhopper.reader.OSMReaderTest.testFoot":63,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":378,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":185,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":334,"com.graphhopper.reader.OSMReaderTest.testOneWay":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":186,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":238,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":252,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":161,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":247,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":372,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":309,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":307,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":289,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":368,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":269,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":73,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":351,"com.graphhopper.routing.PathBidirRefTest.testExtract2":280,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":437,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":53,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":427,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":420,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":68,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":390,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":182,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":253,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":402,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":246,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":105,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":359,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":403,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":79,"com.graphhopper.GraphHopperTest.testPrepareOnly":262,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":357,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":70,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":88,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":59,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":43,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":371,"com.graphhopper.routing.AStarBidirectionTest.initializationError":392,"com.graphhopper.util.AngleCalcTest.testCombined":410,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":27,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":121,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":119,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":131}}]
