[{"failures":[],"tindex":"77dca0db-dba2-11e4-a161-0f5f21112202","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"77dd160c-dba2-11e4-a161-95bb9ffc5b92","variableMapping":{"hasOther":"edgeBased","hasRel":"edgeBased"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0],"tindex":"77dd160d-dba2-11e4-a161-bd440798191a","variableMapping":{"encoderList":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[1],"tindex":"77dd160e-dba2-11e4-a161-699b1213ae58","variableMapping":{"latSimilar":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[],"tindex":"77dd160f-dba2-11e4-a161-29d0aaad45de","variableMapping":{"type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[2,3,4,5,6],"tindex":"77dd1610-dba2-11e4-a161-9ff7897614da","variableMapping":{"bytePos":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15],"tindex":"77dd1611-dba2-11e4-a161-53a2bb8f5f08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"77dd1612-dba2-11e4-a161-5d245a2498e7","variableMapping":{"retBucket":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"77dd1613-dba2-11e4-a161-9b9cdda13f52","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24],"tindex":"77dd3d24-dba2-11e4-a161-657d520f5ae3","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-1},{"failures":[25,0,26,16,27,28,17,18,29,30,19,31,32,20,33,34,21,35,36,37,22,23,38,39,24,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"77dd3d25-dba2-11e4-a161-13f11f45ab1f","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[53,2,3,54,6],"tindex":"77dd3d26-dba2-11e4-a161-af5ebd0236d7","variableMapping":{"segmentsToMap":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"77dd3d27-dba2-11e4-a161-bff5c2540dc4","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"segmentSizeIntsPower","nodeId":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"77dd3d28-dba2-11e4-a161-e3a6741bd75c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[28,32,36,37],"tindex":"77dd3d29-dba2-11e4-a161-336986a54089","variableMapping":{"initLeafSize":"speed","maxLeafEntries":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[55,8,56,12,4,14,15,6],"tindex":"77dd3d2a-dba2-11e4-a161-af8296fb5c88","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[57],"tindex":"77dd3d2b-dba2-11e4-a161-891a65028225","variableMapping":{"i":"hash","child":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[],"tindex":"77dd3d2c-dba2-11e4-a161-c3810ee79244","variableMapping":{"lat":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[],"tindex":"77dd3d2d-dba2-11e4-a161-23e0f01c4280","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"77dd3d2e-dba2-11e4-a161-57d708f383f9","variableMapping":{"start":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"77dd3d2f-dba2-11e4-a161-4f7faa6afb30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[58,0,59,18,60,36,61,23],"tindex":"77dd3d30-dba2-11e4-a161-17d6dd6d1dfd","variableMapping":{"r":"speed","angle":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[58,0,16,62,63,17,59,18,19,64,20,60,21,65,66,67,36,68,22,61,23,24,69,47,48,70,71,72,73,74,75,76,77,51],"tindex":"77dd3d31-dba2-11e4-a161-75db89846863","variableMapping":{"resultOrientation":"speed","orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[78,79,80,81,82,83,84,85,86],"tindex":"77dd6442-dba2-11e4-a161-ed1001ff9b78","variableMapping":{"i":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[43],"tindex":"77dd6443-dba2-11e4-a161-21667f371ea1","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"77dd6444-dba2-11e4-a161-ff905c27263e","variableMapping":{"size":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"77dd6445-dba2-11e4-a161-f7258b44f7d8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"77dd6446-dba2-11e4-a161-97d26c42b029","variableMapping":{"fwdFaster":"maxLonTmp","incDist2DSum":"maxLonTmp","fwdSlower":"midLon","fullDist2D":"maxLonTmp","restDist2D":"midLon","speed":"maxLonTmp","decDist2DSum":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"77dd6447-dba2-11e4-a161-bf6d0316f8e4","variableMapping":{"maxLatTmp":"fwdDecline","minLatTmp":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"77dd6448-dba2-11e4-a161-530fc9780ff7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[106,78,107,108,109,79,110,111,112,113,80,114,115,116,81,117,118,119,120,82,121,122,123,83,124,125,126,127,84,128,129,130,131,85,132,133,134,135,86],"tindex":"77dd6449-dba2-11e4-a161-ffc8610066ff","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"key","speed":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"77dd644a-dba2-11e4-a161-1ba6564e2d9d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"77dd644b-dba2-11e4-a161-9333e3fee94e","variableMapping":{"nodeThis":"nextNodeBit","nextEdgeOther":"nextNodeBit","nodeOther":"nextNodeBit","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[136,137,138,139,140,141,142,54,143,144,145,146,147,148,149,150,151,152,153,154,47,48,70,71,49,72,73,74,75,50,155,76,77,51,156,157,158,159,160,52,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,113,196,197,198,199,200,201,120,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,135,217,218,219,220,221,222,223,224,225],"tindex":"77dd644c-dba2-11e4-a161-cb6bb02ef97d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[226,227,228,229,57,230,231,232,233,44,234,235,236,237,45,238,239,240,46,241,242,243,244,245,246,247,7,248,249,55,250,251,252,253,254,8,9,255,256,56,53,2,3,10,257,258,11,12,259,260,261,4,262,5,263,264,265,266,13,267,14,54,15,268,6,146,269,270,153,154,271,272,163,273,274,275,276,277,191,278,279,192,193,280,281,282,194,283,107,284,285,286,287,288,289,290,108,291,109,79,292,110,293,294,295,111,112,195,296,297,298,299,300,113,80,301,302,303,196,304,305,197,306,307,308,198,199,309,310,311,200,312,114,313,314,315,316,317,318,319,115,320,116,81,321,117,322,323,324,118,119,201,325,326,327,328,329,120,82,330,331,332,202,333,334,203,335,336,337,338,121,339,340,341,342,343,344,345,122,346,123,83,347,124,348,349,350,125,126,351,352,353,354,355,204,127,84,356,357,358,359,360,361,362,363,364,365,366,367,368,369,212,128,370,213,214,371,372,373,215,374,129,375,376,377,378,379,380,381,130,382,131,85,383,132,384,385,386,133,134,216,387,388,389,390,391,135,86,392,393,394,217,395,396,218,397,398],"tindex":"77dd8b5d-dba2-11e4-a161-65178a3ce8e3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-1},{"failures":[399],"tindex":"77dd8b5e-dba2-11e4-a161-e9d7092b627c","variableMapping":{"str":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[136,137,138,139,140,141,142,54,143,144,145,146,147,148,149,150,151,152,153,154,47,48,70,71,49,72,73,74,75,50,155,76,77,51,156,157,158,159,52,161,162,164,165,166,167,169,170,171,172,173,174,175,176,177,183,184,185,186,187,188,189,191,192,198,213],"tindex":"77dd8b5f-dba2-11e4-a161-013a18b76dc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[400],"tindex":"77dd8b60-dba2-11e4-a161-c5a15cdf9514","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"prevConnectedId","speed":"prevConnectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"77dd8b61-dba2-11e4-a161-ddc8783daddb","variableMapping":{"empty":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[47,48,70,71,49,72,73,74,75,50,155,76,77,51,159,160,52,161,162,163,164,165,166,167,168,178,179,180,181,182,401,402,191,192,193,285,300,198,199,314,329,403,404,340,204,206,405,212,213,214,376,406,407,220,408],"tindex":"77dd8b62-dba2-11e4-a161-e3c08fe3099a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"77dd8b63-dba2-11e4-a161-450c41555b59","variableMapping":{"offset":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":0},{"failures":[409,410,411,243,74,412],"tindex":"77dd8b64-dba2-11e4-a161-9bc7fa49d28e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"77dd8b65-dba2-11e4-a161-89c6801d67b3","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"biggestStart","entityType":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[7,55,9,53,2,3,10,257,258,12,259,261,4,5,263,264,265,266,13,14,15,268,6,52],"tindex":"77ddb276-dba2-11e4-a161-3d9a77bbbcd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"77ddb277-dba2-11e4-a161-85551a9aabfa","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"77ddb278-dba2-11e4-a161-73773ab4b61c","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"77ddb279-dba2-11e4-a161-c36d92c81dc1","variableMapping":{"distance":"lon","speed":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"77ddb27a-dba2-11e4-a161-f321c9c45d77","variableMapping":{"oldValueIndex":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[106,413,78,51,107,108,109,79,110,111,112,113,80,114,115,116,81,117,118,119,120,82,121,122,123,83,124,125,126,127,84,128,129,130,131,85,132,133,134,135,86],"tindex":"77ddb27b-dba2-11e4-a161-0f74b0500c29","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"77ddd98c-dba2-11e4-a161-cbca2a014331","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[399],"tindex":"77de009d-dba2-11e4-a161-9575cc12bb69","variableMapping":{"str":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:424","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,414,100,101,102,103,104,105],"tindex":"77de009e-dba2-11e4-a161-314e882a87f6","variableMapping":{"size":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"77de009f-dba2-11e4-a161-5fd396a7ecfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"77de00a0-dba2-11e4-a161-41fcff91b22c","variableMapping":{"iterState":"iterState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-2},{"failures":[229,57,410,415,36,41,416,417,42,233,418,419,43,420,44,234,235,236,237,45,238,239,240,46,241,242,243,244,245,421,422,2,3,10,257,258,11,12,259,260,261,4,262,5,263,264,265,266,13,267,14,54,15,268,6,143,423,424,425,47,48,70,71,49,72,73,74,75,50,155,76,77,51,159,163,167,168,273,274,275,277,191,278,279,192,193,280,281,282,194,283,107,284,285,286,287,288,289,290,108,291,109,79,292,110,293,294,295,111,112,195,296,297,298,299,300,113,80,301,302,303,196,304,305,197,306,307,308,198,199,309,310,311,200,312,114,313,314,315,316,317,318,319,115,320,116,81,321,117,322,323,324,118,119,201,325,326,327,328,329,120,82,330,331,332,202,333,334,203,335,336,337,338,121,339,340,341,342,343,344,345,122,346,123,83,347,124,348,349,350,125,126,351,352,353,354,355,204,127,84,356,357,358,359,360,361,362,363,364,365,366,367,368,369,212,128,370,213,214,371,372,373,215,374,129,375,376,377,378,379,380,381,130,382,131,85,383,132,384,385,386,133,134,216,387,388,389,390,391,135,86,392,393,394,217,395,396,218,397,398],"tindex":"77de00a1-dba2-11e4-a161-b926ba566fdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , com.graphhopper.routing.util.FootFlagEncoder.int , com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"77de00a2-dba2-11e4-a161-6d576c8b138f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"77de00a3-dba2-11e4-a161-9daa7e309361","variableMapping":{"directionBitMask":"flags","flags":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"77de00a4-dba2-11e4-a161-2f1e0e4892f8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[],"tindex":"77de00a5-dba2-11e4-a161-45c0cce6fce0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[0,16,17,18,19,20,21,22,23,24],"tindex":"77de26b6-dba2-11e4-a161-3f3b6c21e7b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"77de26b7-dba2-11e4-a161-e92407c2020e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"77de26b8-dba2-11e4-a161-639ddae8cdef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"77de26b9-dba2-11e4-a161-b3a6ce9e2c98","variableMapping":{"min":"speed","dist":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[],"tindex":"77de26ba-dba2-11e4-a161-7fa19b2a4362","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[106,400],"tindex":"77de26bb-dba2-11e4-a161-3972fb65115a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"77de26bc-dba2-11e4-a161-bb74bbe59bbf","variableMapping":{"edgeId":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[17,18,19,22,23,24],"tindex":"77de26bd-dba2-11e4-a161-fff8b0cdbb59","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[36],"tindex":"77de26be-dba2-11e4-a161-9f73ced47e32","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"77de26bf-dba2-11e4-a161-67622e6e0175","variableMapping":{"bytePointer":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[8,56,365],"tindex":"77de26c0-dba2-11e4-a161-9f9c119caa24","variableMapping":{"neighborUpdates":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[410,74],"tindex":"77de26c1-dba2-11e4-a161-79696a27b114","variableMapping":{"edgeCount":"encoderCount","lastEdgeIndex":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"77de26c2-dba2-11e4-a161-8b3e7f0d4ec8","variableMapping":{"length":"allBits","factor":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"77de26c3-dba2-11e4-a161-1394fb54a82e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"77de4dd4-dba2-11e4-a161-a7bde5cf7e26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"77de4dd5-dba2-11e4-a161-3f98e89e4552","variableMapping":{"edgeTo":"code","edgeFrom":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"77de4dd6-dba2-11e4-a161-ad986d812344","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"77de4dd7-dba2-11e4-a161-61ba0fc634c3","variableMapping":{"this":"this","unknownSpeed":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"77de4dd8-dba2-11e4-a161-6973b2ba2854","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"77de4dd9-dba2-11e4-a161-5f7b285315bd","variableMapping":{"iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"77de4dda-dba2-11e4-a161-698fe74fbbc2","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"77de4ddb-dba2-11e4-a161-214afe76ce3c","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"toSize","entityType":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"77de4ddc-dba2-11e4-a161-d3da943ec437","variableMapping":{"len":"acceptBit","start":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"77e0229d-dba2-11e4-a161-0d6560687e44","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"77e0229e-dba2-11e4-a161-e5e3c3262f97","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"77e0229f-dba2-11e4-a161-6357e3afe9cf","variableMapping":{"acceptBit":"defaultL","ferryBit":"defaultL","footTag":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":0},{"failures":[],"tindex":"77e022a0-dba2-11e4-a161-83fc442a7eb7","variableMapping":{"initLeafSize":"start","maxLeafEntries":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[142],"tindex":"77e022a1-dba2-11e4-a161-2b83a20e942f","variableMapping":{"speedVal":"decDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[106,78,107,108,109,79,110,111,112,113,80,114,115,116,81,117,118,119,120,82,121,122,123,83,124,125,126,127,84,128,129,130,131,85,132,133,134,135,86],"tindex":"77e049b2-dba2-11e4-a161-aba168609d61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[137,138,139,140,54,144,146,147,149,150,152,153,154,47,48,70,71,49,72,73,74,75,50,155,76,77,51,159,160,52,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,185,186,188,190,191,192,193,194,195,113,196,305,198,199,200,201,120,202,334,204,426,212,213,214,215,216,135,217,396,427],"tindex":"77e049b3-dba2-11e4-a161-95ec870bbf58","variableMapping":{"periodicUpdates":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"77e049b4-dba2-11e4-a161-c145b5484cd3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"77e049b5-dba2-11e4-a161-e9c16611665b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"77e049b6-dba2-11e4-a161-71dc31cfc06f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[48,163,167],"tindex":"77e049b7-dba2-11e4-a161-27cd04ffde6c","variableMapping":{"shift":"directionBitMask","flags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"77e049b8-dba2-11e4-a161-27659bd2ab95","variableMapping":{"need":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":-1},{"failures":[],"tindex":"77e049b9-dba2-11e4-a161-2faef4653400","variableMapping":{"retBucket":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"77e049ba-dba2-11e4-a161-8f8f98971382","variableMapping":{"flags":"flags","factor":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"77e049bb-dba2-11e4-a161-d7739306e6ee","variableMapping":{"bits":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"77e049bc-dba2-11e4-a161-ef0426abd731","variableMapping":{"need":"start","i":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[0,16,17,18,19,20,60,21,22,23,24],"tindex":"77e049bd-dba2-11e4-a161-1531c4036fd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"77e070ce-dba2-11e4-a161-fb5f03e4c33d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":391,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":267,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":338,"com.graphhopper.reader.OSMReaderTest.testFerry":47,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":227,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":187,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":160,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":108,"com.graphhopper.coll.CompressedArrayTest.testCompress":88,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":203,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":351,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":320,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":205,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":255,"com.graphhopper.GraphHopperTest.testPrepare":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":7,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":4,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":137,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":94,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":10,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":184,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":191,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":103,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":53,"com.graphhopper.GraphHopperTest.testLoadOSM":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":185,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":230,"com.graphhopper.reader.OSMReaderTest.testSort":71,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":155,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":193,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":207,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":331,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":198,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":361,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":149,"com.graphhopper.storage.RAMDataAccessTest.testHeader":408,"com.graphhopper.routing.DijkstraTest.initializationError":421,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":412,"com.graphhopper.storage.MMapDataAccessTest.testHeader":402,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":303,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":390,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":407,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":317,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":366,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":278,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":22,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":194,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":65,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":11,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":129,"com.graphhopper.coll.OSMIDMapTest.testGetLong":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":258,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":284,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":385,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":213,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":133,"com.graphhopper.coll.CompressedArrayTest.testCompress2":87,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":291,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":41,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":116,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":114,"com.graphhopper.storage.LevelGraphStorageTest.testClone":376,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":399,"com.graphhopper.reader.OSMReaderTest.testBarriers":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":411,"com.graphhopper.util.GHUtilityTest.testCopy":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":277,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":27,"com.graphhopper.routing.PathTest.testFindInstruction":154,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":107,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":226,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":419,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":395,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":332,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":253,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":370,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":415,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":422,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":378,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":342,"com.graphhopper.util.InstructionListTest.testWayList2":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":356,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":63,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":141,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":199,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":380,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":426,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":409,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":12,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":312,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":72,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":206,"com.graphhopper.routing.AStarTest.initializationError":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":54,"com.graphhopper.coll.OSMIDMapTest.testGet":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":290,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":406,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":43,"com.graphhopper.routing.PathBidirRefTest.testExtract":246,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":175,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":216,"com.graphhopper.storage.RAMDataAccessTest.testCopy":220,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":29,"com.graphhopper.storage.RAMDataAccessTest.testSegments":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":265,"com.graphhopper.reader.OSMReaderTest.testMain":70,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":111,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":31,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":235,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":358,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":382,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":132,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":397,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":131,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":37,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":403,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":386,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":77,"com.graphhopper.storage.StorablePropertiesTest.testStore":190,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":427,"com.graphhopper.storage.GraphHopperStorageTest.testClone":314,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":239,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":321,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":365,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":343,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":368,"com.graphhopper.routing.PathTest.testTime":270,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":396,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":377,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":126,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":388,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":145,"com.graphhopper.GraphHopperTest.testFootOnly":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":25,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":45,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":95,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":348,"com.graphhopper.search.NameIndexTest.testCreate":172,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":224,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":143,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":404,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":183,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":98,"com.graphhopper.reader.OSMReaderTest.testWithBounds":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":40,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":83,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":352,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":420,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":66,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":374,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":371,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":297,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":293,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":200,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":3,"com.graphhopper.util.InstructionListTest.testWayList":138,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":344,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":39,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":363,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":162,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":256,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":327,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":5,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":423,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":9,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":19,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":268,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":64,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":308,"com.graphhopper.routing.PathTest.testWayList":153,"com.graphhopper.storage.MMapDataAccessTest.testCopy":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":237,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":1,"com.graphhopper.coll.OSMIDMapTest.testGet2":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":6,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":405,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":392,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":296,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":288,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":96,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":97,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":355,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":26,"com.graphhopper.search.NameIndexTest.testPut":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":306,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":313,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":61,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":142,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":33,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":157,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":232,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":106,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":204,"com.graphhopper.routing.PathTest.testFound":269,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":36,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":168,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":394,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":79,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":171,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":346,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":261,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":263,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":44,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":266,"com.graphhopper.reader.PrinctonReaderTest.testRead":271,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":188,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":289,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":122,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":337,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":295,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":410,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":68,"com.graphhopper.reader.OSMReaderTest.testFoot":48,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":152,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":92,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":102,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":218,"com.graphhopper.reader.OSMReaderTest.testOneWay":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":93,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":81,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":82,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":302,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":211,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":325,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":252,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":240,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":250,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":417,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":347,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":309,"com.graphhopper.routing.PathBidirRefTest.testExtract2":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":274,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":169,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":329,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":74,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":364,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":8,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":330,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":242,"com.graphhopper.GraphHopperTest.testFootAndCar":163,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":201,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":60,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":222,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":340,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":14,"com.graphhopper.GraphHopperTest.testPrepareOnly":159,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":121,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":50,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":369,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":140,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":328,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":233,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":349,"com.graphhopper.routing.AStarBidirectionTest.initializationError":424,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":229,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":393,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":86,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":192}}]
