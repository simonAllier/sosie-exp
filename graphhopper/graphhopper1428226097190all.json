[{"failures":[],"tindex":"180ce6eb-db76-11e4-8707-21d10c64f16f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"180f57ec-db76-11e4-8707-39c51830f89b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[12],"tindex":"180f57ed-db76-11e4-8707-415107a1451a","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"180f57ee-db76-11e4-8707-056d67e49394","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"180f7eff-db76-11e4-8707-d943a03645cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[5,139,140,141,142,143,144,145,146,147],"tindex":"180f7f00-db76-11e4-8707-bda521cb57c2","variableMapping":{"eleDelta":"minLatTmp","decEleSum":"minLatTmp","fullDist2D":"minLatTmp","decDist2DSum":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"180f7f01-db76-11e4-8707-074862cc37ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,23,24,25,26,27,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"180f7f02-db76-11e4-8707-b3352fd69dda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"180f7f03-db76-11e4-8707-2d18299db2bd","variableMapping":{"lat":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.Circle:52","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[27,59],"tindex":"180f7f04-db76-11e4-8707-89bb2bc576ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[168],"tindex":"180f7f05-db76-11e4-8707-57f47e7ce9d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-1},{"failures":[],"tindex":"180f7f06-db76-11e4-8707-0b94b77cb17b","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[169,170,171,172,173,174,175,176,177,178,179,160,163,180,181,182],"tindex":"180f7f07-db76-11e4-8707-6f5ac40c8fe8","variableMapping":{"need":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[0,1,3,4,5,6,7,8,9],"tindex":"180f7f08-db76-11e4-8707-e1de393c9abc","variableMapping":{"dist":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[36,47,79,95,117,133],"tindex":"180f7f09-db76-11e4-8707-e3ee1a3673e7","variableMapping":{"values":"values","properties":"properties","key":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"180f7f0a-db76-11e4-8707-7d940b8b6a21","variableMapping":{"graphHopperFolder":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"180f7f0b-db76-11e4-8707-5b8094897bf5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,13,14,15,16,17,18,19,20,21,22,23,24,25,26,204,27,205,206,207,208,209,210,211,212,148,213,214,215,216,28,168,217,149,218,219,150,151,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,152,261,153,154,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,169,170,309,141,10,310,311,171,172,142,173,312,143,174,175,176,177,313,178,179,314,315,316,317,318,319,320,321,322,323,324,325,326,145,11,327,328,329,330,146,331,332,147,333,334,335,336,337,338,339,340,341,342,155,156,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,157,158,159,160,161,162,163,391,164,165,166,167,392,31,393,394,59,395,396,397,97,98,398,136,399,400,401,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,137,429,430,431,432,433,434,435,436,437,138,438,439,180,181,440,441,182,442,443,444,445,446,447],"tindex":"180fcd2c-db76-11e4-8707-ef06956a2731","variableMapping":{"str":"name","this":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg())\n    java.lang.String += \"_INT\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[36],"tindex":"180fcd2d-db76-11e4-8707-59880b66c75f","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[41],"tindex":"180fcd2e-db76-11e4-8707-5197e2a292c3","variableMapping":{"cap":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[65,67,77,85,93,103,105,115,122,123,131],"tindex":"180fcd2f-db76-11e4-8707-b5081999fdd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[22],"tindex":"180fcd30-db76-11e4-8707-a1fa949fbb6e","variableMapping":{"time":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[187,190,191,192,193,194,195,196,197,198,199,22,215,216,28,168,217,149,218,219,150,151,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,152,448,261,153,154,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,308,170,179,326,339,449,450,451,452,453,454,455,456,457,458,459,340,460,461,462,463,464,465,466,467,468,469,470,471,472,473,341,474,475,476,477,478,479,480,481,482,483,484,342,155,156,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,389,390,157,158,159,160,161,162,163,164,165,166,167,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,485,58,393,394,59,395,396,397,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,486,487,398,136,399,400,401,402,407,410,415,416,488,417,418,419,420,421,422,423,424,425,426,427,428,137,429,430,431,432,433,434,435,436,437,138,438,439,180,181,440,441,182,442,443,444,445,446,447],"tindex":"180ff441-db76-11e4-8707-53cf8f5fdd9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"180ff442-db76-11e4-8707-b587d7ba9437","variableMapping":{"length":"speed","factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"180ff443-db76-11e4-8707-4986cccd7a39","variableMapping":{"graphHopperFolder":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[],"tindex":"180ff444-db76-11e4-8707-01c4bf64c4c5","variableMapping":{"edge":"edgeEntryBytes","updatedB":"edgeEntryBytes","updatedA":"edgeEntryBytes","linkA":"edgeEntryBytes","this":"this","linkB":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"180ff445-db76-11e4-8707-77cadddce37d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":0},{"failures":[0,1,2,3,5,6,139,140,7,15,16,17,8,9,169,170,141,10,310,311,171,172,142,173,312,143,174,175,176,177,178,179,144,145,11,327,328,329,330,146,331,332,147,333,334,335,336,338,339,389,390,159,160,161,162,163,165,166,437,180,181,182],"tindex":"180ff446-db76-11e4-8707-8f4a4afc56eb","variableMapping":{"edgeId":"allBits","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"i","nodeA":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"180ff447-db76-11e4-8707-712f226b775b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[45],"tindex":"180ff448-db76-11e4-8707-85892318b721","variableMapping":{"tmp":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[489],"tindex":"18101b59-db76-11e4-8707-e7286a6cc5be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[65,67,77,85,93,103,105,115,122,123,131],"tindex":"18101b5a-db76-11e4-8707-151062fd429b","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:204","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"18101b5b-db76-11e4-8707-999cf4fd058e","variableMapping":{"prepareFlagEncoder":"flagEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.FlagEncoder) == null)\n    throw new java.lang.IllegalStateException(\"No vehicle encoder set.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[],"tindex":"18101b5c-db76-11e4-8707-478a35c1632e","variableMapping":{"need":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,490,491,13,14,15,16,17,18,19,20,21,23,24,25,26,27,205,206,207,208,209,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,148,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,28,149,219,150,151,220,223,227,234,244,250,255,257,258,152,448,261,153,154,262,265,269,276,286,291,292,297,299,300,303,304,305,306,549,307,308,169,170,309,141,10,310,311,171,172,142,173,312,143,174,175,176,177,313,178,179,315,316,317,318,319,320,321,322,323,324,550,325,326,145,11,327,328,329,330,146,331,332,147,333,334,335,336,337,338,339,449,450,451,452,453,454,455,456,457,458,459,340,460,461,462,463,464,465,466,467,468,469,470,471,472,473,341,474,475,476,477,478,479,480,481,482,483,484,342,155,156,343,346,350,357,367,372,373,378,380,381,551,385,386,387,388,389,390,157,159,160,161,162,163,164,165,166,167,31,393,394,59,395,396,397,97,98,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,137,429,430,431,432,433,434,435,436,437,138,438,439,180,181,440,441,182,442,443,444,445,446,447],"tindex":"18101b5d-db76-11e4-8707-8fbec58617d1","variableMapping":{"index":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"18101b5e-db76-11e4-8707-bd43ce87cd7b","variableMapping":{"latSimilar":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":0},{"failures":[423,429,430,431,435,180,181,440,182,443,445,447],"tindex":"18101b5f-db76-11e4-8707-fd03a073a776","variableMapping":{"mGarbage":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[552,158,159,160,163,164,416,417,418,419,420,421,422,423,425,426,427,428,429,430,431,432,433,434,435,436,437,138,438,439,180,181,440,441,182,442,443,444,445,446,447],"tindex":"18101b60-db76-11e4-8707-85812d8c2895","variableMapping":{"cap":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"18101b61-db76-11e4-8707-bb6534742eaa","variableMapping":{"empty":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[98],"tindex":"18101b62-db76-11e4-8707-0d661fab0953","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[36],"tindex":"18104273-db76-11e4-8707-7357d8626dcb","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"18104274-db76-11e4-8707-55f60c8ddac0","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":0},{"failures":[393,396],"tindex":"18104275-db76-11e4-8707-8567acc61f53","variableMapping":{"numTiles":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"18104276-db76-11e4-8707-df228bf3f92d","variableMapping":{"splitIndex":"err","entrySize":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"18104277-db76-11e4-8707-231fce52f562","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"18104278-db76-11e4-8707-5dacd60749c3","variableMapping":{"tmp":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[200,20,50,55,68,106],"tindex":"18104279-db76-11e4-8707-19f0136d2cea","variableMapping":{"err":"usedBits","dLat":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[194,26,159,40,45,46,66,104,12],"tindex":"1810427a-db76-11e4-8707-6731bd1d49ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[166,54,57,63,65,67,72,77,81,85,89,93,96,101,103,105,110,115,119,122,123,126,131,135,489,553],"tindex":"1810427b-db76-11e4-8707-a3b9a23dd111","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[0,1,3,4,5,6,7,8,9],"tindex":"1810427c-db76-11e4-8707-7558e9a4abf4","variableMapping":{"orientation":"midLat","resultOrientation":"lon","baseOrientation":"lat","java.lang.Math.PI":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[210,384],"tindex":"1810427d-db76-11e4-8707-278839f87c1b","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[13,26,27,47],"tindex":"1810427e-db76-11e4-8707-a92ca177a2fa","variableMapping":{"i":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"1810427f-db76-11e4-8707-b7e1d8553255","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"18104280-db76-11e4-8707-69b99d0c04fc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[0,1,3,5,6,139,140,8,9,141,312,143,144,145,332,147],"tindex":"18104281-db76-11e4-8707-8fd250619fa4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[20],"tindex":"18104282-db76-11e4-8707-87988ef8f943","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,13,14,15,16,17,18,19,20,21,23,24,25,26,27,554,555,541,542,543,556,557,545,558,546,547,548,215,216,28,168,217,149,218,219,150,151,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,152,261,153,154,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,169,170,309,141,10,310,311,171,172,142,173,312,143,174,175,176,177,313,178,179,314,315,316,317,318,320,321,322,323,324,325,326,145,11,327,328,329,330,146,331,332,147,333,334,335,336,337,338,339,340,341,342,155,156,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,389,390,157,158,159,160,161,162,163,164,165,166,167,31,393,394,59,395,396,397,97,98,398,136,399,400,401,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,137,429,430,431,432,433,434,435,436,437,138,438,439,180,181,440,441,182,442,443,444,445,446,447],"tindex":"18106993-db76-11e4-8707-a90fb2110368","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"18106994-db76-11e4-8707-b11f3870f83e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"18106995-db76-11e4-8707-c3ee3450ca76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"18106996-db76-11e4-8707-cd7c00574700","variableMapping":{"minLon":"lat","maxLat":"lat","minLat":"ele","maxLon":"lat","lon":"ele","lat":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:158","type":"CtReturnImpl","sourcecode":"return (((double < (double)) && (double >= (double))) && (double < (double))) && (double >= (double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"18106997-db76-11e4-8707-4f96ff322b9c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"18106998-db76-11e4-8707-a98702e1dab8","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":0},{"failures":[],"tindex":"18106999-db76-11e4-8707-79dccd45f9b9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"1810699a-db76-11e4-8707-7b260d723742","variableMapping":{"oldValueIndex":"weightLong","lastKey":"weightLong","key":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"1810699b-db76-11e4-8707-0d842075eac9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"181090ac-db76-11e4-8707-f319469557ca","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[559],"tindex":"181090ad-db76-11e4-8707-a91bad7fd034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"181090ae-db76-11e4-8707-a790360ab00c","variableMapping":{"size":"nanoTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"181090af-db76-11e4-8707-e304eb187f0c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[194,14,26,27,159,32,35,40,41,45,46,47,54,57,58,60,63,65,66,67,77,81,83,85,93,96,101,103,104,105,115,119,122,123,131,135,12],"tindex":"181090b0-db76-11e4-8707-5f62b44b5006","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"181090b1-db76-11e4-8707-1d5974015bfc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"181090b2-db76-11e4-8707-d9d90734a7e5","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"high","edge":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"1810ded3-db76-11e4-8707-f5a273da5944","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[560,552,561,562,563,417,419,420,421,423,425,427],"tindex":"181105e4-db76-11e4-8707-f9cf4f7bf8d9","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"element","speed":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[27,225,236,238,242,243,250,251,267,278,280,284,285,292,293,451,461,463,467,468,474,475,348,359,361,365,366,373,374,393,59,395],"tindex":"181105e5-db76-11e4-8707-231bb11ecb8e","variableMapping":{"a":"mValues","high":"i","len":"com.graphhopper.coll.SparseIntIntArray.DELETED","start":"valueIfKeyNotFound","key":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:387","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[],"tindex":"181105e6-db76-11e4-8707-79e826bebc61","variableMapping":{"red":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","green":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"181105e7-db76-11e4-8707-5b6cd61fb6d8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[216,168,218,169,309,159,166,416,417,423,427,430,437,138,182],"tindex":"181105e8-db76-11e4-8707-65b86cb2a59e","variableMapping":{"bitsForEdgeFlags":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[],"tindex":"181105e9-db76-11e4-8707-e751ad87b4a2","variableMapping":{"distance":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"181105ea-db76-11e4-8707-33829b457783","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"181105eb-db76-11e4-8707-9dfc23d9bcbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:504","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"181105ec-db76-11e4-8707-5f44149ebebd","variableMapping":{"location":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":0},{"failures":[],"tindex":"181105ed-db76-11e4-8707-5b5db9ce3f70","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:99","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,13,14,15,16,17,18,19,20,21,23,24,25,26,27,215,216,28,168,217,149,218,219,150,151,151,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,152,261,153,154,154,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,169,170,309,141,10,310,311,171,172,142,173,312,143,174,175,176,177,313,178,179,314,315,316,317,318,320,321,322,323,324,325,326,145,11,327,328,329,330,146,331,332,147,333,334,335,336,337,338,339,340,341,342,155,156,156,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,389,390,157,157,158,159,159,160,160,161,161,162,162,163,391,391,164,165,166,166,167,167,392,392,31,393,394,59,395,396,397,97,98,398,136,399,400,401,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,137,429,430,431,432,433,434,435,436,437,138,438,439,180,181,440,441,182,442,443,444,445,446,447],"tindex":"18112cfe-db76-11e4-8707-650d653ae4bd","variableMapping":{"ghLocation":"location","osmFile":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"18112cff-db76-11e4-8707-b75811127e79","variableMapping":{"i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"18112d00-db76-11e4-8707-7b87b6dae4fc","variableMapping":{"mask":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-2},{"failures":[],"tindex":"18112d01-db76-11e4-8707-2d82955b7396","variableMapping":{"towerNodeDistance":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"18112d02-db76-11e4-8707-2fb928543bbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[13,26,27,47],"tindex":"18112d03-db76-11e4-8707-45db3c225020","variableMapping":{"key":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[559],"tindex":"18112d04-db76-11e4-8707-dff4c16d1c4a","variableMapping":{"minutes":"val","dayStr":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"18112d05-db76-11e4-8707-4f996372d9da","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[13],"tindex":"18112d06-db76-11e4-8707-c79d735936b5","variableMapping":{"incEleSum":"longTripsSpeed","eleDelta":"durationInHours","incDist2DSum":"durationInHours","decEleSum":"shortTripsSpeed","fullDist2D":"longTripsSpeed","decDist2DSum":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"18115417-db76-11e4-8707-115c63b03f65","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[48,61,99],"tindex":"18115418-db76-11e4-8707-67b4b02c82d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"18115419-db76-11e4-8707-592cb53b8af2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"1811541a-db76-11e4-8707-217941e5d81a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"1811541b-db76-11e4-8707-4908c2ff0773","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"1811541c-db76-11e4-8707-cfa875a41113","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"1811541d-db76-11e4-8707-4f46b52655a3","variableMapping":{"graphHopperFolder":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"1811541e-db76-11e4-8707-f532e30e27f2","variableMapping":{"nodeFlags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":249,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":442,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":12,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":149,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":450,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":195,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":311,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":158,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":119,"com.graphhopper.storage.MMapDataAccessTest.testSegments":504,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":275,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":491,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":513,"com.graphhopper.coll.CompressedArrayTest.testCompress":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":92,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":381,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":469,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":309,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":514,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":535,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":425,"com.graphhopper.GraphHopperTest.testPrepare":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":480,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":364,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":415,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":563,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":138,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":191,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":93,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":184,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":141,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":396,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":62,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":555,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":430,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":436,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":328,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":67,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":152,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":139,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":500,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":223,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":562,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":428,"com.graphhopper.GraphHopperTest.testLoadOSM":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":333,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":556,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":329,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":485,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":78,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":154,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":518,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":376,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":155,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":481,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":410,"com.graphhopper.storage.RAMDataAccessTest.testHeader":536,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":200,"com.graphhopper.storage.MMapDataAccessTest.testHeader":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":296,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":492,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":501,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":248,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":509,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":544,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":353,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":448,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":103,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":173,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":181,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":172,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":433,"com.graphhopper.coll.OSMIDMapTest.testGetLong":208,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":279,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":285,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":240,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":150,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":242,"com.graphhopper.coll.CompressedArrayTest.testCompress2":8,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":276,"com.graphhopper.GraphHopperAPITest.testLoad":389,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":222,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":543,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":29,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":358,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":348,"com.graphhopper.storage.LevelGraphStorageTest.testClone":227,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":266,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":397,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":510,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":106,"com.graphhopper.util.GHUtilityTest.testCopy":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":454,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":519,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":95,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":549,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":539,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":89,"com.graphhopper.routing.PathTest.testFindInstruction":400,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":267,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":560,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":35,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":197,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":102,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":304,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":377,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":362,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":530,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":294,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":113,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":56,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":229,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":455,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":503,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":548,"com.graphhopper.util.InstructionListTest.testWayList2":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":476,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":334,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":382,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":65,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":299,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":486,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":97,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":156,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":231,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":533,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":515,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":68,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":520,"com.graphhopper.storage.RAMDirectoryTest.testSynched":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":277,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":315,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":434,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":517,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":444,"com.graphhopper.coll.OSMIDMapTest.testGet":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":274,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":36,"com.graphhopper.routing.PathBidirRefTest.testExtract":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":71,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":207,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":244,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":175,"com.graphhopper.storage.RAMDataAccessTest.testCopy":531,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":521,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":302,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":474,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":70,"com.graphhopper.storage.RAMDataAccessTest.testSegments":538,"com.graphhopper.util.GHUtilityTest.testSort2":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":440,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":284,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":40,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":478,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":234,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":238,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":259,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":553,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":235,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":100,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":542,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":241,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.storage.StorablePropertiesTest.testStore":148,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":529,"com.graphhopper.storage.GraphHopperStorageTest.testClone":350,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":477,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":47,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":211,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":45,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":360,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":133,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":456,"com.graphhopper.routing.PathTest.testTime":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":128,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":257,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":52,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":336,"com.graphhopper.reader.OSMReaderTest.testRelation":22,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":468,"com.graphhopper.util.GHUtilityTest.testSortDirected":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":116,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":525,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":406,"com.graphhopper.GraphHopperTest.testFootOnly":166,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":43,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":316,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":142,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":57,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":497,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":464,"com.graphhopper.search.NameIndexTest.testCreate":388,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":537,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":403,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":545,"com.graphhopper.routing.QueryGraphTest.testOneWay":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":337,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":88,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":327,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":0,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":540,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":117,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":528,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":298,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":394,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":461,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":470,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":54,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":224,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":114,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":281,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":346,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":429,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":512,"com.graphhopper.util.InstructionListTest.testWayList":192,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":379,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":494,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":69,"com.graphhopper.GraphHopperAPITest.testDisconnected179":390,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":457,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":145,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":505,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":111,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":467,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":554,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":483,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":161,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":352,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":317,"com.graphhopper.routing.util.EncodedValueTest.testSwap":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":426,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":61,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":370,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":439,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":424,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":48,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":77,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":263,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":446,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":313,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":541,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":557,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":81,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":342,"com.graphhopper.routing.PathTest.testWayList":399,"com.graphhopper.storage.MMapDataAccessTest.testCopy":498,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":482,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":460,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":559,"com.graphhopper.coll.OSMIDMapTest.testGet2":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":447,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":522,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":252,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":75,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":363,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":272,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":351,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":143,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":532,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":526,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":108,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":561,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":122,"com.graphhopper.util.GHUtilityTest.testSort":188,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":496,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":473,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":87,"com.graphhopper.search.NameIndexTest.testPut":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":301,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":10,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":306,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":320,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":323,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":546,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":104,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":321,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":124,"com.graphhopper.storage.MMapDirectoryTest.testSynched":384,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":202,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":487,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":445,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":393,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":547,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":341,"com.graphhopper.routing.PathTest.testFound":398,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":58,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":167,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":254,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":516,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":73,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":278,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":552,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":387,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":340,"com.graphhopper.util.InstructionListTest.testEmptyList":190,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":355,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":527,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":437,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":38,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":94,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":441,"com.graphhopper.reader.PrinctonReaderTest.testRead":198,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":378,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":506,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":171,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":273,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":1,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":449,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":283,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":493,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":101,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":203,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":472,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":6,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":332,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":82,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":147,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":359,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":374,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":90,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":524,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":107,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":466,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":420,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":144,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":511,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":427,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":418,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":523,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":31,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":462,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":405,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":204,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":343,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":551,"com.graphhopper.routing.PathBidirRefTest.testExtract2":402,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":558,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":335,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":385,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":372,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":550,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":134,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":484,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":330,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":375,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":49,"com.graphhopper.GraphHopperTest.testFootAndCar":162,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":367,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":236,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":178,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":534,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":453,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":495,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":438,"com.graphhopper.storage.StorablePropertiesTest.testLoad":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":269,"com.graphhopper.GraphHopperTest.testPrepareOnly":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":443,"com.graphhopper.GraphHopperTest.testVia":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":451,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":217,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":194,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":371,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":33,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":465,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":60,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":253,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":251,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":153}}]
