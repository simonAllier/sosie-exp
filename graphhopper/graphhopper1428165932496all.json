[{"failures":[],"tindex":"029e5295-daea-11e4-b62e-3528805849c7","variableMapping":{"lazyUpdates":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"029eeed6-daea-11e4-b62e-cbfe1da66772","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[81,82,83,84,85,86,87,88,79],"tindex":"029eeed7-daea-11e4-b62e-7786e6b4bfb2","variableMapping":{"y":"speed","angle":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"029f15e8-daea-11e4-b62e-1185c2134373","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"029f15e9-daea-11e4-b62e-b56e0b5d0702","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"029f15ea-daea-11e4-b62e-475237a5602c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[89,90,91,92],"tindex":"029f15eb-daea-11e4-b62e-7b850aadab1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:471","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[93,82,83,85,94,86,95,96,97,98,88,79],"tindex":"029f15ec-daea-11e4-b62e-7797c6296be5","variableMapping":{"message":"str","hash":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:82","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + ((this.java.lang.String) != null ? this.java.lang.String.hashCode() : 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"029f15ed-daea-11e4-b62e-6bd16c6de75c","variableMapping":{"neighborUpdates":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[8,9,99,32,33,100,34,101,35,36,37,38,102,39,40,103,41,104,42,43,44,45,57,58,59,60,61,62,105,88,63,64,65,106,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"029f15ee-daea-11e4-b62e-4db064e1e84e","variableMapping":{"width":"indexDivisor","latSimilar":"indexDivisor","lonSimilar":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"029f15ef-daea-11e4-b62e-d32051e90476","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"029f15f0-daea-11e4-b62e-63f005935b7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"029f15f1-daea-11e4-b62e-011881301e9c","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[107,108,109],"tindex":"029f15f2-daea-11e4-b62e-6b359ee03934","variableMapping":{"size":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"029f15f3-daea-11e4-b62e-fb2c5d7f85cf","variableMapping":{"noNumberValue":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:332","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"029f15f4-daea-11e4-b62e-ed6556327333","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.loadNodesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[],"tindex":"029f15f5-daea-11e4-b62e-a165a755ee4d","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[110,111,112],"tindex":"029f3d06-daea-11e4-b62e-a764d1fd190e","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"029f6417-daea-11e4-b62e-27952d4e6334","variableMapping":{"str":"wayTypeName","name":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"029f6418-daea-11e4-b62e-7dbe87488c1d","variableMapping":{"pointer":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[113,114,115,116,117,118,119,120],"tindex":"029f6419-daea-11e4-b62e-ddeba1d945ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"029f641a-daea-11e4-b62e-01b1baa7a6d2","variableMapping":{"len":"y1","i":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"029f641b-daea-11e4-b62e-b36b439b8c08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"029f641c-daea-11e4-b62e-174981e720f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"029f641d-daea-11e4-b62e-8b82a719247c","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:78","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Dijkstra.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"029f641e-daea-11e4-b62e-c95dc52a8cc3","variableMapping":{"com.graphhopper.storage.DAType.MMAP":"type","type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[121,0,122,123,124,125,1,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,2,146,147,148,149,150,3,151,152,153,154,4,155,156,5,157,158,159,160,161,162,9,163,164,10,165,166,167,168,11,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,12,189,190,191,192,193,13,194,195,196,197,14,198,199,15,200,201,16,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,17,222,223,224,225,18,19,226,227,228,229,20,230,231,21,232,233,234,235,236,237,238,239,240,241,26,242,243,244,245,27,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,28,266,267,268,269,270,29,271,272,273,274,30,275,276,31,277,278,279,280,281,282,283,284,285,286,287,288,289,290,93,82,291,292,293,294,83,84,295,296,297,298,299,300,301,302,303,304,305,113,306,307,85,308,309,310,311,89,312,313,314,315,316,317,94,318,319,114,320,115,321,116,322,323,324,117,325,326,86,327,328,329,330,90,331,332,333,334,335,336,95,337,338,118,339,340,341,342,343,91,344,345,346,347,348,349,96,350,351,119,352,353,354,355,356,357,92,358,359,360,361,362,98,363,120,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,56,387,388,389,390,391,392,393,68,394,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"029fb23f-daea-11e4-b62e-41a6a89d59dc","variableMapping":{"index":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"029fb240-daea-11e4-b62e-f5ca3007109b","variableMapping":{"lastIndex":"shift","fromIndex":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[136,179,212,256,280,281,282,283,284,285,286,287,288,289,290,93,82,291,292,293,294,83,84,295,296,297,298,299,300,301,302,303,304,305,113,306,307,85,308,309,310,311,89,312,313,314,315,316,317,94,318,319,114,320,115,321,116,322,323,324,117,325,326,86,327,328,329,330,90,331,332,333,334,335,336,95,337,338,118,339,340,341,342,343,91,344,345,346,347,348,349,96,350,351,119,352,353,354,355,356,357,92,358,359,360,361,362,98,363,120,68,394,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"029fd951-daea-11e4-b62e-b955a5b98c28","variableMapping":{"i":"shift","to":"shift","lonSize":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[113,307,308,316,317,94,114,115,116,322,117,326,327,335,336,95,118,341,342,348,349,96,119,353,355,361,362,98,120,68,394,69,70,72,73,74,75,78,79,80],"tindex":"029fd952-daea-11e4-b62e-d12661d67439","variableMapping":{"java.lang.Double.NaN":"maxSpeed","is3D":"force"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:210","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"029fd953-daea-11e4-b62e-c51a854ea658","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[0,130,136,141,143,150,152,154,157,159,160,161,162,9,10,173,179,184,186,193,195,197,200,206,212,217,219,18,227,229,232,26,250,256,261,263,270,272,274,277,395,396,397,49,50,107,398,280,399,108,283,299,51,400,401,402,403,404,405,406,407,369,370,373,377,379,382,384,386,56,387,389,105,63,64,392,65,106,66,394,69,71,74,75,76,78],"tindex":"02a00064-daea-11e4-b62e-7356b0160f86","variableMapping":{"guess":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[303],"tindex":"02a00065-daea-11e4-b62e-653a1196d035","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"02a00066-daea-11e4-b62e-ab9882d32ec6","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"highway","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"02a00067-daea-11e4-b62e-2bb117bb29d3","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"index","tmpNode":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-2},{"failures":[],"tindex":"02a00068-daea-11e4-b62e-2dcb25017269","variableMapping":{"next":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"02a00069-daea-11e4-b62e-61a897d5f4af","variableMapping":{"relationCodeEncoder":"this","shift":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[291],"tindex":"02a0006a-daea-11e4-b62e-8dffafb9ff57","variableMapping":{"acceptBit":"flags","ferryBit":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[121,0,124,1,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,2,146,147,148,150,3,151,152,153,154,4,155,156,5,157,158,408,409,410,411,6,412,413,414,415,416,417,418,419,420,421,159,422,423,424,425,426,160,427,428,429,430,431,432,433,434,435,436,161,437,438,439,440,441,442,443,7,444,445,446,447,448,449,450,451,452,453,162,9,164,10,167,11,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,12,189,190,191,193,13,194,195,196,197,14,198,199,15,200,201,212,18,454,455,22,456,457,458,23,24,25,234,235,236,237,238,240,241,26,244,27,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,28,266,267,268,270,29,271,272,273,274,30,275,276,31,277,278,395,459,396,460,461,462,463,464,465,466,467,397,49,50,81,468,469,470,471,107,398,280,399,108,109,283,302,303,51,472,366,52,473,474,475,53,476,477,54,478,479,55,480,481,400,401,402,403,404,482,405,483,406,484,407,485,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,56,387,388,389,62,88,63,64,392,65,106,66,67,393,68,394,69,70,71,72,73,74,75,76,77,78,79,80,486,487,488],"tindex":"02a0277b-daea-11e4-b62e-839e64679454","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"02a0277c-daea-11e4-b62e-3de355e14b06","variableMapping":{"cap":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"02a0277d-daea-11e4-b62e-012f895daa1f","variableMapping":{"algo":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[],"tindex":"02a0277e-daea-11e4-b62e-2364945a122e","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[405,407,373,374,376,383,385,386,387,388,111,112],"tindex":"02a0277f-daea-11e4-b62e-5923d728047c","variableMapping":{"edgeCount":"size","lastEdgeIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[489,490,0,122,416,448,491,492,493,494,9,163,10,165,495,496,497,498,499,500,22,458,23,239,26,242,501,502,33,35,36,503,504,40,42,43,62,88,63,64,392,65,106,66,67,393,68,394,69,70,71,72,73,74,75,76,77,78,79,80,505],"tindex":"02a02780-daea-11e4-b62e-cd63a6a77ef4","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN","speed":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"02a02781-daea-11e4-b62e-d57a1dbb187e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[506,68],"tindex":"02a04e92-daea-11e4-b62e-7d0dfb885901","variableMapping":{"str":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:82","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"02a04e93-daea-11e4-b62e-1b4c4cbbf8ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"02a04e94-daea-11e4-b62e-c10c385d0bb8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[408,413,415,416,507,440,445,447,448,508,509,510,511,512,513,514,515,516,517,518],"tindex":"02a04e95-daea-11e4-b62e-ed7faf52c8f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"02a04e96-daea-11e4-b62e-032317c65f1c","variableMapping":{"weighting":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:805","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(((\"weighting \" + java.lang.String) + \" not supported\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[292],"tindex":"02a04e97-daea-11e4-b62e-ff2064c096c7","variableMapping":{"empty":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[480,405,483,369,372,373,384,386,387],"tindex":"02a04e98-daea-11e4-b62e-779afb97cc2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"02a04e99-daea-11e4-b62e-e9cacd9783b5","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[355],"tindex":"02a04e9a-daea-11e4-b62e-d1d95988868b","variableMapping":{"key":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"02a04e9b-daea-11e4-b62e-c79e8b569360","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"02a04e9c-daea-11e4-b62e-cf4ebd19513e","variableMapping":{"prepareAlgo":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[284,288],"tindex":"02a04e9d-daea-11e4-b62e-013e65c34a5f","variableMapping":{"high":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"02a04e9e-daea-11e4-b62e-df1f722b5d62","variableMapping":{"high":"weightLong","low":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG","guess":"weightLong","guessedKey":"weightLong","key":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[288],"tindex":"02a04e9f-daea-11e4-b62e-2f0ea0d71998","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[8,9,32,33,34,35,36,37,38,39,40,41,42,43,44,45,57,58,59,60,61,62,105,88,63,64,65,106,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"02a04ea0-daea-11e4-b62e-fd80d29af963","variableMapping":{"byteCount":"bytePos","longSegmentSize":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[519],"tindex":"02a04ea1-daea-11e4-b62e-4f086015e9e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"02a04ea2-daea-11e4-b62e-5171e201b077","variableMapping":{"entry":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"02a04ea3-daea-11e4-b62e-abf7c394f48a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[520],"tindex":"02a074b4-daea-11e4-b62e-25cd40066ba1","variableMapping":{"cp":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"02a074b5-daea-11e4-b62e-3f85b99f4d19","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[354,356,92,359,362,98,120],"tindex":"02a074b6-daea-11e4-b62e-d525273daae9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"02a074b7-daea-11e4-b62e-67abfd509bc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"02a074b8-daea-11e4-b62e-9b361b98741b","variableMapping":{"key":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"02a074b9-daea-11e4-b62e-c3469d4f4bc3","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[],"tindex":"02a074ba-daea-11e4-b62e-0fe898f0cd76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[318,337,350,363],"tindex":"02a074bb-daea-11e4-b62e-5d4c10b464c9","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"02a074bc-daea-11e4-b62e-0d92c9a62683","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[236,302,303,322,521,367,377],"tindex":"02a074bd-daea-11e4-b62e-31e08c2350be","variableMapping":{"tmpNo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[437,376,384,88,67],"tindex":"02a074be-daea-11e4-b62e-191173049c58","variableMapping":{"intIndex":"nodeB","len":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"02a074bf-daea-11e4-b62e-27d0730b9437","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"02a074c0-daea-11e4-b62e-dd6233afb5f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[519],"tindex":"02a074c1-daea-11e4-b62e-fb6419052218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[339,340,341,342,343,91,344,345,346,347,348,349,96,350,351,119],"tindex":"02a074c2-daea-11e4-b62e-9f0fcd96d76e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:131","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[],"tindex":"02a074c3-daea-11e4-b62e-03f0a516fb7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"02a074c4-daea-11e4-b62e-e130838064d6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[85,310,318,86,329,337,74],"tindex":"02a074c5-daea-11e4-b62e-e51146ae65d1","variableMapping":{"size":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"02a074c6-daea-11e4-b62e-01da8e9648a1","variableMapping":{"x1":"java.lang.Double.MAX_VALUE","x2":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"02a074c7-daea-11e4-b62e-6982df4bd84f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"02a09bd8-daea-11e4-b62e-6755f11668f0","variableMapping":{"high":"weightLong","guess":"weightLong","low":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":0},{"failures":[82,292,293,83,295,301,105,88,63,64,392,65,106,66,393,394,69,70,71,73,74,75,76,77,78,79,522,80],"tindex":"02a09bd9-daea-11e4-b62e-ef2c60e18ae8","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"02a09bda-daea-11e4-b62e-33ca8ec224b7","variableMapping":{"E_ADDITIONAL":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[235,240,464,480,481,400,401,402,403,404,405,483,406,407,485,367,368,369,370,371,373,374,375,377,378,379,380,381,382,383,384,386,56,387,389,88,63,65],"tindex":"02a09bdb-daea-11e4-b62e-71f63df5ad6c","variableMapping":{"intVal":"I_LEVEL","degree":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"02a09bdc-daea-11e4-b62e-3d887c9120ab","variableMapping":{"numTiles":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":0},{"failures":[81,93,82,83,85,316,94,86,335,95,348,96,97,361,98,88,392,393,68,394,73,79,80],"tindex":"02a09bdd-daea-11e4-b62e-8fdb50640040","variableMapping":{"segmentSizeInBytes":"kmInteger","index":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"02a09bde-daea-11e4-b62e-8d347ddb3529","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[121,0,122,123,124,1,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,2,146,147,148,149,150,3,151,152,153,154,4,155,156,5,157,158,408,409,410,411,6,412,413,414,415,416,417,418,419,420,523,421,159,422,423,424,425,524,426,160,525,427,428,429,430,526,431,432,433,434,435,527,436,161,437,438,439,440,441,442,443,7,444,445,446,447,448,449,450,451,452,528,453,162,9,163,164,10,165,166,167,11,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,12,189,190,191,192,193,13,194,195,196,197,14,198,199,15,200,201,16,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,17,222,223,224,225,18,19,226,227,228,229,20,230,231,21,232,233,234,235,236,237,238,239,240,241,26,242,243,244,27,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,28,266,267,268,269,270,29,271,272,273,274,30,275,276,31,277,278,395,459,396,460,461,462,463,464,465,466,467,397,49,50,81,468,469,470,471,107,398,280,399,108,109,283,302,303,529,521,51,472,366,366,52,52,473,473,474,474,475,475,53,53,476,476,477,477,54,54,478,478,479,479,55,55,480,481,400,401,402,403,404,482,405,483,406,484,407,485,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,56,387,388,389,62,105,88,63,64,392,65,106,66,67,393,68,394,69,70,71,72,73,74,75,76,77,78,79,80,486,487,488],"tindex":"02a09bdf-daea-11e4-b62e-c15ad9be4208","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"02a0c2f0-daea-11e4-b62e-a7ef12d75010","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":0},{"failures":[],"tindex":"02a0c2f1-daea-11e4-b62e-b1d87dd76204","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"02a0c2f2-daea-11e4-b62e-479923fcbf19","variableMapping":{"lat":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"02a0c2f3-daea-11e4-b62e-f7ec84ec1189","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"02a0c2f4-daea-11e4-b62e-b7c40b865bb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failures":[],"tindex":"02a0c2f5-daea-11e4-b62e-81ab33bdf183","variableMapping":{"osmFile":"com.graphhopper.routing.util.EncodingManager.BIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"02a0c2f6-daea-11e4-b62e-f93772120586","variableMapping":{"size":"maxTurnCosts","i":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":0},{"failures":[82,292,293,83,295,301,105,88,63,64,392,65,106,66,393,68,394,69,70,71,73,74,75,76,77,78,79,522,80],"tindex":"02a0c2f7-daea-11e4-b62e-ed2b3f6451bb","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":270,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":385,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":87,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":239,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":202,"com.graphhopper.reader.OSMReaderTest.testFerry":68,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":460,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":461,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":443,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":105,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":178,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":505,"com.graphhopper.coll.CompressedArrayTest.testCompress":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":361,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":5,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":17,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":439,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":102,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":406,"com.graphhopper.GraphHopperTest.testPrepare":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":384,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":480,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":377,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":397,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":525,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":362,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":469,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":244,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":440,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":355,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":324,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":369,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":411,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":9,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":516,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":27,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":485,"com.graphhopper.GraphHopperTest.testLoadOSM":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":417,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":6,"com.graphhopper.reader.OSMReaderTest.testSort":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":95,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":280,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":165,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":153,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":0,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":514,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":231,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":477,"com.graphhopper.routing.DijkstraTest.initializationError":364,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":486,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":197,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":269,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":456,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":132,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":163,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":11,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":96,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":446,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":372,"com.graphhopper.coll.OSMIDMapTest.testGetLong":60,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":182,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":188,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":262,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":26,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":264,"com.graphhopper.coll.CompressedArrayTest.testCompress2":508,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":145,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":340,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":179,"com.graphhopper.GraphHopperAPITest.testLoad":395,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":245,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":22,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":281,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":137,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":127,"com.graphhopper.storage.LevelGraphStorageTest.testClone":249,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":506,"com.graphhopper.reader.OSMReaderTest.testBarriers":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":499,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":374,"com.graphhopper.util.GHUtilityTest.testCopy":464,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":103,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":347,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":363,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":524,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":358,"com.graphhopper.routing.PathTest.testFindInstruction":472,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":266,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":170,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":287,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":396,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":423,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":154,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":141,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":195,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":183,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":315,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":365,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":251,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":207,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":494,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":25,"com.graphhopper.util.InstructionListTest.testWayList2":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":418,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":157,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":512,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":199,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":302,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":253,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":100,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":503,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":328,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":180,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":427,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":373,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":72,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":39,"com.graphhopper.routing.AStarTest.initializationError":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":56,"com.graphhopper.coll.OSMIDMapTest.testGet":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":288,"com.graphhopper.routing.PathBidirRefTest.testExtract":470,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":28,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":90,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":450,"com.graphhopper.storage.RAMDataAccessTest.testCopy":32,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":353,"com.graphhopper.storage.RAMDataAccessTest.testSegments":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":159,"com.graphhopper.util.GHUtilityTest.testSort2":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":382,"com.graphhopper.reader.OSMReaderTest.testMain":69,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":331,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":517,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":451,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":82,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":229,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":256,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":260,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":277,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":257,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":191,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":305,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":455,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":263,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":79,"com.graphhopper.storage.StorablePropertiesTest.testStore":491,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":501,"com.graphhopper.storage.GraphHopperStorageTest.testClone":129,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":83,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":139,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":208,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":237,"com.graphhopper.routing.PathTest.testTime":521,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":346,"com.graphhopper.util.BitUtilLittleTest.testToFloat":47,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":276,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":300,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":526,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":221,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":267,"com.graphhopper.util.GHUtilityTest.testSortDirected":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":94,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":44,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":474,"com.graphhopper.GraphHopperTest.testFootOnly":67,"com.graphhopper.util.BitUtilLittleTest.testToInt":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":293,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":445,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":116,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":370,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":481,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":217,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":35,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":366,"com.graphhopper.routing.QueryGraphTest.testOneWay":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":523,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":513,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":410,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":510,"com.graphhopper.reader.OSMReaderTest.testWithBounds":78,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":38,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":496,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":318,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":214,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":222,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":289,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":115,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":246,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":243,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":120,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":190,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":184,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":1,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":368,"com.graphhopper.util.BitUtilLittleTest.testToBitString":46,"com.graphhopper.util.InstructionListTest.testWayList":49,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":329,"com.graphhopper.GraphHopperAPITest.testDisconnected179":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":209,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":313,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":488,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":335,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":64,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":131,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":484,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":323,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":379,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":483,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":167,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":265,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":528,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":118,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":121,"com.graphhopper.routing.PathTest.testWayList":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":213,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":292,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":97,"com.graphhopper.coll.OSMIDMapTest.testGet2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":389,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":334,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":142,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":282,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":175,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":448,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":33,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":45,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":341,"com.graphhopper.util.GHUtilityTest.testSort":465,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":414,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":518,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":333,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":357,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":200,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":425,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":441,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":431,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":434,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":85,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":432,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":164,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":387,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":107,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":24,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":18,"com.graphhopper.routing.PathTest.testFound":529,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":322,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":393,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":274,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":504,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":520,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":332,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":181,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":490,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":495,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":212,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":134,"com.graphhopper.util.InstructionListTest.testEmptyList":467,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":376,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":452,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":290,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":383,"com.graphhopper.reader.PrinctonReaderTest.testRead":487,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":4,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":519,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":7,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":176,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":211,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":511,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":16,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":186,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":360,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":113,"com.graphhopper.reader.OSMReaderTest.testFoot":394,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":224,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":415,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":515,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":352,"com.graphhopper.reader.OSMReaderTest.testOneWay":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":416,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":138,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":151,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":196,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":359,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":43,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":310,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":403,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":507,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":407,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":401,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":435,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":283,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":498,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":215,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":473,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":123,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":522,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":458,"com.graphhopper.routing.PathBidirRefTest.testExtract2":471,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":367,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":419,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":489,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":150,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":527,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":351,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":233,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":284,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":405,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":412,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":152,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":252,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":297,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":2,"com.graphhopper.GraphHopperTest.testFootAndCar":392,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":453,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":205,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":482,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":172,"com.graphhopper.GraphHopperTest.testPrepareOnly":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":386,"com.graphhopper.GraphHopperTest.testVia":88,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":426,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":203,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":76,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":238,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":81,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":285,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":218,"com.graphhopper.routing.AStarBidirectionTest.initializationError":279,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":301,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":273,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":271,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":10}}]
