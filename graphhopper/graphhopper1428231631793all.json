[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"fb219199-db82-11e4-aad4-035c67e9aa1e","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"fb22a30a-db82-11e4-aad4-11b01f11a09a","variableMapping":{"bm":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":-1},{"failures":[],"tindex":"fb22a30b-db82-11e4-aad4-d1fa09077bef","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[137,116,118,138,119,120,139,121,140,124,126],"tindex":"fb22a30c-db82-11e4-aad4-9d2a79d1cb71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"fb22a30d-db82-11e4-aad4-d5ea7c2f8dd6","variableMapping":{"turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[141],"tindex":"fb22a30e-db82-11e4-aad4-65c0312c2733","variableMapping":{"deltaX":"fwdSpeed","maxX":"fwdSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"fb22a30f-db82-11e4-aad4-0d9c1d15730f","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"fb22a310-db82-11e4-aad4-d7710b377530","variableMapping":{"name":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"fb22a311-db82-11e4-aad4-df70a5df3cd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"fb22a312-db82-11e4-aad4-c9b9e94d491a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[142,143,144,109,145,114,128],"tindex":"fb22a313-db82-11e4-aad4-d78c96b9e33d","variableMapping":{"tt":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[0],"tindex":"fb22a314-db82-11e4-aad4-29e265e61f88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:282","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[3,4,8,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,32,34,36,37,38,39,40,41,42,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,146,110,111,112,113,114],"tindex":"fb22ca25-db82-11e4-aad4-6bb904fc0b42","variableMapping":{"currentEntry":"edgeCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[147,51,57,59,60,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"tindex":"fb22ca26-db82-11e4-aad4-3b94e247c110","variableMapping":{"i":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[162,163,164,165],"tindex":"fb22ca27-db82-11e4-aad4-d16fa758b9dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[166],"tindex":"fb22ca28-db82-11e4-aad4-eb23d376d446","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"fb22ca29-db82-11e4-aad4-8b0139ae7d75","variableMapping":{"highwayValue":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":0},{"failures":[13,23,29,37,38,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"fb22ca2a-db82-11e4-aad4-cd338de86d63","variableMapping":{"x1":"mSize","sLon":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"fb22ca2b-db82-11e4-aad4-61b4a69492df","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"fb22ca2c-db82-11e4-aad4-a5c5b8545458","variableMapping":{"segmentSizeInBytes":"length","length":"length","index":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"fb22ca2d-db82-11e4-aad4-956affae99aa","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[184,185,110,145,128,136],"tindex":"fb22ca2e-db82-11e4-aad4-617f685ec695","variableMapping":{"pointer":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[186,187,188,189,185,144,190],"tindex":"fb22ca2f-db82-11e4-aad4-9b1816ac5859","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[189],"tindex":"fb22ca30-db82-11e4-aad4-9d17ade0e4b5","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[191,192,193,194,195,196,197],"tindex":"fb22ca31-db82-11e4-aad4-9da40d2b5a3e","variableMapping":{"factor":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[],"tindex":"fb22f142-db82-11e4-aad4-6745771b06ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[],"tindex":"fb22f143-db82-11e4-aad4-8f56eaf7f027","variableMapping":{"latSimilar":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[186,187,188,190],"tindex":"fb22f144-db82-11e4-aad4-8ff66c22da50","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[198,199],"tindex":"fb22f145-db82-11e4-aad4-4b3128d86061","variableMapping":{"val":"element","keys":"elem","values":"elem","i":"i","o":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:136","type":"CtIfImpl","sourcecode":"if (int != int) {\n    int[][int] = int[][int];\n    int[][int] = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"fb22f146-db82-11e4-aad4-7dab3cf0ae6c","variableMapping":{"silent":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[137,116,118,138,119,120,139,121,140,124,126],"tindex":"fb22f147-db82-11e4-aad4-516c83743742","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"fb22f148-db82-11e4-aad4-65d11bffd4e2","variableMapping":{"store":"integ"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"fb22f149-db82-11e4-aad4-4d86c58ae8cc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[128,136],"tindex":"fb22f14a-db82-11e4-aad4-e7fd87d6a0e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[79,91,104,106,108],"tindex":"fb22f14b-db82-11e4-aad4-47ad81d23049","variableMapping":{"width":"key","lonSimilar":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"fb22f14c-db82-11e4-aad4-7d488c8d11a7","variableMapping":{"resultOrientation":"decDist2DSum","orientation":"bwSlower","java.lang.Math.PI":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[200,201],"tindex":"fb22f14d-db82-11e4-aad4-69549fac5fd6","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[186,187,188,190,127,135,136],"tindex":"fb22f14e-db82-11e4-aad4-955699b078bd","variableMapping":{"lastName":"bikeTag","name":"bikeTag","lastIndex":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:75","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    return long;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[8,16,202,26,28,36,39,41,46,67,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,192,234,70,182,235,183,236,237,238,197,73,74,75,76,77,79,81,83,87,88,91,95,97,100,102,104,105,106,108,146,111,239,145,112,113,240,128,129,241,242,133,243,134,244],"tindex":"fb23185f-db82-11e4-aad4-c9482a44b277","variableMapping":{"guess":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"fb231860-db82-11e4-aad4-d7a9c6b3ff96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.setProperties(double, boolean, boolean)"},"status":-2},{"failures":[245,166,128,136],"tindex":"fb231861-db82-11e4-aad4-eb9af7f59ed2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"fb231862-db82-11e4-aad4-29d82fa356a3","variableMapping":{"bytePos":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"fb231863-db82-11e4-aad4-79f800100db4","variableMapping":{"values":"a","index":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:325","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return int[][int];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"fb231864-db82-11e4-aad4-b592da6e6191","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"fb231865-db82-11e4-aad4-b7b0f2b96d9a","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"fb231866-db82-11e4-aad4-f149da1ad2b1","variableMapping":{"edgeCount":"from","this":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureEdgeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"fb231867-db82-11e4-aad4-199bc86b6e9d","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[166],"tindex":"fb231868-db82-11e4-aad4-cdb210c85e84","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"fb231869-db82-11e4-aad4-d588bb1f0c9d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"fb23186a-db82-11e4-aad4-15ad26a2acc6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[71,73,79,80,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,104,105,106,107,108,110,111,239,145,112,240,114,244],"tindex":"fb23186b-db82-11e4-aad4-171fdd59784a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[143],"tindex":"fb23186c-db82-11e4-aad4-534b71ef1ab1","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"fb23186d-db82-11e4-aad4-f354fd256d79","variableMapping":{"foundNext":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:809","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-2},{"failures":[],"tindex":"fb23186e-db82-11e4-aad4-816ca5c7cfd0","variableMapping":{"tmp":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"fb233f7f-db82-11e4-aad4-63c6498dd548","variableMapping":{"tmpNode":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"fb233f80-db82-11e4-aad4-bd411a425b4e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"fb233f81-db82-11e4-aad4-cf0595ca0e18","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[246],"tindex":"fb233f82-db82-11e4-aad4-13c0da251861","variableMapping":{"len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[182,247],"tindex":"fb233f83-db82-11e4-aad4-6d6d45bd6694","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[248,198,200,201,83],"tindex":"fb233f84-db82-11e4-aad4-41efbf92b566","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"fb233f85-db82-11e4-aad4-cd6eec384a37","variableMapping":{"start":"index","this":"this","onStack":"onStack","nodeIndex":"nodeLowLink","connectedId":"index","nodeLowLink":"nodeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":0},{"failures":[249],"tindex":"fb233f86-db82-11e4-aad4-3965b1d8271f","variableMapping":{"java.lang.Double.MAX_VALUE":"restDist2D","osmId":"flags","lon":"restDist2D","tmpNode":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","lat":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:780","type":"CtIfImpl","sourcecode":"if ((double == (java.lang.Double.double)) || (double == (java.lang.Double.double)))\n    throw new java.lang.RuntimeException(((((\"Conversion pillarNode to towerNode already happended!? \" + \"osmId:\") + long) + \" pillarIndex:\") + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[8,12,13,20,26,34,39,46,250,167,251,208,252,211,213,214,253,172,254,217,255,220,222,223,224,256,177,257,227,258,230,232,69,259,182,236,247,73,74,79,81,84,85,95,96,99,108,260,261,262,244],"tindex":"fb233f87-db82-11e4-aad4-674d2cee4799","variableMapping":{"lastTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"fb233f88-db82-11e4-aad4-1511cc2b8c0b","variableMapping":{"high":"flags","len":"directionBitMask","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[],"tindex":"fb233f89-db82-11e4-aad4-55d48c20f8ab","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"fb233f8a-db82-11e4-aad4-add328fb7128","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"fb233f8b-db82-11e4-aad4-21d28750c486","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"fb233f8c-db82-11e4-aad4-bb752384eeb1","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","nodeType":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"fb233f8d-db82-11e4-aad4-5b11762eb658","variableMapping":{"deltaX":"toHeight","tmp":"toHeight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":0},{"failures":[],"tindex":"fb233f8e-db82-11e4-aad4-f920640e10c1","variableMapping":{"orientation":"fullDist2D","resultOrientation":"incEleSum","baseOrientation":"eleDelta","java.lang.Math.PI":"decDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,263,10,11,12,13,14,15,16,17,18,19,20,21,202,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,264,265,266,267,268,269,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,148,270,271,272,273,274,149,275,150,151,276,277,278,279,280,203,281,282,283,284,285,204,286,287,288,289,290,205,291,162,292,293,294,295,296,164,165,297,298,207,210,299,214,300,301,302,303,253,172,304,305,215,306,307,308,254,309,216,310,173,311,312,217,313,218,174,314,315,316,317,255,318,219,175,176,220,319,221,320,321,322,323,222,324,223,325,224,326,327,328,329,256,177,330,331,225,332,333,334,257,335,226,336,178,337,338,227,339,228,179,340,341,342,343,258,344,229,180,181,230,345,231,346,347,348,349,232,350,68,351,69,352,353,354,233,192,234,193,70,355,356,259,357,182,235,358,183,236,247,238,359,249,360,361,197,362,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,363,364,365,365,366,366,367,367,368,368,260,260,369,369,370,370,371,371,372,372,373,373,374,374,375,375,109,110,111,239,145,112,113,240,114,376,377,127,128,129,130,241,131,132,242,133,243,378,134,135,136,261,262,244,379],"tindex":"fb23669f-db82-11e4-aad4-35939d1d7d10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[380],"tindex":"fb2366a0-db82-11e4-aad4-3fa2debe087c","variableMapping":{"cp":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"fb2366a1-db82-11e4-aad4-9d1e7808e9fd","variableMapping":{"this":"this","newEdgeId":"index","fromNodeId":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:351","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"fb2366a2-db82-11e4-aad4-d7d4151da551","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"fb2366a3-db82-11e4-aad4-eb9b8c795b59","variableMapping":{"r":"shortTripsSpeed","com.graphhopper.util.AngleCalc.PI_4":"longTripsSpeed","x":"shortTripsSpeed","angle":"shortTripsSpeed","absY":"shortTripsSpeed","com.graphhopper.util.AngleCalc.PI3_4":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[],"tindex":"fb2366a4-db82-11e4-aad4-85e30da55898","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"fb2366a5-db82-11e4-aad4-495f1f77fd3a","variableMapping":{"width":"start","lonSimilar":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-2},{"failures":[],"tindex":"fb2366a6-db82-11e4-aad4-35dcb71c6c61","variableMapping":{"edgePointer":"flags","maxEdges":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"fb2366a7-db82-11e4-aad4-4b6037fd2018","variableMapping":{"i":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"fb238db8-db82-11e4-aad4-eb95fad8d3ab","variableMapping":{"d":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"fb238db9-db82-11e4-aad4-b3208d617139","variableMapping":{"nodeFlags":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-2},{"failures":[],"tindex":"fb238dba-db82-11e4-aad4-673ddf8057cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[381],"tindex":"fb238dbb-db82-11e4-aad4-9f0a661073fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[0,4,8,11,12,13,15,16,19,20,202,26,28,34,36,39,41,42,46,67,203,204,205,382,250,167,383,206,384,251,207,208,209,252,210,211,212,385,213,214,303,253,172,305,215,308,254,216,217,218,255,219,220,221,320,222,223,224,329,256,177,331,225,334,257,226,227,228,258,229,230,231,346,232,69,233,192,234,70,259,357,182,235,358,183,236,184,386,237,238,387,249,361,197,362,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,363,364,260,371,109,146,110,111,112,113,114,261,262,244,379],"tindex":"fb24c63c-db82-11e4-aad4-27f58dcd08cb","variableMapping":{"acceptBit":"flags","ferryBit":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"fb24c63d-db82-11e4-aad4-119860a10c04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.setProperties(double, boolean, boolean)"},"status":-2},{"failures":[79,91,104,106,108],"tindex":"fb24c63e-db82-11e4-aad4-1b17e8287889","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"fb24c63f-db82-11e4-aad4-b5035e721fb2","variableMapping":{"acceptBit":"ferryBit","intendedValues":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"fb24c640-db82-11e4-aad4-0323fa938f4d","variableMapping":{"currentEntry":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[147,51,57,59,60,148,149,150,151,152,153,94,154,155,388,156,157,158,159,160,161],"tindex":"fb24c641-db82-11e4-aad4-d1fbf003dce5","variableMapping":{"i":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[389,390,391,116,392,393,394,118,395,396,397,398,119,399,400,401,120,402,403,404,405,139,406,407,408,121,409,410,411,412,413,124,414,415,416,126,417,418,419,245,420],"tindex":"fb24c642-db82-11e4-aad4-737cc85d451b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:432","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int)"},"status":-1},{"failures":[],"tindex":"fb24ed53-db82-11e4-aad4-0151b178acab","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[],"tindex":"fb24ed54-db82-11e4-aad4-fdcaacb15d21","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"fb24ed55-db82-11e4-aad4-ef02af84af0c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"fb24ed56-db82-11e4-aad4-db267e9c0423","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[13,29,37,38,167,169,170,171,172,174,175,176,177,179,180,181,183],"tindex":"fb24ed57-db82-11e4-aad4-6f9496e3d79b","variableMapping":{"endIndexPlusOne":"high","frontIndex":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"fb24ed58-db82-11e4-aad4-7df2cca99b70","variableMapping":{"size":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"fb24ed59-db82-11e4-aad4-f925a3b43d95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"fb24ed5a-db82-11e4-aad4-d5dcc2482109","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[115,395,402,381,409,421,422,141,123,417,110,135],"tindex":"fb24ed5b-db82-11e4-aad4-73863dd64c0e","variableMapping":{"message":"str","hash":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:82","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + ((this.java.lang.String) != null ? this.java.lang.String.hashCode() : 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[6,13,21,22,23,25,29,30,37,38,167,423,424,168,425,169,426,170,171,172,309,310,173,312,174,314,175,176,177,335,336,178,338,179,340,180,181,182,183],"tindex":"fb24ed5c-db82-11e4-aad4-c991c87f0604","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":103,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":366,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.reader.OSMReaderTest.testFerry":127,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":259,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":54,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":146,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":191,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":335,"com.graphhopper.coll.CompressedArrayTest.testCompress":153,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":323,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":75,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":50,"com.graphhopper.util.AngleCalcTest.testOrientation":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":81,"com.graphhopper.GraphHopperTest.testPrepare":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":71,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":218,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":95,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":121,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":356,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":10,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":236,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":389,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":93,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":272,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":223,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":159,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":11,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":84,"com.graphhopper.GraphHopperTest.testLoadOSM":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":276,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":273,"com.graphhopper.reader.OSMReaderTest.testSort":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":395,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":358,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":326,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":319,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":214,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":157,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":371,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":231,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":35,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":294,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":307,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":1,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":140,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":329,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":58,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":90,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":337,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":340,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":27,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":8,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":29,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":196,"com.graphhopper.coll.CompressedArrayTest.testCompress2":152,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":314,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":398,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":226,"com.graphhopper.GraphHopperAPITest.testLoad":244,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":293,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":310,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":172,"com.graphhopper.storage.LevelGraphStorageTest.testClone":15,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":380,"com.graphhopper.reader.OSMReaderTest.testBarriers":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":125,"com.graphhopper.util.GHUtilityTest.testCopy":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":206,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":188,"com.graphhopper.routing.PathTest.testFindInstruction":362,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":177,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":248,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":70,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":143,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":43,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":287,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":413,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":221,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":217,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":230,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":338,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":17,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":302,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":298,"com.graphhopper.util.InstructionListTest.testWayList2":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":277,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":222,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":390,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":359,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":336,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":91,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":253,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":257,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":144,"com.graphhopper.routing.PathBidirRefTest.testExtract":363,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":203,"com.graphhopper.util.GHUtilityTest.testSort2":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":100,"com.graphhopper.reader.OSMReaderTest.testMain":129,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":179,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":160,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":186,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":327,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":202,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":25,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":46,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":22,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":258,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":411,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":28,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":135,"com.graphhopper.storage.GraphHopperStorageTest.testClone":305,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":324,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":141,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":311,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":187,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":3,"com.graphhopper.routing.PathTest.testTime":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":401,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":44,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":279,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":426,"com.graphhopper.util.GHUtilityTest.testSortDirected":353,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":417,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":368,"com.graphhopper.GraphHopperTest.testFootOnly":114,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":405,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":189,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":57,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":208,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":365,"com.graphhopper.routing.QueryGraphTest.testOneWay":373,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":156,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":271,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":154,"com.graphhopper.reader.OSMReaderTest.testWithBounds":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":168,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":347,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":369,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":245,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":12,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":410,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":343,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":227,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":303,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":86,"com.graphhopper.util.InstructionListTest.testWayList":192,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":321,"com.graphhopper.GraphHopperAPITest.testDisconnected179":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":384,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":415,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":262,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":169,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":213,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":239,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":306,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":82,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":255,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":80,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":118,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":65,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":163,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":397,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":299,"com.graphhopper.routing.PathTest.testWayList":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":424,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":108,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":342,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":313,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":333,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":60,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":61,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":198,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":138,"com.graphhopper.util.GHUtilityTest.testSort":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":275,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":232,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":289,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":269,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":283,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":123,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":249,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":281,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":182,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":297,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":210,"com.graphhopper.routing.PathTest.testFound":360,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":166,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":376,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":41,"com.graphhopper.util.AngleCalcTest.testAtan2":195,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":393,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":178,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":207,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":254,"com.graphhopper.util.InstructionListTest.testEmptyList":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":421,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":409,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":101,"com.graphhopper.reader.PrinctonReaderTest.testRead":261,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":55,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":334,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":382,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":412,"com.graphhopper.reader.OSMReaderTest.testFoot":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":252,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":375,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":150,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":158,"com.graphhopper.reader.OSMReaderTest.testOneWay":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":151,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":173,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":176,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":345,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":408,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":209,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":76,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":284,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":53,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":367,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":301,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":164,"com.graphhopper.routing.PathBidirRefTest.testExtract2":364,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":278,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":403,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":242,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":142,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":416,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":274,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":220,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":18,"com.graphhopper.GraphHopperTest.testFootAndCar":145,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":315,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":119,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":383,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":104,"com.graphhopper.GraphHopperTest.testPrepareOnly":109,"com.graphhopper.GraphHopperTest.testVia":110,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":167,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":243,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":4,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":193,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":318,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":387,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":133,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":40,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":38,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":224}}]
