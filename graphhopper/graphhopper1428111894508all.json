[{"failures":[],"tindex":"33945635-da6c-11e4-bde3-3df8d6491ed1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"33947d46-da6c-11e4-bde3-3b8e533e3bb0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[],"tindex":"33947d47-da6c-11e4-bde3-7958670be694","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,333,334,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344],"tindex":"3394cb68-da6c-11e4-bde3-f551d60027f8","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"3394cb69-da6c-11e4-bde3-c16518f764b1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"3394cb6a-da6c-11e4-bde3-9b1f4447d992","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"3394cb6b-da6c-11e4-bde3-9b900f7f3c4a","variableMapping":{"finishedTo":"closed","finishedFrom":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[1,2,3,6,7,345,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,329,330,331,332],"tindex":"3394cb6c-da6c-11e4-bde3-ddbf92adca3c","variableMapping":{"size":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"3394cb6d-da6c-11e4-bde3-b7f8ab5d067b","variableMapping":{"equalNormedDelta":"lon","currNormedDist":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:883","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[],"tindex":"3394cb6e-da6c-11e4-bde3-af59b0289585","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"3394cb6f-da6c-11e4-bde3-fd69bbf351fd","variableMapping":{"time":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"3394cb70-da6c-11e4-bde3-87bb9482b878","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"3394f281-da6c-11e4-bde3-2f63cb854a65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"3394f282-da6c-11e4-bde3-f3a7d4ec8b89","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"start","speed":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"3394f283-da6c-11e4-bde3-23e1f0050053","variableMapping":{"wayTypeEncoder":"this","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"3394f284-da6c-11e4-bde3-cf043c29839a","variableMapping":{"origEdgeId":"indexDivisor","mainEdges":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,54,69,81,82,83,84,86,87,88,89,90,91,93,94,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,346,347,348,349,350,351,352,353,354,355,356,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"3394f285-da6c-11e4-bde3-09538045dbe1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-1},{"failures":[357,358,327],"tindex":"3394f286-da6c-11e4-bde3-a9b5f3a7508a","variableMapping":{"pos":"i","mSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"339540a7-da6c-11e4-bde3-278894e50b2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[],"tindex":"339540a8-da6c-11e4-bde3-35322609cd10","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"339540a9-da6c-11e4-bde3-575c4f88c774","variableMapping":{"edgeId":"com.graphhopper.util.EdgeIterator.NO_EDGE","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"com.graphhopper.util.EdgeIterator.NO_EDGE","nodeA":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"339567ba-da6c-11e4-bde3-a53526c97ca2","variableMapping":{"err":"i","dLat":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":0},{"failures":[],"tindex":"339567bb-da6c-11e4-bde3-595e193c940f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[359,345,360,357,358,321,323,324,325,327,329,331],"tindex":"339567bc-da6c-11e4-bde3-b72fe9cd3a61","variableMapping":{"elem":"elem","i":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"339567bd-da6c-11e4-bde3-f5dd0e03f7a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:108","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[],"tindex":"339567be-da6c-11e4-bde3-597baf4c7387","variableMapping":{"high":"maxValue","highKey":"maxValue","key":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[2,3,4,5,6,8,9,278,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,314,315,316,317,318,319,321,327,328,332],"tindex":"339567bf-da6c-11e4-bde3-61bb59679cf0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"status":-1},{"failures":[],"tindex":"339567c0-da6c-11e4-bde3-6db2aa38464e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[3,4,5,6,8,10,14,15,19,20,21,24,25,26,361,362,363],"tindex":"339567c1-da6c-11e4-bde3-193c7317fd98","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[364,365,366,96,97,98,101],"tindex":"339567c2-da6c-11e4-bde3-e5d3858f0542","variableMapping":{"type":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-1},{"failures":[3,6,119,120,126,127,129,132,133,134,135,137,138,308,309,312],"tindex":"339567c3-da6c-11e4-bde3-cd1bf6f85cc1","variableMapping":{"need":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"339567c4-da6c-11e4-bde3-3b3f58d91931","variableMapping":{"turnCosts":"resultOrientation","weight":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[13,367],"tindex":"339567c5-da6c-11e4-bde3-3b244a13ad78","variableMapping":{"precision":"shortTripsSpeed","lat":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[],"tindex":"33958ed6-da6c-11e4-bde3-334100de3b53","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[368],"tindex":"33958ed7-da6c-11e4-bde3-c773aa0c970e","variableMapping":{"str":"str","latInt":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:284","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"_0\" : \"_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"33958ed8-da6c-11e4-bde3-17efceb5e59b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,54,69,81,82,83,84,86,87,88,89,90,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,347,348,349,350,351,353,354,355,356,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,333,334,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344],"tindex":"33958ed9-da6c-11e4-bde3-53c2c39904fb","variableMapping":{"index":"bytePos","entriesPerSegment":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"33958eda-da6c-11e4-bde3-a7dcf31c3338","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","len":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","start":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"33958edb-da6c-11e4-bde3-8b60d608730e","variableMapping":{"acceptBit":"directionBitMask","ferryBit":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[2,295,296,297,298,299,301,302,304,305,307,308,309,310,311,312,314,316,317,318,319,321,328,332],"tindex":"33958edc-da6c-11e4-bde3-49e640023d05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"33958edd-da6c-11e4-bde3-edb54d4131af","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","highKey":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","key":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"33958ede-da6c-11e4-bde3-abbb56fcf139","variableMapping":{"weight":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"3395b5ef-da6c-11e4-bde3-630e0e575ecf","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:78","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Dijkstra.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[2,25,40,361,362,369,370,371,372],"tindex":"3395b5f0-da6c-11e4-bde3-e5f54a0431d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"3395b5f1-da6c-11e4-bde3-c14d5e1a00b3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"3395b5f2-da6c-11e4-bde3-e1ac9ee754e6","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,373,22,23,24,25,26,141,374,375,280,376,377,378,379,380,381,283,382,383,384,361,385,386,367,387,362,369,363,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,371,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,287,288,444,445,446,447,448,372,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,292,295,305],"tindex":"3395b5f3-da6c-11e4-bde3-1b52b04e820e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[2,3,6,7,345,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,329,330,331,332],"tindex":"3395b5f4-da6c-11e4-bde3-e30765448fb1","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"3395b5f5-da6c-11e4-bde3-9db27aab7b17","variableMapping":{"i":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[28,43,51,54,75,139,143,151,159,162,183,194,202,205,226,239,247,250,271,280,377,387,288,293,294,295,296,307,308,319,328,340],"tindex":"3395b5f6-da6c-11e4-bde3-231aaae41ba2","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[],"tindex":"3395dd07-da6c-11e4-bde3-43b77d906079","variableMapping":{"size":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[281,285],"tindex":"33962b28-da6c-11e4-bde3-dd3f3997a04f","variableMapping":{"segmentSizeInBytes":"start","length":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"33962b29-da6c-11e4-bde3-919c4c9dde3d","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[5,14,376],"tindex":"33962b2a-da6c-11e4-bde3-c7e917cb3fac","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[288],"tindex":"33962b2b-da6c-11e4-bde3-f5a71c59a143","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[406,422,441,461],"tindex":"33962b2c-da6c-11e4-bde3-4722b50e18be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[369,368,370],"tindex":"33962b2d-da6c-11e4-bde3-6b0fc87db1ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"33962b2e-da6c-11e4-bde3-739bba5df6e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"33962b2f-da6c-11e4-bde3-a537844e5c53","variableMapping":{"graphHopperFolder":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"33962b30-da6c-11e4-bde3-6ffe934fe977","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"code","edge":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-2},{"failures":[],"tindex":"33962b31-da6c-11e4-bde3-59dcc57c9130","variableMapping":{"deltaX":"bwFaster","maxX":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"33962b32-da6c-11e4-bde3-8da27b872482","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[406,422,441,461],"tindex":"33962b33-da6c-11e4-bde3-b1a3472f1b9b","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[13,25,26,367],"tindex":"33962b34-da6c-11e4-bde3-d55a8c1ba39b","variableMapping":{"costs":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[470,471,108,110,111,128,130,131,472,473,474,475,476,477],"tindex":"33962b35-da6c-11e4-bde3-fff5151e1813","variableMapping":{"precision":"midLon","lat":"minLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[13,367],"tindex":"33962b36-da6c-11e4-bde3-3924ff4c1e93","variableMapping":{"resultOrientation":"shortTripsSpeed","orientation":"durationInHours","java.lang.Math.PI":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[],"tindex":"33962b37-da6c-11e4-bde3-4da42f3639a2","variableMapping":{"size":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"33962b38-da6c-11e4-bde3-b98a1ecc494b","variableMapping":{"id":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[],"tindex":"33962b39-da6c-11e4-bde3-7fb0e81bd9cb","variableMapping":{"costs":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failures":[],"tindex":"3396524a-da6c-11e4-bde3-7921e9981247","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"to","sign":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"3396524b-da6c-11e4-bde3-a96c3f1e4c44","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[2,3,4,5,6,8,9,278,279,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,327,328,332],"tindex":"3396524c-da6c-11e4-bde3-79d60158c520","variableMapping":{"size":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[380],"tindex":"3396524d-da6c-11e4-bde3-a70dd7622508","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[361],"tindex":"3396524e-da6c-11e4-bde3-0f7118378b49","variableMapping":{"graphHopperFolder":"tt","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:655","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"3396524f-da6c-11e4-bde3-b9e3e35eaafa","variableMapping":{"blob":"this","inflater":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:61","type":"CtInvocationImpl","sourcecode":"java.util.zip.Inflater.setInput(org.openstreetmap.osmosis.osmbinary.Fileformat.Blob.getZlibData().toByteArray())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[361],"tindex":"33965250-da6c-11e4-bde3-27a4ec6747dd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:166","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Calculate snapped point only once\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[],"tindex":"33965251-da6c-11e4-bde3-132f1b3cb157","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[283,284],"tindex":"33965252-da6c-11e4-bde3-8b3a8cd561a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"33965253-da6c-11e4-bde3-31777e39fa2b","variableMapping":{"initLeafSize":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[380,363,406,422,441,461],"tindex":"33965254-da6c-11e4-bde3-e50689cd9959","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[2,3,4,5,6,8,25,40,382,384,361,362,369,396,403,405,368,370,410,412,419,421,371,429,438,440,372,449,458,460,469],"tindex":"33965255-da6c-11e4-bde3-3fb910672351","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":-1},{"failures":[],"tindex":"33965256-da6c-11e4-bde3-a3379e8062fe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[26,45,56,58,62,63,70,71,153,164,166,170,171,178,179,196,207,209,213,214,221,222,241,252,254,258,259,266,267,281,283,284],"tindex":"33965257-da6c-11e4-bde3-159388d07299","variableMapping":{"length":"key","factor":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-1},{"failures":[],"tindex":"33965258-da6c-11e4-bde3-b1964671815f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,54,69,81,82,83,84,86,87,88,89,90,91,93,94,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,356,139,140,141,142,143,145,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,190,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,235,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"33967969-da6c-11e4-bde3-0f8ec4f63b91","variableMapping":{"err":"indexDivisor","dLat":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"3396796a-da6c-11e4-bde3-59894e65c3b4","variableMapping":{"mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[0,5,9,14,376,379,380],"tindex":"3396796b-da6c-11e4-bde3-3f566936d666","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,54,69,81,82,83,84,86,87,88,89,90,91,93,94,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,347,348,349,478,350,353,354,355,356,139,140,141,142,143,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"3396796c-da6c-11e4-bde3-8be548814c16","variableMapping":{"arrayLength":"bufferIndex","maxGeoRef":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"3396796d-da6c-11e4-bde3-1d7980d7b573","variableMapping":{"mask":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-2},{"failures":[],"tindex":"3396796e-da6c-11e4-bde3-454a20d5061d","variableMapping":{"mSize":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"3396796f-da6c-11e4-bde3-67afcbf6d2da","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3396a080-da6c-11e4-bde3-df93a298c3a8","variableMapping":{"dist":"minLonTmp","com.graphhopper.util.DistanceCalcEarth.R":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[297,300,301,312,314,316,319,327,328],"tindex":"3396a081-da6c-11e4-bde3-25c9748b6308","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:89","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[],"tindex":"3396a082-da6c-11e4-bde3-19a92388ae0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"3396c793-da6c-11e4-bde3-e152d43de890","variableMapping":{"ab_rb":"lon","ab_ar":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[394,396,400,404,405,407,420,421,426,435,439,440,442,446,455,459,460,462],"tindex":"3396c794-da6c-11e4-bde3-b7a04d337866","variableMapping":{"baseUrl":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"3396c795-da6c-11e4-bde3-619059c498c7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[283,284],"tindex":"3396c796-da6c-11e4-bde3-115cadc63ec5","variableMapping":{"i":"biggestStart","to":"biggestStart","lonSize":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[],"tindex":"3396c797-da6c-11e4-bde3-1bbaaaae7796","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":313,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":334,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":144,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":370,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":44,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":29,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":371,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":125,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":249,"com.graphhopper.coll.CompressedArrayTest.testCompress":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":419,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":229,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":64,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":205,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":329,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":312,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":319,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":427,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":305,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":420,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":42,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":150,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":425,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":297,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":105,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":232,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":151,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":332,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":112,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":106,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":440,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":236,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":224,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":190,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":77,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":340,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":270,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":176,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":478,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":201,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":233,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":448,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":129,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":309,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":449,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":300,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":253,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":259,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":168,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":147,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":170,"com.graphhopper.coll.CompressedArrayTest.testCompress2":470,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":250,"com.graphhopper.GraphHopperAPITest.testLoad":278,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":349,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":374,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":206,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":196,"com.graphhopper.storage.LevelGraphStorageTest.testClone":155,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":240,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":450,"com.graphhopper.util.GHUtilityTest.testCopy":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":302,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":138,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":402,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":422,"com.graphhopper.routing.PathTest.testFindInstruction":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":416,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":241,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":359,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":379,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":184,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":447,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":225,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":210,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":268,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":457,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":467,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":49,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":193,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":356,"com.graphhopper.util.InstructionListTest.testWayList2":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":113,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":428,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":426,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":191,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":287,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":96,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":301,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":248,"com.graphhopper.routing.PathBidirRefTest.testExtract":289,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":380,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":172,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":432,"com.graphhopper.util.GHUtilityTest.testSort2":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":310,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":434,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":441,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":237,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":162,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":166,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":187,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":163,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":263,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":445,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":169,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.storage.GraphHopperStorageTest.testClone":198,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":363,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":362,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":50,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":142,"com.graphhopper.routing.PathTest.testTime":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":401,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":185,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":392,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":63,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":174,"com.graphhopper.reader.OSMReaderTest.testRelation":373,"com.graphhopper.util.GHUtilityTest.testSortDirected":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":460,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":336,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":411,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":128,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":59,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":333,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":352,"com.graphhopper.routing.QueryGraphTest.testOneWay":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":116,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":415,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":104,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":472,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":282,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":65,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":381,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":465,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":152,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":149,"com.graphhopper.coll.GHTBitSetTest.testEnsureCapacity":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":423,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":262,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":255,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":194,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":296,"com.graphhopper.util.InstructionListTest.testWayList":38,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":431,"com.graphhopper.GraphHopperAPITest.testDisconnected179":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":51,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":455,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":62,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":438,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":200,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":330,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":424,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":328,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":388,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":439,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":136,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":351,"com.graphhopper.coll.GHTBitSetTest.testClear":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":443,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":189,"com.graphhopper.routing.PathTest.testWayList":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":55,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":386,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":318,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":437,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":211,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":375,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":130,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":131,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":452,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":395,"com.graphhopper.util.GHUtilityTest.testSort":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":109,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":436,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":275,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":123,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":101,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":83,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":372,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":339,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":288,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":397,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":316,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":281,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":355,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":69,"com.graphhopper.routing.PathTest.testFound":291,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":469,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":182,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":435,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":252,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":345,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":54,"com.graphhopper.util.InstructionListTest.testEmptyList":36,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":308,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":421,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":311,"com.graphhopper.reader.PrinctonReaderTest.testRead":11,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":226,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":126,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":53,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":43,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":453,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":466,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":446,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":67,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":110,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":186,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":409,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":111,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":207,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":222,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":417,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":61,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":331,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":369,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":322,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":57,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":335,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":192,"com.graphhopper.routing.PathBidirRefTest.testExtract2":290,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":353,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":295,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":404,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":407,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":80,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":376,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":456,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":107,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":223,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":389,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":215,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":164,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":396,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":47,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":464,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":243,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":314,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":45,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":143,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":40,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":219,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":377,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":60,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":382,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":181,"com.graphhopper.coll.GHTBitSetTest.testCopy":365,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":179,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":235}}]
