[{"failures":[],"tindex":"95b01739-da33-11e4-a1b5-5517aaf19e3f","variableMapping":{"name":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"95b0173a-da33-11e4-a1b5-1da3c572e906","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"hash","i":"hash","mValues":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:118","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.coll.SparseIntIntArray.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[],"tindex":"95b0173b-da33-11e4-a1b5-ef96a0858ff4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[0],"tindex":"95b0173c-da33-11e4-a1b5-a759e9ed0d11","variableMapping":{"param":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:65","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"95b0173d-da33-11e4-a1b5-e7c505ddef22","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"95b03e4e-da33-11e4-a1b5-a1d2d54d1ce4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"95b03e4f-da33-11e4-a1b5-efe15b33c0a7","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"importance","entityType":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"95b03e50-da33-11e4-a1b5-c39107e34f6a","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[8,16,18,19,21,25,26,33,34,112,120,122,123,125,129,130,137,138,150,158,160,161,163,167,168,175,176,192,200,208,210,211,213,217,218,225,226,255,258],"tindex":"95b03e51-da33-11e4-a1b5-e9cf0b1e3191","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[255,259,260],"tindex":"95b03e52-da33-11e4-a1b5-d5fddcd440d0","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"start","edge":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[263],"tindex":"95b03e53-da33-11e4-a1b5-1f46b76f28a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[346],"tindex":"95b03e54-da33-11e4-a1b5-71693990a412","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[258],"tindex":"95b06565-da33-11e4-a1b5-ad82b538debe","variableMapping":{"minResolutionInMeter":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"95b06566-da33-11e4-a1b5-d99507c3639c","variableMapping":{"segmentSizeInBytes":"maxCount","index":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[347,348],"tindex":"95b06567-da33-11e4-a1b5-4d141156e1c8","variableMapping":{"bitsForEdgeFlags":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-1},{"failures":[349,350,351,352,353,354,333,338],"tindex":"95b06568-da33-11e4-a1b5-d319070a6818","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"intendedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[355,329],"tindex":"95b06569-da33-11e4-a1b5-95c77bd0fb6f","variableMapping":{"distance":"durationInHours","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"95b0656a-da33-11e4-a1b5-ef5c58740f8d","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"95b0656b-da33-11e4-a1b5-7dccfeb83169","variableMapping":{"i":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":0},{"failures":[],"tindex":"95b0656c-da33-11e4-a1b5-ef14169578e5","variableMapping":{"bytes":"directionBitMask","capacity":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":0},{"failures":[],"tindex":"95b0656d-da33-11e4-a1b5-b744d7a5c221","variableMapping":{"incEleSum":"resultOrientation","eleDelta":"resultOrientation","incDist2DSum":"baseOrientation","decEleSum":"resultOrientation","fullDist2D":"java.lang.Math.PI","decDist2DSum":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[356],"tindex":"95b0656e-da33-11e4-a1b5-c9f8217e4c6c","variableMapping":{"angle":"fwdSpeed","com.graphhopper.util.AngleCalc.PI3_4":"fwdSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[348],"tindex":"95b0656f-da33-11e4-a1b5-e74afecd866e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[357,358,359,360,336,343],"tindex":"95b06570-da33-11e4-a1b5-330cddd82bd3","variableMapping":{"resultOrientation":"costs","orientation":"costs","java.lang.Math.PI":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"95b06571-da33-11e4-a1b5-21c11f77136b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"95b06572-da33-11e4-a1b5-e3c40e817abc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"95b06573-da33-11e4-a1b5-ff9278bc3e6e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"95b06574-da33-11e4-a1b5-ab17743c935b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"95b06575-da33-11e4-a1b5-9f6fbde68a52","variableMapping":{"currentEntry":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"95b08b86-da33-11e4-a1b5-a7bc990c732a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"95b08b87-da33-11e4-a1b5-7186cd3dc22b","variableMapping":{"y":"speed","angle":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":0},{"failures":[],"tindex":"95b08b88-da33-11e4-a1b5-67d284236073","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[250,361,362,320,321,322,323,324,326,330,331,333,336,337,338,339,340,342],"tindex":"95b08b89-da33-11e4-a1b5-5fb3a3e2eac7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"95b08b8a-da33-11e4-a1b5-2d4226cabc44","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[349],"tindex":"95b08b8b-da33-11e4-a1b5-bb5fe2ef939c","variableMapping":{"mGarbage":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"95b08b8c-da33-11e4-a1b5-7da72aa293d3","variableMapping":{"id":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"95b08b8d-da33-11e4-a1b5-29012d387b4a","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"95b08b8e-da33-11e4-a1b5-5b83f6c1fa84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"95b08b8f-da33-11e4-a1b5-0333aa034d65","variableMapping":{"i":"importance","child":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"95b08b90-da33-11e4-a1b5-473c1d6066bf","variableMapping":{"nodesContracted":"absY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":0},{"failures":[],"tindex":"95b08b91-da33-11e4-a1b5-cb70fc449382","variableMapping":{"bytePointer":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[363,364,365,366,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,435,436,437,438,439,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,440,338,339,340,341,441,342,343,442,443,444,445,446,344,345],"tindex":"95b0b2a2-da33-11e4-a1b5-95673b38149e","variableMapping":{"turnCostIndex":"bytes","nextTurnCostIndex":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[],"tindex":"95b0b2a3-da33-11e4-a1b5-3fcd6bfcd497","variableMapping":{"pavementName":"valueStr","wayTypeName":"field"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":0},{"failures":[],"tindex":"95b0b2a4-da33-11e4-a1b5-f1c3f5a912a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:32","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"95b0b2a5-da33-11e4-a1b5-61661c7feea9","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[447,448,449,450],"tindex":"95b0b2a6-da33-11e4-a1b5-13a7df3a5734","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"95b0b2a7-da33-11e4-a1b5-ffe60b6ef799","variableMapping":{"dX":"ele","dY":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"95b0b2a8-da33-11e4-a1b5-013ea326f2d9","variableMapping":{"bit":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[2,11,17,22,24,32,35,37,42,60,67,81,101,103,106,115,121,126,128,136,139,141,146,153,159,164,166,174,177,179,184,194,203,209,214,216,224,227,229,234,236,238,247,248,249,255,256,257,258,259,261,451,266,282,283,284,285,286,288,290,292,296,297,300,304,306,309,311,313,314,315,317,319,321,322,323,324,325,326,330,331,333,336,337,338,340],"tindex":"95b0b2a9-da33-11e4-a1b5-c3ce5d8997a8","variableMapping":{"start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"95b0b2aa-da33-11e4-a1b5-c755ab94ed9c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"95b0b2ab-da33-11e4-a1b5-95ad4dcd375b","variableMapping":{"reverseSpeed":"preferWayEncoder","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"95b0d9bc-da33-11e4-a1b5-91e36c82e3d8","variableMapping":{"midLat":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","spatialKey":"weightLong","midLon":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","bits":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG","lon":"weight","lat":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"95b0d9bd-da33-11e4-a1b5-a5477206c1d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:145","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"95b0d9be-da33-11e4-a1b5-415324df2857","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[0],"tindex":"95b0d9bf-da33-11e4-a1b5-6fe9b0b93bfb","variableMapping":{"str":"str","s":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:132","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"95b0d9c0-da33-11e4-a1b5-6de77a89d6c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[1,2,3,4,5,452,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,453,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,454,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,455,238,239,240,241,242,243,244,456,245,246,247,248,249,250,251,252,253,254,457,255,256,257,258,259,260,349,458,261,459,460,461,462,463,464,350,465,346,361,466,355,467,356,468,362,469,470,357,451,471,472,262,263,473,474,475,476,477,478,479,358,447,351,480,481,482,483,484,485,486,487,488,489,490,491,492,493,347,359,494,495,496,497,498,499,500,501,502,503,504,360,448,352,505,506,507,508,509,510,511,512,513,514,515,449,516,517,518,353,519,520,521,522,523,524,525,526,527,528,529,530,450,531,532,348,533,354,534,535,536,537,538,539,540,541,542,543,264,265,266,267,544,268,269,270,271,272,273,274,275,276,277,278,279,280,281,545,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,546,547,318,319,320,321,322,323,324,548,325,326,327,328,549,329,330,331,332,333,334,335,336,337,440,338,339,340,341,441,342,343,344,345],"tindex":"95b0d9c1-da33-11e4-a1b5-914260df3aef","variableMapping":{"size":"shift","hash":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"95b0d9c2-da33-11e4-a1b5-df1d35a7d151","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"95b0d9c3-da33-11e4-a1b5-39c8cc4984d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[255,259,260],"tindex":"95b0d9c4-da33-11e4-a1b5-31bc4a9f4264","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[364,365,366,27,38,40,367,131,142,144,174,191,219,230,232,409,422,247,262,263,267,435,436,437,438,439,318,320,321,322,323,324,325,326,327,328,331,332],"tindex":"95b0d9c5-da33-11e4-a1b5-09c4635157dd","variableMapping":{"splitIndex":"index","entrySize":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[346,466,355,356,362,472,319,320,321,322,323,324,325,326,328,330,331,332,333,335,336,337,338,339,340,341,441,342],"tindex":"95b100d6-da33-11e4-a1b5-6ffae8b37471","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[463,466,355,362,484,488,509,513,523,527,537,541],"tindex":"95b100d7-da33-11e4-a1b5-410689affeae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[],"tindex":"95b100d8-da33-11e4-a1b5-b19122943018","variableMapping":{"res":"acceptBit","maxBits":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:261","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"95b100d9-da33-11e4-a1b5-057e75f14079","variableMapping":{"acceptBit":"relBitMask","ferryBit":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"95b100da-da33-11e4-a1b5-05cea98845eb","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[450,531,532,348,533,354,534,535,536,537,538,539,540,541,542],"tindex":"95b100db-da33-11e4-a1b5-230cefeab5c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:131","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[356,468,487,512,526,530,540],"tindex":"95b100dc-da33-11e4-a1b5-b5a0b536b17a","variableMapping":{"fwdFaster":"speed","incDist2DSum":"speed","fwdSlower":"speed","fullDist2D":"speed","restDist2D":"speed","speed":"speed","decDist2DSum":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[516],"tindex":"95b100dd-da33-11e4-a1b5-e970557f7837","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[286,288,292,303,550],"tindex":"95b100de-da33-11e4-a1b5-a726337384a6","variableMapping":{"segmentSizeInBytes":"size","length":"size","index":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"95b100df-da33-11e4-a1b5-51253715ea04","variableMapping":{"intVal":"i","degree":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[551],"tindex":"95b100e0-da33-11e4-a1b5-7d7e799ed67a","variableMapping":{"minStr":"dayStr","minutes":"minutes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[237,282,288,293,295,296,297,298,299,301,302,304,305,306,307,308,309,310,311,314,316,317,320,321,324],"tindex":"95b100e1-da33-11e4-a1b5-d1c259e47a16","variableMapping":{"closed":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:181","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[361,362,320,323,330,342],"tindex":"95b100e2-da33-11e4-a1b5-713f14a13512","variableMapping":{"bits":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"95b100e3-da33-11e4-a1b5-c5cdd148af30","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"95b100e4-da33-11e4-a1b5-f9de98785a18","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"95b100e5-da33-11e4-a1b5-8bc433904c5e","variableMapping":{"store":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"95b100e6-da33-11e4-a1b5-278f2e680f70","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"95b100e7-da33-11e4-a1b5-1f9bc98e16b0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[44,50,52,53,552,85,91,93,94,553,554,555,556,557,558,559,560,561,562],"tindex":"95b100e8-da33-11e4-a1b5-2fa450133de2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"95b100e9-da33-11e4-a1b5-d700adf24b6a","variableMapping":{"high":"speed","len":"speed","start":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"95b127fa-da33-11e4-a1b5-efe742c78590","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"95b127fb-da33-11e4-a1b5-fb1bdd686031","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"95b127fc-da33-11e4-a1b5-8bc0a5a2c9aa","variableMapping":{"k":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-2},{"failures":[363,364,365,366,2,3,6,27,33,38,40,41,46,47,48,69,70,71,72,74,87,88,89,367,103,106,107,110,131,137,142,144,145,174,191,194,195,198,219,225,230,232,233,409,422,243,247,248,249,250,262,263,266,267,268,269,271,272,273,274,275,276,278,279,314,435,436,438,439,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"95b127fd-da33-11e4-a1b5-3dd6b4c7a3d6","variableMapping":{"size":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[462],"tindex":"95b127fe-da33-11e4-a1b5-b5a9a35ba15f","variableMapping":{"tt":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"95b127ff-da33-11e4-a1b5-23bc551f3a32","variableMapping":{"edgeState":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[8,16,18,19,21,25,26,33,34,112,120,122,123,125,129,130,137,138,150,158,160,161,163,167,168,175,176,192,200,208,210,211,213,217,218,225,226,255,258],"tindex":"95b12800-da33-11e4-a1b5-f36c418adb28","variableMapping":{"elem":"mKeys","i":"key","value":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:302","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"95b12801-da33-11e4-a1b5-a759e6991835","variableMapping":{"daType":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":0},{"failures":[],"tindex":"95b12802-da33-11e4-a1b5-c90fc1f38f6f","variableMapping":{"flags":"hash","tmpValue":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[530],"tindex":"95b12803-da33-11e4-a1b5-f1244d7f894f","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"95b12804-da33-11e4-a1b5-f338ceb48433","variableMapping":{"mask":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,71,72,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,159,174,396,398,399,400,401,403,404,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"95b14f15-da33-11e4-a1b5-1b254566570c","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"95b14f16-da33-11e4-a1b5-f1b5e502c0c8","variableMapping":{"from":"index","hash":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"95b14f17-da33-11e4-a1b5-4344a3ad27dc","variableMapping":{"fwdIncline":"fwdDecline","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"95b14f18-da33-11e4-a1b5-c56d07b4db0b","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[8,18,19,25,33,34,112,122,123,129,137,138,150,160,161,167,175,176,200,210,211,217,225,226,255,258],"tindex":"95b14f19-da33-11e4-a1b5-eff564473410","variableMapping":{"size":"i","capacity":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"95b14f1a-da33-11e4-a1b5-b7ffd7b0d601","variableMapping":{"min":"y1","tmpSize":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":0},{"failures":[],"tindex":"95b14f1b-da33-11e4-a1b5-41818068bd0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[255,259],"tindex":"95b14f1c-da33-11e4-a1b5-8da81a61b696","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":224,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":312,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":191,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":530,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":63,"com.graphhopper.GraphHopperAPITest.testNoLoad":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":149,"com.graphhopper.reader.OSMReaderTest.testFerry":329,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":239,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":503,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":533,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":88,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":319,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":486,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":490,"com.graphhopper.storage.MMapDataAccessTest.testSegments":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":120,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":420,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":446,"com.graphhopper.coll.CompressedArrayTest.testCompress":554,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":538,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":41,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":169,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":17,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":84,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":421,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":414,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":290,"com.graphhopper.GraphHopperTest.testPrepare":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":311,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":501,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":304,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":539,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":252,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":197,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":259,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":499,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":296,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":302,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":47,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":504,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":549,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":103,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":376,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":560,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":198,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":550,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":293,"com.graphhopper.GraphHopperTest.testLoadOSM":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":54,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":48,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":496,"com.graphhopper.reader.OSMReaderTest.testSort":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":512,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":257,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":107,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":425,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":36,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":2,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":558,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":182,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":275,"com.graphhopper.storage.RAMDataAccessTest.testHeader":415,"com.graphhopper.routing.DijkstraTest.initializationError":543,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":343,"com.graphhopper.storage.MMapDataAccessTest.testHeader":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":141,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":368,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":377,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":223,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":390,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":13,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":545,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":104,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":110,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":529,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":526,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":92,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":21,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":90,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":548,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":299,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":298,"com.graphhopper.coll.OSMIDMapTest.testGetLong":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":124,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":130,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":215,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":194,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":217,"com.graphhopper.coll.CompressedArrayTest.testCompress2":553,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":516,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":121,"com.graphhopper.GraphHopperAPITest.testLoad":236,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":454,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":399,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":349,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":18,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":8,"com.graphhopper.storage.LevelGraphStorageTest.testClone":202,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":551,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":111,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":260,"com.graphhopper.reader.OSMReaderTest.testBarriers":333,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":153,"com.graphhopper.util.GHUtilityTest.testCopy":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":523,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":65,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":541,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":418,"com.graphhopper.routing.PathTest.testFindInstruction":267,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":535,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":112,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":238,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":462,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":231,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":476,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":37,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":22,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":139,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":125,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":484,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":494,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":544,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":204,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":154,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":379,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":406,"com.graphhopper.util.InstructionListTest.testWayList2":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":489,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":55,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":502,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":144,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":491,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":500,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":262,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":206,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":422,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":360,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":122,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":69,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":300,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":334,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":424,"com.graphhopper.routing.AStarTest.initializationError":547,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":314,"com.graphhopper.coll.OSMIDMapTest.testGet":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":119,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":386,"com.graphhopper.routing.PathBidirRefTest.testExtract":253,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":463,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":219,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":437,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":505,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":96,"com.graphhopper.storage.RAMDataAccessTest.testCopy":411,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":175,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":531,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":352,"com.graphhopper.storage.RAMDataAccessTest.testSegments":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":60,"com.graphhopper.util.GHUtilityTest.testSort2":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":309,"com.graphhopper.reader.OSMReaderTest.testMain":331,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":506,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":561,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":513,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":222,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":179,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":209,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":213,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":234,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":210,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":134,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":474,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":216,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":341,"com.graphhopper.storage.StorablePropertiesTest.testStore":367,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":409,"com.graphhopper.storage.GraphHopperStorageTest.testClone":10,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":362,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":356,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":527,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":155,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":189,"com.graphhopper.routing.PathTest.testTime":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":522,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":232,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":471,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":168,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":221,"com.graphhopper.reader.OSMReaderTest.testRelation":440,"com.graphhopper.util.GHUtilityTest.testSortDirected":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":487,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":431,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":271,"com.graphhopper.GraphHopperTest.testFootOnly":327,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":532,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":355,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":91,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":373,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":495,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":473,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":164,"com.graphhopper.search.NameIndexTest.testCreate":366,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":416,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":268,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":402,"com.graphhopper.routing.QueryGraphTest.testOneWay":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":58,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":557,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":534,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":445,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":46,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":555,"com.graphhopper.reader.OSMReaderTest.testWithBounds":340,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":419,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":385,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":161,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":256,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":170,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":464,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":347,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":199,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":485,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":542,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":133,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":81,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":126,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":6,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":295,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":394,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":39,"com.graphhopper.util.InstructionListTest.testWayList":248,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":448,"com.graphhopper.GraphHopperAPITest.testDisconnected179":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":156,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":44,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":482,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":345,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":167,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":510,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":322,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":291,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":498,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":306,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":546,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":289,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":469,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":519,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":511,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":109,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":316,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":452,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":99,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":397,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":515,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":1,"com.graphhopper.routing.PathTest.testWayList":266,"com.graphhopper.storage.MMapDataAccessTest.testCopy":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":183,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":520,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":466,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":0,"com.graphhopper.coll.OSMIDMapTest.testGet2":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":317,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":428,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":227,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":132,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":509,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":23,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":458,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":117,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":93,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":94,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":412,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":432,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":351,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":517,"com.graphhopper.util.GHUtilityTest.testSort":244,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":173,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":562,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":508,"com.graphhopper.search.NameIndexTest.testPut":364,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":453,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":64,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":86,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":77,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":478,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":274,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":105,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":353,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":443,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":492,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":315,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":389,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":255,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":405,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":174,"com.graphhopper.routing.PathTest.testFound":264,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":328,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":497,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":229,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":423,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":507,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":123,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":365,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":384,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":159,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":15,"com.graphhopper.util.InstructionListTest.testEmptyList":246,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":303,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":524,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":451,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":465,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":350,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":540,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":310,"com.graphhopper.reader.PrinctonReaderTest.testRead":344,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":38,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":89,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":158,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":439,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":556,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":148,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":480,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":537,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":369,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":359,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":521,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":475,"com.graphhopper.reader.OSMReaderTest.testFoot":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":172,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":279,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":52,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":559,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":53,"com.graphhopper.reader.OSMReaderTest.testOneWay":342,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":19,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":34,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":536,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":430,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":447,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":285,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":552,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":468,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":283,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":429,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":261,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":162,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":270,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":4,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":441,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":434,"com.graphhopper.routing.PathBidirRefTest.testExtract2":254,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":403,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":294,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":56,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":525,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":383,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":363,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":528,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":185,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":459,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":483,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":49,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":35,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":456,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":205,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":470,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":27,"com.graphhopper.GraphHopperTest.testFootAndCar":323,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":211,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":518,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":100,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":152,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":493,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":371,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":305,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":313,"com.graphhopper.GraphHopperTest.testPrepareOnly":318,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":66,"com.graphhopper.GraphHopperTest.testVia":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":514,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":150,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":338,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":190,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":31,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":250,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":460,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":165,"com.graphhopper.routing.AStarBidirectionTest.initializationError":457,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":472,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":228,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":226,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":106}}]
