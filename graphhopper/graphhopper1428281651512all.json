[{"failures":[0],"tindex":"715071e9-dbf7-11e4-8586-777e4dda1be0","variableMapping":{"baseUrl":"s","name":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"7151353a-dbf7-11e4-8586-61d6f5f82df7","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"7151353b-dbf7-11e4-8586-d991e9b08cc2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"7151353c-dbf7-11e4-8586-8f0a4d9887ae","variableMapping":{"size":"tmpPrevEdge","from":"tmpPrevEdge","end":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[0],"tindex":"7151353d-dbf7-11e4-8586-a3dc9cffdd38","variableMapping":{"cp":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"7151353e-dbf7-11e4-8586-bffacfde0076","variableMapping":{"defaultUTurnCost":"currDistToGoal","weight":"currDistToGoal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"7151353f-dbf7-11e4-8586-5734299c2d4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[],"tindex":"71513540-dbf7-11e4-8586-11ffdde907b5","variableMapping":{"retBucket":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"71513541-dbf7-11e4-8586-f3b9cc242c75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[40,41],"tindex":"71513542-dbf7-11e4-8586-9f3e2712b346","variableMapping":{"start":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[],"tindex":"71513543-dbf7-11e4-8586-65c83fd1a284","variableMapping":{"additionalEdgeFilter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"71513544-dbf7-11e4-8586-f16a2719e85d","variableMapping":{"factor":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":0},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"71513545-dbf7-11e4-8586-b93a04bfbb2f","variableMapping":{"fullyLoaded":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"71515c56-dbf7-11e4-8586-2366515dd55a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"71515c57-dbf7-11e4-8586-1d3f262e20b5","variableMapping":{"locs":"skippedEdge1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"71515c58-dbf7-11e4-8586-0ff14d23f944","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1138","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().getCardinality()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[56,52],"tindex":"71515c59-dbf7-11e4-8586-85c0911d9fea","variableMapping":{"err":"nextRelBit","dLat":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[57,58,59],"tindex":"71515c5a-dbf7-11e4-8586-e73220cd03db","variableMapping":{"turnCostIndex":"start","NO_TURN_ENTRY":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[],"tindex":"71515c5b-dbf7-11e4-8586-3b09e7469901","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"71515c5c-dbf7-11e4-8586-f3aa82b1b9d1","variableMapping":{"index":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[40,41,52],"tindex":"71515c5d-dbf7-11e4-8586-d77eb82ccb22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,1,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,2,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,57,325,326,327,58,59,328,329,330,331,332,333,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344,345,345,346,346,347,348,3,349,4,350,351,352,5,353,6,7,8,9,354,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,355,356,357,358,359,33,34,35,36,360,361,37,362,38,363,39,364,365,366,54,367,368,369,370,55,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"7151836e-dbf7-11e4-8586-73f8ad989a7b","variableMapping":{"graphHopperFolder":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"7151836f-dbf7-11e4-8586-5719d97c8b8e","variableMapping":{"entry":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-2},{"failures":[388,44,389,390,391,48,392,393,394,395,396,50,397,398,53,399],"tindex":"71518370-dbf7-11e4-8586-e7d29f8bacf5","variableMapping":{"orientation":"maxSpeed","resultOrientation":"maxSpeed","baseOrientation":"maxSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"71518371-dbf7-11e4-8586-ef22039ad00b","variableMapping":{"err":"length","tmpErr":"index","y1":"index","dLon":"delta","sLat":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":0},{"failures":[],"tindex":"71518372-dbf7-11e4-8586-eddeb2ddaba7","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"71518373-dbf7-11e4-8586-4d0f3840a9fb","variableMapping":{"maxLatTmp":"fwdDecline","minLatTmp":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"71518374-dbf7-11e4-8586-e11174a9ae6e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,400,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,1,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,401,159,160,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,221,236,2,248,249,250,251,253,254,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,57,325,326,327,58,59,328,329,330,331,332,333,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344,345,345,346,346,347,348,3,349,4,350,351,352,5,353,6,7,8,9,354,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,360,361,37,362,38,39,366,54,367,368,369,370,55,371,372,373,374,375,376,377,378,379,380,386,387],"tindex":"71521fb5-dbf7-11e4-8586-d59fc75673f4","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"71521fb6-dbf7-11e4-8586-8ff6af969594","variableMapping":{"high":"dir","highKey":"scDirMask","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"71533127-dbf7-11e4-8586-f7d0b2b9bbee","variableMapping":{"high":"tmpValue","len":"flags","start":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"71533128-dbf7-11e4-8586-29b9aedf14b4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[108,109,110,111,112,113,115,117,118,119,120,121,122,123,1,143,145,146,147,148,149,150,152,154,155,156,157,158,159,160,306,307,18,22,23,26,402,403,35,36,360,361,37,363,39,404,405,406,407,408,409,410,411,367,368,369],"tindex":"71535839-dbf7-11e4-8586-73fee063db98","variableMapping":{"lastKey":"spatialKey","key":"spatialKey"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"7153583a-dbf7-11e4-8586-6d63248217b7","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.REACH_DEST"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"7153583b-dbf7-11e4-8586-7bda33b52703","variableMapping":{"capacity":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"7153583c-dbf7-11e4-8586-514e09040a87","variableMapping":{"lat":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"7153583d-dbf7-11e4-8586-2fbf60547f68","variableMapping":{"ref":"skippedEdge1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"7153583e-dbf7-11e4-8586-9f5bcb74e8a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"7153583f-dbf7-11e4-8586-5109e73ba87b","variableMapping":{"intVal":"nextNodeBit","degree":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[330,45,332,354],"tindex":"71535840-dbf7-11e4-8586-9f6d97c3dbde","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"71535841-dbf7-11e4-8586-1597f98d517a","variableMapping":{"weightLong":"wayBitMask","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"71535842-dbf7-11e4-8586-8b4526693f45","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[402,403,404,405,406,407,408,409,410],"tindex":"71535843-dbf7-11e4-8586-3bb2294b852b","variableMapping":{"resultOrientation":"lat","orientation":"lat","java.lang.Math.PI":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[402,403,404,405,406,407,408,409,410,411],"tindex":"71535844-dbf7-11e4-8586-01f8d2189cfb","variableMapping":{"factor":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[402,403,404,405,406,407,408,409,410,411],"tindex":"71535845-dbf7-11e4-8586-8766e512dad5","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"71535846-dbf7-11e4-8586-3d746c433584","variableMapping":{"res":"encoded","value":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[236],"tindex":"71535847-dbf7-11e4-8586-218e8568130f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"71535848-dbf7-11e4-8586-dff560e0416a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"71535849-dbf7-11e4-8586-df4896576c1f","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[320,56,412,45,33,34,35,36,360,361,37,38,363,39,364,366,54,367,368,369,370,55,371,372,374,375,376,377,379],"tindex":"7153584a-dbf7-11e4-8586-3f79b8e7f221","variableMapping":{"shift":"flags","tmpValue":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"71537f5b-dbf7-11e4-8586-039f559c94e9","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"I_LEVEL","sign":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":0},{"failures":[326,33,35,36,360,361,37,38,363,39,364,54,367,368,369,370,55,371,372,374,375,376,379],"tindex":"71537f5c-dbf7-11e4-8586-15ddf4a37c77","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"71537f5d-dbf7-11e4-8586-8f1611817a11","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[320,413,414,415,416,417,35,36,360,361,37,363,377],"tindex":"71537f5e-dbf7-11e4-8586-8d4686e4ff3d","variableMapping":{"flags":"encoded","mask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"71537f5f-dbf7-11e4-8586-559e5cea154e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":0},{"failures":[108,110,111,112,113,115,117,118,119,120,121,122,123,131,132,133,136,1,143,145,147,148,149,150,152,154,155,156,157,158,159,160,306,307,321,322,325,326,327,18,22,23,26,33,34,35,36,360,361,37,38,363,39,364,54,367,368,369,370,55,371,372,374,375,376,379],"tindex":"71537f60-dbf7-11e4-8586-397b0d2e970e","variableMapping":{"closestNode":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-1},{"failures":[],"tindex":"71537f61-dbf7-11e4-8586-b1230a659fa5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"71537f62-dbf7-11e4-8586-475e5fb9c9e0","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.CAR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,123,129,142,160,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,2,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,418,419,420,328,421,422,423,424,425,426,427,428,413,429,430,431,432,414,415,433,434,435,436,437,438,416,439,440,441,45,442,443,335,354,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,444,445,33,361,39,364,366,54,367,368,369,370,55,371,372,374,375,376,377,379],"tindex":"71537f63-dbf7-11e4-8586-a12efad6411a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"71537f64-dbf7-11e4-8586-c5e8ab2672cd","variableMapping":{"silent":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,136,137,138,139,140,141,142,1,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,164,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,221,236,446,447,448,449,2,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,57,325,326,327,58,59,328,329,330,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,3,349,4,350,351,352,5,353,6,7,8,9,354,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,360,361,37,38,363,39,364,366,54,367,368,369,370,55,371,372,374,375,376,377,379,380,386,387],"tindex":"7153a675-dbf7-11e4-8586-09ddb118f19f","variableMapping":{"bm":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[421,424,425,33,361,39,54],"tindex":"7153a676-dbf7-11e4-8586-659d9c74ba87","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"7153a677-dbf7-11e4-8586-33cb995e9911","variableMapping":{"minLatInit":"minLat","maxLonInit":"maxLat","minLonInit":"maxLon","bounds":"this","maxLatInit":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"7153a678-dbf7-11e4-8586-1b65e8563a4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[415,417,450],"tindex":"7153a679-dbf7-11e4-8586-b7373dc1f872","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[451],"tindex":"7153a67a-dbf7-11e4-8586-b77de495ae77","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[2,5,8],"tindex":"7153a67b-dbf7-11e4-8586-7941b7225083","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"7153a67c-dbf7-11e4-8586-a1bc45052a2e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[58,59],"tindex":"7153a67d-dbf7-11e4-8586-f7e2892e6ee7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[45],"tindex":"7153a67e-dbf7-11e4-8586-ef0f9ba86daf","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[320,56,412,45,33,34,35,36,360,361,37,38,363,39,364,366,54,367,368,369,370,55,371,372,374,375,376,377,379],"tindex":"7153a67f-dbf7-11e4-8586-1927a7d1cbcc","variableMapping":{"value":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"7153a680-dbf7-11e4-8586-274af72f07f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"7153a681-dbf7-11e4-8586-99e02b932566","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"7153cd92-dbf7-11e4-8586-a312b42f0122","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[81,183,221,271,326,419,420,328,421,422,423,424,425,426,427,428,413,429,430,431,432,414,415,433,434,435,436,437,438,416,329,330,452,40,453,454,42,455,43,456,457,458,459,460,388,461,462,463,44,389,464,390,465,439,56,440,412,45,466,41,467,468,46,469,47,470,471,472,473,474,391,475,476,477,48,392,478,393,479,480,394,49,395,481,482,483,396,484,485,486,50,397,487,398,488,489,51,490,52,491,492,493,494,495,496,497,53,399,498,499,366,54,367,368,369,370,55,371,372,374,375,376,377,379],"tindex":"7153cd93-dbf7-11e4-8586-9d5157710627","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"7153cd94-dbf7-11e4-8586-f5b86c41dce9","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[72,82,83,85,89,90,97,98,174,184,185,187,191,192,199,200,212,222,223,225,229,230,237,238,262,272,273,275,279,280,287,288,57,327],"tindex":"7153cd95-dbf7-11e4-8586-31601036fbbd","variableMapping":{"value":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"7153cd96-dbf7-11e4-8586-457a9236ad00","variableMapping":{"time":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[],"tindex":"7153cd97-dbf7-11e4-8586-cf4de3a51815","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[320,56,412,45,35,36,360,361,37,363,39,366,54,367,369,371,372,374,375,376,377,379],"tindex":"7153cd98-dbf7-11e4-8586-0f5688dbe419","variableMapping":{"time":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"7153cd99-dbf7-11e4-8586-653f39a592e2","variableMapping":{"size":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[],"tindex":"7153cd9a-dbf7-11e4-8586-01bf08fbd2eb","variableMapping":{"finishedTo":"uTurnSupport","finishedFrom":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[60,61,62,63,65,66,70,91,97,102,104,105,110,111,112,131,132,133,134,136,147,148,149,161,164,167,168,172,193,199,204,206,207,236,252,255,256,260,281,287,292,294,295,500,501,313,317,318,319,320,329,330,333,334,335,336,338,339,340,341,342,343,345,346,29,355,356,358,359,33,34,35,36,360,361,37,38,363,39,364,366,54,367,368,369,370,55,371,372,374,375,376,377,379],"tindex":"7153cd9b-dbf7-11e4-8586-15ec2d8d97a8","variableMapping":{"size":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:136","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[],"tindex":"7153cd9c-dbf7-11e4-8586-554ec06456e1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"7153cd9d-dbf7-11e4-8586-8bcc1183af88","variableMapping":{"pointer":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[15,30],"tindex":"7153cd9e-dbf7-11e4-8586-e9fa3758a544","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"7153f4af-dbf7-11e4-8586-410ea7e682a8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[],"tindex":"7153f4b0-dbf7-11e4-8586-d1f5f13606d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"7153f4b1-dbf7-11e4-8586-ff1868fdefe1","variableMapping":{"len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[371],"tindex":"7153f4b2-dbf7-11e4-8586-696dc9d07c62","variableMapping":{"size":"maxTurnCosts","i":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-1},{"failures":[],"tindex":"7153f4b3-dbf7-11e4-8586-cb221ed415d3","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":0},{"failures":[],"tindex":"7153f4b4-dbf7-11e4-8586-e958cd224c6c","variableMapping":{"speedVal":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[426,354,19,32],"tindex":"7153f4b5-dbf7-11e4-8586-dba5e7a49fc4","variableMapping":{"size":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,400,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,1,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,401,159,160,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,221,236,2,248,249,250,251,253,254,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,57,325,326,327,58,59,328,329,330,331,332,333,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344,345,345,346,346,347,348,3,349,4,350,351,352,5,353,6,7,8,9,354,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,360,361,37,362,38,39,366,54,367,368,369,370,55,371,372,373,374,375,376,377,378,379,380,386,387],"tindex":"7153f4b6-dbf7-11e4-8586-f7f528944efb","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[453,56,412,467],"tindex":"7153f4b7-dbf7-11e4-8586-818ffb21e011","variableMapping":{"bit":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[464,478,487,498],"tindex":"7153f4b8-dbf7-11e4-8586-3bdf2817a9dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[347,353,354,10,32],"tindex":"7153f4b9-dbf7-11e4-8586-0dd46f07b6f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"7153f4ba-dbf7-11e4-8586-a5be7e72dbb8","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[421,425,361,39,54],"tindex":"7153f4bb-dbf7-11e4-8586-81ad36cc7f2b","variableMapping":{"scDirMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[0],"tindex":"71541bcc-dbf7-11e4-8586-d392102351dd","variableMapping":{"valueStr":"str","field":"key","key":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":27,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":336,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":252,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":417,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":211,"com.graphhopper.reader.OSMReaderTest.testFerry":366,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":309,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":469,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":491,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":148,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":34,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":182,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":385,"com.graphhopper.coll.CompressedArrayTest.testCompress":403,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":497,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":4,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":231,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":81,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":6,"com.graphhopper.GraphHopperTest.testPrepare":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":243,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":347,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":19,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":130,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":53,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":322,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":17,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":111,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":47,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":164,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":9,"com.graphhopper.GraphHopperTest.testLoadOSM":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":112,"com.graphhopper.reader.OSMReaderTest.testSort":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":392,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":326,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":168,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":100,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":244,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":342,"com.graphhopper.routing.DijkstraTest.initializationError":442,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":203,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":285,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":77,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":165,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":172,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":488,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":152,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":150,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":13,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":262,"com.graphhopper.coll.OSMIDMapTest.testGetLong":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":186,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":192,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":277,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":255,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":279,"com.graphhopper.coll.CompressedArrayTest.testCompress2":402,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":183,"com.graphhopper.GraphHopperAPITest.testLoad":306,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":259,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":447,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":419,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":82,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":72,"com.graphhopper.storage.LevelGraphStorageTest.testClone":264,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":173,"com.graphhopper.reader.OSMReaderTest.testBarriers":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":215,"com.graphhopper.util.GHUtilityTest.testCopy":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":485,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":498,"com.graphhopper.routing.PathTest.testFindInstruction":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":494,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":174,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":308,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":424,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":293,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":454,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":101,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":201,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":187,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":462,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":441,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":443,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":266,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":216,"com.graphhopper.util.InstructionListTest.testWayList2":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":119,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":106,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":46,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":467,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":329,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":268,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":501,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":225,"com.graphhopper.storage.RAMDirectoryTest.testSynched":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":184,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":15,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":71,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":370,"com.graphhopper.routing.AStarTest.initializationError":445,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":29,"com.graphhopper.coll.OSMIDMapTest.testGet":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":181,"com.graphhopper.routing.PathBidirRefTest.testExtract":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":425,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":281,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":209,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":472,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":123,"com.graphhopper.util.GHUtilityTest.testSort2":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":24,"com.graphhopper.reader.OSMReaderTest.testMain":367,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":256,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":474,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":478,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":284,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":241,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":271,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":275,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":296,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":272,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":40,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":446,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":278,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":377,"com.graphhopper.storage.StorablePropertiesTest.testStore":161,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":500,"com.graphhopper.storage.GraphHopperStorageTest.testClone":74,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":240,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":433,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":299,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":414,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":487,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":217,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":250,"com.graphhopper.routing.PathTest.testTime":332,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":484,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":294,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":438,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":230,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":283,"com.graphhopper.reader.OSMReaderTest.testRelation":373,"com.graphhopper.util.GHUtilityTest.testSortDirected":315,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":451,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":389,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":338,"com.graphhopper.GraphHopperTest.testFootOnly":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":490,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":431,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":151,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":452,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":226,"com.graphhopper.search.NameIndexTest.testCreate":63,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":335,"com.graphhopper.routing.QueryGraphTest.testOneWay":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":493,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":110,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":404,"com.graphhopper.reader.OSMReaderTest.testWithBounds":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":325,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":232,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":426,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":56,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":261,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":499,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":195,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":188,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":70,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":10,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":103,"com.graphhopper.util.InstructionListTest.testWayList":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":471,"com.graphhopper.GraphHopperAPITest.testDisconnected179":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":218,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":408,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":213,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":388,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":387,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":477,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":360,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":76,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":7,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":466,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":21,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":444,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":353,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":434,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":482,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":170,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":31,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":401,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":479,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":64,"com.graphhopper.routing.PathTest.testWayList":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":483,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":222,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":430,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":450,"com.graphhopper.coll.OSMIDMapTest.testGet2":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":32,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":289,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":476,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":87,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":420,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":153,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":458,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.util.GHUtilityTest.testSort":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":235,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":492,"com.graphhopper.search.NameIndexTest.testPut":61,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":208,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":127,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":139,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":455,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":341,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":166,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":363,"com.graphhopper.storage.MMapDirectoryTest.testSynched":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":481,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":382,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":423,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":57,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":236,"com.graphhopper.routing.PathTest.testFound":331,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":45,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":364,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":291,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":0,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":391,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":185,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":62,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":221,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":79,"com.graphhopper.util.InstructionListTest.testEmptyList":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":486,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":437,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":25,"com.graphhopper.reader.PrinctonReaderTest.testRead":386,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":102,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":149,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":220,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":359,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":210,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":459,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":496,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":440,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":300,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":453,"com.graphhopper.reader.OSMReaderTest.testFoot":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":234,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":346,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":116,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":295,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":410,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":117,"com.graphhopper.reader.OSMReaderTest.testOneWay":379,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":83,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":98,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":202,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":495,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":457,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":415,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":349,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":224,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":337,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":67,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":378,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":305,"com.graphhopper.routing.PathBidirRefTest.testExtract2":324,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":354,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":129,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":60,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":398,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":247,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":421,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":113,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":99,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":435,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":91,"com.graphhopper.GraphHopperTest.testFootAndCar":361,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":273,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":214,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":20,"com.graphhopper.storage.StorablePropertiesTest.testLoad":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":28,"com.graphhopper.GraphHopperTest.testPrepareOnly":33,"com.graphhopper.GraphHopperTest.testVia":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":212,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":374,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":251,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":95,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":422,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":227,"com.graphhopper.routing.AStarBidirectionTest.initializationError":418,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":416,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":290,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":288,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":167}}]
