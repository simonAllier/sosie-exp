[{"failures":[],"tindex":"e1c33f38-dbcf-11e4-8629-2f21940b5ac1","variableMapping":{"todoBytes":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[0],"tindex":"e1c49ec9-dbcf-11e4-8629-b5392322dd05","variableMapping":{"neighborUpdates":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[1],"tindex":"e1c4c5da-dbcf-11e4-8629-134b06da4625","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11],"tindex":"e1c4c5db-dbcf-11e4-8629-3d02e759f2bb","variableMapping":{"segmentSizeInBytes":"priorityFromRelation","length":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[12,13,14,15,16,17,18,2,3,19,4,20,5,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,8,9,78,10,79,11,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"e1c4c5dc-dbcf-11e4-8629-0115e0ef94d5","variableMapping":{"latlon":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"e1c4c5dd-dbcf-11e4-8629-914e5bf892fc","variableMapping":{"finishedTo":"uTurnSupport","finishedFrom":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"e1c4c5de-dbcf-11e4-8629-399eac2b2b8f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"e1c4c5df-dbcf-11e4-8629-33adbb73093f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-2},{"failures":[301,302],"tindex":"e1c4ecf0-dbcf-11e4-8629-1508d78dcc10","variableMapping":{"nameIndexRef":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[12,303,304,305,306,13,307,308,309,14,310,311,312,313,314,315,316,317,318,319,320,1,321,322,323,324,325,326,327,119,120,328,329,330,331,332,333,334,335,336,337,338,339,204,207,208,340,255,258,259,341,342,343,344,345,346,347,348,349,350,351,352,353],"tindex":"e1c4ecf1-dbcf-11e4-8629-4da7d5059dac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[303,304,305,307,308,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,354,355,356,357,358,359,360,361,362,363,364,365],"tindex":"e1c4ecf2-dbcf-11e4-8629-4953605ab953","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-1},{"failures":[],"tindex":"e1c4ecf3-dbcf-11e4-8629-3d12fc508290","variableMapping":{"r":"lon","angle":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":0},{"failures":[12,303,304,305,306,13,307,308,309,14,310,366,367,368,369,370,371,372,373,374,311,312,313,314,315,316,317,318,319,320,1,321,322,323,324,325,326,375,376,327,377,378,16,17,379,380,381,382,383,384,385,386,387,388,389,390,114,119,120,124,145,151,156,159,391,392,393,394,395,396,192,331,332,334,337,204,207,208,212,233,239,244,247,340,255,258,259,263,284,290,295,298,344,345,347,350,353],"tindex":"e1c4ecf4-dbcf-11e4-8629-0fa0e06b41e9","variableMapping":{"cap":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"e1c4ecf5-dbcf-11e4-8629-09538e8d2bb7","variableMapping":{"size":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[397,398],"tindex":"e1c4ecf6-dbcf-11e4-8629-a1c1ee926c3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[12,303,304,305,306,13,307,399,308,309,14,310,400,401,402,403,404,405,406,366,367,368,369,407,408,409,370,410,411,412,413,414,415,416,417,314,315,316,317,318,319,320,1,321,15,322,323,324,325,418,326,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,16,17,18,2,3,19,4,20,5,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,6,437,0,7,438,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,439,440,441,442,397,398,77,8,9,78,10,79,11,80,81,82,83,84,85,86,87,88,89,90,91,92,93,443,444,445,379,380,446,447,448,381,382,449,383,384,385,386,387,388,450,389,390,451,452,453,454,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,455,354,456,355,356,357,358,359,360,361,457,362,363,364,365,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,458,459,460,461,462,391,392,393,463,464,465,466,467,468,469,470,471,472,473,162,474,475,476,477,478,479,163,480,481,482,483,484,485,486,487,488,489,490,491,164,492,493,394,395,396,494,495,496,497,498,499,500,501,502,503,504,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"e1c51407-dbcf-11e4-8629-990a1054d897","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:323","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) == 0)\n    throw new java.lang.IllegalStateException(\"No encoder is active!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"e1c51408-dbcf-11e4-8629-2b2d9f64a226","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"e1c51409-dbcf-11e4-8629-17811b3c91f8","variableMapping":{"need":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[326,439,441,442,126,134,136,137,139,143,144,151,152,214,222,224,225,227,231,232,239,240,505,506,256,265,273,275,276,278,282,283,290,291],"tindex":"e1c5140a-dbcf-11e4-8629-312587b60ef2","variableMapping":{"size":"segmentSizeInBytes","index":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"e1c5140b-dbcf-11e4-8629-e786f5c5f282","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"currDistToGoal","java.lang.Double.POSITIVE_INFINITY":"currDistToGoal","weight":"currDistToGoal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"e1c5140c-dbcf-11e4-8629-9db19ff94b16","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"speed","nodeId":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"e1c5140d-dbcf-11e4-8629-bd89b21e3fad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"e1c5140e-dbcf-11e4-8629-5d7440a5151d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:502","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"e1c5140f-dbcf-11e4-8629-b197c184ec24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"e1c51410-dbcf-11e4-8629-4f3af647d3f3","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"e1c51411-dbcf-11e4-8629-ef0b2d617179","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[12,303,304,305,306,13,307,308,309,14,310,366,367,368,369,370,371,372,373,374,314,315,316,317,318,319,320,1,321,322,323,324,325,326,375,376,377,378,16,17,379,380,381,382,383,384,385,386,387,388,389,390,114,119,120,124,145,151,156,158,159,391,392,393,480,481,482,483,485,394,395,396,192,330,204,207,208,212,233,239,244,246,247,340,255,258,259,263,284,290,295,297,298,343],"tindex":"e1c53b22-dbcf-11e4-8629-4d8120891816","variableMapping":{"intLen":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[12,307,308,309,310,119,120,337,204,207,208,340,255,258,259,350],"tindex":"e1c53b23-dbcf-11e4-8629-5bb3f4632c70","variableMapping":{"index":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"e1c53b24-dbcf-11e4-8629-ef158ee5dcf2","variableMapping":{"ab_rb":"d2","ab_ar":"d2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"e1c53b25-dbcf-11e4-8629-e320d6c641a0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[326,439,441,442,126,134,136,137,139,143,144,151,152,214,222,224,225,227,231,232,239,240,505,506,256,265,273,275,276,278,282,283,290,291],"tindex":"e1c53b26-dbcf-11e4-8629-1714c1a28c2d","variableMapping":{"currentBucket":"segmentSizeInBytes","currentIndex":"segmentSizeInBytes","bucketSize":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"e1c53b27-dbcf-11e4-8629-4b3f872b4031","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:145","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[17],"tindex":"e1c53b28-dbcf-11e4-8629-a9d6473bc586","variableMapping":{"size":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[],"tindex":"e1c53b29-dbcf-11e4-8629-2df07cc6c9c8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[421],"tindex":"e1c53b2a-dbcf-11e4-8629-53000831fbaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"e1c53b2b-dbcf-11e4-8629-230db0bc7728","variableMapping":{"flags2":"backwardBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"backwardBit","flags1":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"e1c53b2c-dbcf-11e4-8629-3fd8cef90e79","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"e1c53b2d-dbcf-11e4-8629-ed2f71b5c4a2","variableMapping":{"edgeState":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:39","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-2},{"failures":[424,428],"tindex":"e1c53b2e-dbcf-11e4-8629-69c5cc69b873","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"e1c53b2f-dbcf-11e4-8629-556176cacd60","variableMapping":{"dX":"maxSpeed","dY":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[],"tindex":"e1c53b30-dbcf-11e4-8629-291fcf1c4435","variableMapping":{"minLatInit":"maxLon","maxLonInit":"minLat","minLonInit":"maxLon","bounds":"this","maxLatInit":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[426],"tindex":"e1c53b31-dbcf-11e4-8629-450719da8939","variableMapping":{"factor":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"e1c56242-dbcf-11e4-8629-5154375b9317","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"e1c56243-dbcf-11e4-8629-5947ad2cf22b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"e1c56244-dbcf-11e4-8629-afc3c183050d","variableMapping":{"str":"val","name":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":0},{"failures":[4,5,30,48,57,65,73,10,11,89],"tindex":"e1c56245-dbcf-11e4-8629-e11d300f347d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[2,5,30,63,65,73,8,11,89],"tindex":"e1c56246-dbcf-11e4-8629-3129991d337b","variableMapping":{"size":"speed","newSize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[304,305,307,14,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,113,114,115,116,117,455,355,361,457,365],"tindex":"e1c56247-dbcf-11e4-8629-238a9105406d","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[507,508,509,510,301,511,512,302,513],"tindex":"e1c56248-dbcf-11e4-8629-e15247c64bb1","variableMapping":{"bm":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"e1c56249-dbcf-11e4-8629-419625732c1a","variableMapping":{"mGarbage":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[],"tindex":"e1c5624a-dbcf-11e4-8629-c989aac68a9b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"e1c5624b-dbcf-11e4-8629-d542e4ccb94a","variableMapping":{"splitIndex":"segmentSizePower","entrySize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"e1c5624c-dbcf-11e4-8629-310e56e4b737","variableMapping":{"bbox":"this","box":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[17],"tindex":"e1c5624d-dbcf-11e4-8629-1ffda6de63d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[12,303,304,305,306,13,307,399,308,309,14,310,400,401,402,404,405,406,366,367,368,369,407,408,409,370,410,412,413,414,371,372,373,374,415,311,312,313,416,417,314,315,316,317,318,319,320,1,321,15,322,323,324,325,418,326,375,376,327,377,378,16,17,39,439,440,441,442,397,398,444,445,379,380,381,381,382,382,449,449,383,383,384,384,385,385,386,386,387,387,388,388,450,450,389,389,390,390,451,452,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,455,354,355,356,357,358,359,360,361,457,362,363,364,365,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,458,459,460,461,462,391,392,393,463,464,465,466,467,468,469,470,471,473,162,474,475,476,477,479,163,514,480,481,482,483,484,485,486,487,488,489,491,164,492,493,394,395,396,494,495,496,497,498,499,500,501,502,504,165,177,192,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,515,516,517,340,518,519,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,520],"tindex":"e1c5895e-dbcf-11e4-8629-f3e57c1a79f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[369,314,325,421,424,426,427,433,434,435,436,17,2,20,5,31,36,38,40,41,43,45,47,49,58,63,65,74,8,79,11,90,443,521,522,445,379,94,95,104,106,107,117,135,177,223,274],"tindex":"e1c5895f-dbcf-11e4-8629-2f56d4fae6bc","variableMapping":{"max":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-1},{"failures":[429,18,77],"tindex":"e1c58960-dbcf-11e4-8629-71ae4d090439","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[314,523],"tindex":"e1c58961-dbcf-11e4-8629-5543a42fa6ad","variableMapping":{"bytePos":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"e1c58962-dbcf-11e4-8629-217d93ebb859","variableMapping":{"y":"lat1","angle":"lon2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[424],"tindex":"e1c58963-dbcf-11e4-8629-ade3bf70c1ca","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"e1c58964-dbcf-11e4-8629-9b028a42ac4b","variableMapping":{"i":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"e1c58965-dbcf-11e4-8629-857992c006d0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":0},{"failures":[],"tindex":"e1c58966-dbcf-11e4-8629-01d4de5bf5d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"e1c58967-dbcf-11e4-8629-1dcb34220b03","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"e1c58968-dbcf-11e4-8629-2fb4f0c06b47","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":0},{"failures":[],"tindex":"e1c58969-dbcf-11e4-8629-61b3e3097c57","variableMapping":{"maxSpeed":"speed","fwdSpeed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[],"tindex":"e1c5896a-dbcf-11e4-8629-fb3c764862d7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"e1c5fe9b-dbcf-11e4-8629-1b7bf474c78d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[12,303,304,305,306,13,307,308,309,14,310,366,367,368,369,370,371,372,373,374,311,312,313,314,315,316,317,318,319,320,1,321,322,323,324,325,326,375,376,327,377,378,16,17,379,380,381,382,383,384,385,386,387,388,389,390,114,119,120,124,145,151,156,158,159,391,392,393,480,481,482,483,485,394,395,396,192,328,329,330,331,332,333,334,335,336,337,338,339,204,207,208,212,233,239,244,246,247,340,255,258,259,263,284,290,295,297,298,341,342,343,344,345,346,347,348,349,350,351,352,353],"tindex":"e1c5fe9c-dbcf-11e4-8629-db58872771d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"e1c5fe9d-dbcf-11e4-8629-87399ee59289","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[],"tindex":"e1c5fe9e-dbcf-11e4-8629-9b8bd6940900","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[1,431,21,437,80],"tindex":"e1c5fe9f-dbcf-11e4-8629-8b1fcf4f3cb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[431,5,21,437,11,80,524],"tindex":"e1c5fea0-dbcf-11e4-8629-b1ca9ae5bf5d","variableMapping":{"res":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[439,397,398],"tindex":"e1c5fea1-dbcf-11e4-8629-b7405e74de8a","variableMapping":{"segmentSizeInBytes":"node","index":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"e1c5fea2-dbcf-11e4-8629-3d97d6f16b7e","variableMapping":{"edgeId":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"e1c5fea3-dbcf-11e4-8629-95fe61dcb08e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[2,19,26,27,31,33,47,53,54,58,60,66,70,74,8,78,85,86,90,92],"tindex":"e1c5fea4-dbcf-11e4-8629-e3b83d61d97c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[507,508,509,510,511,302,513,525,526,527,528,461,464,466,467,492,495,497,498],"tindex":"e1c625b5-dbcf-11e4-8629-1f0f3dacfa5c","variableMapping":{"precision":"maxLonTmp","lat":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"e1c625b6-dbcf-11e4-8629-f95b2b507e62","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[529],"tindex":"e1c625b7-dbcf-11e4-8629-bdd1ad12c1d1","variableMapping":{"str":"str","latInt":"knotInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:284","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"_0\" : \"_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"e1c625b8-dbcf-11e4-8629-758b6ce6a792","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[314,424],"tindex":"e1c625b9-dbcf-11e4-8629-138a2661409c","variableMapping":{"distance":"durationInHours","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"e1c625ba-dbcf-11e4-8629-ad6510489475","variableMapping":{"edgeId":"v"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[17],"tindex":"e1c625bb-dbcf-11e4-8629-1bd7b905114e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[96,99,100,111,113,115,455,361,457],"tindex":"e1c625bc-dbcf-11e4-8629-1da063a8f786","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"e1c625bd-dbcf-11e4-8629-e32a4ea285fd","variableMapping":{"encoded":"initialBits","backwardBit":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":0},{"failures":[],"tindex":"e1c625be-dbcf-11e4-8629-65646608d732","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"e1c625bf-dbcf-11e4-8629-6f771d510d78","variableMapping":{"size":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"e1c625c0-dbcf-11e4-8629-f973c3600907","variableMapping":{"dX":"weight","dY":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"e1c625c1-dbcf-11e4-8629-c56007b9fbd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"e1c625c2-dbcf-11e4-8629-79ea133d8740","variableMapping":{"edgeId":"cap","nextEdge":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"e1c625c3-dbcf-11e4-8629-470ffa631709","variableMapping":{"freeIndex":"y1","currentIndex":"sLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"e1c64cd4-dbcf-11e4-8629-9549183e56fa","variableMapping":{"orientation":"fullDist2D","java.lang.Math.PI":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":0},{"failures":[304,306,13,309,14,370,530,531,319,382,383,384,385,388,450,390,101,103,107,108,111,114,145,532,533,534,535,536,537,538,539,465,496,187,233,284],"tindex":"e1c64cd5-dbcf-11e4-8629-c35f459a4d62","variableMapping":{"ab_rb":"d1","ab_ar":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-1},{"failures":[],"tindex":"e1c64cd6-dbcf-11e4-8629-6fabd5dfa38f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"e1c64cd7-dbcf-11e4-8629-c71e91dc10cb","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"e1c64cd8-dbcf-11e4-8629-9bd22572c444","variableMapping":{"size":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[314,523],"tindex":"e1c64cd9-dbcf-11e4-8629-9bf631c55226","variableMapping":{"start":"minutes","delta":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[326,439,441,442,126,134,136,137,139,143,144,151,152,168,176,178,179,181,185,186,193,194,214,222,224,225,227,231,232,239,240,256,265,273,275,276,278,282,283,290,291],"tindex":"e1c64cda-dbcf-11e4-8629-27950e90a928","variableMapping":{"oldPriorities":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"e1c673eb-dbcf-11e4-8629-d57ecac7f0f0","variableMapping":{"guess":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":112,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":382,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":255,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":443,"com.graphhopper.GraphHopperAPITest.testNoLoad":403,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":167,"com.graphhopper.reader.OSMReaderTest.testFerry":314,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":413,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":79,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":66,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":532,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":392,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":303,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":222,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":341,"com.graphhopper.coll.CompressedArrayTest.testCompress":508,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":72,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":159,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":187,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":460,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":342,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":362,"com.graphhopper.GraphHopperTest.testPrepare":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":199,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":455,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":104,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":366,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":514,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":73,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":405,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":461,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":8,"com.graphhopper.util.PointListTest.testEquals":530,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":505,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":102,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":395,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":11,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":204,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":525,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":365,"com.graphhopper.GraphHopperTest.testLoadOSM":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":396,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":438,"com.graphhopper.reader.OSMReaderTest.testSort":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":90,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":323,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":208,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":345,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":154,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":119,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":200,"com.graphhopper.storage.RAMDataAccessTest.testHeader":335,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":387,"com.graphhopper.routing.DijkstraTest.initializationError":453,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":243,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":353,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":288,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":533,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":131,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":205,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":217,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":522,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":212,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":273,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":465,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":108,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":463,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":98,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":265,"com.graphhopper.coll.OSMIDMapTest.testGetLong":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":226,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":232,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":280,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":258,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":282,"com.graphhopper.coll.CompressedArrayTest.testCompress2":507,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":223,"com.graphhopper.GraphHopperAPITest.testLoad":401,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":262,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":37,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":136,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":126,"com.graphhopper.storage.LevelGraphStorageTest.testClone":267,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":523,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":213,"com.graphhopper.reader.OSMReaderTest.testBarriers":318,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":398,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":171,"com.graphhopper.util.GHUtilityTest.testCopy":370,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":55,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":162,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":75,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":478,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":534,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":338,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":69,"com.graphhopper.routing.PathTest.testFindInstruction":380,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":214,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":43,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":407,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":475,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":155,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":241,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":227,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":28,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":0,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":448,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":269,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":172,"com.graphhopper.util.InstructionListTest.testWayList2":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":500,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":160,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":10,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":519,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":246,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":16,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":120,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":538,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":271,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":80,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":346,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":531,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":181,"com.graphhopper.storage.RAMDirectoryTest.testSynched":515,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":224,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":480,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":100,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":125,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":319,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":344,"com.graphhopper.routing.AStarTest.initializationError":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":114,"com.graphhopper.coll.OSMIDMapTest.testGet":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":221,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":44,"com.graphhopper.routing.PathBidirRefTest.testExtract":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":83,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":284,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":469,"com.graphhopper.storage.RAMDataAccessTest.testCopy":331,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":249,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":82,"com.graphhopper.storage.RAMDataAccessTest.testSegments":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":165,"com.graphhopper.util.GHUtilityTest.testSort2":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":109,"com.graphhopper.reader.OSMReaderTest.testMain":316,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":259,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":422,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":231,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":526,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":470,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":287,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":209,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":274,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":278,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":299,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":524,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":275,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":2,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":281,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":325,"com.graphhopper.storage.StorablePropertiesTest.testStore":340,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":330,"com.graphhopper.storage.GraphHopperStorageTest.testClone":128,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":196,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":428,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":516,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":426,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":173,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":253,"com.graphhopper.routing.PathTest.testTime":445,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":54,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":297,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":268,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":484,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":502,"com.graphhopper.reader.OSMReaderTest.testRelation":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":186,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":286,"com.graphhopper.util.GHUtilityTest.testSortDirected":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":31,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":351,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":383,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":539,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":424,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":481,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":517,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":464,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":504,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":182,"com.graphhopper.search.NameIndexTest.testCreate":374,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":336,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":381,"com.graphhopper.routing.QueryGraphTest.testOneWay":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":503,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":511,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":394,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":509,"com.graphhopper.reader.OSMReaderTest.testWithBounds":324,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":32,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":245,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":385,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":440,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":188,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":6,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":264,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":260,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":235,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":228,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":124,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":95,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":157,"com.graphhopper.util.InstructionListTest.testWayList":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":81,"com.graphhopper.GraphHopperAPITest.testDisconnected179":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":174,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":512,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":26,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":417,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":202,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":306,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":77,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":148,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":106,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":446,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":457,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":429,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":210,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":116,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":472,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":93,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":118,"com.graphhopper.routing.PathTest.testWayList":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":423,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":529,"com.graphhopper.coll.OSMIDMapTest.testGet2":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":117,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":348,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":292,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":87,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":141,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":38,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":219,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":467,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":332,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":48,"com.graphhopper.util.GHUtilityTest.testSort":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":496,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":521,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":527,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":67,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":86,"com.graphhopper.search.NameIndexTest.testPut":372,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":462,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":477,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":485,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":488,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":20,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":17,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":206,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":50,"com.graphhopper.storage.MMapDirectoryTest.testSynched":520,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":312,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":229,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":439,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":192,"com.graphhopper.routing.PathTest.testFound":444,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":36,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":310,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":294,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":85,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":225,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":373,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":177,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":133,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":328,"com.graphhopper.util.InstructionListTest.testEmptyList":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":471,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":420,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":110,"com.graphhopper.reader.PrinctonReaderTest.testRead":416,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":156,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":393,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":176,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":378,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":510,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":166,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":24,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":230,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":437,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":3,"com.graphhopper.reader.OSMReaderTest.testFoot":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":190,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":313,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":390,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":497,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":513,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":62,"com.graphhopper.reader.OSMReaderTest.testOneWay":326,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":498,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":137,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":152,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":70,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":350,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":22,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":358,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":528,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":364,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":427,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":356,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":489,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":536,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":39,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":180,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":449,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":121,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":418,"com.graphhopper.routing.PathBidirRefTest.testExtract2":452,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":506,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":483,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":94,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":501,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":371,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":150,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":490,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":60,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":1,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":537,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":535,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":203,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":491,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":494,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":153,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":411,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":270,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":430,"com.graphhopper.GraphHopperTest.testFootAndCar":13,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":145,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":276,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":49,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":473,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":333,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":216,"com.graphhopper.storage.StorablePropertiesTest.testLoad":518,"com.graphhopper.GraphHopperTest.testPrepareOnly":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":113,"com.graphhopper.GraphHopperTest.testVia":304,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":168,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":322,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":254,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":149,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":41,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":183,"com.graphhopper.routing.AStarBidirectionTest.initializationError":447,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":434,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":293,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":291,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":207}}]
