[{"failures":[],"tindex":"1973ee73-da59-11e4-b1aa-399c32c83a71","variableMapping":{"key":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":0},{"failures":[],"tindex":"19741584-da59-11e4-b1aa-dda35555643d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:118","type":"CtLocalVariableImpl","sourcecode":"T T = ((T)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"19741585-da59-11e4-b1aa-0d37a6b120d4","variableMapping":{"retBucket":"removed","bucketSize":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"19741586-da59-11e4-b1aa-99b92d53ce52","variableMapping":{"len":"from","start":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"19741587-da59-11e4-b1aa-9f000a10bc78","variableMapping":{"foundIndex":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"19741588-da59-11e4-b1aa-1b75ab7cda87","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"19743c99-da59-11e4-b1aa-eda7a89decf2","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"19743c9a-da59-11e4-b1aa-61ef913bc925","variableMapping":{"eleDelta":"midLat","decEleSum":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"19743c9b-da59-11e4-b1aa-c3ad77dbbad5","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"19743c9c-da59-11e4-b1aa-8d24f36e7ab4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:101","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"19743c9d-da59-11e4-b1aa-8164ff7b7fb4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"19743c9e-da59-11e4-b1aa-83e70b09ef8e","variableMapping":{"distInMeter":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"19743c9f-da59-11e4-b1aa-bf6152bcc38e","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"mSize","entityType":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"19743ca0-da59-11e4-b1aa-5d8bee210469","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"19743ca1-da59-11e4-b1aa-9f7e294f554e","variableMapping":{"y1":"speed","y2":"speed","x1":"speed","x2":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-2},{"failures":[],"tindex":"19743ca2-da59-11e4-b1aa-bf5096e3ad45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[41,2,42,43,3,44,45,4,46,47,48,49,50,51,5,52,53,6,54,55],"tindex":"19743ca3-da59-11e4-b1aa-3bbd9b41f858","variableMapping":{"low":"shift","guess":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"197463b4-da59-11e4-b1aa-459e06f98cf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64,65,66],"tindex":"197463b5-da59-11e4-b1aa-e93d5aed0b3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"197463b6-da59-11e4-b1aa-cb37b24ea4f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:61","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint3D com.graphhopper.util.shapes.GHPoint3D = ((com.graphhopper.util.shapes.GHPoint3D)(java.lang.Object))"},"status":-2},{"failures":[67,68,69,70],"tindex":"19748ac7-da59-11e4-b1aa-55700ab44e08","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"19748ac8-da59-11e4-b1aa-831edfbff591","variableMapping":{"eleDelta":"maxLonTmp","decEleSum":"maxLonTmp","fullDist2D":"maxLonTmp","decDist2DSum":"minLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"19748ac9-da59-11e4-b1aa-372f96d23f37","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"19748aca-da59-11e4-b1aa-a76f4aa2eed3","variableMapping":{"id":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[2,42,44,4,46,48,49,50,52,6,54],"tindex":"19748acb-da59-11e4-b1aa-4388b739228c","variableMapping":{"flags2":"unpavedBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"unpavedBit","flags1":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[102,103],"tindex":"19748acc-da59-11e4-b1aa-d3315bc3bc36","variableMapping":{"name":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[67,68,69,70],"tindex":"19748acd-da59-11e4-b1aa-29d9eda94791","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,90,121,122,123,124,91,125,92,126,127,128,129,130,131,132,133,93,134,135,136,94,137,138,95,96,97,139,98,140,99,141,142,143,144,145,100,146,147,101,148,149],"tindex":"1974b1de-da59-11e4-b1aa-29074ec0a7dd","variableMapping":{"segmentSizeInBytes":"index","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"1974d8ef-da59-11e4-b1aa-15700cc20b01","variableMapping":{"bit":"subNetworks"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"1974d8f0-da59-11e4-b1aa-e95cc5f73402","variableMapping":{"edgeCount":"segmentsToCreate","lastEdgeIndex":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[150,151,152,104,153,105,154,155,106,156,157,158,159,160,161,162,7,163,164,165,166,167,168,169,170,171,8,9,172,10,173,174,175,11,12,176,177,178,179,180,181,13,14,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,15,200,201,202,203,204,205,206,207,208,16,17,209,18,210,211,212,19,20,213,214,215,216,217,218,21,22,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,71,235,236,237,238,239,72,240,73,74,241,242,243,244,245,246,247,107,108,109,76,248,110,249,111,112,77,113,78,79,114,115,116,117,250,118,119,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,23,272,273,274,275,276,277,278,279,280,24,25,281,26,282,283,284,27,28,285,286,287,288,289,290,29,30,291,292,293,294,295,296,297,298,299,300,301,31,302,303,304,305,306,307,308,309,310,32,33,311,34,312,313,314,35,36,315,316,317,318,319,320,37,38,321,322,323,324,325,326,327,328,329,120,330,90,121,331,332,122,123,333,124,334,335,336,337,102,338,339,340,57,58,341,342,343,59,344,345,346,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,360,361,362,363,364,365,39,366,367,40,368,369,370,371,372,373,91,125,92,126,127,128,129,130,131,132,133,93,134,135,136,94,137,138,95,96,97,139,98,374,140,99,141,142,143,144,145,100,375,146,147,101,148,376,377,378,379,380,381,382,383,384,385,386,387,149,388,389],"tindex":"19750001-da59-11e4-b1aa-e34b2b0463e6","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"19750002-da59-11e4-b1aa-9b9d765efbcf","variableMapping":{"flags":"directionBitMask","nodeFlags":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"19750003-da59-11e4-b1aa-057391881a62","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"usedBits","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"19752714-da59-11e4-b1aa-91df9e9288f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[102,103],"tindex":"19752715-da59-11e4-b1aa-0bb5e8c1912c","variableMapping":{"size":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"19752716-da59-11e4-b1aa-514fb84948d4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"19752717-da59-11e4-b1aa-89588655a368","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"code","nodeId":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[],"tindex":"19752718-da59-11e4-b1aa-893b02e457c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"19752719-da59-11e4-b1aa-13711531b8f9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[90,332,351,131,137,98,390],"tindex":"1975271a-da59-11e4-b1aa-01c26f66029c","variableMapping":{"maxRasterWidth2InMeterNormed":"lat","currNormedDist":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:374","type":"CtReturnImpl","sourcecode":"return double < (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-1},{"failures":[150,151,152,104,153,105,154,155,106,156,157,158,159,160,161,162,7,163,164,165,166,167,168,169,170,171,8,9,172,10,173,174,175,11,12,176,177,178,179,180,181,13,14,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,15,200,201,202,203,204,205,206,207,208,16,17,209,18,210,211,212,19,20,213,214,215,216,217,218,21,22,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,71,235,236,237,238,239,72,240,73,74,241,242,243,244,245,246,247,107,108,109,76,248,110,249,111,112,77,113,78,79,114,115,116,117,250,118,119,251,252,253,254,255,256,257,258,259,260,261,262,263,264,391,265,266,267,268,269,270,271,23,272,273,274,275,276,277,278,279,280,24,25,281,26,282,283,284,27,28,285,286,287,288,289,290,29,30,291,292,293,294,295,296,297,298,299,300,301,31,302,303,304,305,306,307,308,309,310,32,33,311,34,312,313,314,35,36,315,316,317,318,319,320,37,38,321,322,323,324,325,326,327,328,329,120,330,90,121,331,332,122,123,333,124,334,335,336,337,102,338,339,340,57,58,341,342,343,59,344,345,346,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,360,361,362,363,364,365,39,366,367,40,368,369,370,371,372,373,91,125,92,126,127,128,129,130,131,132,133,93,134,135,136,94,137,138,95,96,97,139,98,374,140,99,141,142,143,144,145,100,375,146,147,101,148,376,377,378,379,380,381,382,383,384,385,386,387,149,388,389],"tindex":"1975271b-da59-11e4-b1aa-437a7aa8b8e6","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"1975271c-da59-11e4-b1aa-b98cf030390d","variableMapping":{"daPointer":"hash","this":"this","counter":"this","value":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:112","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[],"tindex":"19754e2d-da59-11e4-b1aa-0d218f4a6d06","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"19754e2e-da59-11e4-b1aa-337b66a8b286","variableMapping":{"scDirMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"19754e2f-da59-11e4-b1aa-d135cb167f3d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:101","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[150,151,392,152,104,153,105,154,155,106,156,157,158,159,160,393,161,162,7,163,164,165,166,167,168,169,170,171,8,9,172,10,173,174,175,11,12,176,177,178,179,180,181,13,14,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,394,198,199,15,200,201,202,203,204,205,206,207,208,16,17,209,18,210,211,212,19,20,213,214,215,216,217,218,21,22,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,71,235,236,237,238,239,72,240,73,74,241,242,243,244,245,246,247,107,108,109,76,248,110,249,111,112,77,113,78,79,114,115,116,117,250,118,119,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,395,270,271,23,272,273,274,275,276,277,278,279,280,24,25,281,26,282,283,284,27,28,285,286,287,288,289,290,29,30,291,292,293,294,295,296,297,298,299,300,301,31,302,303,304,305,306,307,308,309,310,32,33,311,34,312,313,314,35,36,315,316,317,318,319,320,37,38,321,322,323,324,325,326,327,328,329,120,330,90,121,331,332,122,396,123,333,124,334,397,336,337,102,338,339,340,57,58,341,342,343,0,59,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,398,360,361,399,400,401,362,363,364,365,402,403,404,405,406,39,366,367,40,368,369,407,41,408,2,409,60,410,411,412,413,414,42,415,67,43,416,370,371,417,418,3,419,44,45,4,420,421,61,422,423,424,425,426,427,46,428,68,429,47,62,430,431,432,63,433,434,435,436,437,438,439,440,441,442,64,443,372,444,445,446,447,448,449,450,451,48,49,65,452,453,454,455,456,457,50,458,69,459,51,460,461,5,462,52,53,6,463,464,66,465,466,467,468,469,470,54,471,70,472,55,473,373,91,125,92,126,127,128,129,130,131,132,133,93,134,135,136,94,137,138,95,96,97,139,98,374,140,474,99,141,142,143,144,145,100,375,146,147,101,148,376,377,378,379,380,381,382,383,384,385,386,387,149,388,475,389],"tindex":"19754e30-da59-11e4-b1aa-e76202de3c9d","variableMapping":{"sacScale":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"19754e31-da59-11e4-b1aa-6d1d8dd2fef2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[330,90,121,331,332,122,123,333,102,338,339,57,342,343,59,344,345,476,432,436,437,383],"tindex":"19754e32-da59-11e4-b1aa-2576fe111aa0","variableMapping":{"longSegmentSize":"encoded","bufferStart":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"19757543-da59-11e4-b1aa-014ac012d1ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"19757544-da59-11e4-b1aa-31865a0ec407","variableMapping":{"cap":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[330,90,121,331,332,122,123,333,334,102,338,339,340,57,58,341,342,343,59,344,345,346,477,347,416,476,431,432,435,436,437,383],"tindex":"19757545-da59-11e4-b1aa-05ee4d9c0f00","variableMapping":{"turnCostIndex":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nextTurnCostIndex":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-1},{"failures":[102,338,339,340,57,58,341,342,343,59,344,345,346,347,402,1,478,479,404,416,62,430,431,432,63,433,434,435,436,437,438,439,440,441,442,64,443,372,444,445,446,447,448,449],"tindex":"19757546-da59-11e4-b1aa-9d395914f45f","variableMapping":{"cap":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[106,7,170,8,9,10,11,12,13,14,15,207,16,17,18,19,20,21,22,23,279,24,25,26,27,28,29,30,31,309,32,33,34,35,36,37,38,347,39,367,40],"tindex":"19757547-da59-11e4-b1aa-0537e83a6885","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"19757548-da59-11e4-b1aa-571d57ac06b0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[338,347],"tindex":"19757549-da59-11e4-b1aa-01f50b0404c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"1975754a-da59-11e4-b1aa-13fd2841ca8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[60,61,62,64,65,66],"tindex":"1975754b-da59-11e4-b1aa-e36f66b3d4c9","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"restrictedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"1975754c-da59-11e4-b1aa-834b24355dc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"1975754d-da59-11e4-b1aa-fd5eeb231081","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"1975754e-da59-11e4-b1aa-8b10f57cf541","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[332,124,338,342,1,479,404,41,2,42,43,3,44,45,4,46,47,444,447,48,49,50,51,5,52,53,6,54,55],"tindex":"1975754f-da59-11e4-b1aa-4b6a97635f84","variableMapping":{"high":"value","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[152,104,153,105,154,155,106,156,157,158,159,160,393,161,162,7,163,164,165,166,167,168,169,170,171,8,9,172,10,173,174,175,11,12,176,177,178,179,180,181,13,14,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,394,198,199,15,200,201,202,203,204,205,206,207,208,16,17,209,18,210,211,212,19,20,213,214,215,216,217,218,21,22,219,220,221,222,223,224,225,226,227,234,247,119,264,265,266,267,268,269,395,270,271,23,272,273,274,275,276,277,278,279,280,24,25,281,26,282,283,284,27,28,285,286,287,288,289,290,29,30,291,292,293,294,295,296,297,298,299,300,301,31,302,303,304,305,306,307,308,309,310,32,33,311,34,312,313,314,35,36,315,316,317,318,319,320,37,38,321,322,323,324,325,326,327,328,329,120,332,124,334,102,338,339,340,57,58,341,342,343,59,344,345,346,347,348,398,399,400,401,402,478,480,404,416,62,430,431,432,63,433,434,435,436,437,438,439,440,441,442,64,443,372,444,445,446,447,448,449,473,373,91,125,92,126,127,128,129,130,131,132,133,93,134,135,136,94,137,138,95,96,97,139,98],"tindex":"19759c60-da59-11e4-b1aa-371a58c9704e","variableMapping":{"originalEdgesCount":"shift","edgeDifference":"shift","contractedNeighbors":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[150,157,162,7,165,169,171,173,175,179,181,182,184,185,189,191,194,199,15,202,206,208,210,212,216,218,219,221,222,226,234,247,119,264,266,271,23,274,278,280,282,284,288,290,291,293,294,298,301,31,304,308,310,312,314,318,320,321,323,324,328,90,121,331,332,122,333,336,337,102,338,339,57,342,343,59,345,347,352,355,364,39,366,40,368,372,373,91,125,92,128,132,93,134,136,137,95,96,97,98,374,99,141,142,143,144,100,375,146,101,148,378,380,381,382,149],"tindex":"19759c61-da59-11e4-b1aa-ef7e61fde0fa","variableMapping":{"hash":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[150,157,161,162,7,169,171,179,182,185,189,191,194,198,199,15,206,208,216,219,222,226,266,270,271,23,278,280,288,291,294,298,300,301,31,308,310,318,321,324,328,90,121,331,332,122,333,124,336,337,102,338,339,57,342,343,59,344,345,347,352,355,39,368,369,61,432,437,441,66,373,91,127,130,133,134,135,98,374,99,141,100,375,146,148,378,383,384],"tindex":"19759c62-da59-11e4-b1aa-ef42fe896dec","variableMapping":{"edgePointer":"directionBitMask","edgeEntryBytes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"19759c63-da59-11e4-b1aa-51e33ccabbbc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[150,151,71,236,237,238,239,240,74,241,242,243,244,246,247,107,108,76,110,249,111,112,113,79,114,115,116,117,118,119,252,253,254,255,257,120,330,90,121,331,332,122,123,333,124,334,338,339,340,57,58,341,342,343,59,344,345,347,366,367,40,131,134,135,137,376,377],"tindex":"19759c64-da59-11e4-b1aa-237f295fff3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.this(100, 2)"},"status":-1},{"failures":[],"tindex":"19759c65-da59-11e4-b1aa-a1f57e6acb75","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1138","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().getCardinality()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"19759c66-da59-11e4-b1aa-d5e646bf0f1e","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"19759c67-da59-11e4-b1aa-2910de0dba32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[150,151,152,104,153,105,154,155,106,156,157,158,159,160,161,162,7,163,164,165,166,167,168,169,170,171,8,9,172,10,173,174,175,11,12,176,177,178,179,180,181,13,14,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,15,200,201,202,203,204,205,206,207,208,16,17,209,18,210,211,212,19,20,213,214,215,216,217,218,21,22,219,220,221,222,223,224,225,226,227,481,482,483,484,485,486,487,488,489,490,491,228,229,230,231,233,234,71,235,236,237,238,239,72,240,73,74,241,242,243,244,246,247,107,108,109,76,248,110,249,111,112,77,113,78,79,114,115,116,117,118,119,252,253,254,255,257,258,259,260,261,263,264,265,266,267,268,269,270,271,23,272,273,274,275,276,277,278,279,280,24,25,281,26,282,283,284,27,28,285,286,287,288,289,290,29,30,291,292,293,294,295,296,297,298,299,310,320,120,330,90,121,331,332,122,123,333,124,334,335,336,337,102,338,339,340,57,58,341,342,343,59,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,364,365,39,366,367,40,368,369,370,371,372,373,91,125,92,126,127,128,129,130,131,132,133,93,134,135,136,94,137,138,95,96,97,139,98,374,140,99,141,142,143,144,145,100,375,146,147,101,148,376,377,378,379,380,381,382,383,384,385,386,387,149,388,389],"tindex":"19759c68-da59-11e4-b1aa-e147033b84e8","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[492,131,100,101],"tindex":"1975c379-da59-11e4-b1aa-dbe1160f3142","variableMapping":{"size":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"1975c37a-da59-11e4-b1aa-131aa1df1cbf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[150,90,121,331,332,122,333,373,91,125,92,126,127,128,129,130,131,132,133,93,134,135,136,94,137,95,96,97,139,98,374,99,143,144,100,375,148,380,381,382,383],"tindex":"1975c37b-da59-11e4-b1aa-bfd6c4aaae48","variableMapping":{"iterState":"iterState","noOfStates":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"1975c37c-da59-11e4-b1aa-f9c1cde03dfb","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":0},{"failures":[],"tindex":"1975c37d-da59-11e4-b1aa-f527aaad03b7","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[],"tindex":"1975c37e-da59-11e4-b1aa-87ebd3bb1f86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"1975c37f-da59-11e4-b1aa-f994d57d6b76","variableMapping":{"value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":0},{"failures":[],"tindex":"1975c380-da59-11e4-b1aa-af54a9996f7f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[120,332,124,338,404,444,447],"tindex":"1975c381-da59-11e4-b1aa-b5114399bcdf","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"1975c382-da59-11e4-b1aa-5de876fb1b0b","variableMapping":{"width":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","lonSimilar":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-2},{"failures":[39,369],"tindex":"1975c383-da59-11e4-b1aa-750949f59a00","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"removed","speed":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[342,478],"tindex":"1975c384-da59-11e4-b1aa-311990d67684","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-1},{"failures":[],"tindex":"1975c385-da59-11e4-b1aa-4f64bee1159f","variableMapping":{"encoderList":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"1975c386-da59-11e4-b1aa-ed4522e5a091","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:366","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[342,478,420,440,463],"tindex":"1975c387-da59-11e4-b1aa-dd7d28bd2897","variableMapping":{"closestNode":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-1},{"failures":[493],"tindex":"1975c388-da59-11e4-b1aa-1fb218751d57","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"1975c389-da59-11e4-b1aa-bb9518f070d3","variableMapping":{"oldValueIndex":"bits","lastKey":"bits","key":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"1975c38a-da59-11e4-b1aa-cba47792c46a","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"1975c38b-da59-11e4-b1aa-23e2316f15cc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89],"tindex":"1975c38c-da59-11e4-b1aa-09a06d911d81","variableMapping":{"orientation":"lat","resultOrientation":"minLatTmp","baseOrientation":"lat","java.lang.Math.PI":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"1975ea9d-da59-11e4-b1aa-69698a2746fc","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"1975ea9e-da59-11e4-b1aa-2707c91a6d22","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:520","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"1975ea9f-da59-11e4-b1aa-138b18eec495","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"1975eaa0-da59-11e4-b1aa-bbe7343b6e78","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[373,91,125,127,128,137,95,96,97,98,374,100,375,148],"tindex":"197611b1-da59-11e4-b1aa-2172255036f8","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"197611b2-da59-11e4-b1aa-3f239651e756","variableMapping":{"fromDist":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"197611b3-da59-11e4-b1aa-6970578f019f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[39,369],"tindex":"197611b4-da59-11e4-b1aa-cb39f0d5b09f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"197611b5-da59-11e4-b1aa-036758370130","variableMapping":{"dist":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[102,338,339,340,58,341,342,343,345,346,347,1,479,404,41,2,42,43,3,44,45,4,46,47,48,49,50,51,5,52,53,6,54,55],"tindex":"197611b6-da59-11e4-b1aa-dd076dc081ed","variableMapping":{"weightApproximation":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":138,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":349,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":155,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":476,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":230,"com.graphhopper.GraphHopperAPITest.testNoLoad":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":301,"com.graphhopper.reader.OSMReaderTest.testFerry":102,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":384,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":53,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":249,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":330,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":207,"com.graphhopper.coll.CompressedArrayTest.testCompress":89,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":414,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":297,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":315,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":146,"com.graphhopper.GraphHopperTest.testPrepare":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":325,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":132,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":42,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":377,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":160,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":368,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":461,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":482,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":130,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":237,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":191,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":85,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":161,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":492,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":148,"com.graphhopper.GraphHopperTest.testLoadOSM":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":241,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":238,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":403,"com.graphhopper.reader.OSMReaderTest.testSort":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":471,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":344,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":195,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":292,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":266,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":326,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":355,"com.graphhopper.routing.DijkstraTest.initializationError":398,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":221,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":180,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":276,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":192,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":44,"com.graphhopper.reader.OSMNodeTest.testSetTags":56,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":198,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":51,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":458,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":113,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":112,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":127,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":209,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":200,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":174,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":157,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":11,"com.graphhopper.coll.CompressedArrayTest.testCompress2":88,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":451,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":208,"com.graphhopper.GraphHopperAPITest.testLoad":150,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":393,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":484,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":24,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":23,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":103,"com.graphhopper.storage.LevelGraphStorageTest.testClone":164,"com.graphhopper.reader.OSMReaderTest.testBarriers":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":129,"com.graphhopper.util.GHUtilityTest.testCopy":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":67,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":232,"com.graphhopper.routing.PathTest.testFindInstruction":365,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":411,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":15,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":378,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":447,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":186,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":419,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":293,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":219,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":144,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":426,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":480,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":401,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":166,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":305,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":491,"com.graphhopper.util.InstructionListTest.testWayList2":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":242,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":52,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":224,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":405,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":370,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":463,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":128,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":271,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":58,"com.graphhopper.routing.AStarTest.initializationError":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":206,"com.graphhopper.routing.PathBidirRefTest.testExtract":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":448,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":465,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":247,"com.graphhopper.util.GHUtilityTest.testSort2":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":136,"com.graphhopper.reader.OSMReaderTest.testMain":339,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":466,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":70,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":116,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":179,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":323,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":171,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":10,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":189,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":8,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":418,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":483,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":175,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":346,"com.graphhopper.storage.GraphHopperStorageTest.testClone":273,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":437,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":435,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":69,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":306,"com.graphhopper.routing.PathTest.testTime":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":455,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":187,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":442,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":244,"com.graphhopper.reader.OSMReaderTest.testRelation":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":36,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":178,"com.graphhopper.util.GHUtilityTest.testSortDirected":389,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":428,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":351,"com.graphhopper.GraphHopperTest.testFootOnly":124,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":408,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":77,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":312,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":348,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":487,"com.graphhopper.routing.QueryGraphTest.testOneWay":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":245,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":236,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":80,"com.graphhopper.reader.OSMReaderTest.testWithBounds":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":223,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":353,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":449,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":162,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":159,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":450,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":43,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":215,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":210,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":270,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":91,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":295,"com.graphhopper.util.InstructionListTest.testWayList":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":464,"com.graphhopper.GraphHopperAPITest.testDisconnected179":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":307,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":424,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":337,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":35,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":470,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":331,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":275,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":147,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":460,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":93,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":375,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":438,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":139,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":250,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":486,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":55,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":265,"com.graphhopper.routing.PathTest.testWayList":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":98,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":469,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":283,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":204,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":78,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":48,"com.graphhopper.util.GHUtilityTest.testSort":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":319,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":87,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":226,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":231,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":257,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":260,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":45,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":354,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":193,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":333,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":65,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":406,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":39,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":490,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":320,"com.graphhopper.routing.PathTest.testFound":362,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":334,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":404,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":184,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":467,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":17,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":310,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":278,"com.graphhopper.util.InstructionListTest.testEmptyList":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":441,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":430,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":415,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":94,"com.graphhopper.reader.PrinctonReaderTest.testRead":336,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":111,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":205,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":300,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":212,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":422,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":478,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":454,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":3,"com.graphhopper.reader.OSMReaderTest.testFoot":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":318,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":359,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":73,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":84,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":188,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":74,"com.graphhopper.reader.OSMReaderTest.testOneWay":347,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":25,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":30,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":220,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":412,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":421,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":143,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":141,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":261,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":311,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":350,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":268,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":477,"com.graphhopper.routing.PathBidirRefTest.testExtract2":361,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":488,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":373,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":243,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":459,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":329,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":444,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":239,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":291,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":475,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":439,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":285,"com.graphhopper.GraphHopperTest.testFootAndCar":332,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":49,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":303,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":402,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":440,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":95,"com.graphhopper.GraphHopperTest.testPrepareOnly":120,"com.graphhopper.GraphHopperTest.testVia":90,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":31,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":59,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":154,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":289,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":383,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":445,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":313,"com.graphhopper.routing.AStarBidirectionTest.initializationError":399,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":416,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":183,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":14,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":194}}]
