[{"failures":[],"tindex":"f9dd33a8-da36-11e4-a9f5-1d7e8c35d925","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.PREFER","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.VERY_NICE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[0,1],"tindex":"f9df7d99-da36-11e4-a9f5-b5b04c9308a7","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-1},{"failures":[],"tindex":"f9df7d9a-da36-11e4-a9f5-61ed67aea0b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[0,1],"tindex":"f9df7d9b-da36-11e4-a9f5-c5beab6c9b4a","variableMapping":{"cp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"f9df7d9c-da36-11e4-a9f5-7be2ea43aa37","variableMapping":{"lastTime":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[21,22,23,24,25],"tindex":"f9df7d9d-da36-11e4-a9f5-27c758bf0625","variableMapping":{"high":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"f9df7d9e-da36-11e4-a9f5-5f3fbc8b2f06","variableMapping":{"baseUrl":"str","name":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[26,27,28,29,30,31,32,21,33,34,22,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,23,111,112,24,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"f9df7d9f-da36-11e4-a9f5-d70b97512465","variableMapping":{"index":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[146,106,107,131,147,148,149],"tindex":"f9df7da0-da36-11e4-a9f5-7bef16220736","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"f9df7da1-da36-11e4-a9f5-5f01cea87007","variableMapping":{"high":"bits","len":"bits","start":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[104],"tindex":"f9df7da2-da36-11e4-a9f5-697b6d449434","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"f9df7da3-da36-11e4-a9f5-b532687a1387","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"f9dfa4b4-da36-11e4-a9f5-1f2222c22e97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"f9dfa4b5-da36-11e4-a9f5-ed95a9fe4427","variableMapping":{"finishedTo":"empty","finishedFrom":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0,150,34,45,61,79,83,84,89,90,112,123,151,144],"tindex":"f9dfa4b6-da36-11e4-a9f5-fba6bd0545be","variableMapping":{"y1":"backSpeed","x1":"maxSpeed","y2":"backSpeed","x2":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"f9dfa4b7-da36-11e4-a9f5-614520e1d759","variableMapping":{"lastKey":"hash","key":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":0},{"failures":[],"tindex":"f9dfa4b8-da36-11e4-a9f5-f997bb3d6fd2","variableMapping":{"type":"type","defaultType":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[32,33,34,22,44,48,110,111,112,24,122,126,128],"tindex":"f9dfa4b9-da36-11e4-a9f5-836e6b93bb38","variableMapping":{"shift":"directionBitMask","flags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[33,22,44,51,52,60,70,78,111,24,122],"tindex":"f9dff2da-da36-11e4-a9f5-e1cce908ed73","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"f9dff2db-da36-11e4-a9f5-bb9ac69b1de3","variableMapping":{"numTiles":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"f9dff2dc-da36-11e4-a9f5-871c6c7e115a","variableMapping":{"maxLatTmp":"speed","minLatTmp":"speed","lat":"speed","hash":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[26,27,28,29,0,152,150,31,34,22,45,50,52,61,65,68,70,79,84,87,89,90,96,98,101,107,109,112,24,123,131,147,153,148,154,149,155,156,151,157,158,159,160,161,132,144],"tindex":"f9e040fd-da36-11e4-a9f5-ff16639e0ee7","variableMapping":{"r":"speed","com.graphhopper.util.AngleCalc.PI_4":"speed","x":"speed","angle":"speed","absY":"speed","com.graphhopper.util.AngleCalc.PI3_4":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"f9e040fe-da36-11e4-a9f5-7fc9314ef9cf","variableMapping":{"high":"encoded","guess":"encoded","low":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":0},{"failures":[],"tindex":"f9e040ff-da36-11e4-a9f5-4f8be09db34c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"f9e04100-da36-11e4-a9f5-776791d8a8dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"f9e04101-da36-11e4-a9f5-4f680a4a3735","variableMapping":{"indexWithMaxDist":"start","lastIndex":"start","fromIndex":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":0},{"failures":[],"tindex":"f9e04102-da36-11e4-a9f5-99bebf0b77aa","variableMapping":{"size":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[162,163,164,165,166,148,154,167,168,169,170,171,172,173,174,149,175,155,156,176,177,178,179,180,181,182,183,184,151,157,158,159,160,161,185,186,187],"tindex":"f9e04103-da36-11e4-a9f5-5bed49ae697d","variableMapping":{"reverseOrder":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[0,84,89,151,160,161,133,134,136,139,140,141,143,145],"tindex":"f9e04104-da36-11e4-a9f5-e5938626c6fa","variableMapping":{"value":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"f9e04105-da36-11e4-a9f5-2322d690dd64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"f9e04106-da36-11e4-a9f5-e55d22a30678","variableMapping":{"closestNode":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"f9e04107-da36-11e4-a9f5-4177faee8335","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f9e04108-da36-11e4-a9f5-5f2acb6c008e","variableMapping":{"bbox":"this","box":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"f9e06819-da36-11e4-a9f5-adc989545c92","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"f9e0681a-da36-11e4-a9f5-f3e96776ecc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"f9e0681b-da36-11e4-a9f5-0deba1942d4e","variableMapping":{"mask":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[188,189,190,153,191],"tindex":"f9e0681c-da36-11e4-a9f5-37a96e3724d0","variableMapping":{"weightApproximation":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"f9e0681d-da36-11e4-a9f5-95dffac9233f","variableMapping":{"time":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":0},{"failures":[],"tindex":"f9e0681e-da36-11e4-a9f5-43dde1070ad5","variableMapping":{"flags2":"unpavedBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"unpavedBit","flags1":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[150,32,48,64,81,107,110,126,128,130,131,147,148,149],"tindex":"f9e0681f-da36-11e4-a9f5-75005350af16","variableMapping":{"flags":"flags","mask":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[162,163,164,165,166,148,154,167,168,169,170,171,172,173,174,149,155,156,176,177,178,179,192,180,181,182,183,184,151,157,158,159,160,161,185,186,187],"tindex":"f9e06820-da36-11e4-a9f5-fb6106dee05f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[193,194,146,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,26,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,3,251,252,253,254,255,4,256,5,6,257,258,259,260,261,262,263,7,264,265,266,267,268,8,269,9,10,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,27,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,28,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,29,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,188,189,0,424,425,426,427,428,152,429,30,31,32,21,33,34,22,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,430,431,66,432,433,434,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,23,111,112,24,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,435,131,436,437,147,153,191,438,439,162,440,441,163,442,443,444,445,446,164,165,447,448,449,166,148,154,167,168,169,170,171,172,173,174,149,175,155,156,176,177,178,179,192,180,181,182,183,184,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,151,157,158,159,160,468,469,161,185,470,471,132,133,134,135,136,137,138,139,140,25,141,142,143,144,145,472,473,186,187,474],"tindex":"f9e08f31-da36-11e4-a9f5-9132f916c4d3","variableMapping":{"name":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"f9e08f32-da36-11e4-a9f5-db0fa9d30660","variableMapping":{"latlon":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-2},{"failures":[46,62,80,124],"tindex":"f9e08f33-da36-11e4-a9f5-1d3934124eae","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-1},{"failures":[0,128,130,131,466,467,151,157,158,159,160,469,161,185,470,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"f9e08f34-da36-11e4-a9f5-f3289993eb64","variableMapping":{"time":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"f9e08f35-da36-11e4-a9f5-bdd3a4b7f899","variableMapping":{"len":"shift","start":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[65,84,86,87,89,91,467,151,157,158,159,160,469,161,470,133,134,135,136,138,139,140,141,142,143,144,475,145],"tindex":"f9e08f36-da36-11e4-a9f5-bbd2c1a42da4","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[131],"tindex":"f9e08f37-da36-11e4-a9f5-7fb1d9e1f0d0","variableMapping":{"oldValueIndex":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"f9e08f38-da36-11e4-a9f5-33c7fd6359da","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"f9e08f39-da36-11e4-a9f5-4ba4203a9174","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[11,12,13,14,476,15,477,16,17,20],"tindex":"f9e0b64a-da36-11e4-a9f5-6595f3fd7414","variableMapping":{"orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[13,477],"tindex":"f9e0b64b-da36-11e4-a9f5-8b07903851c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[103,185],"tindex":"f9e0b64c-da36-11e4-a9f5-6ba0bff3a7a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"f9e0b64d-da36-11e4-a9f5-35b8ad327c2d","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[248,249,252,254,255,256,257,258,259,260,262,263,174,156,176,179,157,160],"tindex":"f9e0b64e-da36-11e4-a9f5-fd74051eef6c","variableMapping":{"factor":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[31,21,40,41,45,50,56,57,61,75,79,109,23,118,119,123],"tindex":"f9e0b64f-da36-11e4-a9f5-5ba44ecfb749","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[131,139],"tindex":"f9e0b650-da36-11e4-a9f5-73487207d291","variableMapping":{"this":"this","speed":"speed","encoded":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:90","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[478,479,480,481,482,2,483,484],"tindex":"f9e0b651-da36-11e4-a9f5-65a32e632b7e","variableMapping":{"from":"err","lonSize":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:299","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"f9e0b652-da36-11e4-a9f5-cfb6ae9c9b14","variableMapping":{"longSegmentSize":"encoded","bufferStart":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[485,163,443,164,447,449,166],"tindex":"f9e0b653-da36-11e4-a9f5-5776a4b0ee66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-1},{"failures":[486],"tindex":"f9e0b654-da36-11e4-a9f5-bfc9adcd4a3e","variableMapping":{"initLeafSize":"shift","maxLeafEntries":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"f9e0b655-da36-11e4-a9f5-19d5692e12c1","variableMapping":{"shift":"flags","tmpValue":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[],"tindex":"f9e10476-da36-11e4-a9f5-7f41fe1707a3","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"f9e10477-da36-11e4-a9f5-932abb7c4e6b","variableMapping":{"from":"speed","end":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"f9e10478-da36-11e4-a9f5-d5d36fe8a044","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[487,488,489,161],"tindex":"f9e10479-da36-11e4-a9f5-27e1b18aec81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"f9e1047a-da36-11e4-a9f5-8ff231a537ca","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[],"tindex":"f9e1047b-da36-11e4-a9f5-49ac3d643bd4","variableMapping":{"pointer":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":0},{"failures":[],"tindex":"f9e1047c-da36-11e4-a9f5-69df17865488","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[316],"tindex":"f9e1047d-da36-11e4-a9f5-95680192fc18","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"f9e12b8e-da36-11e4-a9f5-735c983bcf7b","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"f9e12b8f-da36-11e4-a9f5-c58a413beb2b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[490,132],"tindex":"f9e12b90-da36-11e4-a9f5-a7018895e559","variableMapping":{"currentEntry":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[11,12,13,14,476,15,477,16,17,20],"tindex":"f9e12b91-da36-11e4-a9f5-7d9011c216e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"f9e12b92-da36-11e4-a9f5-754fde42f0a0","variableMapping":{"edge":"edgeEntryBytes","updatedB":"edgeEntryBytes","updatedA":"tmpPrevEdge","linkA":"tmpPrevEdge","this":"this","linkB":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"f9e12b93-da36-11e4-a9f5-dfd1b8008473","variableMapping":{"turnCostIndex":"speed","NO_TURN_ENTRY":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-2},{"failures":[66,432,145],"tindex":"f9e12b94-da36-11e4-a9f5-35abc2797322","variableMapping":{"updatedA":"maxCount","nodeA":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"f9e12b95-da36-11e4-a9f5-a7c9f1ebd5fa","variableMapping":{"intIndex":"length","len":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"f9e12b96-da36-11e4-a9f5-7d4c0f887443","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"f9e12b97-da36-11e4-a9f5-a91535b2f5cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"f9e12b98-da36-11e4-a9f5-1f0ceee57775","variableMapping":{"red":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":0},{"failures":[200,206,207,209,210,214,220,222,228,230,233,235,240,263,276,283,290,292,293,295,296,300,306,308,314,316,319,321,326,329,335,336,338,339,343,349,351,357,359,362,364,369,371,374,380,381,383,384,388,394,396,402,404,407,409,414,418,423,188,189,427,428,430,431,66,432,433,88,95,163,442,443,444,445,164,447,449,166,148,167,168,169,170,171,172,173,174,149,176,177,178,179,180,181,182,183,184,450,451,458,472,473,186,187],"tindex":"f9e12b99-da36-11e4-a9f5-a198446b1bde","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-1},{"failures":[152,154,149,156,159],"tindex":"f9e12b9a-da36-11e4-a9f5-c79e87a6b284","variableMapping":{"maxSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-1},{"failures":[198,207,215,217,231,232,236,241,336,344,346,360,361,370,381,389,391,405,406,410,415],"tindex":"f9e12b9b-da36-11e4-a9f5-ab739e11ea6b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"f9e12b9c-da36-11e4-a9f5-b1a82348eab6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-2},{"failures":[],"tindex":"f9e12b9d-da36-11e4-a9f5-af6034b9cb5c","variableMapping":{"len":"shift","start":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"f9e12b9e-da36-11e4-a9f5-6f619085fc26","variableMapping":{"keys":"keys","i":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":0},{"failures":[193,164,449],"tindex":"f9e12b9f-da36-11e4-a9f5-d925e460c884","variableMapping":{"closed":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:181","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[34,36,46,49,62,80,112,114,124,133,134,135,137,138,139,140,143,145],"tindex":"f9e152b0-da36-11e4-a9f5-7f9bd1dd1675","variableMapping":{"high":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[241,171,180,182],"tindex":"f9e152b1-da36-11e4-a9f5-c14054ee6477","variableMapping":{"periodicUpdates":"a"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[0,1],"tindex":"f9e152b2-da36-11e4-a9f5-3f3b5ddd9cca","variableMapping":{"key":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"f9e152b3-da36-11e4-a9f5-a35628cec1e6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"f9e152b4-da36-11e4-a9f5-5fb909574f4e","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f9e152b5-da36-11e4-a9f5-b3a3d2c149b9","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[430,433,434],"tindex":"f9e179c6-da36-11e4-a9f5-73fb2c679610","variableMapping":{"locs":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"f9e179c7-da36-11e4-a9f5-5719efe1e32d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"f9e179c8-da36-11e4-a9f5-9fe6b5eed8ec","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[35,94,113,129,139],"tindex":"f9e179c9-da36-11e4-a9f5-878cd98e11b4","variableMapping":{"high":"turnRestrictionBit","highKey":"turnRestrictionBit","key":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[33,22,44,51,52,60,70,78,111,24,122],"tindex":"f9e179ca-da36-11e4-a9f5-d5bad5284fa0","variableMapping":{"initLeafSize":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"f9e179cb-da36-11e4-a9f5-155f3106974f","variableMapping":{"strLen":"start","bLen":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":192,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":455,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":150,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":197,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":286,"com.graphhopper.GraphHopperAPITest.testNoLoad":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":292,"com.graphhopper.reader.OSMReaderTest.testFerry":132,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":427,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":428,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":71,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":478,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":253,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":467,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":241,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":389,"com.graphhopper.coll.CompressedArrayTest.testCompress":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":77,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":368,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":311,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":28,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":447,"com.graphhopper.GraphHopperTest.testPrepare":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":323,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":162,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":351,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":149,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":78,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":426,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":203,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":173,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":266,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":22,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":371,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":18,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":205,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":488,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":166,"com.graphhopper.GraphHopperTest.testLoadOSM":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":267,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":435,"com.graphhopper.reader.OSMReaderTest.testSort":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":66,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":375,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":363,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":329,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":324,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":461,"com.graphhopper.routing.DijkstraTest.initializationError":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":409,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":229,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":479,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":341,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":372,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":111,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":256,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":249,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":255,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":169,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":392,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":398,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":221,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":485,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":200,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":223,"com.graphhopper.coll.CompressedArrayTest.testCompress2":11,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":29,"com.graphhopper.GraphHopperAPITest.testLoad":186,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":204,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":97,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":345,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":336,"com.graphhopper.storage.LevelGraphStorageTest.testClone":209,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":490,"com.graphhopper.reader.OSMReaderTest.testBarriers":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":380,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":296,"com.graphhopper.util.GHUtilityTest.testCopy":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":288,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":480,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":74,"com.graphhopper.routing.PathTest.testFindInstruction":191,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":381,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":487,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":103,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":424,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":285,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":364,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":407,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":416,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":120,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":486,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":453,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":297,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":332,"com.graphhopper.util.InstructionListTest.testWayList2":189,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":271,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":369,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":32,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":106,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":330,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":483,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":390,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":171,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":137,"com.graphhopper.routing.AStarTest.initializationError":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":388,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":104,"com.graphhopper.routing.PathBidirRefTest.testExtract":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":38,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":276,"com.graphhopper.util.GHUtilityTest.testSort2":417,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":177,"com.graphhopper.reader.OSMReaderTest.testMain":134,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":201,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":397,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":259,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":84,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":376,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":26,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":219,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":240,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":216,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":109,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":222,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":144,"com.graphhopper.storage.GraphHopperStorageTest.testClone":338,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":91,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":89,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":347,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":62,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":298,"com.graphhopper.routing.PathTest.testTime":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":57,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":238,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":273,"com.graphhopper.reader.OSMReaderTest.testRelation":25,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":310,"com.graphhopper.util.GHUtilityTest.testSortDirected":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":123,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":457,"com.graphhopper.GraphHopperTest.testFootOnly":185,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":69,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":4,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":306,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":454,"com.graphhopper.routing.QueryGraphTest.testOneWay":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":274,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":15,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":265,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":13,"com.graphhopper.reader.OSMReaderTest.testWithBounds":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":411,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":431,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":459,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":312,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":128,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":206,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":121,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":81,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":88,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":394,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":334,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":154,"com.graphhopper.util.InstructionListTest.testWayList":188,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":36,"com.graphhopper.GraphHopperAPITest.testDisconnected179":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":299,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":477,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":118,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":473,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":309,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":326,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":158,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":340,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":30,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":357,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":155,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":92,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":236,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":44,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":183,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":48,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":328,"com.graphhopper.routing.PathTest.testWayList":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":302,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":184,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":42,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":350,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":98,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":5,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":220,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":6,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":115,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":51,"com.graphhopper.util.GHUtilityTest.testSort":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":315,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":72,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":251,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":287,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":112,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":107,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":277,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":373,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":53,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":429,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":395,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":430,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":316,"com.graphhopper.routing.PathTest.testFound":437,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":131,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":470,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":235,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":40,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":391,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":27,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":343,"com.graphhopper.util.InstructionListTest.testEmptyList":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":83,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":82,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":178,"com.graphhopper.reader.PrinctonReaderTest.testRead":472,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":254,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":387,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":291,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":208,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":396,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":110,"com.graphhopper.reader.OSMReaderTest.testFoot":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":314,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":465,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":9,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":17,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":239,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":10,"com.graphhopper.reader.OSMReaderTest.testOneWay":145,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":346,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":361,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":408,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":75,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":308,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":444,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":2,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":449,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":442,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":481,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":304,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":456,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":331,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":475,"com.graphhopper.routing.PathBidirRefTest.testExtract2":451,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":148,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":272,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":290,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":359,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":63,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":139,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":482,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":327,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":268,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":362,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":420,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":93,"com.graphhopper.GraphHopperTest.testFootAndCar":159,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":354,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":262,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":180,"com.graphhopper.GraphHopperTest.testPrepareOnly":466,"com.graphhopper.GraphHopperTest.testVia":151,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":293,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":141,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":196,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":358,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":101,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":307,"com.graphhopper.routing.AStarBidirectionTest.initializationError":439,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":65,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":234,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":232,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":374}}]
