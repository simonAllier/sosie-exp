[{"failures":[0,1],"tindex":"6ede5896-da33-11e4-9308-19629ddcbee2","variableMapping":{"strLen":"removed","bLen":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[2,3,4,5],"tindex":"6ede7fa7-da33-11e4-9308-374c969d81ab","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[6,7],"tindex":"6ede7fa8-da33-11e4-9308-91236a1153fa","variableMapping":{"str":"str","from":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:944","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (int) + \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"6ede7fa9-da33-11e4-9308-4f941079f68f","variableMapping":{"hash":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[8,9,10,11,12,13,14,15,16],"tindex":"6ede7faa-da33-11e4-9308-3f2fd771dc90","variableMapping":{"factor":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"6ede7fab-da33-11e4-9308-0398f0794df2","variableMapping":{"reverseOrder":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"6ede7fac-da33-11e4-9308-6dc4c2996515","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[31,32,33,34,35],"tindex":"6ede7fad-da33-11e4-9308-5f63237ddccc","variableMapping":{"scDirMask":"turnRestrictionBit","flags":"turnRestrictionBit","dir":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"6ede7fae-da33-11e4-9308-ad748bf4bb94","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:149","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":0},{"failures":[],"tindex":"6ede7faf-da33-11e4-9308-1f6a9444c8f6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[8,9,36,10,11,12,13,14,15,16],"tindex":"6edea6c0-da33-11e4-9308-1bb119fc70f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[37,38],"tindex":"6edea6c1-da33-11e4-9308-89339803fc1f","variableMapping":{"graphHopperFolder":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[39,40,21,25,27],"tindex":"6edea6c2-da33-11e4-9308-1501f7ff8052","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"6edea6c3-da33-11e4-9308-6db1e1db7348","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[37,41,42,43],"tindex":"6edea6c4-da33-11e4-9308-e7bc773a527f","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"6edea6c5-da33-11e4-9308-71cf57473a5f","variableMapping":{"start":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"6edea6c6-da33-11e4-9308-bbece8534b9f","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"x2","nodeId":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,20,69],"tindex":"6edea6c7-da33-11e4-9308-45a12abbfe2b","variableMapping":{"high":"bytePos","guess":"value","low":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"6edecdd8-da33-11e4-9308-dfc02622ead8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[50,51,55,56,70,61,66,67,68,20,69],"tindex":"6edecdd9-da33-11e4-9308-73637ca6489b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[71,72,73],"tindex":"6edecdda-da33-11e4-9308-dbe5879d02e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[66,69,74],"tindex":"6edecddb-da33-11e4-9308-893851b840ee","variableMapping":{"str":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:420","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[40,19,69,75,76,31,77],"tindex":"6edecddc-da33-11e4-9308-51110f71ae2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"6edef4ed-da33-11e4-9308-8ff11c6724be","variableMapping":{"index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[78,79,80,81,82,83,84,7,85],"tindex":"6edef4ee-da33-11e4-9308-b703a81c1562","variableMapping":{"defaultUTurnCost":"angle","weight":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[86,87,88,89,37,75,74,90,31,91,92,93,94,41,42,72,95,96,97,98,99,100,101,102,103,104,105,106,77,107,108,109,110,34,111,112,113,114,115,116,117,118,22,119],"tindex":"6edef4ef-da33-11e4-9308-8f631bc43370","variableMapping":{"i":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[6,7],"tindex":"6edef4f0-da33-11e4-9308-d5666bcacb69","variableMapping":{"str":"str","name":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[120,121,122,123,124,125],"tindex":"6edf1c01-da33-11e4-9308-2545498e5104","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[71,72],"tindex":"6edf1c02-da33-11e4-9308-416b00bf4c1e","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[72,73],"tindex":"6edf1c03-da33-11e4-9308-254e77d4e8d8","variableMapping":{"latSize":"usedBits","size":"nextRelBit","lonSize":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[37,41,42,126],"tindex":"6edf1c04-da33-11e4-9308-39ead8e83e84","variableMapping":{"is3D":"isRoundabout"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[127,113,128],"tindex":"6edf1c05-da33-11e4-9308-cf02598d6efd","variableMapping":{"red":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"6edf4316-da33-11e4-9308-cf1881ec3d85","variableMapping":{"high":"flags","len":"defaultValue","start":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"6edf4317-da33-11e4-9308-49634fcf02f7","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":0},{"failures":[],"tindex":"6edf4318-da33-11e4-9308-fd8d6ac2b3a1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[22,129,130,24,131,132,133,134,29,123,30,135],"tindex":"6edf4319-da33-11e4-9308-393ae2f77450","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-1},{"failures":[],"tindex":"6edf431a-da33-11e4-9308-5d7307f1595a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"6edf431b-da33-11e4-9308-99731427901d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[0,136,1],"tindex":"6edf431c-da33-11e4-9308-e3557d3cc0bf","variableMapping":{"ref":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"6edf431d-da33-11e4-9308-fdb68f55ed5a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[37,75,74,137,138,76,31,91,94,41,42,73,96,97,98,139,140,100,127,103,141,142,143,144,145,104,113,146,114,147,148,116,128,117,149,150,151,152,153,118],"tindex":"6edf6a2e-da33-11e4-9308-edd211608768","variableMapping":{"str":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[125],"tindex":"6edf6a2f-da33-11e4-9308-7f853233b6ce","variableMapping":{"elem":"elem","keys":"elem","i":"i","key":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-1},{"failures":[154,155,156,157,125],"tindex":"6edf9140-da33-11e4-9308-c53e07c65ac9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"6edf9141-da33-11e4-9308-2f1c0aab54b9","variableMapping":{"store":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"6edf9142-da33-11e4-9308-35c8e888bff2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"6edf9143-da33-11e4-9308-5f763a713959","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"6edf9144-da33-11e4-9308-5f8c359d5579","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"6edf9145-da33-11e4-9308-87c2ce90df0a","variableMapping":{"high":"priorityFromRelation","guess":"priorityFromRelation","low":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":0},{"failures":[],"tindex":"6edf9146-da33-11e4-9308-0bd4a34e2a47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[158,159,160,161,162,50,163,164,51,165,166,167,168,169,170,171,172,52,173,174,175,176,177,178,86,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,55,205,206,56,207,208,209,210,211,212,213,214,57,215,216,217,218,219,220,87,221,222,223,224,225,226,227,228,229,230,231,232,233,234,58,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,61,251,252,253,254,255,256,257,258,62,259,260,261,262,263,264,88,265,266,267,268,269,270,271,272,273,274,275,276,277,278,63,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,64,294,295,296,297,298,299,89,300,301,302,303,304,305,306,307,308,309,310,311,312,313,65,314,315,316,317,318,319,320,321,322,323,324,19,325,326,96,327,97,328,98,139,101,329,330,106,126,331,77,332,107,108,38,109,110,34,333,111,334,335,336,337,112,338,339,340,341,342,113,146,114,22,129,23,343,344,130,24,345,346,25,119,347,348,349,26,350,351,27,28,131,132,133,352,134],"tindex":"6edf9147-da33-11e4-9308-1b70f55a2058","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[43],"tindex":"6edf9148-da33-11e4-9308-d914c5a53f62","variableMapping":{"i":"minutes","child":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[19,21,37,75,42,96,337,339],"tindex":"6edf9149-da33-11e4-9308-b1930403e9ee","variableMapping":{"high":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"6edf914a-da33-11e4-9308-f17daa370d20","variableMapping":{"bytesForFlags":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"6edf914b-da33-11e4-9308-d7c6ea15a2fa","variableMapping":{"cap":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"6edf914c-da33-11e4-9308-33798baaeb75","variableMapping":{"high":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6edfb85d-da33-11e4-9308-2136a068760e","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6edfb85e-da33-11e4-9308-a74d13b93538","variableMapping":{"newAdjIndex":"dLon","newBaseIndex":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-2},{"failures":[102],"tindex":"6edfb85f-da33-11e4-9308-4925d2816d84","variableMapping":{"factor":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[353,342,354],"tindex":"6edfb860-da33-11e4-9308-535620ece7c6","variableMapping":{"tt":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[24,119,131,133,134,120,123,125],"tindex":"6edfb861-da33-11e4-9308-854af6f04927","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[355,356,329,334,357,358],"tindex":"6edfb862-da33-11e4-9308-ab5ea85e6536","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[17,359,158,159,160,161,162,50,163,164,51,165,166,167,169,170,171,172,52,173,174,175,176,177,178,86,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,55,206,56,207,208,209,211,212,213,214,57,215,216,217,218,219,220,87,221,222,223,224,225,226,227,228,229,230,231,232,233,234,58,235,236,237,238,239,240,241,242,243,244,245,59,360,361,362,363,364,365,366,367,368,369,370,246,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,247,39,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,248,403,404,405,406,407,408,409,410,411,412,413,249,250,61,251,252,253,255,256,257,258,62,259,260,261,262,263,264,88,265,266,267,268,269,270,271,272,273,274,275,276,277,278,63,279,280,281,282,283,284,285,286,287,288,289,89,65,66,414,40,415,18,19,67,68,20,21,69,416,417,418,37,75,74,137,90,138,76,31,91,92,93,94,41,42,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,432,433,434,78,79,0,435,436,437,136,1,438,102,336,22,129,23,343,344,130,24,345,346,25,119,347,348,349,26,350,351,27,28,131,132,133,352,134,29,439,120,440,121,441,122,442,123,30,124,443,125,135,444,445,446,447,448,84,449,7,450,451,452,453,454,455,456],"tindex":"6edfb863-da33-11e4-9308-31fdb27bc49d","variableMapping":{"byteCount":"bytePos","longSegmentSize":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"6edfb864-da33-11e4-9308-33c4f2e1dc35","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[340],"tindex":"6edfb865-da33-11e4-9308-11167fea3631","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"6edfb866-da33-11e4-9308-8592a4980398","variableMapping":{"high":"maxCount","guess":"maxCount","low":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"6edfb867-da33-11e4-9308-a5ec934c9b87","variableMapping":{"value":"com.graphhopper.routing.util.PriorityWeighting.KEY","numberOfBits":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"6edfb868-da33-11e4-9308-29b24aa94d64","variableMapping":{"flags":"roundaboutBit","value":"value","forwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"6edfb869-da33-11e4-9308-5fcfbc323038","variableMapping":{"counter":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"6edfde7a-da33-11e4-9308-97cd961d29e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[22,129,132,134,135],"tindex":"6edfde7b-da33-11e4-9308-c764ed8afecf","variableMapping":{"lastInBoundsPillarNode":"to","convertToTowerNode":"empty","tmpNode":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:671","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"6edfde7c-da33-11e4-9308-65e09794e673","variableMapping":{"allBits":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":0},{"failures":[],"tindex":"6edfde7d-da33-11e4-9308-33d97351a903","variableMapping":{"angle":"fullDist2D","com.graphhopper.util.AngleCalc.PI3_4":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":0},{"failures":[19,21,75,337,340],"tindex":"6edfde7e-da33-11e4-9308-1f12953b2a0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[22,129,119,348,134],"tindex":"6edfde7f-da33-11e4-9308-e1e56250e680","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"6edfde80-da33-11e4-9308-51d490865079","variableMapping":{"bytePos":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[],"tindex":"6edfde81-da33-11e4-9308-8dffc64b8249","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"6edfde82-da33-11e4-9308-fd92429d9f48","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[405,406,408,457,458,459],"tindex":"6edfde83-da33-11e4-9308-c9b17f769936","variableMapping":{"maxTurnCosts":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-1},{"failures":[377,379,460,394,396,36,10,12,13,19,25],"tindex":"6edfde84-da33-11e4-9308-e9d0065f624c","variableMapping":{"res":"hash","value":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"6edfde85-da33-11e4-9308-770d854921e8","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[98,140,141,143,144,146,114,147,149,151,152],"tindex":"6edfde86-da33-11e4-9308-49dcd8076e9f","variableMapping":{"osmFile":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"6edfde87-da33-11e4-9308-cda682bd63df","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"6edfde88-da33-11e4-9308-01408da36854","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[23,130,24,27,131,133,29,123,30],"tindex":"6edfde89-da33-11e4-9308-f518ef64b5e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[77],"tindex":"6edfde8a-da33-11e4-9308-3f4c4cd508c4","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[51,170,171,176,177,86,183,191,196,203,55,56,212,213,218,219,87,225,233,237,244,61,256,257,262,263,88,269,277,281,288,291,292,297,298,89,304,312,316,323,40,19,21,37,41,434,78,96,461,97,98,99,101,102,127,142,143,462,105,463,464,106,77,107,108,111,335,337,112,339,341,113,114,115,128,150,151,465,22,129,119,347,348,349,26,134,7],"tindex":"6edfde8b-da33-11e4-9308-d727bdf90bd5","variableMapping":{"size":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"6ee0059c-da33-11e4-9308-2320a7213099","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[],"tindex":"6ee0059d-da33-11e4-9308-3f5ef17e2362","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[325],"tindex":"6ee0059e-da33-11e4-9308-6f0536853b4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[],"tindex":"6ee0059f-da33-11e4-9308-3f8ab8f6755e","variableMapping":{"width":"encoderCount","latSimilar":"encoderCount","lonSimilar":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"6ee16530-da33-11e4-9308-9776c5cb295e","variableMapping":{"high":"flags","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[17,359,371,373,374,375,376,378,379,380,381,382,383,384,385,247,466,460,39,386,388,390,391,392,393,395,396,397,398,399,400,401,402,248,40,415,18,19,67,20,21,74,137,90,25,349,26,27],"tindex":"6ee16531-da33-11e4-9308-4b5ffbee9606","variableMapping":{"max":"dLon","tmpSize":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6ee16532-da33-11e4-9308-976ecf4c744d","variableMapping":{"need":"speed","i":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6ee16533-da33-11e4-9308-75bc2730cc39","variableMapping":{"bits":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[331],"tindex":"6ee16534-da33-11e4-9308-8b41b48670ad","variableMapping":{"mGarbage":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[140,141,143,144,146,147,149,151,152],"tindex":"6ee16535-da33-11e4-9308-6d27e73c6798","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-1},{"failures":[],"tindex":"6ee16536-da33-11e4-9308-09387a3dd548","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"6ee16537-da33-11e4-9308-c12791409592","variableMapping":{"sacScale":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[0],"tindex":"6ee16538-da33-11e4-9308-0fbafd5bb5d7","variableMapping":{"g":"g","start":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:226","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":28,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":420,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":50,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":291,"com.graphhopper.reader.OSMReaderTest.testFerry":37,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":450,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":150,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":391,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":414,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":85,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":220,"com.graphhopper.coll.CompressedArrayTest.testCompress":16,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":121,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":309,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":88,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":387,"com.graphhopper.util.AngleCalcTest.testOrientation":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":124,"com.graphhopper.GraphHopperTest.testPrepare":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":29,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":271,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":119,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":448,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":403,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":140,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":445,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":388,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":136,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":374,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":55,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":169,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":135,"com.graphhopper.GraphHopperTest.testLoadOSM":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":381,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":375,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":326,"com.graphhopper.reader.OSMReaderTest.testSort":137,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":465,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":207,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":282,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":321,"com.graphhopper.storage.RAMDataAccessTest.testHeader":45,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":426,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":416,"com.graphhopper.storage.MMapDataAccessTest.testHeader":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":239,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":192,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":54,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":261,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":205,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":215,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":464,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":141,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":211,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":116,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":115,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":395,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":130,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":223,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":229,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":184,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":51,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":186,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":82,"com.graphhopper.coll.CompressedArrayTest.testCompress2":15,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":273,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":87,"com.graphhopper.GraphHopperAPITest.testLoad":17,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":168,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":334,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":265,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":257,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":43,"com.graphhopper.storage.LevelGraphStorageTest.testClone":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":1,"com.graphhopper.reader.OSMReaderTest.testBarriers":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":345,"com.graphhopper.util.GHUtilityTest.testCopy":454,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":2,"com.graphhopper.routing.PathTest.testFindInstruction":79,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":189,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":213,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":339,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":446,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":200,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":367,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":283,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":237,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":452,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":122,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":224,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":95,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":174,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":295,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":365,"com.graphhopper.util.InstructionListTest.testWayList2":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":382,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":288,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":149,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":242,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":461,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":438,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":24,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":138,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":219,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":340,"com.graphhopper.routing.PathBidirRefTest.testExtract":431,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":188,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":399,"com.graphhopper.storage.RAMDataAccessTest.testCopy":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":358,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":247,"com.graphhopper.util.GHUtilityTest.testSort2":453,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":350,"com.graphhopper.reader.OSMReaderTest.testMain":74,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":400,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":106,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":318,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":86,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":182,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":203,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":179,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":233,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":127,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":185,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":41,"com.graphhopper.storage.GraphHopperStorageTest.testClone":62,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":107,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":267,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":158,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":4,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":296,"com.graphhopper.routing.PathTest.testTime":434,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":201,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":384,"com.graphhopper.reader.OSMReaderTest.testRelation":71,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":308,"com.graphhopper.util.GHUtilityTest.testSortDirected":456,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":462,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":422,"com.graphhopper.GraphHopperTest.testFootOnly":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":328,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":405,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":394,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":343,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":466,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":304,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":419,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":60,"com.graphhopper.routing.QueryGraphTest.testOneWay":428,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":373,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":8,"com.graphhopper.reader.OSMReaderTest.testWithBounds":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":301,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":424,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":310,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":341,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":72,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":170,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":342,"com.graphhopper.coll.GHTBitSetTest.testEnsureCapacity":459,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":225,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":255,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":427,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":129,"com.graphhopper.util.InstructionListTest.testWayList":84,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":354,"com.graphhopper.GraphHopperAPITest.testDisconnected179":359,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":297,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":293,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":418,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":323,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":18,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":260,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":443,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":277,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":109,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":152,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":209,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":352,"com.graphhopper.coll.GHTBitSetTest.testClear":457,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":118,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":250,"com.graphhopper.storage.MMapDataAccessTest.testCopy":48,"com.graphhopper.routing.PathTest.testWayList":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":300,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":331,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":134,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":47,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":231,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":270,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":217,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":259,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":396,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":356,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":155,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":146,"com.graphhopper.util.GHUtilityTest.testSort":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":378,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":463,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":244,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":389,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":408,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":411,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":142,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":409,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":364,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":65,"com.graphhopper.routing.PathTest.testFound":433,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":69,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":96,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":198,"com.graphhopper.util.AngleCalcTest.testAtan2":81,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":160,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":222,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":89,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":263,"com.graphhopper.util.InstructionListTest.testEmptyList":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":349,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":329,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":351,"com.graphhopper.reader.PrinctonReaderTest.testRead":417,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":392,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":218,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":290,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":227,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":103,"com.graphhopper.reader.OSMReaderTest.testFoot":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":312,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":430,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":13,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":379,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":327,"com.graphhopper.reader.OSMReaderTest.testOneWay":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":380,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":266,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":238,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":353,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":441,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":460,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":125,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":440,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":302,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":421,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":252,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":362,"com.graphhopper.routing.PathBidirRefTest.testExtract2":432,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":147,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":383,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":148,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":324,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":337,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":376,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":281,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":110,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":274,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":114,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":64,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":57,"com.graphhopper.GraphHopperTest.testPrepareOnly":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":131,"com.graphhopper.GraphHopperTest.testVia":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":292,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":92,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":162,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":7,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":278,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":112,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":91,"com.graphhopper.util.AngleCalcTest.testCombined":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":305,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":101,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":197,"com.graphhopper.coll.GHTBitSetTest.testCopy":458,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":195,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":56}}]
