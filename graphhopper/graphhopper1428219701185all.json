[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"3623fd42-db67-11e4-92d2-75964ef5612a","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"362c1393-db67-11e4-92d2-e9fdfc72d4c8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"362c1394-db67-11e4-92d2-67fccb6178b4","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"362c1395-db67-11e4-92d2-a5c9bbed0fab","variableMapping":{"factor":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"362c1396-db67-11e4-92d2-5da9a353e91c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:158","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl com.graphhopper.coll.GHBitSetImpl = new com.graphhopper.coll.GHBitSetImpl(com.graphhopper.storage.GraphStorage.getNodes())"},"status":-2},{"failures":[],"tindex":"362c1397-db67-11e4-92d2-1d8856097c4d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[16],"tindex":"362c1398-db67-11e4-92d2-6f315b1ec641","variableMapping":{"high":"ferryBit","len":"acceptBit","start":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"362c1399-db67-11e4-92d2-bb22910ac9a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"362c139a-db67-11e4-92d2-27c3c6269d2b","variableMapping":{"err":"nextTurnBit","dLat":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":0},{"failures":[],"tindex":"362c139b-db67-11e4-92d2-237e7cdc164e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"362c3aac-db67-11e4-92d2-7974b2271b5d","variableMapping":{"java.lang.Integer.MAX_VALUE":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"362c3aad-db67-11e4-92d2-cf7ab76a246f","variableMapping":{"hasOther":"edgeBased","hasRel":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"362c3aae-db67-11e4-92d2-77b1c59f7e9a","variableMapping":{"gridCellWidth":"y","this":"this","x1":"y","x2":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / java.lang.Math.(java.lang.Math.abs((double - double)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"362c3aaf-db67-11e4-92d2-df43b3fa669e","variableMapping":{"value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:104","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[42,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"362c3ab0-db67-11e4-92d2-a1ba1a0fc528","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"362c3ab1-db67-11e4-92d2-e5859862681e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,156,157,16,28,29,30,31,32,33,34,35,37,38,39,40,42,158,159,160,161,162,163,164,165,166,167,168,169,170,46,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,125,244,245,246,247,248,249,250,126,251,252,253,254,255,256,257,127,258,128,129,259,130,260,261,262,131,132,263,264,265,266,267,268,133,134,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,135,285,286,287,288,289,290,291,136,292,137,138,293,139,294,295,296,140,141,297,298,299,300,301,302,142,143,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,144,320,321,322,323,324,325,326,145,327,146,147,328,148,329,330,331,149,150,332,333,334,335,336,337,151,152,338,339,340,341,342,343,344,345,346,347,348,349,153,350,154,155,351,352,94,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409],"tindex":"362c61c2-db67-11e4-92d2-479ee0dfe7c6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-1},{"failures":[17,18,19,20,21,22,23,410,24,25,26,27,411,156,157,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,158,412,413,414,415,416,417,418,419,420,421,159,160,161,162,163,164,165,166,167,168,169,170,46,171,172,422,423,424,425,426,427,116,428,429,430,431,432,433,434,117,173,118,119,435,120,436,437,438,121,122,439,440,441,442,443,174,123,124,444,445,446,447,448,449,450,451,452,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,453,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,454,455,456,457,458,459,460,461,238,239,240,241,242,243,125,244,245,246,247,248,462,249,250,126,251,252,253,254,255,256,257,127,258,128,129,259,130,260,261,262,131,132,263,264,265,266,267,268,133,134,269,270,271,272,273,274,275,276,277,278,279,280,281,282,463,283,284,135,285,286,287,288,289,290,291,136,292,137,138,293,139,294,295,296,140,141,297,298,299,300,301,302,142,143,303,304,305,306,307,308,309,310,311,312,464,313,314,315,316,317,465,318,319,144,320,321,322,323,324,325,326,145,327,146,147,328,148,329,330,331,149,150,332,333,334,335,336,337,151,152,338,339,340,341,342,343,344,345,346,466,467,468,347,348,349,153,350,154,155,351,352,94,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409],"tindex":"362c61c3-db67-11e4-92d2-8390e3ecbb77","variableMapping":{"s":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"362c61c4-db67-11e4-92d2-1b06f2052a66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"362c61c5-db67-11e4-92d2-d3b063d71165","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"362c61c6-db67-11e4-92d2-e7cd8c077217","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[469,392],"tindex":"362c61c7-db67-11e4-92d2-55245cce85a0","variableMapping":{"edgePointer":"flags2","maxEdges":"flags1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-1},{"failures":[],"tindex":"362c61c8-db67-11e4-92d2-2face3ef3e34","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"362c88d9-db67-11e4-92d2-21df88500934","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[470],"tindex":"362c88da-db67-11e4-92d2-bb823a3a0217","variableMapping":{"baseUrl":"minStr","fileDetails":"minStr","zippedURL":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:274","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"362c88db-db67-11e4-92d2-a9bbbdf40d3b","variableMapping":{"length":"index","factor":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"362c88dc-db67-11e4-92d2-839e83b9b476","variableMapping":{"neighborUpdates":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":0},{"failures":[],"tindex":"362c88dd-db67-11e4-92d2-99cbc8406383","variableMapping":{"initLeafSize":"err","maxLeafEntries":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"362c88de-db67-11e4-92d2-550fd8b56ed0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"362c88df-db67-11e4-92d2-591feda7b7a3","variableMapping":{"latSize":"start","size":"node","lonSize":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[360,361,383,384,393],"tindex":"362c88e0-db67-11e4-92d2-e953292422a4","variableMapping":{"index":"from","entrySize":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[471,472,193,199,201,202,473,212,218,220,221,369,474,475,476,477,478,479,480,481,482],"tindex":"362c88e1-db67-11e4-92d2-d1d5085a499e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"362c88e2-db67-11e4-92d2-07605866f60e","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:281","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"362c88e3-db67-11e4-92d2-2d0389804e24","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"empty","v":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[353],"tindex":"362c88e4-db67-11e4-92d2-0b77cf0a2390","variableMapping":{"nodeId":"flags","nodeIdOffset":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[483,46,484,485],"tindex":"362c88e5-db67-11e4-92d2-3597f49277d3","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"y","speed":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[486,487,488],"tindex":"362c88e6-db67-11e4-92d2-e931267ec6ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[40,53,54,58,10,12,489,71,73,80,88,90,99,107,109],"tindex":"362c88e7-db67-11e4-92d2-4d569d51f43e","variableMapping":{"lat":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"362caff8-db67-11e4-92d2-f542b4542099","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"362caff9-db67-11e4-92d2-a57de16562e9","variableMapping":{"cap":"tmpEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":0},{"failures":[],"tindex":"362caffa-db67-11e4-92d2-47857bcb8ac0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[113,114],"tindex":"362caffb-db67-11e4-92d2-d1e0d44b7e6f","variableMapping":{"res":"relBitMask","maxBits":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:261","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[238,379,385,386,392,396],"tindex":"362caffc-db67-11e4-92d2-f3109fb3bfab","variableMapping":{"bytePos":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"362caffd-db67-11e4-92d2-7be85ab320bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[470],"tindex":"362caffe-db67-11e4-92d2-635a6bc089a3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"362cafff-db67-11e4-92d2-9709bb9c57d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"362cb000-db67-11e4-92d2-5f5f1c5628e6","variableMapping":{"high":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[17,22,26,28,48,49,50],"tindex":"362cb001-db67-11e4-92d2-937d4367a1ad","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[1,3,5,7,8,11,12,14,15,64,65,66,68,69,72,73,75,76,78,84,85,86,89,90,92,93,95,97,103,104,105,108,109,111,112],"tindex":"362cb002-db67-11e4-92d2-95d240efefc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:434","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"362cb003-db67-11e4-92d2-fd3d725a5c22","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[2,3,11,65,72,79,81,89,98,100,108],"tindex":"362cb004-db67-11e4-92d2-1b817bd7608d","variableMapping":{"err":"paveType","dLat":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[17,17,18,19,20,21,22,23,410,24,25,26,27,27,411,426,427,116,428,429,429,430,431,432,433,434,117,173,173,118,119,435,435,120,436,437,438,121,122,439,440,441,442,443,174,174,123,124,444,445,446,447,448,449,450,451,452,176,177,178,490,179,180,182,183,184,491,185,186,188,189,190,191,453,192,203,204,205,206,492,207,208,222,223,224,225,493,226,227,243,244,245,245,246,246,247,248,462,249,250,126,251,252,252,253,254,255,256,257,127,258,258,128,129,259,259,130,260,261,262,131,132,263,264,265,266,267,268,268,133,134,269,270,271,272,273,274,275,276,277,278,279,279,280,280,281,282,463,283,284,135,285,286,286,287,288,289,290,291,136,292,292,137,138,293,293,139,294,295,296,140,141,297,298,299,300,301,302,302,142,143,303,304,305,306,307,308,309,310,311,312,312,464,313,314,314,315,315,316,317,465,318,319,144,320,321,321,322,323,324,325,326,145,327,327,146,147,328,328,148,329,330,331,149,150,332,333,334,335,336,337,337,151,152,338,339,340,341,342,343,344,345,346,466,467,468,347,348,356,357,398,399,400,400,401,402,403,404,405,406,407,408,409],"tindex":"362cd715-db67-11e4-92d2-4103fd2be37a","variableMapping":{"heights":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:243","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[42,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"362cd716-db67-11e4-92d2-63dc2a562ec6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"362cd717-db67-11e4-92d2-25be22ec453c","variableMapping":{"value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[16,40,46,173,258,292,327,494,495,54,57,58,59,1,3,12,61,496,63,65,73,76,80,81,90,353,95,99,100,109,357,358,360,361,370,372],"tindex":"362cd718-db67-11e4-92d2-331b07040c8b","variableMapping":{"size":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[17,19,20,23,24,26,238],"tindex":"362cd719-db67-11e4-92d2-1b2edbb5b695","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:282","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"362cd71a-db67-11e4-92d2-c5a238fdca9c","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","entryVal":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:170","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[13,74,91,110],"tindex":"362cd71b-db67-11e4-92d2-4d4dfce192db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,16,28,29,30,31,32,33,34,35,37,38,39,40,42,414,415,416,417,418,419,420,421,164,168,169,170,46,422,423,424,425,174,497,498,499,500,501,502,503,504,505,506,507,508,188,189,190,191,192,195,196,197,214,215,216,509,510,511,512,513,514,515,516,517,518,519,520,243,245,246,249,263,133,272,274,275,279,280,283,297,142,306,308,309,312,314,315,318,332,151,341,343,344,521,466,94,353,358,359,380,398,399,401,402,403,404,405,406,408,409],"tindex":"362cd71c-db67-11e4-92d2-c902b66e6e2a","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[522,523],"tindex":"362cd71d-db67-11e4-92d2-5bd26b1e51ba","variableMapping":{"arrayLength":"element","maxGeoRef":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"362cd71e-db67-11e4-92d2-7dc841613ec2","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[77,96,113,114],"tindex":"362cd71f-db67-11e4-92d2-0754e88ea9f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"362cd720-db67-11e4-92d2-bf6b415be2ef","variableMapping":{"size":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[34,2,3,11,15,63,65,72,75,77,79,80,81,89,93,96,98,99,100,108,112,114,115],"tindex":"362cd721-db67-11e4-92d2-8192ead21808","variableMapping":{"value":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[31,37,47,52,4,67,83,102],"tindex":"362cd722-db67-11e4-92d2-87e215cc461f","variableMapping":{"high":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[2,3,11,65,72,79,81,89,98,100,108],"tindex":"362cfd33-db67-11e4-92d2-239b8a28a1b0","variableMapping":{"str":"message","name":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,16,28,29,30,31,32,33,34,35,37,38,39,40,42,417,418,420,421,164,168,169,170,46,422,423,424,425,174,499,188,189,190,191,192,195,196,197,214,215,216,511,243,245,246,249,263,133,272,274,275,279,280,283,297,142,306,308,309,312,314,315,318,332,151,341,343,344,466,94,353,358,359,380,398,399,401,402,403,404,405,406,408,409],"tindex":"362cfd34-db67-11e4-92d2-2718f4a68cd4","variableMapping":{"currentBucket":"segmentSizePower","retBucket":"segmentSizePower","currentIndex":"segmentSizePower","bucketSize":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[34,158,524,525,526,527],"tindex":"362cfd35-db67-11e4-92d2-df9c3fa51e41","variableMapping":{"size":"maxTurnCosts","index":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[13,74,91,110],"tindex":"362cfd36-db67-11e4-92d2-958b219b74a2","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"362cfd37-db67-11e4-92d2-cfe0bc063f64","variableMapping":{"weightApproximation":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":0},{"failures":[528],"tindex":"362cfd38-db67-11e4-92d2-bda7689e9f74","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"362cfd39-db67-11e4-92d2-fd7dade1da6d","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"362cfd3a-db67-11e4-92d2-673699fd8f50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[1,76,95,115],"tindex":"362cfd3b-db67-11e4-92d2-5d069cb40741","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[528],"tindex":"362cfd3c-db67-11e4-92d2-f7987803320c","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[79,81,89,98,100,108],"tindex":"362cfd3d-db67-11e4-92d2-2f1b9721af77","variableMapping":{"sacScale":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[60],"tindex":"362cfd3e-db67-11e4-92d2-e98d813f05a4","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-1},{"failures":[],"tindex":"362cfd3f-db67-11e4-92d2-4187bdf294e1","variableMapping":{"costs":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"362cfd40-db67-11e4-92d2-f3d91295bc4b","variableMapping":{"java.lang.Integer.MAX_VALUE":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[19,20,21,23,25,16,29,30,31,32,33,34,35,37,38,39,40,42,417,418,419,420,421,500,501,502,505,506,507,508,512,513,514,517,518,519,520,312,521],"tindex":"362d2451-db67-11e4-92d2-07bbb5d954ed","variableMapping":{"dLat":"indexDivisor","dLon":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"362d2452-db67-11e4-92d2-158da9c2df43","variableMapping":{"frontIndex":"size","endIndexPlusOne":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"362d2453-db67-11e4-92d2-0312c439711f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[17,18,19,20,21,22,23,410,24,25,26,27,411,156,157,16,28,29,30,31,32,33,34,35,36,37,38,39,40,42,159,160,161,162,163,164,165,529,166,167,168,169,170,46,171,172,426,427,116,428,429,430,431,432,433,434,117,173,118,119,435,120,436,437,438,121,122,439,440,441,442,443,174,123,124,444,445,446,447,448,449,450,451,452,175,176,177,178,490,179,180,181,182,183,184,491,185,186,188,189,190,191,453,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,492,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,493,226,227,238,239,240,241,242,243,125,244,245,246,247,248,462,249,250,126,251,252,253,254,255,256,257,127,258,128,129,259,130,260,261,262,131,132,263,264,265,266,267,268,133,134,269,270,271,272,273,274,275,276,277,278,279,280,281,282,463,283,284,135,285,286,287,288,289,290,291,136,292,137,138,293,139,294,295,296,140,141,297,298,299,300,301,302,142,143,303,304,305,306,307,308,309,310,311,312,464,313,314,315,316,317,465,318,319,144,320,321,322,323,324,325,326,145,327,146,147,328,148,329,330,331,149,150,332,333,334,335,336,337,151,152,338,339,340,341,342,343,344,345,346,347,348,530,531,47,494,349,48,495,532,49,50,533,153,350,154,155,351,352,51,52,53,54,55,56,57,534,58,59,60,535,536,524,537,538,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,539,540,541,62,63,64,65,66,67,68,542,69,70,71,72,73,74,75,543,76,77,78,79,80,81,525,82,83,84,544,85,86,87,88,89,90,91,92,93,94,353,545,95,96,97,98,99,100,526,101,102,103,546,104,105,106,107,108,109,110,111,112,547,548,115,354,355,356,357,358,359,549,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,550,386,387,388,389,390,391,392,393,394,395,396,397,551,398,399,400,401,402,403,404,405,406,407,408,409,552,553],"tindex":"362de7a4-db67-11e4-92d2-e33ce1bc877c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[58],"tindex":"362de7a5-db67-11e4-92d2-7f1f23103890","variableMapping":{"distInMeter":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"362de7a6-db67-11e4-92d2-d5b896f31879","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[22,27,16,28,29,30,31,32,33,34,35,37,38,39,40,42,426,427,116,428,429,430,431,432,433,434,117,173,118,119,435,120,436,437,438,121,122,439,440,441,442,443,174,123,124,444,445,446,447,448,449,450,451,452,180,186,208,227,238,239,240,241,242,243,125,244,245,246,247,248,462,249,250,126,251,252,253,254,255,256,257,127,258,128,129,259,130,260,261,262,131,132,263,264,265,266,267,268,133,134,269,270,271,272,273,274,275,276,277,278,279,280,281,282,463,283,284,135,285,286,287,288,289,290,291,136,292,137,138,293,139,294,295,296,140,141,297,298,299,300,301,302,142,143,303,304,305,306,307,308,309,310,311,312,464,313,314,315,316,317,465,318,319,144,320,321,322,323,324,325,326,145,327,146,147,328,148,329,330,331,149,150,332,333,334,335,336,337,151,152,338,339,340,341,342,343,344,345,346,531,47,494,349,48,495,532,49,50,533,51,52,53,54,55,56,57,534,58,59,60,535,536,524,537,538,547,527,115,549,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,551,398,552,553],"tindex":"362e0eb7-db67-11e4-92d2-371f2aa4f769","variableMapping":{"i":"shift","to":"shift","lonSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"362e0eb8-db67-11e4-92d2-636f1964de35","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"362e0eb9-db67-11e4-92d2-0b58cc05866c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"362e0eba-db67-11e4-92d2-df5380b26757","variableMapping":{"minLatInit":"maxLat","maxLonInit":"maxLon","minLonInit":"maxLat","bounds":"this","maxLatInit":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[13,74,91,110],"tindex":"362e0ebb-db67-11e4-92d2-3941b84ca3cf","variableMapping":{"scDirMask":"acceptBit","flags":"acceptBit","dir":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"362e0ebc-db67-11e4-92d2-2f06abe81084","variableMapping":{"height":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:415","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = int + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"362e83ed-db67-11e4-92d2-dd24e4a40598","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[17,19,20,23,24,26,159,162,164,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,238,240,241,242,244,245,248,249,250,126,251,252,253,254,255,256,257,128,129,259,130,260,261,262,131,132,263,264,265,266,268,133,134,269,270,271,272,273,274,275,276,277,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397],"tindex":"362e83ee-db67-11e4-92d2-a74eff236728","variableMapping":{"splitIndex":"b","entrySize":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-1},{"failures":[],"tindex":"362e83ef-db67-11e4-92d2-07c669d32b8a","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"362e83f0-db67-11e4-92d2-23c52c0aa218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[17,19,20,21,23,24,25,26,16,28,29,30,31,32,33,34,35,37,38,39,40,42,414,415,416,417,418,419,420,421,164,168,169,170,46,422,423,424,425,195,196,197,214,215,216,245,279,312,314,521,94,353,358,359,380,398,399,401,402,403,404,405,406,408,409],"tindex":"362e83f1-db67-11e4-92d2-95026a7ebe32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"362e83f2-db67-11e4-92d2-f5a1bd222c3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[61,353,115,357,360,370],"tindex":"362eab03-db67-11e4-92d2-63e6108b8f33","variableMapping":{"shift":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[34,80,82,91,99,101,110],"tindex":"362eab04-db67-11e4-92d2-e104d6654381","variableMapping":{"size":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[20,23,554],"tindex":"362eab05-db67-11e4-92d2-753d115ac7d7","variableMapping":{"edgeTo":"int1","edgeFrom":"int1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":378,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":399,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":61,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":243,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":183,"com.graphhopper.GraphHopperAPITest.testNoLoad":530,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":427,"com.graphhopper.reader.OSMReaderTest.testFerry":16,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":160,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":215,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":18,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":483,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":145,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":413,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":497,"com.graphhopper.coll.CompressedArrayTest.testCompress":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":71,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":309,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":439,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":211,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":498,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":515,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":394,"com.graphhopper.GraphHopperTest.testPrepare":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":448,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":384,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":488,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":78,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":370,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":187,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":72,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":172,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":212,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":351,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":76,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":362,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":368,"com.graphhopper.coll.BitSetImplTest.testCopy":528,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":196,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":81,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":312,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":480,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":249,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":487,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":397,"com.graphhopper.GraphHopperTest.testLoadOSM":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":203,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":197,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":548,"com.graphhopper.reader.OSMReaderTest.testSort":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":90,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":315,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":501,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":304,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":279,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":449,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":405,"com.graphhopper.storage.RAMDataAccessTest.testHeader":516,"com.graphhopper.routing.DijkstraTest.initializationError":552,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":340,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":521,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":267,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":289,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":550,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":464,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":322,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":496,"com.graphhopper.reader.OSMNodeTest.testSetTags":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":98,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":318,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":12,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":219,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":217,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":365,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":364,"com.graphhopper.coll.OSMIDMapTest.testGetLong":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":328,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":320,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":261,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":554,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":245,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":131,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":485,"com.graphhopper.coll.CompressedArrayTest.testCompress2":471,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":141,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":327,"com.graphhopper.GraphHopperAPITest.testLoad":347,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":462,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":47,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":137,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":135,"com.graphhopper.storage.LevelGraphStorageTest.testClone":252,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":470,"com.graphhopper.reader.OSMReaderTest.testBarriers":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":319,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":526,"com.graphhopper.util.GHUtilityTest.testCopy":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":430,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":9,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":227,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":74,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":491,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":519,"com.graphhopper.routing.PathTest.testFindInstruction":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":542,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":144,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":486,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":49,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":159,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":97,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":182,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":305,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":294,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":148,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":106,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":551,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":254,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":431,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":237,"com.graphhopper.util.InstructionListTest.testWayList2":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":204,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":310,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":79,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":468,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":343,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":540,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":94,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":280,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":256,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":499,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":525,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":502,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":120,"com.graphhopper.storage.RAMDirectoryTest.testSynched":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":188,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":366,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":32,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":500,"com.graphhopper.routing.AStarTest.initializationError":531,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":380,"com.graphhopper.coll.OSMIDMapTest.testGet":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":326,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":50,"com.graphhopper.routing.PathBidirRefTest.testExtract":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":84,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":263,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":419,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":223,"com.graphhopper.storage.RAMDataAccessTest.testCopy":512,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":503,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":346,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":83,"com.graphhopper.storage.RAMDataAccessTest.testSegments":518,"com.graphhopper.util.GHUtilityTest.testSort2":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":375,"com.graphhopper.reader.OSMReaderTest.testMain":29,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":544,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":481,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":224,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":54,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":446,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":258,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":130,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":276,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":128,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":546,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":95,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":230,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":262,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":40,"com.graphhopper.storage.StorablePropertiesTest.testStore":466,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":511,"com.graphhopper.storage.GraphHopperStorageTest.testClone":286,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":445,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":60,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":459,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":58,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":293,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":13,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":432,"com.graphhopper.routing.PathTest.testTime":357,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":8,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":274,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":538,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":206,"com.graphhopper.reader.OSMReaderTest.testRelation":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":122,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":265,"com.graphhopper.util.GHUtilityTest.testSortDirected":166,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":523,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":109,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":455,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":507,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":401,"com.graphhopper.GraphHopperTest.testFootOnly":26,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":57,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":189,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":461,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":218,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":363,"com.graphhopper.reader.OSMElementTest.testSetTags":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":545,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":436,"com.graphhopper.search.NameIndexTest.testCreate":425,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":517,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":398,"com.graphhopper.routing.QueryGraphTest.testOneWay":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":492,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":68,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":195,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":474,"com.graphhopper.reader.OSMReaderTest.testWithBounds":39,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":520,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":110,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":510,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":350,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":440,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":533,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":113,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":247,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":334,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":534,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":329,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":283,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":361,"com.graphhopper.util.InstructionListTest.testWayList":169,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":307,"com.graphhopper.routing.ch.PrepareEncoderTest.testOverwrite":469,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":82,"com.graphhopper.GraphHopperAPITest.testDisconnected179":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":433,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":428,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":456,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":104,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":157,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":121,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":451,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":21,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":395,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":543,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":372,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":553,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":393,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":272,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":535,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":89,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":382,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":493,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":93,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":278,"com.graphhopper.routing.PathTest.testWayList":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":450,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":118,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":489,"com.graphhopper.coll.OSMIDMapTest.testGet2":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":383,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":504,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":269,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":87,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":295,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":494,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":220,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":221,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":513,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":102,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":522,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.util.GHUtilityTest.testSort":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":443,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":67,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":86,"com.graphhopper.search.NameIndexTest.testPut":423,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":465,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":184,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":213,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":192,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":177,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":99,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":404,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":353,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":4,"com.graphhopper.storage.MMapDirectoryTest.testSynched":454,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":415,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":541,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":532,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":381,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":153,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":236,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":174,"com.graphhopper.routing.PathTest.testFound":356,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":27,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":115,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":271,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":539,"com.graphhopper.util.AngleCalcTest.testAtan2":484,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":85,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":147,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":424,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":173,"com.graphhopper.util.InstructionListTest.testEmptyList":167,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":291,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":509,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":10,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":373,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":537,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":73,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":376,"com.graphhopper.reader.PrinctonReaderTest.testRead":156,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":216,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":117,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":421,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":426,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":331,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":527,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":460,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":96,"com.graphhopper.reader.OSMReaderTest.testFoot":28,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":409,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":201,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":275,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":479,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":62,"com.graphhopper.reader.OSMReaderTest.testOneWay":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":202,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":138,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":143,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":69,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":506,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":101,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":438,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":389,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":473,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":386,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":396,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":387,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":505,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":435,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":400,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":41,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":281,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":457,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":234,"com.graphhopper.routing.PathBidirRefTest.testExtract2":355,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":205,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":422,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":302,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":490,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":14,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":34,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":452,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":198,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":303,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":529,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":255,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":536,"com.graphhopper.GraphHopperTest.testFootAndCar":22,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":297,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":226,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":514,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":429,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":547,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":524,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":321,"com.graphhopper.storage.StorablePropertiesTest.testLoad":467,"com.graphhopper.GraphHopperTest.testPrepareOnly":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":379,"com.graphhopper.GraphHopperTest.testVia":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":116,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":37,"com.graphhopper.reader.OSMElementTest.testHasTag":43,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":242,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":46,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":301,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":495,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":437,"com.graphhopper.routing.AStarBidirectionTest.initializationError":549,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":51,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":270,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":134,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":314}}]
