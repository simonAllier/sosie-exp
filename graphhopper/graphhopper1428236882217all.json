[{"failures":[],"tindex":"35edf168-db8f-11e4-9c11-4708e2e76973","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[0,1],"tindex":"35efed39-db8f-11e4-9c11-ed8a7655271e","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:76","type":"CtReturnImpl","sourcecode":"return java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-1},{"failures":[],"tindex":"35efed3a-db8f-11e4-9c11-49943235599d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"35efed3b-db8f-11e4-9c11-090d51b08ea3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"35efed3c-db8f-11e4-9c11-fd96b6ec069b","variableMapping":{"index":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[],"tindex":"35efed3d-db8f-11e4-9c11-e7d947ab683f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"35efed3e-db8f-11e4-9c11-9f9a1364b603","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[2,3,4,5,6,7,8],"tindex":"35efed3f-db8f-11e4-9c11-2be8d1b37b66","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"35efed40-db8f-11e4-9c11-617e1a728874","variableMapping":{"this":"estimatedLength","lat":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:141","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"35efed41-db8f-11e4-9c11-3b066645f5e9","variableMapping":{"res":"bits","value":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":0},{"failures":[],"tindex":"35efed42-db8f-11e4-9c11-a3bc6fc06d30","variableMapping":{"this":"this","from":"hash","to":"hash","endNode":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:87","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.DijkstraOneToMany.findEndNode(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[],"tindex":"35efed43-db8f-11e4-9c11-77b679100687","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[9],"tindex":"35efed44-db8f-11e4-9c11-d72660b06872","variableMapping":{"i":"segmentSizeInBytes","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"35f01455-db8f-11e4-9c11-5d51026f2c5a","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[],"tindex":"35f01456-db8f-11e4-9c11-e99004cb68d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[10],"tindex":"35f01457-db8f-11e4-9c11-b3221b1fe12b","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19],"tindex":"35f01458-db8f-11e4-9c11-c9358fe485db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"35f01459-db8f-11e4-9c11-d933977d1c3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[20,21],"tindex":"35f0145a-db8f-11e4-9c11-ff9aa74e1c9a","variableMapping":{"orientation":"durationInHours","java.lang.Math.PI":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[22],"tindex":"35f0145b-db8f-11e4-9c11-0304191416b4","variableMapping":{"lastTime":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,9,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"35f0145c-db8f-11e4-9c11-cbf16cb22ad7","variableMapping":{"tmpDegreeCounter":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-2},{"failures":[143],"tindex":"35f0145d-db8f-11e4-9c11-8f2c2d65f99d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"35f0145e-db8f-11e4-9c11-c5946f014468","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edgeId":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeIterator:60","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"35f0145f-db8f-11e4-9c11-456aa8e3d2ec","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[22,144,11,145,146,16,147,148],"tindex":"35f01460-db8f-11e4-9c11-d73442707489","variableMapping":{"factor":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"35f01461-db8f-11e4-9c11-f137a0b5740c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:430","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[11,12,13,146,14,15,16,17,18,148,19],"tindex":"35f03b72-db8f-11e4-9c11-115cf6e859e8","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return \"destinations: \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[25,2,149,150,151,152,4],"tindex":"35f03b73-db8f-11e4-9c11-eba9c25ffa9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:282","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"35f03b74-db8f-11e4-9c11-910f8c22c423","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"35f03b75-db8f-11e4-9c11-a7ed9388a20d","variableMapping":{"minLatInit":"minLon","maxLonInit":"java.lang.Double.NaN","minLonInit":"minLon","bounds":"this","maxLatInit":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"35f03b76-db8f-11e4-9c11-3dbf3c5e95fd","variableMapping":{"fwdFaster":"maxLonTmp","incDist2DSum":"maxLonTmp","fwdSlower":"midLon","fullDist2D":"maxLonTmp","restDist2D":"midLon","speed":"midLon","decDist2DSum":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[153,154],"tindex":"35f03b77-db8f-11e4-9c11-5152cc32866b","variableMapping":{"size":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[31,37,45,47,48,49,53,54,59,60,78,86,88,89,91,95,96,103,104,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"35f03b78-db8f-11e4-9c11-052b42d7587f","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"35f03b79-db8f-11e4-9c11-bf81cd39acd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"35f03b7a-db8f-11e4-9c11-e15b58da2da6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"35f03b7b-db8f-11e4-9c11-fbfb685938e7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"35f03b7c-db8f-11e4-9c11-63f678f7d42e","variableMapping":{"dataAccess":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:163","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":0},{"failures":[],"tindex":"35f03b7d-db8f-11e4-9c11-0d520c7fea86","variableMapping":{"newUniqueOsmId":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[],"tindex":"35f03b7e-db8f-11e4-9c11-ed07cf171728","variableMapping":{"start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[177,178,32,55,64,70,72,97,108,129,179,180,181,182,183,184,185,186,2,149,150,187,151,188,4,20,0,189,190,191,192,193,194,195,196,197,198,173,199,200,201,202,203,204],"tindex":"35f03b7f-db8f-11e4-9c11-c1b1d1a6bbaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[11,12,13,146,14,15,16,17,18,148,19],"tindex":"35f06290-db8f-11e4-9c11-ab1a72fb2785","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[27],"tindex":"35f06291-db8f-11e4-9c11-df4c4975e8af","variableMapping":{"len":"edgeEntryBytes","i":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-1},{"failures":[],"tindex":"35f06292-db8f-11e4-9c11-f7ef64d9e0d5","variableMapping":{"deltaX":"maxSpeed","maxX":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[23,24,25,26,27,28,29,31,205,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,206,49,50,51,52,53,54,55,207,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,9,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,208,209,210,211,212,179,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,180,238,239,240,155,241,242,243,244,245,246,247,248,157,158,249,159,250,251,252,160,161,181,253,254,255,256,162,163,257,258,259,182,260,261,262,263,264,265,184,2,149,150,187,3,151,152,188,4,266,267,268,269,20,5,0,189,190,191,192,193,194,195,196,197,198,173,270,271,272,273,274,275,276,277,278,279,280,281,282,283,199,284,174,285,175,176,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,200,334,335,336,337,338,204,339,340],"tindex":"35f06293-db8f-11e4-9c11-d5f04e004b9b","variableMapping":{"i":"segmentSizeInBytes","to":"indexDivisor","lonSize":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"35f06294-db8f-11e4-9c11-c7ac96a2283d","variableMapping":{"turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[11,12,13,146,14,15,16,17,18,148,19],"tindex":"35f06295-db8f-11e4-9c11-27593217e570","variableMapping":{"str":"wayTypeName","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:241","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"finish\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[8],"tindex":"35f06296-db8f-11e4-9c11-eb6af30c6464","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"35f06297-db8f-11e4-9c11-dd2cb3972d5c","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"35f06298-db8f-11e4-9c11-81410863f3ec","variableMapping":{"shiftSum":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"35f06299-db8f-11e4-9c11-933e2cb6e21b","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"35f089aa-db8f-11e4-9c11-c7d3d6bfed70","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[199,284,341,342,343,344,333,200,334,345],"tindex":"35f089ab-db8f-11e4-9c11-574288c633c5","variableMapping":{"speed":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"35f089ac-db8f-11e4-9c11-433b493a90cc","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[297,301,310,312,314,317,323,327],"tindex":"35f089ad-db8f-11e4-9c11-a3fbc3f96c2b","variableMapping":{"segmentSizeInBytes":"value","length":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[346],"tindex":"35f089ae-db8f-11e4-9c11-df5cce9347ed","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"35f089af-db8f-11e4-9c11-65efcee3516a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[25,323,327],"tindex":"35f0fee0-db8f-11e4-9c11-d36050da82d3","variableMapping":{"initialized":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[31,37,45,47,48,49,53,54,59,60,78,86,88,89,91,95,96,103,104,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"35f0fee1-db8f-11e4-9c11-1f83bb5ca197","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[20,347,21],"tindex":"35f0fee2-db8f-11e4-9c11-672b994afa78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"35f0fee3-db8f-11e4-9c11-b942452f2fd7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"35f125f4-db8f-11e4-9c11-dd91215b739b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:71","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"35f125f5-db8f-11e4-9c11-e7259125d3fa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[10],"tindex":"35f125f6-db8f-11e4-9c11-8138bac31e1f","variableMapping":{"str":"valueStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return \"destinations: \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[174,286,287],"tindex":"35f125f7-db8f-11e4-9c11-238cafaefaa3","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[193],"tindex":"35f125f8-db8f-11e4-9c11-b794f7ab82ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"35f125f9-db8f-11e4-9c11-f50f8a0b1bd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[149,3,273,300,308,348],"tindex":"35f125fa-db8f-11e4-9c11-977afbf94dff","variableMapping":{"ab_rb":"lat","ab_ar":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-1},{"failures":[],"tindex":"35f125fb-db8f-11e4-9c11-23c63fec922a","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"35f125fc-db8f-11e4-9c11-0bdfd467906c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"35f125fd-db8f-11e4-9c11-25374df88ebc","variableMapping":{"segmentSizeInBytes":"frontIndex","length":"frontIndex","index":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,177,364,365,366,367,368,369,370,371,372,373,374,178,375,30,32,376,35,55,59,64,66,67,70,72,73,76,97,103,108,110,111,129,130,131,179,213,214,226,227,228,229,230,377,180,378,239,181,162,182,261,262,184,186,379,380,381,382,2,383,149,150,187,3,151,152,188,4,266,384,385,386,20,5,0,189,190,191,192,193,194,195,196,197,198,173,270,271,273,274,275,276,277,278,280,281,199,284,288,289,311,332,333,200,334,204],"tindex":"35f125fe-db8f-11e4-9c11-b177a1eef8d1","variableMapping":{"bytes":"cap","capacity":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"35f125ff-db8f-11e4-9c11-911b439b5dd7","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:99","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"35f12600-db8f-11e4-9c11-dfeb962f78fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"35f14d11-db8f-11e4-9c11-8f6e95fa00f4","variableMapping":{"nodeThis":"key","edgePointer":"backwardBit","E_LINKB":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","E_LINKA":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nodeOther":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:418","type":"CtReturnImpl","sourcecode":"return int <= int ? long + (int) : long + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"35f14d12-db8f-11e4-9c11-af1a2ca0c6e2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[286],"tindex":"35f14d13-db8f-11e4-9c11-afd5f9cc4253","variableMapping":{"turnCostIndex":"index","nextTurnCostIndex":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-1},{"failures":[199,284,341,342,343,333,200,345],"tindex":"35f14d14-db8f-11e4-9c11-d9eff31ca61e","variableMapping":{"lat":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[174,287],"tindex":"35f14d15-db8f-11e4-9c11-d3e210eae7a2","variableMapping":{"bit":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[20,21],"tindex":"35f14d16-db8f-11e4-9c11-fd87b68eb7b1","variableMapping":{"distance":"longTripsSpeed","speed":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"35f14d17-db8f-11e4-9c11-9d3f04323081","variableMapping":{"initLeafSize":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"35f14d18-db8f-11e4-9c11-5b77937f4bd7","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"35f14d19-db8f-11e4-9c11-e104a1ab99f5","variableMapping":{"iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:127","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[46,87,248,265],"tindex":"35f14d1a-db8f-11e4-9c11-59ee3a9f1a47","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"35f14d1b-db8f-11e4-9c11-8dd389707e82","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"35f14d1c-db8f-11e4-9c11-5f3560649d89","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[43,46,84,87,126,142,225,236,246,248,387,265,3,4,20,5,193,173,143,22,144,11,12,388,389,13,145,146,14,390,6,391,7,15,16,17,392,393,18,147,148,19,394,292,303,304,314],"tindex":"35f14d1d-db8f-11e4-9c11-7d3f7d04b2c8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[23,32,35,36,37,44,46,57,61,64,68,70,72,76,77,78,85,87,100,105,108,112,180,239,240,155,247,248,255,257,182,263,395,396,164,397,265,398,399,185,400,268,269,5,173,274,277,174,286,287,291,292,296,299,302,304,305,314,315,317,318,323,324,325,328,331,335],"tindex":"35f14d1e-db8f-11e4-9c11-7d5fb883eac3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"35f14d1f-db8f-11e4-9c11-4ba481075689","variableMapping":{"frontIndex":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","endIndexPlusOne":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"35f14d20-db8f-11e4-9c11-1b9fa8c73ee3","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","edgeId":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeIterator:60","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[],"tindex":"35f14d21-db8f-11e4-9c11-99ab12c6923f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[46,87,248,265,20,5,0,189,190,191,192,193,194,195,196,197,198,173,401,402,403,404,405,406,407,408,21,409,410,411,412,413,414,415,416,417,418,419,290,6,391,420,7,8,421],"tindex":"35f25e92-db8f-11e4-9c11-6d4363b7d172","variableMapping":{"size":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"35f285a3-db8f-11e4-9c11-47961f1a538b","variableMapping":{"edgeId":"x1","nextEdge":"tmpErr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"35f285a4-db8f-11e4-9c11-331f1e97f8e6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"35f285a5-db8f-11e4-9c11-b37efdead362","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[175,176],"tindex":"35f285a6-db8f-11e4-9c11-f109fb5d2d69","variableMapping":{"allSegments":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"35f285a7-db8f-11e4-9c11-e5bb4ce8108a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"35f285a8-db8f-11e4-9c11-e30274ba8518","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[422,423,424,425,426,427,428,429,430],"tindex":"35f285a9-db8f-11e4-9c11-b380dd92ba58","variableMapping":{"midLat":"lon","spatialKey":"bits","bits":"spatialKey","lat":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[153,154,22,144,11,12,388,389,13,145,146,14,390,15,16,17,392,393,18,147,148,19,394],"tindex":"35f285aa-db8f-11e4-9c11-c5d4f0677fb0","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[174],"tindex":"35f285ab-db8f-11e4-9c11-95173e9378e8","variableMapping":{"latSize":"minOnewayNetworkSize","size":"minOnewayNetworkSize","lonSize":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":58,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":309,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":396,"com.graphhopper.reader.OSMReaderTest.testFerry":20,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":335,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":213,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":383,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":345,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":86,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":364,"com.graphhopper.coll.CompressedArrayTest.testCompress":430,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":262,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":183,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":210,"com.graphhopper.util.AngleCalcTest.testOrientation":341,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":365,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":325,"com.graphhopper.GraphHopperTest.testPrepare":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":308,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":301,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":332,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":12,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":330,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":11,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":293,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":130,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":70,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":328,"com.graphhopper.GraphHopperTest.testLoadOSM":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":137,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":131,"com.graphhopper.reader.OSMReaderTest.testSort":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":175,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":73,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":368,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":258,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":180,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":426,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":277,"com.graphhopper.storage.RAMDataAccessTest.testHeader":360,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":107,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":375,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":245,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":26,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":13,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":217,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":159,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":296,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":295,"com.graphhopper.coll.OSMIDMapTest.testGetLong":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":90,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":96,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":51,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":32,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":53,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":343,"com.graphhopper.coll.CompressedArrayTest.testCompress2":429,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":161,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":87,"com.graphhopper.GraphHopperAPITest.testLoad":23,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":116,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":418,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":157,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":155,"com.graphhopper.storage.LevelGraphStorageTest.testClone":39,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":77,"com.graphhopper.reader.OSMReaderTest.testBarriers":190,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":208,"com.graphhopper.util.GHUtilityTest.testCopy":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":225,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":363,"com.graphhopper.routing.PathTest.testFindInstruction":284,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":78,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":7,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":331,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":122,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":259,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":105,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":91,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":321,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":143,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":41,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":238,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":120,"com.graphhopper.util.InstructionListTest.testWayList2":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":138,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":288,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":378,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":43,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":366,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":348,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":88,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":226,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":297,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":191,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":311,"com.graphhopper.coll.OSMIDMapTest.testGet":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":8,"com.graphhopper.routing.PathBidirRefTest.testExtract":282,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":55,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":221,"com.graphhopper.storage.RAMDataAccessTest.testCopy":356,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":113,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":171,"com.graphhopper.storage.RAMDataAccessTest.testSegments":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":142,"com.graphhopper.util.GHUtilityTest.testSort2":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":306,"com.graphhopper.reader.OSMReaderTest.testMain":0,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":376,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":222,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":74,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":46,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":49,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":68,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":47,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":100,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":115,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":52,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":198,"com.graphhopper.storage.StorablePropertiesTest.testStore":377,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":355,"com.graphhopper.storage.GraphHopperStorageTest.testClone":242,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":412,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":410,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":25,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":28,"com.graphhopper.routing.util.EncodingManagerTest.testFixWayName":1,"com.graphhopper.util.BitUtilLittleTest.testToFloat":202,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":66,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":140,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":170,"com.graphhopper.util.GHUtilityTest.testSortDirected":340,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":346,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":374,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":273,"com.graphhopper.GraphHopperTest.testFootOnly":4,"com.graphhopper.util.BitUtilLittleTest.testToInt":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":216,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":141,"com.graphhopper.search.NameIndexTest.testCreate":352,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":361,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":270,"com.graphhopper.routing.QueryGraphTest.testOneWay":279,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":129,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":422,"com.graphhopper.reader.OSMReaderTest.testWithBounds":197,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":177,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":167,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":275,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":421,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":153,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":36,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":388,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":99,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":92,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":239,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":292,"com.graphhopper.util.BitUtilLittleTest.testToBitString":201,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":260,"com.graphhopper.util.InstructionListTest.testWayList":333,"com.graphhopper.GraphHopperAPITest.testDisconnected179":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":387,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":425,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":127,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":269,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":400,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":187,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":326,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":255,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":324,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":19,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":394,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":237,"com.graphhopper.routing.PathTest.testWayList":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":408,"com.graphhopper.coll.OSMIDMapTest.testGet2":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":314,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":371,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":61,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":98,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":83,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":243,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":50,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":218,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":219,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":357,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":178,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.util.GHUtilityTest.testSort":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":134,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":428,"com.graphhopper.search.NameIndexTest.testPut":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":112,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":241,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":230,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":233,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":145,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":276,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":231,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":71,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":188,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":385,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":312,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":174,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":119,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":184,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":266,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":63,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":10,"com.graphhopper.util.AngleCalcTest.testAtan2":342,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":27,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":89,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":351,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":265,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":247,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":416,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":405,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":404,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":307,"com.graphhopper.reader.PrinctonReaderTest.testRead":268,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":214,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":165,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":382,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":395,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":94,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":389,"com.graphhopper.reader.OSMReaderTest.testFoot":5,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":281,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":398,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":135,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":136,"com.graphhopper.reader.OSMReaderTest.testOneWay":173,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":158,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":163,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":106,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":373,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":253,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":327,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":411,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":318,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":372,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":179,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":272,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":9,"com.graphhopper.routing.PathBidirRefTest.testExtract2":283,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":139,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":349,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":256,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":193,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":6,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":132,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":257,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":414,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":181,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":224,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":358,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":415,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":80,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":310,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":125,"com.graphhopper.GraphHopperTest.testVia":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":164,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":195,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":29,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":334,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":391,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":194,"com.graphhopper.util.AngleCalcTest.testCombined":344,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":403,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":62,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":60,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":72}}]
