[{"failures":[],"tindex":"5ab5ebb4-db17-11e4-865f-2be773dfbb20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"5ab5ebb5-db17-11e4-865f-ede98916c67a","variableMapping":{"d":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"5ab612c6-db17-11e4-865f-ebc0b8ebed10","variableMapping":{"bytes":"relationFlags","capacity":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":0},{"failures":[],"tindex":"5ab612c7-db17-11e4-865f-214a1b3559a6","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"5ab612c8-db17-11e4-865f-8ff59ca24c64","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"5ab612c9-db17-11e4-865f-89282a5ac966","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"5ab612ca-db17-11e4-865f-b57f67e7e4ee","variableMapping":{"retBucket":"speed","bucketSize":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"5ab612cb-db17-11e4-865f-8fc687414d4b","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"5ab612cc-db17-11e4-865f-a5bb864f3c6e","variableMapping":{"tmpDegreeCounter":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[20,21,22,2,23,24,25,26,3,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,4,42,43,44,45,46,47,48,49,50,51,52,5,53,6,7,8,54,55,56,57,58,59,60,61,62,9,63,64,65,10,66,12,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,13,110,14,15,16,111,112,113,114,115,116,117,118,119,17,120,121,122,18,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"5ab639dd-db17-11e4-865f-79b3ded7ee35","variableMapping":{"line":"encoderList"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[],"tindex":"5ab639de-db17-11e4-865f-099c012b6427","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"defaultD","speed":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":0},{"failures":[20,1,22,2,4,336,337,8,11,338,339,12,71,16,19,340,341,129,130,140,142,143,152,154,160,161,168,175,183,188,195,202,203,210,217,225,230,237,239,242,248,249,256,263,271,276,283,293,299,300,307,314,322,327,334],"tindex":"5ab639df-db17-11e4-865f-932ad7edb4c1","variableMapping":{"err":"shift","dLat":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[27],"tindex":"5ab639e0-db17-11e4-865f-95ff83e844d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"5ab639e1-db17-11e4-865f-01b53c93a4ea","variableMapping":{"acceptBit":"oldRelationFlags","ferryBit":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"5ab639e2-db17-11e4-865f-4bb6a6fbf1b3","variableMapping":{"res":"hash","value":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":0},{"failures":[0,342,343,20,344,345,346,347,348,349,350,2,23,27,33,37,42,46,50,69,71,351,352,353,354,340,341,355,356,129,131,132,135,139,141,144,146,148,149,150,152,357,358,359,360,361,362,363,364,365,366,367,368,154,160,161,164,170,175,177,183,185,188,190,191,195,202,203,206,212,217,219,225,227,230,232,233,237,239,242,248,249,252,258,263,265,271,273,276,278,279,283,285,289,293,299,300,303,309,314,316,322,324,327,329,330,334],"tindex":"5ab639e3-db17-11e4-865f-c5a2dff89347","variableMapping":{"bytePos":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"5ab639e4-db17-11e4-865f-dd3c9fde3a8f","variableMapping":{"towerNodeDistance":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"5ab639e5-db17-11e4-865f-5969fa472077","variableMapping":{"res":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.Circle:172","type":"CtIfImpl","sourcecode":"if (double < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"5ab639e6-db17-11e4-865f-8987c70ca854","variableMapping":{"acceptBit":"defaultL","ferryBit":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"5ab639e7-db17-11e4-865f-d966b25bc7c2","variableMapping":{"offset":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"5ab660f8-db17-11e4-865f-79e00bc24c47","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[50],"tindex":"5ab660f9-db17-11e4-865f-73da6db7be92","variableMapping":{"r":"bwFaster","angle":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[27,5,7,8,10,11,339,79,91,93,95,106,13,15,16,18],"tindex":"5ab660fa-db17-11e4-865f-6795769df1c6","variableMapping":{"i":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"5ab660fb-db17-11e4-865f-2f0de04df846","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.ERR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[369,370,371,347,348,1,372,341,373],"tindex":"5ab660fc-db17-11e4-865f-8bf586bf604d","variableMapping":{"resultOrientation":"r","orientation":"absY","java.lang.Math.PI":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-1},{"failures":[0,342,343,20,374,344,375,345,376,349,377,378,379,380,34,35,36,37,38,39,40,41,4,42,43,44,45,46,47,48,336,337,49,50,51,52,5,53,6,7,8,54,55,56,57,58,59,60,61,62,9,63,64,65,10,66,381,12,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,13,110,14,15,16,111,112,113,114,115,116,117,118,119,17,120,121,122,18,382,340,341,373,355,383,384,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,357,358,385,359,360,361,362,363,386,364,365,366,387,367,368,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,388,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"5ab660fd-db17-11e4-865f-8ba5d29a7634","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[389,390,391,392,393,394,395,396],"tindex":"5ab660fe-db17-11e4-865f-b17b85bdd349","variableMapping":{"resultOrientation":"lat","orientation":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[135,148,150,152,364],"tindex":"5ab6880f-db17-11e4-865f-1db4bf11cad2","variableMapping":{"currentBucket":"key","currentIndex":"value","bucketSize":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[95],"tindex":"5ab68810-db17-11e4-865f-d577fc523f5d","variableMapping":{"str":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[19],"tindex":"5ab68811-db17-11e4-865f-956c5d57d882","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"5ab68812-db17-11e4-865f-f337cf37272a","variableMapping":{"acceptBit":"relBitMask","ferryBit":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"5ab68813-db17-11e4-865f-090f622da6a3","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[397],"tindex":"5ab68814-db17-11e4-865f-f770c82e5c96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"5ab68815-db17-11e4-865f-a53b59510345","variableMapping":{"segmentSizeInBytes":"encoderCount","segmentsToCreate":"encoderCount","todoBytes":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"5ab68816-db17-11e4-865f-69703b96665c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"5ab68817-db17-11e4-865f-1dc5c8163704","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[398,399,0,342,343,20,374,400,344,375,345,346,347,348,1,349,350,377,378,379,380,2,23,25,27,28,29,30,31,33,37,40,42,44,46,50,338,69,71,351,352,353,354,340,341,373,355,356,383,384,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,357,358,359,360,361,362,363,364,365,366,387,367,368,154,159,160,161,163,164,167,168,170,175,177,183,185,188,190,191,195,201,202,203,205,206,209,210,212,217,219,225,227,230,232,233,237,239,242,247,248,249,251,252,255,256,258,263,265,271,273,276,278,279,283,285,289,293,298,299,300,302,303,306,307,309,314,316,322,324,327,329,330,334],"tindex":"5ab68818-db17-11e4-865f-c7520613f55e","variableMapping":{"value":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"5ab68819-db17-11e4-865f-71c0739a8bb3","variableMapping":{"systemProperty":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[66],"tindex":"5ab6881a-db17-11e4-865f-f3df7a87ee9c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"5ab6881b-db17-11e4-865f-a3db2091c4b5","variableMapping":{"intLow":"code","intHigh":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":0},{"failures":[170,212,258,309],"tindex":"5ab6881c-db17-11e4-865f-e36d2eb56af4","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"5ab6881d-db17-11e4-865f-4de8211e99f6","variableMapping":{"finishedTo":"uTurnSupport","finishedFrom":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"5ab6af2e-db17-11e4-865f-cb054492d150","variableMapping":{"str":"name","key":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[22,401],"tindex":"5ab6af2f-db17-11e4-865f-33fa95f23280","variableMapping":{"str":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"5ab6af30-db17-11e4-865f-393fd830e3df","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[397],"tindex":"5ab6af31-db17-11e4-865f-cb09ec0ae7d7","variableMapping":{"res":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[398,399,0,342,343,20,374,400,344,375,21,345,376,402,403,404,346,347,348,1,349,405,406,350,407,408,377,378,409,379,380,22,2,23,24,25,26,3,27,28,29,30,31,32,33,49,50,69,351,352,107,353,354,410,382,340,341,373,126,126,411,411,412,412,413,413,355,355,414,414,415,415,356,356,416,416,417,417,418,418,419,419,383,384,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,357,358,359,360,361,362,363,386,364,365,366,387,367,368,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,420,388,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,197,437,438,439,440,441,198,442,443,444,445,446,447,448,449,450,451,452,199,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,200,212,227,239,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,468,469,470,471,472,473,474,475,476,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"5ab6af32-db17-11e4-865f-67891d6dee01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"5ab6af33-db17-11e4-865f-29a0b7b8f341","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"5ab6af34-db17-11e4-865f-d92e0a9e8e15","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[33,107,353],"tindex":"5ab6af35-db17-11e4-865f-3728e27bfe6b","variableMapping":{"i":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"5ab6af36-db17-11e4-865f-79863497de03","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[0,375,138,146,420],"tindex":"5ab6d647-db17-11e4-865f-bb268c9f1765","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[22,2,23,24,25,26,3,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,4,42,43,44,45,46,47,48,49,50,51,52,5,53,6,7,8,54,55,56,57,58,59,60,61,62,9,63,64,65,10,66,11,477,339,12,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,13,110,14,15,16,111,112,113,114,115,116,117,118,119,17,120,121,122,18],"tindex":"5ab6d648-db17-11e4-865f-5f61ce2da131","variableMapping":{"arrayLength":"shift","maxGeoRef":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[20,21,2,3,27],"tindex":"5ab6d649-db17-11e4-865f-8defed461ff3","variableMapping":{"err":"index","dLat":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"5ab6d64a-db17-11e4-865f-c5b9772a6072","variableMapping":{"maxLat":"minLat","minLat":"minLat","bbox":"bbox"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[478],"tindex":"5ab6d64b-db17-11e4-865f-137c1f9e04d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[27],"tindex":"5ab6d64c-db17-11e4-865f-4de6bb3b7e3e","variableMapping":{"name":"value","properties":"properties"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:183","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[479,480],"tindex":"5ab6d64d-db17-11e4-865f-c5a11603d2aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"5ab6d64e-db17-11e4-865f-5b64235f07f9","variableMapping":{"size":"speed","from":"speed","end":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":0},{"failures":[],"tindex":"5ab6d64f-db17-11e4-865f-8f913726da54","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"5ab6d650-db17-11e4-865f-71ab8bad01f2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"5ab6d651-db17-11e4-865f-853591b3d7a6","variableMapping":{"maxSpeed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"5ab6d652-db17-11e4-865f-a7cab8116081","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[389,390,391,392,394,481,395,396],"tindex":"5ab6d653-db17-11e4-865f-9525c8248b5b","variableMapping":{"distance":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"5ab6d654-db17-11e4-865f-15fa3d75c499","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[478],"tindex":"5ab6d655-db17-11e4-865f-a3a695d28b4c","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[399,0,342,343,20,374,400,344,21,2,23,24,25,3,27,28,29,30,31,32,482,33,36,38,39,41,42,48],"tindex":"5ab6d656-db17-11e4-865f-6bd96b63d99a","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"5ab6d657-db17-11e4-865f-855981fefda7","variableMapping":{"size":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[61,85,101,118],"tindex":"5ab6fd68-db17-11e4-865f-6dade3871ced","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5ab6fd69-db17-11e4-865f-c3a1a3ed54a2","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"maxSpeed","java.lang.Double.POSITIVE_INFINITY":"speed","weight":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":0},{"failures":[351,353,172,187,214,229,260,275,311,326],"tindex":"5ab6fd6a-db17-11e4-865f-aba70c7c87ce","variableMapping":{"elem":"mValues","size":"mSize","keys":"mValues","i":"mSize","child":"i","lastPrio":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"5ab6fd6b-db17-11e4-865f-eb72b41ea9a9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"5ab6fd6c-db17-11e4-865f-9b62bde2ec42","variableMapping":{"size":"nextWayBit","from":"nextWayBit","end":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[398,399,0,342,343,20,374,400,344,375,21,345,376,402,403,404,346,347,348,1,349,405,406,350,407,408,377,378,409,379,380,22,2,23,24,25,26,3,27,28,29,30,31,32,33,49,50,69,351,352,107,353,354,410,382,340,341,373,126,126,411,411,412,412,413,413,355,355,414,414,415,415,356,356,416,416,417,417,418,418,419,419,383,384,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,357,358,359,360,361,362,363,386,364,365,366,387,367,368,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,420,388,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,483,436,197,437,438,439,440,441,198,442,443,444,445,446,447,448,449,450,451,452,199,453,454,455,456,457,458,459,460,461,462,463,464,465,466,484,467,200,212,227,239,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,485,468,469,470,471,472,486,473,474,475,476,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"5ab6fd6d-db17-11e4-865f-03baaa9d466f","variableMapping":{"size":"segmentsToCreate","index":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"5ab6fd6e-db17-11e4-865f-b5822897ac8f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"5ab6fd6f-db17-11e4-865f-4f7a4d8ed073","variableMapping":{"storedKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[22,39,401],"tindex":"5ab6fd70-db17-11e4-865f-fbc46a52b9bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"5ab6fd71-db17-11e4-865f-25e4fa8d8ddb","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"5ab6fd72-db17-11e4-865f-0ff1b78165e1","variableMapping":{"lastKey":"mask","key":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[],"tindex":"5ab6fd73-db17-11e4-865f-731786b2e5ac","variableMapping":{"resultOrientation":"midLon","orientation":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[],"tindex":"5ab6fd74-db17-11e4-865f-e90796754b03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[1,478],"tindex":"5ab72485-db17-11e4-865f-05913d47f7f9","variableMapping":{"com.graphhopper.util.Constants.VERSION":"str","tmp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[4,478,19],"tindex":"5ab72486-db17-11e4-865f-e73b3391da68","variableMapping":{"cp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:113","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"5ab72487-db17-11e4-865f-15f8cbaefdd6","variableMapping":{"len":"y1","i":"y2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[487,488,489,490,491,492,493,494,495,240,468,496,473,474,497,498,499,500,501,502,503,504,505,506],"tindex":"5ab72488-db17-11e4-865f-1d802a0f9e07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[398,0,342,343,20,374,400,344,375,21,345,376,22,2,23,24,25,26,3,27,28,29,30,31,32,33,389,390,138,142,143,146,391,392,393,394,481,395,396,507,508,509,510,420,388,422,423,424,425,426,427,428,429,430,431,432,433,434,435,483,436,197,453,454,455,456,457,458,459,460,461,462,463,464,465,466,484,467,200],"tindex":"5ab72489-db17-11e4-865f-cff49a50832b","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"5ab7248a-db17-11e4-865f-7bbd65693d3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"5ab7248b-db17-11e4-865f-75e11d43044b","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[20,375,2,70,74],"tindex":"5ab7248c-db17-11e4-865f-69773007532d","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[129,130,152,357,365],"tindex":"5ab7248d-db17-11e4-865f-5b057b4b8d0a","variableMapping":{"high":"to","guess":"tmp","low":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"5ab7248e-db17-11e4-865f-75c9a451b4f6","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[],"tindex":"5ab7248f-db17-11e4-865f-07a0afd2b41b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[398,399,0,342,343,20,374,400,344,375,21,345,376,402,403,404,346,347,348,1,349,405,406,350,407,408,377,378,511,512,513,514,409,515,516,517,379,380,22,2,23,24,25,26,3,27,28,518,29,30,31,32,482,33,519,520,521,522,523,49,50,69,351,352,107,353,354,410,382,340,341,373,126,126,411,411,412,412,413,413,355,355,414,414,415,415,356,356,416,416,417,417,418,418,419,419,383,384,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,357,358,359,360,361,362,363,386,364,365,366,387,367,368,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,420,388,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,197,437,438,439,440,441,198,442,443,444,445,446,447,448,449,450,451,452,199,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,200,212,227,524,492,525,526,527,528,529,495,530,531,239,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,532,533,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,534,498,535,536,537,538,539,501,540,541,542],"tindex":"5ab74ba0-db17-11e4-865f-7feff8ea235c","variableMapping":{"lastInBoundsPillarNode":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"5ab74ba1-db17-11e4-865f-2bb8ecc17470","variableMapping":{"cap":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[398,399,0,342,343,20,374,400,344,375,21,346,347,348,1,350,511,512,513,514,515,516,517,22,2,23,24,25,26,3,27,28,29,30,31,32,33,519,520,521,522,523,49,50,341,373,126,411,413,355,414,415,356,416,418,419,149,154,155,159,180,186,191,193,194,424,425,426,443,444,445,446,447,455,456,457,227,524,491,492,525,526,527,528,529,494,495,530,531,239,242,243,247,268,274,279,281,282,533,290,293,294,298,319,325,330,332,333,534,497,498,535,536,537,538,539,500,501,540,541,542],"tindex":"5ab74ba2-db17-11e4-865f-61cb46496de0","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"5ab74ba3-db17-11e4-865f-4de5d6f9f40b","variableMapping":{"res":"encoded","value":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[398,399,0,342,374,400,375,345,376,346,347,348,349,350,377,378,379,380,37,40,46,336,50,52,68,69,71,75,77,93,351,352,107,353,354,109,340,341,373,355,356,383,384,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,357,358,359,360,361,362,363,364,365,366,387,367,368,154,159,160,161,163,164,167,168,170,175,177,183,185,188,190,191,195,197,198,199,200,201,202,203,205,206,209,210,212,217,219,225,227,230,232,233,237,239,242,247,248,249,251,252,255,256,258,263,265,271,273,276,278,279,283,285,289,293,298,299,300,302,303,306,307,309,314,316,322,324,327,329,330,334],"tindex":"5ab74ba4-db17-11e4-865f-cfad3f3601c5","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[398,399,0,342,343,20,374,400,344,375,21,22,2,23,24,25,26,3,27,28,29,30,31,32,482,33,36,38,39,41,42,48,7,55,56,64,67,70,73,74,76,80,89,97,105,15,112,113,121],"tindex":"5ab74ba5-db17-11e4-865f-8f6a170b7479","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"5ab74ba6-db17-11e4-865f-7dd4a2ea6268","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5ab74ba7-db17-11e4-865f-a7a22c80eeb6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":147,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":411,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":19,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":290,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":202,"com.graphhopper.reader.OSMReaderTest.testFerry":22,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":377,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":15,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":96,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":425,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":399,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":372,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":10,"com.graphhopper.storage.MMapDataAccessTest.testSegments":506,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":257,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":534,"com.graphhopper.coll.CompressedArrayTest.testCompress":390,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":102,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":194,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":222,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":421,"com.graphhopper.util.AngleCalcTest.testOrientation":369,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":497,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":528,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":366,"com.graphhopper.GraphHopperTest.testPrepare":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":234,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":139,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":346,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":442,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":103,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":403,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":296,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":422,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":109,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":137,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":456,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":239,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":507,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":368,"com.graphhopper.GraphHopperTest.testLoadOSM":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":463,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":457,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":381,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":120,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":243,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":536,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":189,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":235,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":356,"com.graphhopper.storage.RAMDataAccessTest.testHeader":529,"com.graphhopper.routing.DijkstraTest.initializationError":127,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":278,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":542,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":323,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":166,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":240,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":247,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":88,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":429,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":133,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":300,"com.graphhopper.coll.OSMIDMapTest.testGetLong":522,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":261,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":267,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":315,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":293,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":317,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":371,"com.graphhopper.coll.CompressedArrayTest.testCompress2":389,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":179,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":77,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":258,"com.graphhopper.GraphHopperAPITest.testLoad":345,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":297,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":470,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":67,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":171,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":161,"com.graphhopper.storage.LevelGraphStorageTest.testClone":302,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":401,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":410,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":490,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":420,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":206,"com.graphhopper.util.GHUtilityTest.testCopy":350,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":85,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":105,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":530,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":99,"com.graphhopper.routing.PathTest.testFindInstruction":373,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":249,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":73,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":349,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":53,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":438,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":190,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":175,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":276,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":262,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":61,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":338,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":125,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":304,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":207,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":505,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":476,"com.graphhopper.util.InstructionListTest.testWayList2":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":464,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":195,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":281,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":49,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":155,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":306,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":498,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":111,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":537,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":259,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":135,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":160,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":535,"com.graphhopper.routing.AStarTest.initializationError":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":149,"com.graphhopper.coll.OSMIDMapTest.testGet":519,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":74,"com.graphhopper.routing.PathBidirRefTest.testExtract":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":114,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":319,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":521,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":433,"com.graphhopper.storage.RAMDataAccessTest.testCopy":525,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":538,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":284,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":113,"com.graphhopper.storage.RAMDataAccessTest.testSegments":495,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":200,"com.graphhopper.util.GHUtilityTest.testSort2":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":144,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":294,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":266,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":508,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":434,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":36,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":244,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":309,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":313,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":334,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":310,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":52,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":469,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":316,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":32,"com.graphhopper.storage.StorablePropertiesTest.testStore":533,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":492,"com.graphhopper.storage.GraphHopperStorageTest.testClone":163,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":41,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":173,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":208,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":288,"com.graphhopper.routing.PathTest.testTime":340,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":84,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":332,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":221,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":321,"com.graphhopper.reader.OSMReaderTest.testRelation":518,"com.graphhopper.util.GHUtilityTest.testSortDirected":408,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":63,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":540,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":413,"com.graphhopper.GraphHopperTest.testFootOnly":375,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":444,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":532,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":428,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":339,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":504,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":217,"com.graphhopper.search.NameIndexTest.testCreate":514,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":494,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":126,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":486,"com.graphhopper.routing.QueryGraphTest.testOneWay":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":484,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":455,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":391,"com.graphhopper.reader.OSMReaderTest.testWithBounds":31,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":531,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":488,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":64,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":491,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":280,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":352,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":414,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":223,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":11,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":299,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":106,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":270,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":263,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":159,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":416,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":130,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":192,"com.graphhopper.util.InstructionListTest.testWayList":347,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":112,"com.graphhopper.GraphHopperAPITest.testDisconnected179":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":209,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":481,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":59,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":380,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":220,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":485,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":237,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":343,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":165,"com.graphhopper.routing.util.EncodedValueTest.testSwap":397,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":108,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":183,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":141,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":365,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":43,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":330,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":245,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":151,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":483,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":472,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":496,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":18,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":153,"com.graphhopper.routing.PathTest.testWayList":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":213,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":478,"com.graphhopper.coll.OSMIDMapTest.testGet2":520,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":152,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":539,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":327,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":515,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":118,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":176,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":68,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":254,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":431,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":526,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":541,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":56,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":479,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":78,"com.graphhopper.util.GHUtilityTest.testSort":407,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":460,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":117,"com.graphhopper.search.NameIndexTest.testPut":512,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":423,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":440,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":447,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":450,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":7,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":50,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":241,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":344,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":80,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":337,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":516,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":264,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":351,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":475,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":227,"com.graphhopper.routing.PathTest.testFound":382,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":12,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":21,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":329,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":499,"com.graphhopper.util.AngleCalcTest.testAtan2":370,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":116,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":260,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":487,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":513,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":212,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":168,"com.graphhopper.util.InstructionListTest.testEmptyList":404,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":524,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":138,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":104,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":145,"com.graphhopper.reader.PrinctonReaderTest.testRead":379,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":426,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":211,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":392,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":523,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":201,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":265,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":477,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":5,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":225,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":419,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":517,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":333,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":461,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":92,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":462,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":172,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":187,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":277,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":100,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":501,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":55,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":362,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":510,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":360,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":451,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":500,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":69,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":489,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":215,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":412,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":156,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":482,"com.graphhopper.routing.PathBidirRefTest.testExtract2":384,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":473,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":87,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":465,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":511,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":185,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":90,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":27,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":458,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":188,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":44,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":180,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":436,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":527,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":205,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":502,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":148,"com.graphhopper.GraphHopperTest.testPrepareOnly":398,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":203,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":29,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":289,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":1,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":184,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":71,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":28,"com.graphhopper.routing.AStarBidirectionTest.initializationError":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":218,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":48,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":328,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":326,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":242}}]
