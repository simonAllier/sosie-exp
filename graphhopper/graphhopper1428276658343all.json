[{"failures":[0,1,2,3],"tindex":"d08482e5-dbeb-11e4-b6a6-9993427dac01","variableMapping":{"tmp":"nodeA","initializedCounter":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[4],"tindex":"d0860986-dbeb-11e4-b6a6-f379f0f63ef3","variableMapping":{"str":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_SYNC\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"d0860987-dbeb-11e4-b6a6-11f7f4fbe426","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"d0860988-dbeb-11e4-b6a6-e58d4722f8b5","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","speed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"d0860989-dbeb-11e4-b6a6-2d6d522f30e1","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"d086098a-dbeb-11e4-b6a6-e58b398755db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[5],"tindex":"d086309b-dbeb-11e4-b6a6-a93b896163c3","variableMapping":{"line":"highway","key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[6,7,8,9,5,10,11,12,13,14,15,16,17,18],"tindex":"d086309c-dbeb-11e4-b6a6-3d4c949441b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[4],"tindex":"d086309d-dbeb-11e4-b6a6-35bb1d2c0c0d","variableMapping":{"segmentSizeInBytes":"index","indexDivisor":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[19,20],"tindex":"d086309e-dbeb-11e4-b6a6-ffc7acf981bb","variableMapping":{"width":"minOnewayNetworkSize","lonSimilar":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[21,22,23],"tindex":"d086309f-dbeb-11e4-b6a6-770176fc975b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[24,25,0,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"d08630a0-dbeb-11e4-b6a6-1b327f37a8a0","variableMapping":{"size":"index","capacity":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"d08630a1-dbeb-11e4-b6a6-193ae7af3dda","variableMapping":{"tmpNode":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"d08630a2-dbeb-11e4-b6a6-61fba463cef7","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"high","id":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"d08630a3-dbeb-11e4-b6a6-df68e208c9c6","variableMapping":{"nodeViaNode":"speedBits","edgeTo":"speedBits","edgeFrom":"speedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:163","type":"CtReturnImpl","sourcecode":"return (((((\"*-(\" + (int)) + \")->\") + (int)) + \"-(\") + (int)) + \")->*\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":-2},{"failures":[],"tindex":"d08630a4-dbeb-11e4-b6a6-6799ac558f4e","variableMapping":{"lastInBoundsPillarNode":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"d08630a5-dbeb-11e4-b6a6-1b8bcb261cfc","variableMapping":{"keyIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"d08630a6-dbeb-11e4-b6a6-09280285dead","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"d0867ec7-dbeb-11e4-b6a6-51f6790ddd31","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"d0867ec8-dbeb-11e4-b6a6-55a74defa69c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[81,22,23,82,83,7,84,85,9,5,86,87,88,89,12,13,90,91,92,93,16,17,94,95],"tindex":"d0867ec9-dbeb-11e4-b6a6-d36b5977d202","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"d0867eca-dbeb-11e4-b6a6-c7b7564bf9a4","variableMapping":{"ab_rb":"d1","ab_ar":"d1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"d0867ecb-dbeb-11e4-b6a6-6595ffac0e21","variableMapping":{"initializedCounter":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[96,97],"tindex":"d0867ecc-dbeb-11e4-b6a6-2b4811a9c848","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[24,25,0,26,27,28,29,98,30,31,32,33,99,100,101,102,34,35,36,37,38,103,81,39,21,40,104,41,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,45,46,125,126,127,128,129,82,130,6,83,7,131,132,133,134,135,136,137,84,138,139,8,85,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,19,167,168,169,170,20,171,9,172,5,10,173,174,175,176,177,178,86,179,180,87,181,11,88,182,89,12,13,183,184,185,186,187,188,189,190,191,90,192,193,14,91,194,96,195,15,92,196,93,16,17,197,198,199,200,201,202,203,204,205,94,206,207,18,95,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,1,237,238,2,239,240,47,241,242,243,244,245,246,48,49,50,51,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,56,57,58,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,3,293,294,295,296,59,60,61,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,62,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,63,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,64,385,386,387,388,65,389,66,67,390,391,68,392,393,69,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,70,425,426,427,428,71,429,72,73,430,431,432,74,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,75,464,465,466,467,76,468,77,78,469,470],"tindex":"d086cced-dbeb-11e4-b6a6-e12881366d95","variableMapping":{"str":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[24,28,32,34,103,81,130,139,143,146,147,153,154,158,180,12,184,193,16,198,207],"tindex":"d086ccee-dbeb-11e4-b6a6-5b454e0b7875","variableMapping":{"properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"d086ccef-dbeb-11e4-b6a6-7fe91e5ea83f","variableMapping":{"flags":"turnRestrictionBit","factor":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"d086f400-dbeb-11e4-b6a6-fb8b91b70790","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[140],"tindex":"d086f401-dbeb-11e4-b6a6-0dd59d85c150","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"locked","v":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[147],"tindex":"d086f402-dbeb-11e4-b6a6-9548d6bf47ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"d0871b13-dbeb-11e4-b6a6-a3e7f6a9d69b","variableMapping":{"eleDelta":"bwSlower","decEleSum":"bwSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[211,217,221,229,233,240,241,243],"tindex":"d0871b14-dbeb-11e4-b6a6-2717d6fdc8ab","variableMapping":{"index":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:767","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[],"tindex":"d0871b15-dbeb-11e4-b6a6-f797bb06c506","variableMapping":{"item":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[152],"tindex":"d0871b16-dbeb-11e4-b6a6-db29b0b2e701","variableMapping":{"edgePointer":"roundaboutBit","maxEdges":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"d0871b17-dbeb-11e4-b6a6-399901dbd7ae","variableMapping":{"nodeId":"offset","mainNodes":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"d0871b18-dbeb-11e4-b6a6-6736f38e9b82","variableMapping":{"i":"dLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[82],"tindex":"d0871b19-dbeb-11e4-b6a6-915dbb29b662","variableMapping":{"flags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"d0871b1a-dbeb-11e4-b6a6-4b7617243803","variableMapping":{"wayIndex":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[24,25,0,26,29,30,32,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,1,237,238,2,239,240,47,241,242,243,247,249,255,3,293,295,296,59,60,61,297,298,299,300,301,302,303,304,305,307,308,346,348,349,350,353,63,356,358,359,360,361,362,363,364,365,366,367,370,371,372,373,374,375,376,377,378,379,380,381,382,384,64,385,386,387,388,65,389,66,67,390,391],"tindex":"d087422b-dbeb-11e4-b6a6-4780e5668c5c","variableMapping":{"ref":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-1},{"failures":[],"tindex":"d087422c-dbeb-11e4-b6a6-a130806476eb","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"d087422d-dbeb-11e4-b6a6-9f0ee1cc0618","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"d087422e-dbeb-11e4-b6a6-5f66d25233cd","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":0},{"failures":[106,168,169,352,360,368,370,371,377,64,385,400,408,410,411,417,70,425,439,447,449,450,456,75,464,471],"tindex":"d087422f-dbeb-11e4-b6a6-a546d3219500","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"d0874230-dbeb-11e4-b6a6-c519a0211c13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"d0874231-dbeb-11e4-b6a6-1b8fa74f5b38","variableMapping":{"weight":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-2},{"failures":[],"tindex":"d0874232-dbeb-11e4-b6a6-7f77ccba513c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"d0874233-dbeb-11e4-b6a6-6398bc775ebf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[24,28,32,33,102,34,35,36,37,38,103,81,39,40,104,41,105,106,107,108,120,121,122,125,128,472,473,82,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,223,224,225,226,227,228,229,230,231,232,233,234,235,236,1,237,238,2,239,240,47,241,242,243,265,272,286,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,62,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,63,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,64,385,386,387,388,65,389,66,67,390,391,68,392,393,69,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,70,425,426,427,428,71,429,72,73,430,431,432,74,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,75,464,465,466,467,76,468,77,78,469,470],"tindex":"d0876944-dbeb-11e4-b6a6-cbaa6a350aec","variableMapping":{"ret":"shift","retBucket":"shift","i":"shift","bucketSize":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"d0876945-dbeb-11e4-b6a6-bd66ce5e773d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:37","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalcEarth.calcDist(double, double, double, double)"},"status":-2},{"failures":[169],"tindex":"d0876946-dbeb-11e4-b6a6-712b3d0c21a1","variableMapping":{"id":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[136,177,190,204],"tindex":"d0876947-dbeb-11e4-b6a6-1179d448432a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"d0876948-dbeb-11e4-b6a6-5fc3c4719a4a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d0876949-dbeb-11e4-b6a6-cbf384abfa69","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[22,6,7,132,134,135,84,138,8,85,172,5,10,174,176,86,179,87,11,88,182,13,186,188,189,90,192,14,91,15,92,196,17,200,202,203,94,206,18,95],"tindex":"d087694a-dbeb-11e4-b6a6-8f0a3423cf4a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[],"tindex":"d087694b-dbeb-11e4-b6a6-c7c6db7edcf5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfStreamSplitter:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[24,25,0,26,27,28,29,30,31,32,33,102,34,35,36,37,38,103,81,39,40,104,41,105,106,474,475,476,42,43,477,44,108,109,111,112,113,114,115,116,118,119,45,46,194,96,47,48,49,50,51,249,52,53,478,54,55,56,57,58,287,288,289,290,292,59,60,61,62,351,63,354,358,379,64,65,66,67,479,68,69,394,398,419,70,71,72,73,74,433,437,458,75,76,77,78,480,481,79,482,483,484,485,486,487,488,489,490,491,492,80,493,494,495,496,497,498,499,500,501,502],"tindex":"d087694c-dbeb-11e4-b6a6-63cdd073f5bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[19,170,20],"tindex":"d087694d-dbeb-11e4-b6a6-f925669ce1f8","variableMapping":{"elem":"nodeIndex","size":"index","keys":"nodeLowLink","i":"index","value":"index","key":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n            int++;\n        } \n        if (int > (int[][int])) {\n            int[][int] = int[][int];\n            int[][int] = int[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    int[][int] = int;\n} else {\n    while ((int[][(int / 2)]) > int) {\n        int[][int] = int[][(int / 2)];\n        int[][int] = int[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    int[][int] = int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[503,504,505,506,507,508,509,510,511],"tindex":"d087694e-dbeb-11e4-b6a6-b9896416f4f7","variableMapping":{"eleDelta":"midLon","decEleSum":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[24,25,0,26,27,28,29,98,30,31,32,33,99,100,101,102,34,35,36,37,38,103,81,39,21,40,104,41,105,512,106,474,475,476,513,42,43,477,44,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,123,124,45,46,126,127,142,19,167,168,169,170,20,194,96,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,1,237,238,2,239,240,47,241,242,243,244,245,246,48,49,50,51,247,248,249,250,252,253,254,255,256,257,52,53,478,54,55,259,260,261,262,264,265,266,267,268,269,271,272,273,274,56,57,58,275,276,277,278,279,280,281,282,283,285,286,514,287,288,289,290,291,292,3,293,294,295,296,59,60,61,297,298,299,300,301,302,303,304,305,307,308,515,516,320,62,517,518,519,520,346,347,348,349,350,351,352,353,63,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,64,385,386,387,388,65,389,66,67,390,391,68,393,69,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,70,425,426,427,428,71,429,72,73,430,431,432,74,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,75,464,465,466,467,76,468,77,78,469,470,502,521,522],"tindex":"d087905f-dbeb-11e4-b6a6-7563e1a5ba8d","variableMapping":{"versionHint":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"d0879060-dbeb-11e4-b6a6-8f02e0558537","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"d0879061-dbeb-11e4-b6a6-e33e8d724fd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[],"tindex":"d0879062-dbeb-11e4-b6a6-e9c568ba9ebf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[81,513,472,161,183,197],"tindex":"d0879063-dbeb-11e4-b6a6-79f34e88a1d2","variableMapping":{"currentEntry":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"d087b674-dbeb-11e4-b6a6-972b697e0974","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:251","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"location2id index was opened with incorrect graph\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[],"tindex":"d087b675-dbeb-11e4-b6a6-c594aa6bb298","variableMapping":{"len":"initialBits","start":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"d087b676-dbeb-11e4-b6a6-8f84ff008d4d","variableMapping":{"high":"biggestStart","guess":"biggestStart","low":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"d087b677-dbeb-11e4-b6a6-658b97dcbe21","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[523,524,525],"tindex":"d087b678-dbeb-11e4-b6a6-41f6fee04875","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[19,170,20],"tindex":"d087b679-dbeb-11e4-b6a6-1319170471d5","variableMapping":{"segmentsToMap":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[211,213,217,219,221,526],"tindex":"d087dd8a-dbeb-11e4-b6a6-4dbcbd327596","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"d087dd8b-dbeb-11e4-b6a6-7d89ddeaf76a","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"d087dd8c-dbeb-11e4-b6a6-97a9c8270683","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d087dd8d-dbeb-11e4-b6a6-8543f67939d0","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[24,25,0,26,27,28,29,30,31,32,33,102,34,35,36,37,38,103,81,39,21,40,104,41,105,512,106,22,82,130,6,83,7,134,135,84,138,139,8,85,143,146,147,150,151,152,153,154,156,157,158,164,9,5,10,176,86,179,180,87,11,88,182,89,12,13,184,188,189,90,192,193,14,91,15,92,196,93,16,17,198,202,203,94,206,207,18,95,97,51],"tindex":"d088049e-dbeb-11e4-b6a6-b1655598564d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-1},{"failures":[503,504,505,506,507,508,510,511],"tindex":"d088049f-dbeb-11e4-b6a6-6bb58d622cc9","variableMapping":{"towerNodeDistance":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[81,472],"tindex":"d08804a0-dbeb-11e4-b6a6-8dde20e039cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[106,168],"tindex":"d08804a1-dbeb-11e4-b6a6-4f65691730bb","variableMapping":{"start":"maxCount","delta":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"d08804a2-dbeb-11e4-b6a6-6534a1ba4986","variableMapping":{"distance":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"d08804a3-dbeb-11e4-b6a6-97a57e6210db","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[503,504,505,507,508,527,510,511,276,279,298,301],"tindex":"d08804a4-dbeb-11e4-b6a6-213459e5ec74","variableMapping":{"r":"minLonTmp","angle":"minLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"d08804a5-dbeb-11e4-b6a6-e52b5627de1e","variableMapping":{"workerThreads":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"d08804a6-dbeb-11e4-b6a6-1173601fae21","variableMapping":{"mmapDA":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:147","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"d08804a7-dbeb-11e4-b6a6-4fce04f10286","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[6,7,8,9,5,10,11,12,13,14,15,16,17,18],"tindex":"d08804a8-dbeb-11e4-b6a6-8b89ffd530ca","variableMapping":{"initializedCounter":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"d08804a9-dbeb-11e4-b6a6-114cd728ca9d","variableMapping":{"empty":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"d08804aa-dbeb-11e4-b6a6-874081fd0318","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[],"tindex":"d08804ab-dbeb-11e4-b6a6-f32a1e809511","variableMapping":{"encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[19,170],"tindex":"d08804ac-dbeb-11e4-b6a6-8fa89744a72b","variableMapping":{"indexWithMaxDist":"start","lastIndex":"start","fromIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"d08804ad-dbeb-11e4-b6a6-a7b0b37d3206","variableMapping":{"edgePointer":"wayBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[131,140,173,185,199],"tindex":"d08804ae-dbeb-11e4-b6a6-9df42c8cdf11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"d0882bbf-dbeb-11e4-b6a6-d1dcf180cecb","variableMapping":{"err":"com.graphhopper.routing.util.PriorityWeighting.KEY","dLat":"com.graphhopper.routing.util.PriorityWeighting.KEY","tmpErr":"com.graphhopper.routing.util.FootFlagEncoder.FERRY_SPEED","x1":"com.graphhopper.routing.util.PriorityWeighting.KEY","sLon":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"d0882bc0-dbeb-11e4-b6a6-4d17012cf319","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[528,51],"tindex":"d0882bc1-dbeb-11e4-b6a6-7d1f8c6e6f2d","variableMapping":{"str":"str","from":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:944","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (int) + \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"d0882bc2-dbeb-11e4-b6a6-0f187a805870","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"d0882bc3-dbeb-11e4-b6a6-efd95aca9a59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"d0882bc4-dbeb-11e4-b6a6-6172182de23c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[19,170,20],"tindex":"d08852d5-dbeb-11e4-b6a6-cdf5036f5b18","variableMapping":{"tmpEntries":"component"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[],"tindex":"d08852d6-dbeb-11e4-b6a6-7de009bdf163","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"d08852d7-dbeb-11e4-b6a6-5df9ea70a120","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d08852d8-dbeb-11e4-b6a6-b535a6714d9d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":384,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":239,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":97,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":351,"com.graphhopper.GraphHopperAPITest.testNoLoad":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":310,"com.graphhopper.reader.OSMReaderTest.testFerry":102,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":253,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":10,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":60,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":25,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":408,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":480,"com.graphhopper.coll.CompressedArrayTest.testCompress":511,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":178,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":213,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":330,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":294,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":481,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":496,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":219,"com.graphhopper.GraphHopperTest.testPrepare":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":208,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":455,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":525,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":182,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":514,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":86,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":245,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":295,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":170,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":231,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":447,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":57,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":68,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":358,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":524,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":222,"com.graphhopper.GraphHopperTest.testLoadOSM":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":58,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":129,"com.graphhopper.reader.OSMReaderTest.testSort":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":192,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":394,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":483,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":466,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":74,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":507,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":342,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":115,"com.graphhopper.storage.RAMDataAccessTest.testHeader":497,"com.graphhopper.routing.DijkstraTest.initializationError":120,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":513,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":428,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":479,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":383,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":444,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":347,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":392,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":93,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":299,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":1,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":297,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":228,"com.graphhopper.coll.OSMIDMapTest.testGetLong":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":227,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":360,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":418,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":375,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":63,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":377,"com.graphhopper.coll.CompressedArrayTest.testCompress2":510,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":457,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":409,"com.graphhopper.GraphHopperAPITest.testLoad":256,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":140,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":449,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":439,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":4,"com.graphhopper.storage.LevelGraphStorageTest.testClone":362,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":20,"com.graphhopper.reader.OSMReaderTest.testBarriers":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":230,"com.graphhopper.util.GHUtilityTest.testCopy":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":314,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":308,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":180,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":263,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":500,"com.graphhopper.routing.PathTest.testFindInstruction":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":175,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":400,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":523,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":146,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":255,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":260,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":467,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":453,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":215,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":204,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":473,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":125,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":315,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":435,"com.graphhopper.util.InstructionListTest.testWayList2":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":281,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":89,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":522,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":88,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":194,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":433,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":366,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":183,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":324,"com.graphhopper.storage.RAMDirectoryTest.testSynched":517,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":410,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":229,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":438,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":38,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":482,"com.graphhopper.routing.AStarTest.initializationError":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":47,"com.graphhopper.coll.OSMIDMapTest.testGet":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":407,"com.graphhopper.routing.PathBidirRefTest.testExtract":126,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":186,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":379,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":478,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":303,"com.graphhopper.storage.RAMDataAccessTest.testCopy":493,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":185,"com.graphhopper.storage.RAMDataAccessTest.testSegments":499,"com.graphhopper.util.GHUtilityTest.testSort2":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":237,"com.graphhopper.reader.OSMReaderTest.testMain":35,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":417,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":527,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":151,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":395,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":369,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":373,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":390,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":112,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":15,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":376,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":105,"com.graphhopper.storage.StorablePropertiesTest.testStore":502,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":80,"com.graphhopper.storage.GraphHopperStorageTest.testClone":441,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":158,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":518,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":156,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":451,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":346,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":316,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":349,"com.graphhopper.routing.PathTest.testTime":124,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":135,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":66,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":363,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":283,"com.graphhopper.reader.OSMReaderTest.testRelation":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":329,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":381,"com.graphhopper.util.GHUtilityTest.testSortDirected":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":206,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":489,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":111,"com.graphhopper.GraphHopperTest.testFootOnly":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":154,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":288,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":520,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":298,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":325,"com.graphhopper.search.NameIndexTest.testCreate":44,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":498,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":108,"com.graphhopper.routing.QueryGraphTest.testOneWay":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":284,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":505,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":56,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":503,"com.graphhopper.reader.OSMReaderTest.testWithBounds":41,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":501,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":207,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":492,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":429,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":331,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":22,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":359,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":355,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":205,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":87,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":155,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":414,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":437,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":224,"com.graphhopper.util.InstructionListTest.testWayList":49,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":468,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":184,"com.graphhopper.GraphHopperAPITest.testDisconnected179":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":317,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":506,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":312,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":516,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":202,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":344,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":27,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":443,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":181,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":461,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":235,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":218,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":65,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":159,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":132,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":90,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":242,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":91,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":432,"com.graphhopper.routing.PathTest.testWayList":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":321,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":528,"com.graphhopper.coll.OSMIDMapTest.testGet2":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":243,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":486,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":386,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":474,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":190,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":454,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":405,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":442,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":300,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":301,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":494,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":490,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":83,"com.graphhopper.util.GHUtilityTest.testSort":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":334,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":173,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":189,"com.graphhopper.search.NameIndexTest.testPut":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":430,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":440,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":296,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":292,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":16,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":266,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":131,"com.graphhopper.storage.MMapDirectoryTest.testSynched":515,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":166,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":475,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":415,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":19,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":62,"com.graphhopper.routing.PathTest.testFound":123,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":33,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":82,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":388,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":188,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":411,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":526,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":477,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":320,"com.graphhopper.util.InstructionListTest.testEmptyList":246,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":446,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":491,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":149,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":179,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":238,"com.graphhopper.reader.PrinctonReaderTest.testRead":100,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":76,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":61,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":406,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":319,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":309,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":416,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":472,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":519,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":92,"com.graphhopper.reader.OSMReaderTest.testFoot":34,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":333,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":476,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":278,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":508,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":171,"com.graphhopper.reader.OSMReaderTest.testOneWay":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":279,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":450,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":464,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":176,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":488,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":327,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":445,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":212,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":269,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":487,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":323,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":110,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":434,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":512,"com.graphhopper.routing.PathBidirRefTest.testExtract2":127,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":471,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":84,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":282,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":42,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":463,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":8,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":81,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":345,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":275,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":465,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":251,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":365,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":160,"com.graphhopper.GraphHopperTest.testFootAndCar":28,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":458,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":307,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":495,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":313,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":402,"com.graphhopper.storage.StorablePropertiesTest.testLoad":521,"com.graphhopper.GraphHopperTest.testPrepareOnly":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":240,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":311,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":40,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":350,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":51,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":462,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":144,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":39,"com.graphhopper.routing.AStarBidirectionTest.initializationError":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":326,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":164,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":387,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":385,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":69}}]
