[{"failures":[],"tindex":"b410b43e-da36-11e4-88b9-2b3750f15b37","variableMapping":{"bits":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"b4119e9f-da36-11e4-88b9-13835f9e5ab8","variableMapping":{"midLat":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[0,1,2],"tindex":"b4119ea0-da36-11e4-88b9-ed6b8074cdb1","variableMapping":{"key":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"b4119ea1-da36-11e4-88b9-bdedbbd553a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"b4119ea2-da36-11e4-88b9-1b92b9d87c63","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"b4119ea3-da36-11e4-88b9-51e070ec3fde","variableMapping":{"byteCount":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"b4119ea4-da36-11e4-88b9-9be59a022436","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"b4119ea5-da36-11e4-88b9-312b60ad07ec","variableMapping":{"bytePos":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"b4119ea6-da36-11e4-88b9-038e01811304","variableMapping":{"byteCount":"flags","longSegmentSize":"flags","segmentsToMap":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:120","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"b4119ea7-da36-11e4-88b9-8df2fa69e0e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"b411c4b8-da36-11e4-88b9-3fd4a859d315","variableMapping":{"latSimilar":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"b411c4b9-da36-11e4-88b9-43a9e66d5a43","variableMapping":{"p":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[],"tindex":"b411c4ba-da36-11e4-88b9-33d85af308c2","variableMapping":{"store":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"b411c4bb-da36-11e4-88b9-a7590adb1154","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"b411c4bc-da36-11e4-88b9-6d684df8ade4","variableMapping":{"value":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[106,107,31],"tindex":"b411c4bd-da36-11e4-88b9-23fbb8eebd4f","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"b411c4be-da36-11e4-88b9-4b422f12bd2d","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"b411c4bf-da36-11e4-88b9-9f59426b8ab7","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[0],"tindex":"b411ebd0-da36-11e4-88b9-5bcf39385c9a","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[31],"tindex":"b411ebd1-da36-11e4-88b9-e1249475022f","variableMapping":{"towerNodeDistance":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"b41212e2-da36-11e4-88b9-096774bf6041","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b41212e3-da36-11e4-88b9-efcb992d7e16","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[],"tindex":"b41212e4-da36-11e4-88b9-1389a90ff24e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"b41212e5-da36-11e4-88b9-e52fd21dba8a","variableMapping":{"res":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[55,56,57,58,59,60,62,63,64,65,67,70,76,78,79,87,93,95,96],"tindex":"b41212e6-da36-11e4-88b9-87f1ed4df34e","variableMapping":{"size":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"b41212e7-da36-11e4-88b9-4bf8da511bc1","variableMapping":{"res":"mask","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[108],"tindex":"b41212e8-da36-11e4-88b9-f76da891542a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"b41212e9-da36-11e4-88b9-f7e06415e3a4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[55,56,57,58,60,61,62,63,66],"tindex":"b41239fa-da36-11e4-88b9-4b2b4670f820","variableMapping":{"nodesContracted":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[109,110,111,112,113,114,115,116],"tindex":"b412610b-da36-11e4-88b9-3b177af057e9","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1239","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[117,118,119,120,121,122,123,124,125,0,2,126,127],"tindex":"b412610c-da36-11e4-88b9-2b400a87448c","variableMapping":{"length":"speed","factor":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"b412610d-da36-11e4-88b9-f525fd7a3736","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b412610e-da36-11e4-88b9-1d250275ee36","variableMapping":{"delNodes":"skippedEdge1","this":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.inPlaceNodeRemove(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[],"tindex":"b412610f-da36-11e4-88b9-8389ead8f9ae","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[44],"tindex":"b4126110-da36-11e4-88b9-a13f8fb40f50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[128],"tindex":"b4126111-da36-11e4-88b9-4bd8bf5cfa05","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"b4126112-da36-11e4-88b9-01fcf933c437","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"b4126113-da36-11e4-88b9-f1025b38eb78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b4126114-da36-11e4-88b9-67a8786a8f33","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":0},{"failures":[55,56,57,58,59,60,62,63,64,65,66,67,70,76,78,79,87,93,95,96],"tindex":"b4126115-da36-11e4-88b9-91f13086ab26","variableMapping":{"tmpDegreeCounter":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"b4126116-da36-11e4-88b9-5fcafcf964b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"b4126117-da36-11e4-88b9-ed07981ebbf9","variableMapping":{"dx":"minLon","dy":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"b4128828-da36-11e4-88b9-3da5cacf6272","variableMapping":{"a_lat_deg":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"b4128829-da36-11e4-88b9-09ec605a8d1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"b412882a-da36-11e4-88b9-7f83649c420a","variableMapping":{"graphHopperFolder":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"b412882b-da36-11e4-88b9-b1ee15f0a049","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"b412882c-da36-11e4-88b9-339dbe88698d","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"b412882d-da36-11e4-88b9-d73bfe7d8f12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[129,118,130,131,121,132,124,133,1,2,134],"tindex":"b412882e-da36-11e4-88b9-996aa28f04b5","variableMapping":{"node":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:423","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\"--- node \" + int) + \" ---\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-1},{"failures":[],"tindex":"b412882f-da36-11e4-88b9-0f2ac38cf656","variableMapping":{"id":"prevConnectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[135,136,137,138,139,140,141,142,143,144,145,146],"tindex":"b412af40-da36-11e4-88b9-47dff8b34150","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[147,148,109,149,150,151,152,153,110,154,155,156,111,157,158,159,160,161,162,163,112,164,165,27,113,166,167,28,29,168,169,30,170,114,171,115,172,116,173,173,174,174,175,175,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,186,187,188,189,190,191,108,192,193,135,136,194,195,196,31,32,33,34,35,36,37,38,39,40,41,42,43,44,197,198,199,45,46,47,48,49,50,51,52,53,54,200,201,202,203,204,137,138,205,206,139,207,140,208,141,142,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,68,69,261,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,262,263,264,265,266,267,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,268,143,144,145,269,146,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,23,364,365,366,367,368,25,26,369,370,104,105],"tindex":"b412d651-da36-11e4-88b9-2bacce2db352","variableMapping":{"turnCostsCount":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"b412d652-da36-11e4-88b9-fd1952ceb436","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b412d653-da36-11e4-88b9-cd933b7682bb","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"b413c0b4-da36-11e4-88b9-97ec76f0f7cf","variableMapping":{"newUniqueOsmId":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[371,117,372,129,118,373,374,375,376,377,130,378,379,119,120,380,131,121,381,382,383,384,385,132,386,387,122,388,389,128,390,124,391,392,393,133,394,395,396,0,1,2,397,398,399,400,134,401,402,126,403,404,405,406,106,407,408,107,127,31,32,33,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,52,53,54,204],"tindex":"b413c0b5-da36-11e4-88b9-892fed6fece4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[],"tindex":"b413c0b6-da36-11e4-88b9-dd8cd805e420","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":0},{"failures":[409,147,148,410,109,149,150,151,152,153,110,154,155,156,111,157,158,159,160,161,162,163,112,164,165,27,113,166,167,28,29,168,169,30,170,114,171,115,172,116,411,412,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,413,414,415,117,416,372,129,417,118,418,373,374,419,420,375,376,377,421,130,378,379,119,422,191,108,423,120,424,380,131,425,121,426,381,382,427,428,383,384,385,429,132,386,387,122,430,192,193,135,136,194,195,431,388,432,196,389,433,434,435,128,436,390,123,437,124,125,391,438,439,392,393,440,133,394,395,441,396,0,1,2,397,442,443,398,399,400,444,134,401,402,126,445,403,446,404,405,406,106,447,407,408,107,448,449,450,451,452,453,454,455,456,31,32,33,34,35,36,37,38,39,40,41,42,43,44,198,199,45,457,46,47,48,49,50,458,51,52,53,54,459,200,201,202,203,204,137,138,205,206,139,207,140,460,208,141,142,461,462,463,464,465,466,467,468,469,470,471,209,472,473,474,475,476,477,478,479,480,481,482,483,484,485,210,486,487,488,489,490,491,492,493,494,495,496,211,3,212,213,214,215,216,497,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,498,259,260,68,69,261,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,262,263,264,265,499,266,267,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,143,144,145,269,500,146,270,271,272,273,274,501,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,502,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,104,105,503],"tindex":"b4154757-da36-11e4-88b9-0d4beff0bc6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"b4154758-da36-11e4-88b9-0bfcf4e18981","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[416,129,417,118,130,422,424,131,425,121,132,430,123,124,133,441,1,2,134,445,504,505,127,38],"tindex":"b4154759-da36-11e4-88b9-a1835a53b189","variableMapping":{"directionBitMask":"encoded","flags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[506,507],"tindex":"b415475a-da36-11e4-88b9-955985e2e02e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[55,56,57,58,60,61,62,63,66],"tindex":"b415475b-da36-11e4-88b9-7b6adfa27d27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[147,110,154,157,158,159,160,163,112,30,114,171,115,116],"tindex":"b4156e6c-da36-11e4-88b9-3919cca67a08","variableMapping":{"lastInBoundsPillarNode":"skippedEdge1","convertToTowerNode":"reverseOrder","tmpNode":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:671","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"b4156e6d-da36-11e4-88b9-05e066c4e24a","variableMapping":{"nodeB":"tmp","edgeId":"tmp","nodeA":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[171,174,181,184,189,190,31,33,34,35,36,37,38,39,40,41,42,43,44,508,509,510,511,512,45,457,46,47,48,49,50,51,52,53,54,513,514,515,516,517,201,202,203,204,207,461,462,463,464,465,466,467,468,469,470,209,472,473,474,475,476,477,478,479,480,481,482,483,484,210,486,487,488,489,490,491,492,493,494,495,496,211,3,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,72,74,79,89,91,96,143,144,145,269,146,518,4,5,6,7,8,519,520,9,10,11,12,13,521,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,522,523,14,15,16,17,524,313,314,316,317,318,319,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,19,20,525,21,22,23,24,364,365,366,367,25,26,370,526,527,528],"tindex":"b4156e6e-da36-11e4-88b9-2938cc4df124","variableMapping":{"high":"indexDivisor","guess":"segmentSizeInBytes","low":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[147,154,158,159,116],"tindex":"b4156e6f-da36-11e4-88b9-fb92db1175f2","variableMapping":{"from":"tmp","hash":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[147,148,149,110,154,155,111,157,158,159,162,163,165,166,28,29,116,177,180,186,194,433,405,447,107,451,32,44,198,46,49,137,138,205,461,462,463,470,209,476,484,488,491,495,211,213,217,218,219,226,228,233,241,246,249,253,271,275,276,277,284,286,291,299,304,307,311,313,317,321,325,326,327,334,336,341,349,354,357,361,104],"tindex":"b4156e70-da36-11e4-88b9-0b08804a05c4","variableMapping":{"byteCount":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[415,423,448],"tindex":"b4156e71-da36-11e4-88b9-9d27c66e212a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[28,29,30,33,34,46,47,48,49,50,52,53,529,530,531,532,533,534,67,535,536,68,70,73,75,77,78,79,80,81,82,83,85,86,87,90,91,94,95,96,97,98,99,100,102,104,105],"tindex":"b4156e72-da36-11e4-88b9-c1bb760fec13","variableMapping":{"size":"sLat","index":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b4156e73-da36-11e4-88b9-c9941385070c","variableMapping":{"edgeState":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[374,382,388,391,397,403,35,40],"tindex":"b4156e74-da36-11e4-88b9-9dac8bd9950e","variableMapping":{"elevation":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"b4156e75-da36-11e4-88b9-031e51891579","variableMapping":{"flags":"directionBitMask","tmpValue":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"b4156e76-da36-11e4-88b9-4947c8a427c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:130","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[148,109,149,150,151,152,153,110,155,156,111,157,159,160,161,162,163,112,164,165,27,113,166,167,28,29,168,169,30,170,114,171,115,172,116,457,46,47,50,51,537],"tindex":"b4159587-da36-11e4-88b9-b9909b40b558","variableMapping":{"red":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"b4159588-da36-11e4-88b9-c9385d668d19","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[147,109,110,154,157,158,159,160,161,162,163,112,164,165,27,113,166,167,28,29,168,169,30,170,114,171,115,172,116,46,47,48,49,50,52,53,104,105],"tindex":"b4159589-da36-11e4-88b9-5f39fc1c2af2","variableMapping":{"turnCostsCount":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[157,158,159,171,115,116],"tindex":"b415958a-da36-11e4-88b9-efe74cb09404","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"b415bc9b-da36-11e4-88b9-098a0ab38f5f","variableMapping":{"len":"flags","start":"otherValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,66],"tindex":"b415bc9c-da36-11e4-88b9-510f8f2bb5c5","variableMapping":{"bytePointer":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[416,424,504],"tindex":"b415bc9d-da36-11e4-88b9-c9075aafcafd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[147,148,109,149,150,151,152,153,110,154,155,156,111,157,158,159,160,161,162,163,112,164,165,27,113,166,167,28,29,168,169,30,170,114,171,115,172,116,173,173,174,174,175,175,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,186,187,188,189,190,191,108,192,193,135,136,194,195,196,31,32,33,34,35,36,37,38,39,538,40,41,42,43,539,44,197,198,199,508,509,510,45,457,46,47,48,49,50,458,51,52,53,54,459,513,514,515,516,517,200,201,202,203,204,137,138,205,206,139,207,140,208,141,142,540,209,210,211,212,213,214,215,216,497,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,68,69,261,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,262,263,264,265,266,267,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,268,143,144,145,269,500,146,270,271,272,273,274,501,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,522,541,542,313,314,315,316,317,318,319,320,321,322,323,324,502,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,543,544,545,104,105,546,526,527,528],"tindex":"b415e3ae-da36-11e4-88b9-b3df00f82d7f","variableMapping":{"dataAccess":"location","type":"type","com.graphhopper.storage.DAType.RAM_STORE":"type","com.graphhopper.storage.DAType.RAM":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:171","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"RAM_STORE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[171,174,181,184,189,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,50,52,513,515,547,548,549,202,207,481,210,486,491,211,213,238,244,249,72,89,550,7,8,551,519,552,12,13,553,521,271,296,302,307,321,346,352,357,26,369],"tindex":"b415e3af-da36-11e4-88b9-1785705166bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"b415e3b0-da36-11e4-88b9-599bd26ec768","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":0},{"failures":[418,426,450],"tindex":"b415e3b1-da36-11e4-88b9-0d4dc711f5ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[],"tindex":"b415e3b2-da36-11e4-88b9-79600828131d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"b415e3b3-da36-11e4-88b9-2387145de354","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"b415e3b4-da36-11e4-88b9-2b924cde44f2","variableMapping":{"dist":"currDistToGoal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"b415e3b5-da36-11e4-88b9-dfbcf5b7faeb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b415e3b6-da36-11e4-88b9-477b442f3e69","variableMapping":{"err":"i","dLat":"i","tmpErr":"i","x1":"i","sLon":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-2},{"failures":[147,109,110,154,157,158,159,160,161,162,163,112,164,165,27,113,167,28,29,168,169,30,114,171,115,172,116,46,47,50,53],"tindex":"b415e3b7-da36-11e4-88b9-99bd8d167d26","variableMapping":{"EMPTY_FLAGS":"millis","turnFlags":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:127","type":"CtIfImpl","sourcecode":"if (long == (long))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"b415e3b8-da36-11e4-88b9-2d65e23cc03b","variableMapping":{"r":"midLon","x":"midLon","absY":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"b415e3b9-da36-11e4-88b9-5180745fbdd7","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"b415e3ba-da36-11e4-88b9-0d7c76c934be","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"value","i":"bytePos","mValues":"header"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:118","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.coll.SparseIntIntArray.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"b416f52b-da36-11e4-88b9-674a75e1de0d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[108],"tindex":"b416f52c-da36-11e4-88b9-af8eac157921","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"b416f52d-da36-11e4-88b9-1dfd66c13252","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"b416f52e-da36-11e4-88b9-fba1a9186db1","variableMapping":{"r":"x","x":"x","absY":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[373,381,390,396],"tindex":"b416f52f-da36-11e4-88b9-b71d8c0fed36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"b416f530-da36-11e4-88b9-99041349f18a","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"value","nextEdge":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-2},{"failures":[],"tindex":"b416f531-da36-11e4-88b9-15112410b336","variableMapping":{"usedBits":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nextWayBit":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","encoder":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":170,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":174,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":318,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":371,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":264,"com.graphhopper.GraphHopperAPITest.testNoLoad":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":462,"com.graphhopper.reader.OSMReaderTest.testFerry":31,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":137,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":125,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":529,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":73,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":457,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":430,"com.graphhopper.storage.MMapDataAccessTest.testSegments":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":227,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":512,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":518,"com.graphhopper.coll.CompressedArrayTest.testCompress":56,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":440,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":150,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":481,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":261,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":155,"com.graphhopper.GraphHopperTest.testPrepare":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":492,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":147,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":293,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":507,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":113,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":201,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":268,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":133,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":142,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":117,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":165,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":90,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":118,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":211,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":64,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":325,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":506,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":157,"com.graphhopper.GraphHopperTest.testLoadOSM":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":97,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":91,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":454,"com.graphhopper.reader.OSMReaderTest.testSort":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":378,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":214,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":305,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":271,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":493,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":180,"com.graphhopper.routing.DijkstraTest.initializationError":455,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":248,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":350,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":530,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":282,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":3,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":217,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":445,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":77,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":75,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":470,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":162,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":327,"com.graphhopper.coll.OSMIDMapTest.testGetLong":516,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":237,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":342,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":321,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":344,"com.graphhopper.coll.CompressedArrayTest.testCompress2":55,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":228,"com.graphhopper.GraphHopperAPITest.testLoad":104,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":502,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":365,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":388,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":287,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":277,"com.graphhopper.storage.LevelGraphStorageTest.testClone":329,"com.graphhopper.reader.OSMReaderTest.testBarriers":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":218,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":22,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":164,"com.graphhopper.util.GHUtilityTest.testCopy":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":86,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":395,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":499,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":531,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":553,"com.graphhopper.routing.PathTest.testFindInstruction":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":439,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":219,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":205,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":435,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":358,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":380,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":306,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":291,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":11,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":232,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":385,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":411,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":331,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":467,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":17,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":370,"com.graphhopper.util.InstructionListTest.testWayList2":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":488,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":98,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":311,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":129,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":542,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":251,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":191,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":272,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":535,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":333,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":475,"com.graphhopper.storage.RAMDirectoryTest.testSynched":543,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":229,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":112,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":276,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":36,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":550,"com.graphhopper.routing.AStarTest.initializationError":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":171,"com.graphhopper.coll.OSMIDMapTest.testGet":513,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":226,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":128,"com.graphhopper.routing.PathBidirRefTest.testExtract":185,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":419,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":515,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":525,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":81,"com.graphhopper.storage.RAMDataAccessTest.testCopy":552,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":254,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":486,"com.graphhopper.storage.RAMDataAccessTest.testSegments":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":103,"com.graphhopper.util.GHUtilityTest.testSort2":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":168,"com.graphhopper.reader.OSMReaderTest.testMain":33,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":420,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":379,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":349,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":490,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":336,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":340,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":361,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":177,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":241,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":120,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":364,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":343,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":43,"com.graphhopper.storage.StorablePropertiesTest.testStore":522,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":10,"com.graphhopper.storage.GraphHopperStorageTest.testClone":279,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":489,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":107,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":544,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":289,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":407,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":402,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":468,"com.graphhopper.routing.PathTest.testTime":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":399,"com.graphhopper.util.BitUtilLittleTest.testToFloat":548,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":359,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":452,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":500,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":100,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":480,"com.graphhopper.reader.OSMReaderTest.testRelation":538,"com.graphhopper.util.GHUtilityTest.testSortDirected":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":386,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":551,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":176,"com.graphhopper.GraphHopperTest.testFootOnly":53,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":536,"com.graphhopper.util.BitUtilLittleTest.testToInt":549,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":437,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":106,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":144,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":545,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":76,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":16,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":505,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":161,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":532,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":476,"com.graphhopper.search.NameIndexTest.testCreate":528,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":12,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":173,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":368,"com.graphhopper.routing.QueryGraphTest.testOneWay":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":101,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":438,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":89,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":57,"com.graphhopper.reader.OSMReaderTest.testWithBounds":42,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":521,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":20,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":387,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":178,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":473,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":482,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":504,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":326,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":441,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":240,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":233,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":275,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":159,"com.graphhopper.util.BitUtilLittleTest.testToBitString":547,"com.graphhopper.util.InstructionListTest.testWayList":202,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":308,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":523,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":373,"com.graphhopper.GraphHopperAPITest.testDisconnected179":105,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":469,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":464,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":383,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":136,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":495,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":48,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":281,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":156,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":415,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":167,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":154,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":448,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":442,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":216,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":172,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":501,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":84,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":24,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":422,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":270,"com.graphhopper.routing.PathTest.testWayList":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":494,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":472,"com.graphhopper.coll.OSMIDMapTest.testGet2":514,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":116,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":354,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":508,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":377,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":292,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":224,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":78,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":79,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":519,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":382,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":15,"com.graphhopper.util.GHUtilityTest.testSort":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":485,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":391,"com.graphhopper.search.NameIndexTest.testPut":526,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":253,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":146,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":257,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":425,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":108,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":255,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":397,"com.graphhopper.storage.MMapDirectoryTest.testSynched":540,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":414,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":509,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":192,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":369,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":339,"com.graphhopper.routing.PathTest.testFound":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":210,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":54,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":127,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":6,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":356,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":375,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":230,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":537,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":19,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":527,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":209,"com.graphhopper.util.InstructionListTest.testEmptyList":200,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":284,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":520,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":451,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":446,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":394,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":169,"com.graphhopper.reader.PrinctonReaderTest.testRead":198,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":307,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":524,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":74,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":225,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":471,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":517,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":461,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":427,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":424,"com.graphhopper.reader.OSMReaderTest.testFoot":32,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":484,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":510,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":95,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":360,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":390,"com.graphhopper.reader.OSMReaderTest.testOneWay":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":96,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":288,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":303,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":247,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":392,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":8,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":381,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":478,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":151,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":408,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":149,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":258,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":533,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":196,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":21,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":474,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":175,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":273,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":539,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":25,"com.graphhopper.routing.PathBidirRefTest.testExtract2":186,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":134,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":267,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":546,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":301,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":498,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":126,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":38,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":534,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":496,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":92,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":304,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":460,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":332,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":449,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":296,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":338,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":85,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":465,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":14,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":450,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":221,"com.graphhopper.storage.StorablePropertiesTest.testLoad":541,"com.graphhopper.GraphHopperTest.testPrepareOnly":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":114,"com.graphhopper.GraphHopperTest.testVia":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":463,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":40,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":317,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":204,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":433,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":39,"com.graphhopper.routing.AStarBidirectionTest.initializationError":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":477,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":431,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":355,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":353,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":213}}]
