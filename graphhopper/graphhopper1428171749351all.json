[{"failures":[],"tindex":"8d8f3f05-daf7-11e4-97d5-5b9dda7f2055","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.REACH_DEST","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"8d8f3f06-daf7-11e4-97d5-598f23e6c2b7","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"8d8f6617-daf7-11e4-97d5-eda6345de438","variableMapping":{"val":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","existing":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","key":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"8d8f6618-daf7-11e4-97d5-5d70ae5d17ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"8d8f6619-daf7-11e4-97d5-f555e0a8454e","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[228,259,282],"tindex":"8d8f661a-daf7-11e4-97d5-11cd920838c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[209],"tindex":"8d8f661b-daf7-11e4-97d5-8d9467c33cfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8d8f661c-daf7-11e4-97d5-33dd10727e97","variableMapping":{"maxBits":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"8d8f661d-daf7-11e4-97d5-93e01cd1f3df","variableMapping":{"line":"encoderList"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"8d8f661e-daf7-11e4-97d5-d9afdeac3c25","variableMapping":{"currentBucket":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","currentIndex":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","bucketSize":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[333],"tindex":"8d8f661f-daf7-11e4-97d5-a7b809dc2794","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"8d8f6620-daf7-11e4-97d5-675e5c8d9f36","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[0,3],"tindex":"8d8f8d31-daf7-11e4-97d5-65b882cf7a46","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[334],"tindex":"8d8f8d32-daf7-11e4-97d5-efff0da2b1df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[0,335,336,337,338,1,339,340,341,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,342,343,344,303],"tindex":"8d8f8d33-daf7-11e4-97d5-859c3b8c06b9","variableMapping":{"shift":"relationFlags","flags":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[345,346,306,315,318],"tindex":"8d8f8d34-daf7-11e4-97d5-7bfeb7f99e35","variableMapping":{"incomingEdges":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:585","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIterator.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-1},{"failures":[311,315,324,326,328,347,348,349],"tindex":"8d8f8d35-daf7-11e4-97d5-e3028f8f8c96","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[],"tindex":"8d8f8d36-daf7-11e4-97d5-83c6c7285250","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[244,246],"tindex":"8d8f8d37-daf7-11e4-97d5-6bc9c43fc191","variableMapping":{"versionHint":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[343,344],"tindex":"8d8f8d38-daf7-11e4-97d5-853bdc73abf0","variableMapping":{"edgePointer":"relBitMask","edgeEntryBytes":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"8d8f8d39-daf7-11e4-97d5-291f7b6c9361","variableMapping":{"flags":"acceptBit","scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[350,351,342,352,353],"tindex":"8d8f8d3a-daf7-11e4-97d5-c93cd0616d50","variableMapping":{"factor":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[336,354,355,5,17,356,357,18,19,20,27,29,42,47,50,54,68,73,74,75,82,84,97,102,105,109,112,117,118,119,126,128,141,146,149,153,155,158,163,164,165,172,174,187,192,195,199,210,358,359,360,225,305,306,310,313,316,318,319,328,361,347,362,348,363,364,365,366,367],"tindex":"8d8f8d3b-daf7-11e4-97d5-61b851d2043a","variableMapping":{"high":"dir","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[4,217,368],"tindex":"8d8f8d3c-daf7-11e4-97d5-a5ca9a2d08da","variableMapping":{"nodeB":"index","edgeId":"index","nodeA":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"8d8f8d3d-daf7-11e4-97d5-7f7a989373da","variableMapping":{"line":"entryVal","key":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"8d8fb44e-daf7-11e4-97d5-0505f1ca2ab7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[1,4,5,206,343,369,344,303,328],"tindex":"8d8fb44f-daf7-11e4-97d5-e7a2e06b0448","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[336,337,338,1,339,341,3,5,6,7,8,10,11,12,13,14,15,16,370,17,217],"tindex":"8d8fb450-daf7-11e4-97d5-8d1c451b9aaf","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8d8fb451-daf7-11e4-97d5-ffbc7b940e66","variableMapping":{"edge":"tmpPrevEdge","updatedB":"tmpPrevEdge","updatedA":"tmpPrevEdge","linkA":"tmpPrevEdge","this":"this","linkB":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[0,336,337,338,339,341,2,4,6,7,8,9,10,11,12,13,14,15,16,17,371,372,373,374,375,376,377,378,379,350,351,18,39,44,45,50,53,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,68,73,94,100,105,108,112,117,138,144,149,152,155,158,163,184,190,195,198,402,403,325,404,405,406,407],"tindex":"8d8fb452-daf7-11e4-97d5-712a50d08bc9","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[215],"tindex":"8d8fb453-daf7-11e4-97d5-cf9bc1fda82c","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"8d8fb454-daf7-11e4-97d5-632b95b057e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:394","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"8d8fb455-daf7-11e4-97d5-81cd6cf111d4","variableMapping":{"node":"node","directionBitMask":"directionBitMask","intendedValues":"intendedValues","restrictedValues":"intendedValues","restrictions":"restrictions","locked":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":0},{"failures":[],"tindex":"8d8fb456-daf7-11e4-97d5-2f0452be011e","variableMapping":{"storedKey":"encoded","key":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-2},{"failures":[0,335,336,337,338,1,339,340,341,2,354,355,5,6,8,11,12,13,14,15,17,356,357,408,379,409,350,351,342,18,19,20,22,23,26,27,29,34,36,42,44,47,49,50,54,56,57,58,59,60,64,68,73,74,75,77,78,81,82,84,89,91,97,99,102,104,105,109,112,117,118,119,121,122,125,126,128,133,135,141,143,146,148,149,153,155,158,163,164,165,167,168,171,172,174,179,181,187,189,192,194,195,199,410,358,411,412,359,215,221,223,225,280,369,413,414,415,403,416,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,361,417,347,362,418,419,420,348,363,364,421,349,365,366,367],"tindex":"8d8fb457-daf7-11e4-97d5-8f97c89f9572","variableMapping":{"segmentSizeInBytes":"shift","allSegments":"shift","capacity":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"8d8fb458-daf7-11e4-97d5-5900735048a3","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":0},{"failures":[280],"tindex":"8d8fdb69-daf7-11e4-97d5-db3809fb6750","variableMapping":{"res":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"8d8fdb6a-daf7-11e4-97d5-91985ddf1dce","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[238,254,260,274,283,297],"tindex":"8d8fdb6b-daf7-11e4-97d5-91f010ef34b3","variableMapping":{"ghLocation":"highway","osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"8d8fdb6c-daf7-11e4-97d5-a3750f8d65dd","variableMapping":{"len":"value","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"8d8fdb6d-daf7-11e4-97d5-d580256ef10d","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"8d8fdb6e-daf7-11e4-97d5-f3059145dca1","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"8d8fdb6f-daf7-11e4-97d5-05800b2ee559","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[358,359],"tindex":"8d8fdb70-daf7-11e4-97d5-4321980afa0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"8d8fdb71-daf7-11e4-97d5-a7006b584ee4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[422,423,424,425,426,427,428,429,322,430,431,432,433,434,435],"tindex":"8d8fdb72-daf7-11e4-97d5-897d5a68ad3b","variableMapping":{"r":"midLat","angle":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"8d8fdb73-daf7-11e4-97d5-113b49b6f0c6","variableMapping":{"type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[5,11,17,229,230,233,238,242,246,250,254,257,260,262,264,269,274,278,283,285,287,292,297,301,343,344,303],"tindex":"8d8fdb74-daf7-11e4-97d5-9fac93986a03","variableMapping":{"high":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"8d8fdb75-daf7-11e4-97d5-6d6f72bbe319","variableMapping":{"flags":"hash","scDirMask":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[246],"tindex":"8d8fdb76-daf7-11e4-97d5-13d39d707e42","variableMapping":{"ghLocation":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"8d8fdb77-daf7-11e4-97d5-1b4159725951","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"8d8fdb78-daf7-11e4-97d5-0d1ffc50c45a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[436],"tindex":"8d900289-daf7-11e4-97d5-81c0ed09f868","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:193","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"8d90028a-daf7-11e4-97d5-8b6b24d692a5","variableMapping":{"radiusInMeter":"maxLonTmp","com.graphhopper.util.DistanceCalcEarth.C":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"8d90028b-daf7-11e4-97d5-5f7b77f9cb9d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":0},{"failures":[437,438,439,440,441,348,349],"tindex":"8d90028c-daf7-11e4-97d5-d3f9d209f409","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"8d90028d-daf7-11e4-97d5-2d7cdc77b9d7","variableMapping":{"time":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"8d90028e-daf7-11e4-97d5-e53960831841","variableMapping":{"tmpNode":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[0,335,336,337,339,340,2,356,379,442,443,427,389,444,390,445,446,428,429,447,448,449,450,451,59,60,62,63,68,71,73,74,75,76,77,78,79,80,81,82,85,86,88,89,91,92,93,94,97,99,100,101,102,104,105,107,109,110,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,361,417,347,362,418,419,420,452,348,363,364,349,365],"tindex":"8d90028f-daf7-11e4-97d5-75a661a91254","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"8d900290-daf7-11e4-97d5-758bcc5373cf","variableMapping":{"java.lang.Integer.MAX_VALUE":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8d900291-daf7-11e4-97d5-938483efe37d","variableMapping":{"maxTurnCosts":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"8d900292-daf7-11e4-97d5-c38432aeaafe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"8d900293-daf7-11e4-97d5-b7eb78fa34b3","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"8d900294-daf7-11e4-97d5-57fea59c58b5","variableMapping":{"tmp":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"8d900295-daf7-11e4-97d5-eb027c0cd0dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"8d900296-daf7-11e4-97d5-73960e9b0f0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"8d900297-daf7-11e4-97d5-3797dad06e70","variableMapping":{"factor":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[336,2,442,314,319,322],"tindex":"8d900298-daf7-11e4-97d5-fd02297f70d4","variableMapping":{"high":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"8d900299-daf7-11e4-97d5-9769fda755d5","variableMapping":{"nanoTime":"otherValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"8d90029a-daf7-11e4-97d5-e32bc343d8d7","variableMapping":{"deltaX":"fwdDecline","tmp":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"8d9029ab-daf7-11e4-97d5-d10f4df9846a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"8d9029ac-daf7-11e4-97d5-d943fdd552b8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"8d9029ad-daf7-11e4-97d5-cd0239936e5f","variableMapping":{"com.graphhopper.util.Constants.VERSION":"str","tmp":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":0},{"failures":[],"tindex":"8d9029ae-daf7-11e4-97d5-7d71d0a2563a","variableMapping":{"finishedTo":"edgeBased","finishedFrom":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[280],"tindex":"8d9029af-daf7-11e4-97d5-7bf90ea4af63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"8d9029b0-daf7-11e4-97d5-57f92453f03f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[221],"tindex":"8d9029b1-daf7-11e4-97d5-4b3bd03c3d1a","variableMapping":{"flags":"ferryBit","tmpValue":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"8d9029b2-daf7-11e4-97d5-abf8d4cd1d8d","variableMapping":{"key":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[368],"tindex":"8d9029b3-daf7-11e4-97d5-a53e00eca94c","variableMapping":{"cp":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"8d9029b4-daf7-11e4-97d5-cb1dc60d836c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"8d9029b5-daf7-11e4-97d5-5739401f7923","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"8d9029b6-daf7-11e4-97d5-4baa5757dba1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[228],"tindex":"8d9029b7-daf7-11e4-97d5-a5d4aa423363","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"8d9029b8-daf7-11e4-97d5-d5da8fbf8749","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:78","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.Integer, java.lang.Integer> java.util.Map<java.lang.Integer, java.lang.Integer> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks()"},"status":-2},{"failures":[],"tindex":"8d9029b9-daf7-11e4-97d5-5bb1cc555d4c","variableMapping":{"guess":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[453,454],"tindex":"8d9029ba-daf7-11e4-97d5-0b215ad28ac0","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,9,10,11,12,455,15,16,17,205,208,229,230,233,238,242,244,246,250,254,257,260,262,263,264,269,274,278,283,285,286,287,292,297,301,343,344,303],"tindex":"8d9029bb-daf7-11e4-97d5-9dac236ede0e","variableMapping":{"originalEdgesCount":"value","edgeDifference":"value","contractedNeighbors":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"8d9029bc-daf7-11e4-97d5-6d9b361a020b","variableMapping":{"res":"encoded","value":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"8d9029bd-daf7-11e4-97d5-91c48b8a2bc8","variableMapping":{"str":"tt","destination":"tt","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:265","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":0},{"failures":[260,283,343,344],"tindex":"8d9029be-daf7-11e4-97d5-7d354908db89","variableMapping":{"shift":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[11,455,224,229,230,233,238,242,246,250,254,257,456,457,260,262,264,265,269,274,278,283,285,287,288,292,297,301,343,458],"tindex":"8d9050cf-daf7-11e4-97d5-d3a998bf58c9","variableMapping":{"value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"8d9050d0-daf7-11e4-97d5-6ffdd9d00f53","variableMapping":{"dX":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV","dY":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"8d9050d1-daf7-11e4-97d5-5dca37963db6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"tindex":"8d9050d2-daf7-11e4-97d5-19ecf444ec82","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"8d9050d3-daf7-11e4-97d5-9f6a8a0ebe0e","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"8d9050d4-daf7-11e4-97d5-8f48c9af7572","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[4,16,17,209],"tindex":"8d9050d5-daf7-11e4-97d5-3949f1183db2","variableMapping":{"val":"footTag","defaultL":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"8d9050d6-daf7-11e4-97d5-97fc365640d9","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"8d9050d7-daf7-11e4-97d5-65eeda90d40d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[0,335,336,337,338,1,339,459,340,341,2,3,460,4,5,6,7,8,9,10,11,12,13,14,15,16,17,461,462,381,463,464,384,385,386,465,466,467,468,469,470,424,387,471,388,472,473,426,474,475,476,477,478,58,442,443,427,389,444,390,445,446,429,447,448,449,450,451,59,391,479,480,392,393,394,481,396,482,483,399,400,401,484,485,486,487,488,489,65,68,112,155,158,402,490,491,492,493,494,495,496,497,498,499,410,500,314,318,319,322],"tindex":"8d9050d8-daf7-11e4-97d5-13594e220a25","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":323,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":404,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":19,"com.graphhopper.reader.OSMReaderTest.testFerry":4,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":357,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":444,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":335,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":301,"com.graphhopper.storage.MMapDataAccessTest.testSegments":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":173,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":462,"com.graphhopper.coll.CompressedArrayTest.testCompress":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":253,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":152,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":39,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":364,"com.graphhopper.GraphHopperTest.testPrepare":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":322,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":361,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":315,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":254,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":71,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":427,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":307,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":313,"com.graphhopper.coll.BitSetImplTest.testCopy":333,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":471,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":264,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":155,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":73,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":439,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":365,"com.graphhopper.GraphHopperTest.testLoadOSM":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":474,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":388,"com.graphhopper.reader.OSMReaderTest.testSort":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":275,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":159,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":381,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":147,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":112,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":52,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":367,"com.graphhopper.storage.RAMDataAccessTest.testHeader":483,"com.graphhopper.routing.DijkstraTest.initializationError":331,"com.graphhopper.storage.MMapDataAccessTest.testHeader":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":194,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":402,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":98,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":486,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":479,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":124,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":156,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":285,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":242,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":446,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":445,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":310,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":309,"com.graphhopper.coll.OSMIDMapTest.testGetLong":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":183,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":90,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":68,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":92,"com.graphhopper.coll.CompressedArrayTest.testCompress2":422,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":174,"com.graphhopper.GraphHopperAPITest.testLoad":410,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":72,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":391,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":129,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":119,"com.graphhopper.storage.LevelGraphStorageTest.testClone":77,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":368,"com.graphhopper.reader.OSMReaderTest.testBarriers":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":164,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":360,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":487,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":312,"com.graphhopper.util.GHUtilityTest.testCopy":379,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":236,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":256,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":250,"com.graphhopper.routing.PathTest.testFindInstruction":416,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":165,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":437,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":208,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":356,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":284,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":148,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":192,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":420,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":295,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":369,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":329,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":24,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":115,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":394,"com.graphhopper.util.InstructionListTest.testWayList2":351,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":475,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":260,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":345,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":279,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":81,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":482,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":265,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":33,"com.graphhopper.storage.RAMDirectoryTest.testSynched":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":175,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":465,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":311,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":9,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":380,"com.graphhopper.routing.AStarTest.initializationError":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":325,"com.graphhopper.coll.OSMIDMapTest.testGet":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":172,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":484,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":209,"com.graphhopper.routing.PathBidirRefTest.testExtract":413,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":268,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":373,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":485,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":448,"com.graphhopper.storage.RAMDataAccessTest.testCopy":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":45,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":267,"com.graphhopper.storage.RAMDataAccessTest.testSegments":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":320,"com.graphhopper.reader.OSMReaderTest.testMain":6,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":69,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":269,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":434,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":449,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":160,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":84,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":88,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":109,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":457,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":85,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":187,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":282,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":91,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":16,"com.graphhopper.storage.StorablePropertiesTest.testStore":498,"com.graphhopper.storage.GraphHopperStorageTest.testClone":121,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":221,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":219,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":25,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":63,"com.graphhopper.routing.PathTest.testTime":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":235,"com.graphhopper.util.BitUtilLittleTest.testToFloat":377,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":107,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":477,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":38,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":96,"com.graphhopper.reader.OSMReaderTest.testRelation":455,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":298,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":385,"com.graphhopper.GraphHopperTest.testFootOnly":2,"com.graphhopper.util.BitUtilLittleTest.testToInt":378,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":217,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":466,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":34,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":398,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":330,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":480,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":249,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":387,"com.graphhopper.reader.OSMReaderTest.testWithBounds":15,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":196,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":405,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":40,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":210,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":343,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":74,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":296,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":50,"com.graphhopper.storage.MMapDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":179,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":117,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":306,"com.graphhopper.util.BitUtilLittleTest.testToBitString":376,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":489,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":150,"com.graphhopper.util.InstructionListTest.testWayList":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":266,"com.graphhopper.GraphHopperAPITest.testDisconnected179":500,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":26,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":424,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":496,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":293,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":355,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":273,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":338,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":123,"com.graphhopper.routing.util.EncodedValueTest.testSwap":456,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":421,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":258,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":317,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":363,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":274,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":161,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":278,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":111,"com.graphhopper.routing.PathTest.testWayList":403,"com.graphhopper.storage.MMapDataAccessTest.testCopy":491,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":216,"com.graphhopper.coll.OSMIDMapTest.testGet2":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":328,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":464,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":272,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":134,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":203,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":170,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":429,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":396,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":447,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":290,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":438,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":473,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":435,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":271,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":199,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":470,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":157,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":231,"com.graphhopper.storage.MMapDirectoryTest.testSynched":453,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":346,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":326,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":358,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":393,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":44,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":3,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":303,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":104,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":436,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":176,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":29,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":314,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":450,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":318,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":213,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":212,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":255,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":321,"com.graphhopper.reader.PrinctonReaderTest.testRead":354,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":149,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":390,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":28,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":375,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":18,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":181,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":291,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":490,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":458,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":283,"com.graphhopper.reader.OSMReaderTest.testFoot":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":42,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":407,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":425,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":433,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":243,"com.graphhopper.reader.OSMReaderTest.testOneWay":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":426,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":130,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":145,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":251,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":384,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":36,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":419,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":488,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":347,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":362,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":383,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":32,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":114,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":370,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":481,"com.graphhopper.routing.PathBidirRefTest.testExtract2":414,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":305,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":476,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":143,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":241,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":55,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":472,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":146,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":223,"com.graphhopper.GraphHopperTest.testFootAndCar":1,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":138,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":86,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":451,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":22,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":167,"com.graphhopper.storage.StorablePropertiesTest.testLoad":499,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":324,"com.graphhopper.GraphHopperTest.testVia":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":20,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":13,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":64,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":142,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":342,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":206,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":35,"com.graphhopper.routing.AStarBidirectionTest.initializationError":304,"com.graphhopper.util.AngleCalcTest.testCombined":352,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":211,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":103,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":101,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":158}}]
