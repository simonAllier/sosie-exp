[{"failures":[],"tindex":"4777a344-da4c-11e4-9cd5-4f40968b6504","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"4778dbc5-da4c-11e4-9cd5-2d62953c276a","variableMapping":{"delta":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:287","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"4778dbc6-da4c-11e4-9cd5-712e5855b4e9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"4778dbc7-da4c-11e4-9cd5-9f143e6c28a2","variableMapping":{"sacScale":"highwayValue","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-2},{"failures":[0,1,2,3],"tindex":"4778dbc8-da4c-11e4-9cd5-dda471333030","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4778dbc9-da4c-11e4-9cd5-a3df59f98b84","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"4778dbca-da4c-11e4-9cd5-f3d0567e47a2","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14],"tindex":"4778dbcb-da4c-11e4-9cd5-bdd3488f770e","variableMapping":{"pointIndex":"pavementType","index":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"4778dbcc-da4c-11e4-9cd5-dfe93c23938e","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.C":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","bit":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:94","type":"CtReturnImpl","sourcecode":"return ((int)(com.graphhopper.util.DistanceCalcEarth.double)) >> int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"4778dbcd-da4c-11e4-9cd5-d396cf8f52dd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"4778dbce-da4c-11e4-9cd5-c93c09788592","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"4778dbcf-da4c-11e4-9cd5-572d4950eaaf","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"477902e0-da4c-11e4-9cd5-118b81818f91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.this(100, 2)"},"status":-1},{"failures":[],"tindex":"477902e1-da4c-11e4-9cd5-5f4006dabb0b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"477902e2-da4c-11e4-9cd5-f94202dc7b25","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"477902e3-da4c-11e4-9cd5-15cbdf60c782","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[],"tindex":"477902e4-da4c-11e4-9cd5-5f6485b2fd04","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:422","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Location index not initialized\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[],"tindex":"477902e5-da4c-11e4-9cd5-236443311552","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[82,83,37,84],"tindex":"477929f6-da4c-11e4-9cd5-2d5141909d9f","variableMapping":{"systemProperty":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[],"tindex":"477929f7-da4c-11e4-9cd5-498ba190ff86","variableMapping":{"bitsForEdgeFlags":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[85],"tindex":"477929f8-da4c-11e4-9cd5-81919e3cefdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[20,24,26,32,86,87,88,89,90,4,5,91,6,92,93,94,95,96,97,98,7,99,8,100,101,9,102,10,103,104,11,105,106,12,107,13,108,109,14,110],"tindex":"477929f9-da4c-11e4-9cd5-57dae223d95e","variableMapping":{"high":"mask","guess":"flags","low":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"477929fa-da4c-11e4-9cd5-f747420ff584","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[111],"tindex":"477929fb-da4c-11e4-9cd5-97717bbacf49","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"477929fc-da4c-11e4-9cd5-5f7422cfe30e","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[16,17,18,19,20,21,22,23,25,26,27,28,29,31,32,33,34,35,36,83,112,37,113,114,115,116,84,117],"tindex":"4779510d-da4c-11e4-9cd5-d1997d973df8","variableMapping":{"tt":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[18,21,118,119,120,121,122,123,124,125,126,127,128,129,42,43,130,131,44,132,133,134,135,136,47],"tindex":"4779510e-da4c-11e4-9cd5-a5d9089a3b8c","variableMapping":{"nodeB":"noOfStates","edgeId":"noOfStates","reverse":"reverse","nodeA":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:510","type":"CtIfImpl","sourcecode":"if (boolean)\n    return int > int ? int : int + 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"4779781f-da4c-11e4-9cd5-556ce415ed10","variableMapping":{"fwdFaster":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"47797820-da4c-11e4-9cd5-4922e9dbc937","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"47797821-da4c-11e4-9cd5-f542c8da2c74","variableMapping":{"size":"priorityFromRelation","from":"priorityFromRelation","end":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":0},{"failures":[],"tindex":"47797822-da4c-11e4-9cd5-4fc8b65da901","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"47797823-da4c-11e4-9cd5-c7aed94116b4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"47799f34-da4c-11e4-9cd5-2ffa560ca464","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"47799f35-da4c-11e4-9cd5-1111d697b2be","variableMapping":{"filter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:112","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[87,89,137,101,9,10,138,106,12,13],"tindex":"47799f36-da4c-11e4-9cd5-392154c56d76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"47799f37-da4c-11e4-9cd5-a7646edd3fe7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(4, 1)"},"status":-2},{"failures":[120,139,121,133,134,136],"tindex":"47799f38-da4c-11e4-9cd5-eff5e639ea7f","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"47799f39-da4c-11e4-9cd5-8fbfc6343bc1","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"47799f3a-da4c-11e4-9cd5-43fbea1fbc7b","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"47799f3b-da4c-11e4-9cd5-45549c18efb0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"4779c64c-da4c-11e4-9cd5-edfddec8bbb7","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[17,18,19,20,21,23,24,27,28,29,41,42,43,44,47,48,49,50,51,52,53,54,140,55,56,57,58,59,60,61,141,142,67,68,69,70,71,72,73,74,143,75,76,77,78,79,80,81],"tindex":"4779c64d-da4c-11e4-9cd5-f3dc88670a9d","variableMapping":{"lazyUpdates":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[17,144],"tindex":"4779ed5e-da4c-11e4-9cd5-a120715ba693","variableMapping":{"lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"4779ed5f-da4c-11e4-9cd5-e74295e8a7ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"4779ed60-da4c-11e4-9cd5-edda08cc5b66","variableMapping":{"str":"highwayValue","this":"this","highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:262","type":"CtIfImpl","sourcecode":"if (\"motorway_link\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        int int = 0;\n        for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n            if (java.lang.String.trim().isEmpty())\n                continue;\n            \n            if (int > 0)\n                java.lang.String += \", \";\n            \n            java.lang.String += java.lang.String.trim();\n            int++;\n        }\n    } \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"4779ed61-da4c-11e4-9cd5-b500700b28f4","variableMapping":{"strLen":"i","bLen":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":0},{"failures":[],"tindex":"4779ed62-da4c-11e4-9cd5-015bec6e4286","variableMapping":{"from":"value","end":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":0},{"failures":[],"tindex":"4779ed63-da4c-11e4-9cd5-85be892d8033","variableMapping":{"from":"x1","hash":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"4779ed64-da4c-11e4-9cd5-af648ca806cc","variableMapping":{"dist":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-2},{"failures":[],"tindex":"4779ed65-da4c-11e4-9cd5-8bdcb3f526b6","variableMapping":{"pavementName":"wayTypeName","wayTypeName":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"4779ed66-da4c-11e4-9cd5-8b0acfa0021b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"4779ed67-da4c-11e4-9cd5-d973e5c43a48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:54","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[118,119,145,120,121,125,136,146],"tindex":"4779ed68-da4c-11e4-9cd5-0724b614ab70","variableMapping":{"initialBits":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"4779ed69-da4c-11e4-9cd5-c5a258f98b28","variableMapping":{"val":"index","com.graphhopper.coll.SparseIntIntArray.DELETED":"start","keys":"nodeLowLink","values":"nodeLowLink","i":"start","o":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"4779ed6a-da4c-11e4-9cd5-95b1ebf28363","variableMapping":{"tmpNode":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[89],"tindex":"4779ed6b-da4c-11e4-9cd5-2d9bf5c997a4","variableMapping":{"size":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"4779ed6c-da4c-11e4-9cd5-ef1faa59df2a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"4779ed6d-da4c-11e4-9cd5-7b7c27c92604","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT_STORE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"4779ed6e-da4c-11e4-9cd5-c5330d53956c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[118,147,119,145,148,120],"tindex":"4779ed6f-da4c-11e4-9cd5-370191090669","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[17,18,19,20,21,23,82,83,149,150,90,151,5,152,153,154,113,115,116,155,156,117,144,98,7,157,137,102,10,158,159,138,107,13,160,161,139,121,162,42,163,164,165,166,167],"tindex":"477a1480-da4c-11e4-9cd5-f5dd5f97aeca","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[32,168,0,1,102,169,2,107,170,3],"tindex":"477a62a1-da4c-11e4-9cd5-b14298d194fa","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[113],"tindex":"477a62a2-da4c-11e4-9cd5-d587fcbbabb4","variableMapping":{"locations":"flags","counter":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:329","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((((\"osm must not be empty. read \" + long) + \" lines and \") + (long)) + \" locations\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[15,16,17,18,21,22,24,171,172,118,173,147,174,175,176,119,177,145,178,148,120,139,121,122,123,124,125,126,127,128,41,129,179,162,42,43,130,131,44,180,132,133,134,135,136,181,182,183,67,68,69,184,70,71,72,73,185,74,143,75,76,77,78,79,80,81,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"477a62a3-da4c-11e4-9cd5-81d2cafb5fa6","variableMapping":{"size":"edgeCount","hash":"lastEdgeIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"477a62a4-da4c-11e4-9cd5-37241a49cae3","variableMapping":{"speed":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[222,223,224],"tindex":"477a62a5-da4c-11e4-9cd5-5facbc14ecf2","variableMapping":{"shift":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"477a62a6-da4c-11e4-9cd5-3b52d382302a","variableMapping":{"y":"ele","angle":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"477a62a7-da4c-11e4-9cd5-23343a725f4a","variableMapping":{"a_lon_deg":"minLon","factor":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"477a62a8-da4c-11e4-9cd5-ab3669888c89","variableMapping":{"midLat":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[32,88,95,103,108],"tindex":"477a62a9-da4c-11e4-9cd5-ff3370599f1a","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"477a62aa-da4c-11e4-9cd5-034ae8a2195b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"477a62ab-da4c-11e4-9cd5-631f98b81ae9","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,225,226,82,26,27,28,29,30,31,32,33,34,35,36,83,37,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,149,150,241,242,243,244,245,38,39,40,246,247,248,159,171,172,118,173,147,174,175,176,119,177,145,178,148,120,139,121,122,123,124,125,126,127,128,41,129,179,162,42,43,130,131,44,180,132,133,134,135,136,45,46,249,250,251,252,163,181,253,182,254,255,256,257,183,47,48,258,259,260,261,262,263,264,265,266,267,268,269,270,271,49,272,50,51,52,53,273,54,140,55,56,57,58,59,274,60,61,275,62,63,64,65,276,66,67,68,277,69,184,70,71,72,73,185,74,143,75,76,77,78,79,278,80,81,279,280,281,282,283,284,285,286,287,288,289,164,290,291,292,293,294,295,296,297,298,299,300,301,302,303,111,304,305,306,307,308,309,310,311,312,313,314,146,315,316,186,187,317,318,319,188,320,321,189,190,191,192,193,194,195,196,197,198,199,322,165,200,201,202,203,204,323,205,206,207,208,209,324,210,325,211,212,213,214,215,216,217,326,218,219,220,221,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,166,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,167,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412],"tindex":"477a89bc-da4c-11e4-9cd5-1529d5fee81b","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[82],"tindex":"477a89bd-da4c-11e4-9cd5-3794e15af305","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"477a89be-da4c-11e4-9cd5-a36f7f63d64d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"477a89bf-da4c-11e4-9cd5-a71f32c0d377","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[413,414,415,416,417,418,419],"tindex":"477a89c0-da4c-11e4-9cd5-89f7137a0ad2","variableMapping":{"prevEle":"lat","ele":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"477a89c1-da4c-11e4-9cd5-65aefdc65eb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[149,150,151,153,244,154,420,421,422,423,144,245,246,98,137,159,138,118,173,147,174,175,119,148,139,121,122,123,126,129,162,42,130,44,132,133,134,136,250,251,252,182,183,47,284,164,294,296,111,306,308,313,146,187,188,195,165,204,205,211,214,216,220,327,330,339,166,349,351,359,362,364,369,372,381,167,391,393,401,404,406,411],"tindex":"477a89c2-da4c-11e4-9cd5-e976d24ad3c4","variableMapping":{"size":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"477a89c3-da4c-11e4-9cd5-2d2deca23252","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.setProperties(double, boolean, boolean)"},"status":-2},{"failures":[15,16,17,18,19,20,21,424,22,23,24,25,425,225,226,82,26,27,28,29,30,31,32,33,86,34,35,36,83,112,37,426,427,428,227,429,430,431,432,228,228,229,229,230,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,149,150,241,242,243,244,245,38,39,40,246,247,248,159,171,172,118,173,147,174,175,176,119,177,145,178,148,120,139,121,122,123,124,125,126,127,128,41,129,179,162,42,43,130,131,44,180,132,133,134,135,136,45,46,249,250,251,252,163,181,253,182,254,255,256,257,183,47,48,433,434,435,436,437,258,259,260,261,263,264,265,266,267,268,270,271,49,272,50,51,52,53,273,54,140,55,56,57,58,59,274,60,61,275,62,63,64,65,276,66,67,68,277,69,184,70,71,72,73,185,74,143,75,76,77,78,79,278,80,81,438,164,111,439,440,441,146,315,316,186,187,317,318,319,188,320,321,189,442,190,191,192,193,194,195,196,197,198,199,322,165,200,201,202,203,204,323,205,206,207,208,209,324,210,325,211,212,213,214,215,216,217,326,218,219,220,221,327,329,330,331,332,333,443,334,335,336,337,338,339,340,341,342,343,344,166,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,444,376,377,378,379,380,381,382,383,384,385,386,167,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,445,446,447],"tindex":"477ab0d4-da4c-11e4-9cd5-c53345a84d4b","variableMapping":{"dataAccess":"name","com.graphhopper.storage.DAType.MMAP":"type","com.graphhopper.storage.DAType.UNSAFE_STORE":"type","type":"type","com.graphhopper.storage.DAType.RAM_STORE":"type","com.graphhopper.storage.DAType.RAM":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:165","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[],"tindex":"477ab0d5-da4c-11e4-9cd5-f1150c9598cd","variableMapping":{"minDistance":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","rMin":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"477ab0d6-da4c-11e4-9cd5-cf6150021965","variableMapping":{"bits":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-2},{"failures":[413,414,416,417,448,418,419,49,140,55,69,143,75],"tindex":"477ab0d7-da4c-11e4-9cd5-af1e49d0e825","variableMapping":{"resultOrientation":"midLat","orientation":"midLat","java.lang.Math.PI":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"477ab0d8-da4c-11e4-9cd5-77bf9780f1ac","variableMapping":{"factor":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[86,87,7,101,10,106,13],"tindex":"477ab0d9-da4c-11e4-9cd5-b7b5a6c9444a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if (int < int)\n    return com.graphhopper.routing.util.EncodedValue.setValue(0, int);\n"},"status":-1},{"failures":[],"tindex":"477ab0da-da4c-11e4-9cd5-fd972c083a1f","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"maxLon","distInMeter":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"477ab0db-da4c-11e4-9cd5-4334ddb62414","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"477ab0dc-da4c-11e4-9cd5-e523425bc7a6","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"speedVal","speed":"speedVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[245,246,247],"tindex":"477ab0dd-da4c-11e4-9cd5-755c55dee066","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:97","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[],"tindex":"477ab0de-da4c-11e4-9cd5-d533c20e263a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[55,75],"tindex":"477ad7ef-da4c-11e4-9cd5-23574f20cf8e","variableMapping":{"heights":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"477ad7f0-da4c-11e4-9cd5-c71716b9fc8f","variableMapping":{"closestEdge":"edgeState","doReverse":"found","base":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:128","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIteratorState.getAdjNode())) {\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(0);\n    if ((com.graphhopper.util.PointList.size()) > 1)\n        boolean = (com.graphhopper.util.PointList.getLatitude(0)) > (com.graphhopper.util.PointList.getLatitude(((com.graphhopper.util.PointList.size()) - 1)));\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":0},{"failures":[],"tindex":"477ad7f1-da4c-11e4-9cd5-a122e394b9bb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"477ad7f2-da4c-11e4-9cd5-996be6aa2812","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"java.lang.Double.POSITIVE_INFINITY","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"477ad7f3-da4c-11e4-9cd5-f94cf59f78bd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[32,88],"tindex":"477ad7f4-da4c-11e4-9cd5-bfe995fe837a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[88,449],"tindex":"477ad7f5-da4c-11e4-9cd5-8b63978d0ff3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":180,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":229,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":161,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":317,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.reader.OSMReaderTest.testFerry":82,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":256,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":102,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":71,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":344,"com.graphhopper.coll.CompressedArrayTest.testCompress":419,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":410,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":147,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":299,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":277,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":145,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":171,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":393,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":129,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":250,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":46,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":246,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":128,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":51,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":327,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":190,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":120,"com.graphhopper.GraphHopperTest.testLoadOSM":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":52,"com.graphhopper.reader.OSMReaderTest.testSort":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":158,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":331,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":405,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":372,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":311,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":235,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":364,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":325,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":383,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":328,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":92,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":74,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":43,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":73,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":124,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":192,"com.graphhopper.coll.OSMIDMapTest.testGetLong":436,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":353,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":323,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":188,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":206,"com.graphhopper.coll.CompressedArrayTest.testCompress2":418,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":395,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":151,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":166,"com.graphhopper.GraphHopperAPITest.testLoad":47,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":442,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":387,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":378,"com.graphhopper.storage.LevelGraphStorageTest.testClone":194,"com.graphhopper.reader.OSMReaderTest.testBarriers":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":67,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":127,"com.graphhopper.util.GHUtilityTest.testCopy":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":81,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":262,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":99,"com.graphhopper.routing.PathTest.testFindInstruction":241,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":209,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":336,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":94,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":183,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":326,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":259,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":406,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":391,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":362,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":175,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":348,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":285,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":375,"com.graphhopper.util.InstructionListTest.testWayList2":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":57,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":101,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":248,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":373,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":293,"com.graphhopper.storage.RAMDirectoryTest.testSynched":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":345,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":126,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":377,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":133,"com.graphhopper.coll.OSMIDMapTest.testGet":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":343,"com.graphhopper.routing.PathBidirRefTest.testExtract":242,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":208,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":370,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":61,"com.graphhopper.util.GHUtilityTest.testSort2":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":130,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":421,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":352,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":2,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":113,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":332,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":165,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":203,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":97,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":220,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":200,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":138,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":205,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":83,"com.graphhopper.storage.StorablePropertiesTest.testStore":445,"com.graphhopper.storage.GraphHopperStorageTest.testClone":380,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":84,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":440,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":116,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":389,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":146,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":0,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":286,"com.graphhopper.routing.PathTest.testTime":149,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":218,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":156,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":276,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":59,"com.graphhopper.reader.OSMReaderTest.testRelation":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":298,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":324,"com.graphhopper.util.GHUtilityTest.testSortDirected":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":160,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":231,"com.graphhopper.GraphHopperTest.testFootOnly":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":115,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":185,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":123,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":294,"com.graphhopper.search.NameIndexTest.testCreate":432,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":228,"com.graphhopper.routing.QueryGraphTest.testOneWay":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":274,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":50,"com.graphhopper.reader.OSMReaderTest.testWithBounds":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":38,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":420,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":87,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":191,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":168,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":356,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":349,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":376,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":121,"com.graphhopper.util.InstructionListTest.testWayList":251,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":169,"com.graphhopper.GraphHopperAPITest.testDisconnected179":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":287,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":415,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":358,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":282,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":313,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":382,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":64,"com.graphhopper.routing.util.EncodedValueTest.testSwap":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":178,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":399,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":177,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":135,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":105,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":371,"com.graphhopper.routing.PathTest.testWayList":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":290,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":85,"com.graphhopper.coll.OSMIDMapTest.testGet2":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":136,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":214,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":426,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":355,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":392,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":341,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":143,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":75,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.util.GHUtilityTest.testSort":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":303,"com.graphhopper.search.NameIndexTest.testPut":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":369,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":184,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":66,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":107,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":265,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":329,"com.graphhopper.storage.MMapDirectoryTest.testSynched":438,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":427,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":350,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":245,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":111,"com.graphhopper.routing.PathTest.testFound":240,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":25,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":90,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":216,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":316,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":346,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":431,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":164,"com.graphhopper.util.InstructionListTest.testEmptyList":249,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":157,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":131,"com.graphhopper.reader.PrinctonReaderTest.testRead":225,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":72,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":289,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":413,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":279,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":351,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":106,"com.graphhopper.reader.OSMReaderTest.testFoot":26,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":302,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":140,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":219,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":417,"com.graphhopper.reader.OSMReaderTest.testOneWay":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":55,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":388,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":403,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":363,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":296,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":384,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":174,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":268,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":244,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":292,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":230,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":112,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":374,"com.graphhopper.routing.PathBidirRefTest.testExtract2":243,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":264,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":429,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":401,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":269,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":32,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":314,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":53,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":404,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":197,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":396,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":338,"com.graphhopper.storage.StorablePropertiesTest.testLoad":446,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":132,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":281,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":34,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":187,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":163,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":400,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":154,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":295,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":117,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":215,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":213,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":330}}]
