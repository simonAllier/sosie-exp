[{"failures":[],"tindex":"be8dc14c-db38-11e4-94fe-bd5361663bda","variableMapping":{"angle":"fwdFaster","com.graphhopper.util.AngleCalc.PI3_4":"fwdFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"be8dc14d-db38-11e4-94fe-8da0d67082a9","variableMapping":{"i":"nextNodeBit","mainNodes":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"be8dc14e-db38-11e4-94fe-f1a30918549d","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","edgeId":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeIterator:60","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"be8de85f-db38-11e4-94fe-3b1e95153b19","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"be8de860-db38-11e4-94fe-b5b414266255","variableMapping":{"size":"priorityFromRelation","capacity":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[],"tindex":"be8de861-db38-11e4-94fe-b7c608bb08d4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"be8de862-db38-11e4-94fe-bfb87e60effd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"be8de863-db38-11e4-94fe-8d34c238b038","variableMapping":{"edgeId":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-2},{"failures":[],"tindex":"be8de864-db38-11e4-94fe-97dc751f44f1","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"be8de865-db38-11e4-94fe-3d5c29667aa8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[155,156,0,1,2,3,4,157,158,5,6,159,160,7,8,9,10,11,161,12,162,163,13,14,164,15,16,17,165,166,18,167,168,169,170,171,172,173,174,175,176,177,177,178,178,179,179,180,180,19,19,181,181,182,182,20,20,183,183,184,184,185,185,186,186,187,21,22,23,24,25,26,32,33,34,35,36,188,189,37,38,39,40,41,42,43,44,190,45,46,47,191,48,49,50,51,52,53,54,55,56,57,58,59,60,192,61,62,63,64,65,66,193,67,68,69,70,71,194,195,196,72,73,74,75,197,198,199,200,201,76,77,78,79,80,202,203,204,205,206,207,208,209,210,211,212,81,213,214,215,216,217,218,82,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,83,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,84,261,262,85,86,87,263,88,89,264,265,90,91,266,92,267,268,269,270,93,271,94,272,273,274,275,276,95,277,96,278,279,97,280,98,99,281,282,283,100,284,285,286,101,287,288,289,102,290,291,292,103,293,294,295,296,104,105,106,297,107,108,298,299,109,110,300,111,301,302,303,304,112,305,113,306,307,308,309,310,114,311,115,312,313,116,314,117,118,315,316,317,119,318,120,319,320,121,321,322,323,324,122,123,124,325,125,126,326,327,127,128,328,129,329,330,331,332,130,333,131,334,335,336,337,338,132,339,133,340,341,134,342,135,136,343,344,345,137,346,347,138,348,349,350,351,139,140,141,352,142,143,353,354,144,145,355,146,356,357,358,359,147,360,148,361,362,363,364,365,149,366,150,367,368,151,369,152,153,370,371,372,154,373,374,375,376],"tindex":"be8e0f76-db38-11e4-94fe-2d03945de84d","variableMapping":{"type":"defaultType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[],"tindex":"be8e0f77-db38-11e4-94fe-83addf77a7de","variableMapping":{"flags":"wayBitMask","mask":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"be8e0f78-db38-11e4-94fe-53276b2bc399","variableMapping":{"closestEdge":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":0},{"failures":[],"tindex":"be8e0f79-db38-11e4-94fe-a9df948dfc66","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[32,36,188],"tindex":"be8e0f7a-db38-11e4-94fe-b182cb51356a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:60","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-1},{"failures":[],"tindex":"be8e0f7b-db38-11e4-94fe-73ddfbc1c802","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[155,0,1,2,4,5,6,9,11,161,12,162,163,13,14,15,16,17,165,18,178,181,20,183,186,22,68,73,74,199,377,378,379,380,202,203,204,205,206,221,223,237,238,239,241,247,249,85,274,96,278,99,103,104,308,312,118,317,381,120,121,122,336,340,136,345,138,139,363,367,153,372,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399],"tindex":"be8e0f7c-db38-11e4-94fe-9589fe3e7659","variableMapping":{"java.lang.Integer.MAX_VALUE":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-1},{"failures":[],"tindex":"be8e0f7d-db38-11e4-94fe-0393808efd1e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[],"tindex":"be8e0f7e-db38-11e4-94fe-0b9533541e84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[400,401,402,403,404,405,406,407,408],"tindex":"be8e0f7f-db38-11e4-94fe-a158fa73d4eb","variableMapping":{"bits":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"be8e0f80-db38-11e4-94fe-ede8596d7597","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"be8e0f81-db38-11e4-94fe-7b4f7d5838fb","variableMapping":{"flags":"value","mask":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"be8e0f82-db38-11e4-94fe-e92c6693fdf7","variableMapping":{"str":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":0},{"failures":[],"tindex":"be8e3693-db38-11e4-94fe-7d4eaffe3de7","variableMapping":{"max":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","tmpSize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"be8e3694-db38-11e4-94fe-6560fc9fd43e","variableMapping":{"this":"g","newEdgeId":"removed","fromNodeId":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:351","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"be8e3695-db38-11e4-94fe-0f9bdd4b50dc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[409,410,411,412,413,414,415,416],"tindex":"be8e3696-db38-11e4-94fe-3be76c094cd6","variableMapping":{"distInMeter":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[417,418,419,420,421,422],"tindex":"be8e3697-db38-11e4-94fe-8b9a870c8821","variableMapping":{"str":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"be8e3698-db38-11e4-94fe-cb126a9cb10a","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.BIKE2","entryVal":"entry","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:170","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"be8e3699-db38-11e4-94fe-3f3e1821013f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[32,188],"tindex":"be8e369a-db38-11e4-94fe-1d8729260ca6","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[],"tindex":"be8e369b-db38-11e4-94fe-2d7bd39c265d","variableMapping":{"index":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"be8e369c-db38-11e4-94fe-6368afd4ab4f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"be8e369d-db38-11e4-94fe-fbed7948440f","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":0},{"failures":[],"tindex":"be8e369e-db38-11e4-94fe-e7013ac523dd","variableMapping":{"oldValueIndex":"value","lastKey":"value","key":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"be8e369f-db38-11e4-94fe-6b131185d3f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"be8e36a0-db38-11e4-94fe-e725bf9dbbd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"be8e36a1-db38-11e4-94fe-273ff96f14cb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[423],"tindex":"be8e36a2-db38-11e4-94fe-273133037653","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[424,425,426,397],"tindex":"be8e36a3-db38-11e4-94fe-314ab269f76e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[9,165,21,22,409,427,428,429,27,430,431,432,433,434,435,436,411,412,437,438,413,414,439,37,440,415,416,441,442,50,51,62,75,92,111,129,146],"tindex":"be8e5db4-db38-11e4-94fe-753b356dff8f","variableMapping":{"reverseSpeed":"speedEncoder","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[443,444,445],"tindex":"be8e5db5-db38-11e4-94fe-e7b6df9d3d9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:467","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"be8e5db6-db38-11e4-94fe-87354f11aca6","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[],"tindex":"be8e5db7-db38-11e4-94fe-c32d51e932b8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"be8e5db8-db38-11e4-94fe-5b47ef6a0c4c","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"be8e5db9-db38-11e4-94fe-cd31630a81ca","variableMapping":{"algo":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[400,403],"tindex":"be8e5dba-db38-11e4-94fe-477092e78ed6","variableMapping":{"r":"lon","angle":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[1,2,4,5,9,10,11,12,13,14,15,17,18,22,26,31,32,33,35,36,40,41,42,43,44,45,47,48,51,52,53,56,60,61,62,64,66,67,68,69,71,72,73,74,199,78,79,85,89,92,93,94,96,97,98,99,100,103,104,108,111,112,113,115,116,117,118,119,120,121,122,126,129,130,131,133,134,135,136,137,138,139,143,146,147,148,150,151,152,153,154],"tindex":"be8e5dbb-db38-11e4-94fe-7fb541905849","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"be8e5dbc-db38-11e4-94fe-2f71750115ba","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"be8e5dbd-db38-11e4-94fe-cde97841dc72","variableMapping":{"i":"i","allBits":"i","hash":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[3,9,10,13,18,446,447,448,449,409,27,51,55,58,192,62,63,71,81,82,83,84,85,86,87,90,91,92,95,97,99,100,103,104,105,106,109,110,111,114,116,118,119,120,121,122,123,124,127,128,129,132,134,136,137,138,139,140,141,144,145,146,149,151,153,154],"tindex":"be8e5dbe-db38-11e4-94fe-8d52ea233219","variableMapping":{"compressionLevel":"nextWayBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[32,36,188],"tindex":"be8e5dbf-db38-11e4-94fe-c93518ff11c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[],"tindex":"be8e84d0-db38-11e4-94fe-b38b85095a87","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[450,451,452,453],"tindex":"be8e84d1-db38-11e4-94fe-19589c7b4bbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[7,8,10,18,19,20,32,34,36,188,38,40,41,45,46,47,49,50,51,55,58,192,61,62,63,71,76,78,79,85,86,87,91,92,95,97,99,100,103,104,105,106,110,111,114,116,118,119,120,121,122,123,124,128,129,132,134,136,137,138,139,140,141,145,146,149,151,153,154],"tindex":"be8e84d2-db38-11e4-94fe-81822ee6f3c7","variableMapping":{"segmentSizeInBytes":"len","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:413","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[],"tindex":"be8e84d3-db38-11e4-94fe-7569b85f059f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[0,3,10,18,28,30],"tindex":"be8e84d4-db38-11e4-94fe-b79f7f0f285d","variableMapping":{"bm":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"be8e84d5-db38-11e4-94fe-a5f712a1c288","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"be8e84d6-db38-11e4-94fe-a9ff26f8aa7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"be8e84d7-db38-11e4-94fe-d32a116a4297","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[44,454,455,456,457,458],"tindex":"be8e84d8-db38-11e4-94fe-0b416722a5ac","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"be8e84d9-db38-11e4-94fe-75634fba1499","variableMapping":{"turnCostIndex":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","NO_TURN_ENTRY":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[432,423,442],"tindex":"be8e84da-db38-11e4-94fe-cb39bc734e66","variableMapping":{"bytesForFlags":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[155,4,5,159,211,217,233,236,237,238,239,240,241,259,262,85,86,87,263,88,89,264,265,90,91,266,267,268,269,270,93,271,94,272,273,274,275,276,95,277,96,278,279,97,280,98,99,281,282,283,100,284,286,290,103,293,120,319,121,321,138,348,374],"tindex":"be8e84db-db38-11e4-94fe-332abfa7cb6b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[155,156,0,1,2,3,4,158,5,6,159,9,10,11,161,12,162,163,13,14,15,16,17,165,166,18,459,460,461,462,463,464,465,430,466,467,431,30,434,468,469,413,470,471,472,415,473,474,475],"tindex":"be8e84dc-db38-11e4-94fe-bd7f82953f38","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[443,444,445],"tindex":"be8e84dd-db38-11e4-94fe-8de74fbd5f97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:467","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[447,448,449,409,419,476,413,414,420,477,421,478,415,416,422,479],"tindex":"be8e84de-db38-11e4-94fe-4f68bb62ce09","variableMapping":{"bytePos":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"be8eabef-db38-11e4-94fe-cbe76f574b2a","variableMapping":{"midLat":"maxLonTmp","lat":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[460,462,468,471,474],"tindex":"be8eabf0-db38-11e4-94fe-236f9335d32d","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[38,45,46,52,55,56,66,67,69],"tindex":"be8eabf1-db38-11e4-94fe-81ebec57227e","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"be8eabf2-db38-11e4-94fe-f7935560f4c8","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"element","nodeId":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,11,161,12,59,62,63,66,79,80,219,221,222,223,224,226,227,228,229,230,231,232,234,83,480,481,242,243,245,247,248,249,250,252,253,254,255,256,257,258,260,84],"tindex":"be8eabf3-db38-11e4-94fe-1bb9dc89ce5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[32,35,87,266,267,268,270,272,273,278,279,291,106,300,301,302,304,306,307,312,313,124,328,329,330,332,334,335,340,341,141,355,356,357,359,361,362,367,368],"tindex":"be8eabf4-db38-11e4-94fe-83dcc4d32899","variableMapping":{"id":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"be8eabf5-db38-11e4-94fe-f3cb64024e65","variableMapping":{"hourStr":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"be8eabf6-db38-11e4-94fe-efe31bc8e8db","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"be8eabf7-db38-11e4-94fe-7f7c7ba0bd0a","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[155,3,6,159,9,10,11,161,12,162,163,13,14,15,16,17,165,18,482,177,483,484,485,486,446,450,448,409,462,429,26,463,27,487,464,465,488,489,490,430,28,466,467,29,431,432,30,491,492,451,31,433,434,50,51,52,53,54,55,56,57,58,59,60,192,61,62,63,64,65,66,193,67,68,69,70,71,81,82,83,84,85,86,87,263,88,89,264,265,90,91,266,92,267,268,269,270,93,271,94,272,273,274,275,276,95,277,96,278,279,97,280,98,99,281,282,283,100,284,101,287,288,289,102,290,291,292,103,293,294,295,296,104,105,106,297,107,108,298,299,109,110,300,111,301,302,303,304,112,305,113,306,307,308,309,310,114,311,115,312,313,116,314,117,118,315,316,317,119,318,120,319,320,121,321,322,323,324,122,123,124,325,125,126,326,327,127,128,328,129,329,330,331,332,130,333,131,334,335,336,337,338,132,339,133,340,341,134,342,135,136,343,344,345,137,346,347,138,348,349,350,351,139,140,141,352,142,143,353,354,144,145,355,146,356,357,358,359,147,360,148,361,362,363,364,365,149,366,150,367,368,151,369,152,153,370,371,372,154,373],"tindex":"be8eabf8-db38-11e4-94fe-f78fbca1d349","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , com.graphhopper.routing.util.FootFlagEncoder.int , com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"be8eabf9-db38-11e4-94fe-d9eafec720d8","variableMapping":{"y1":"wayType","y2":"wayType","x1":"wayType","x2":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-2},{"failures":[],"tindex":"be8eabfa-db38-11e4-94fe-89c517d3071a","variableMapping":{"a_lat_deg":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[36],"tindex":"be8ed30b-db38-11e4-94fe-7b8ad8e1e572","variableMapping":{"elem":"nodeIndex","i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[32,188],"tindex":"be8ed30c-db38-11e4-94fe-434e152c8054","variableMapping":{"index":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"be8ed30d-db38-11e4-94fe-dfaeab5e4396","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[155,156,0,1,2,3,4,158,5,6,159,9,10,11,161,12,162,163,13,14,15,16,17,165,166,18,447,449,409,459,493,410,417,461,494,463,464,465,430,28,466,467,431,432,30,434,411,412,418,469,495,419,476,413,414,470,420,472,477,421,478,415,416,473,422,475,479,442,75],"tindex":"be8ed30e-db38-11e4-94fe-51c23e0ee7eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[155,156,0,1,4,158,6,40,42,45,47,191,48,49,51,52,53,54,55,56,57,58,59,60,192,61,62,63,64,65,66,193,67,68,69,70,71],"tindex":"be8ed30f-db38-11e4-94fe-77b066b3731f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[],"tindex":"be8ed310-db38-11e4-94fe-b5bc063ab93d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"be8ed311-db38-11e4-94fe-93c3011abc65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[18,32,34,35,87,266,267,268,270,272,273,278,279,291,106,300,301,302,304,306,307,312,313,124,328,329,330,332,334,335,340,341,141,355,356,357,359,361,362,367,368],"tindex":"be8ed312-db38-11e4-94fe-135ab3842408","variableMapping":{"cap":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"be8ed313-db38-11e4-94fe-efabea745370","variableMapping":{"intVal":"importance","degree":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"be8ed314-db38-11e4-94fe-b570fac62bb1","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"be8ed315-db38-11e4-94fe-43a6002bbe10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"be8ed316-db38-11e4-94fe-01c2ea1c7c0a","variableMapping":{"index":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[],"tindex":"be8ed317-db38-11e4-94fe-efbedfc44eea","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"be8ed318-db38-11e4-94fe-61f92ef2610a","variableMapping":{"bytes":"oldRelationFlags","capacity":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":0},{"failures":[],"tindex":"be8ed319-db38-11e4-94fe-65836699c1b0","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"be8ed31a-db38-11e4-94fe-cdcedd9bdc53","variableMapping":{"latSize":"speed","size":"speed","lonSize":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":0},{"failures":[],"tindex":"be8ed31b-db38-11e4-94fe-2b92f5a6ee34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[448],"tindex":"be8efa2c-db38-11e4-94fe-d58e56c40222","variableMapping":{"lat":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"be8efa2d-db38-11e4-94fe-1f2052544acb","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"be8efa2e-db38-11e4-94fe-e7d6466346cf","variableMapping":{"nodeThis":"biggestStart","nextEdgeOther":"biggestStart","nodeOther":"biggestStart","nextEdge":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":0},{"failures":[155,156,0,1,2,3,4,158,5,6,159,9,10,11,161,12,162,163,13,14,15,16,17,165,166,18,459,460,461,462,463,464,465,430,466,467,431,30,434,468,469,413,470,471,472,415,473,474,475],"tindex":"be8efa2f-db38-11e4-94fe-e1a7c4b60551","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":115,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":193,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":290,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":442,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":86,"com.graphhopper.reader.OSMReaderTest.testFerry":9,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":76,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":248,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":156,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":328,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":168,"com.graphhopper.coll.CompressedArrayTest.testCompress":408,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":372,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":42,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":274,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":146,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":47,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":38,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":148,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":60,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":72,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":418,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":195,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":295,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":245,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":438,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":222,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":345,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":414,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":120,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":104,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":49,"com.graphhopper.GraphHopperTest.testLoadOSM":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":223,"com.graphhopper.reader.OSMReaderTest.testSort":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":439,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":321,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":383,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":369,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":138,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":282,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":20,"com.graphhopper.routing.DijkstraTest.initializationError":483,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":135,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":311,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":354,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":319,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":122,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":300,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":494,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":252,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":63,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":250,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":54,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":106,"com.graphhopper.coll.OSMIDMapTest.testGetLong":205,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":335,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":305,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":103,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":306,"com.graphhopper.coll.CompressedArrayTest.testCompress2":407,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":427,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":129,"com.graphhopper.GraphHopperAPITest.testLoad":79,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":296,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":396,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":462,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":356,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":141,"com.graphhopper.storage.LevelGraphStorageTest.testClone":107,"com.graphhopper.reader.OSMReaderTest.testBarriers":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":188,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":453,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":89,"com.graphhopper.util.GHUtilityTest.testCopy":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":84,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":211,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":469,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":394,"com.graphhopper.routing.PathTest.testFindInstruction":23,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":124,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":454,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":78,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":464,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":315,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":208,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":152,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":134,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":44,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":332,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":448,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":486,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":264,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":350,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":399,"com.graphhopper.util.InstructionListTest.testWayList2":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":230,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":476,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":419,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":189,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":348,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":452,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":56,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":162,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":382,"com.graphhopper.routing.AStarTest.initializationError":484,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":68,"com.graphhopper.coll.OSMIDMapTest.testGet":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":128,"com.graphhopper.routing.PathBidirRefTest.testExtract":24,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":465,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":204,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":256,"com.graphhopper.storage.RAMDataAccessTest.testCopy":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":278,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":411,"com.graphhopper.storage.RAMDataAccessTest.testSegments":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":83,"com.graphhopper.util.GHUtilityTest.testSort2":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":64,"com.graphhopper.reader.OSMReaderTest.testMain":11,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":472,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":322,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":111,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":304,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":119,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":19,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":440,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":113,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":165,"com.graphhopper.storage.StorablePropertiesTest.testStore":374,"com.graphhopper.storage.GraphHopperStorageTest.testClone":142,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":30,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":285,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":358,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":431,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":265,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":289,"com.graphhopper.routing.PathTest.testTime":21,"com.graphhopper.util.BitUtilLittleTest.testToFloat":377,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":316,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":232,"com.graphhopper.reader.OSMReaderTest.testRelation":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":273,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":310,"com.graphhopper.util.GHUtilityTest.testSortDirected":201,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":441,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":387,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":180,"com.graphhopper.GraphHopperTest.testFootOnly":6,"com.graphhopper.util.BitUtilLittleTest.testToInt":379,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":467,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":251,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":53,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":480,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":93,"com.graphhopper.search.NameIndexTest.testCreate":176,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":392,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":177,"com.graphhopper.routing.QueryGraphTest.testOneWay":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":402,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":221,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":400,"com.graphhopper.reader.OSMReaderTest.testWithBounds":17,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":475,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":33,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":275,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":488,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":447,"com.graphhopper.util.BitUtilLittleTest.testToDouble":378,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":459,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":495,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":130,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":139,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":51,"com.graphhopper.util.InstructionListTest.testWayList":73,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":470,"com.graphhopper.GraphHopperAPITest.testDisconnected179":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":90,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":403,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":445,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":100,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":2,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":353,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":191,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":149,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":61,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":482,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":46,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":491,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":420,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":70,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":351,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":259,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":425,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":477,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":347,"com.graphhopper.routing.PathTest.testWayList":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":466,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":423,"com.graphhopper.coll.OSMIDMapTest.testGet2":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":71,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":116,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":337,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":429,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":327,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":112,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":254,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":390,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":474,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":456,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":493,"com.graphhopper.util.GHUtilityTest.testSort":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":277,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":468,"com.graphhopper.search.NameIndexTest.testPut":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":324,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":352,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":246,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":241,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":215,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":415,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":37,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":213,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":320,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":170,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":487,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":32,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":398,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":96,"com.graphhopper.routing.PathTest.testFound":187,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":159,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":409,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":117,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":444,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":330,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":455,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":175,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":92,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":145,"com.graphhopper.util.InstructionListTest.testEmptyList":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":258,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":490,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":437,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":489,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":65,"com.graphhopper.reader.PrinctonReaderTest.testRead":7,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":153,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":249,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":127,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":266,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":85,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":131,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":381,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":450,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":421,"com.graphhopper.reader.OSMReaderTest.testFoot":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":95,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":171,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":227,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":317,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":405,"com.graphhopper.reader.OSMReaderTest.testOneWay":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":228,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":357,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":368,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":342,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":386,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":94,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":43,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":481,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":432,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":41,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":216,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":385,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":269,"com.graphhopper.util.BitUtilLittleTest.testToLong":380,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":179,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":166,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":349,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":262,"com.graphhopper.routing.PathBidirRefTest.testExtract2":25,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":426,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":417,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":173,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":150,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":217,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":284,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":463,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":224,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":151,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":299,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":492,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":363,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":260,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":88,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":446,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":451,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":125,"com.graphhopper.storage.StorablePropertiesTest.testLoad":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":67,"com.graphhopper.GraphHopperTest.testPrepareOnly":155,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":87,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":15,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":102,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":75,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":366,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":27,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":271,"com.graphhopper.routing.AStarBidirectionTest.initializationError":485,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":434,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":314,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":313,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":121}}]
