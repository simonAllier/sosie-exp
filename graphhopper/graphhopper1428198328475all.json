[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"70544d72-db35-11e4-9da0-f543f2bf2469","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-1},{"failures":[12,13,14],"tindex":"70544d73-db35-11e4-9da0-2de15a0defbf","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25],"tindex":"70544d74-db35-11e4-9da0-07cc52e5aca2","variableMapping":{"dir":"pavementName","tr":"tr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:254","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"sharp_left\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[],"tindex":"70544d75-db35-11e4-9da0-3f63722f40e9","variableMapping":{"cap":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[],"tindex":"70544d76-db35-11e4-9da0-b9416d36626e","variableMapping":{"str":"sacScale","nodeCount":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","base":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1344","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.RuntimeException((\"Base node problem with edge \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"70544d77-db35-11e4-9da0-1f7ef7f6ab57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[26,27],"tindex":"70547488-db35-11e4-9da0-3942e49a4dbf","variableMapping":{"str":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"70547489-db35-11e4-9da0-ed9c2a4a5c4b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"7054748a-db35-11e4-9da0-4b19afeebcfe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"7054748b-db35-11e4-9da0-81d7ba5c484f","variableMapping":{"keyIndex":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[28],"tindex":"7054748c-db35-11e4-9da0-671ed0c00e30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"7054748d-db35-11e4-9da0-a16b528db063","variableMapping":{"weightLong":"bits","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":0},{"failures":[29,30,0,1,31,32,33,34,35,2,3,36,4,5,6,7,8,9,37,10,38,11,39,40],"tindex":"7054748e-db35-11e4-9da0-dd42abfb8eca","variableMapping":{"weightApproximation":"distance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[41,42,43,44],"tindex":"70549b9f-db35-11e4-9da0-09d9a10a1563","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"70549ba0-db35-11e4-9da0-b1d001d2cf8e","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"70549ba1-db35-11e4-9da0-b5d59eeb7a89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:145","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"70549ba2-db35-11e4-9da0-27defa7e5977","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[45,46,29,47,48,49,50,51,52,53,54,55,56,57,26,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,12,27,352,353,354,355,356,357,358,15,16,359,360,361,362,363,364,365,17,366,41,367,368,369,370,371,372,373,18,374,375,376,377,378,379,380,19,381,42,382,383,384,385,386,20,387,21,388,389,390,391,392,393,394,395,396,22,397,43,398,399,400,401,402,403,404,405,23,406,24,407,408,409,410,411,412,413,414,415,25,416,44,417,418,419,420,421,422,423,424,425,426,427,428,30,0,1,31,32,429,33,34,430,35,2,431,3,36,4,5,6,7,432,8,433,9,37,10,38,434,435,11,436,437,438,439,440,441,39,442,443,444,40,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"tindex":"7054c2b3-db35-11e4-9da0-bfc1ad0cf2db","variableMapping":{"name":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-1},{"failures":[460,461,462,35,439,441,444],"tindex":"7054c2b4-db35-11e4-9da0-ede64ee8cd1a","variableMapping":{"i":"i","to":"i","lonSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"7054e9c5-db35-11e4-9da0-236dbb953b22","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[357,358,15,16,359,360,361,362,363,364,365,17,366,41,367,368],"tindex":"7054e9c6-db35-11e4-9da0-f545fb4187a8","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"7054e9c7-db35-11e4-9da0-0f866dd4a921","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[183,185,1,33,7,8,433,434,11,441,444],"tindex":"7054e9c8-db35-11e4-9da0-354060caaea1","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"705510d9-db35-11e4-9da0-61509e722cc4","variableMapping":{"lat":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"705510da-db35-11e4-9da0-fdd67d049ccb","variableMapping":{"start":"dLat","delta":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"705510db-db35-11e4-9da0-c132768b226d","variableMapping":{"size":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"705510dc-db35-11e4-9da0-ddf61279d70e","variableMapping":{"blobResult":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfDecoder:95","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"A PBF decoding worker thread failed, aborting.\" , com.graphhopper.reader.pbf.PbfBlobResult.getException())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[],"tindex":"705537ed-db35-11e4-9da0-bbeff1471bb0","variableMapping":{"encoded":"encoded","backwardBit":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":0},{"failures":[],"tindex":"705537ee-db35-11e4-9da0-bf5cd4ba3bd7","variableMapping":{"gradient":"prevEle","yend":"prevEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[45,46,29,47,48,49,50,52,53,463,54,26,58,59,60,61,62,63,64,65,67,68,69,70,71,464,465,466,467,468,469,470,471,77,82,83,84,85,472,473,474,475,114,476,477,478,479,480,481,482,483,484,485,486,487,140,141,142,143,145,148,149,150,168,169,170,488,489,490,491,492,493,494,495,496,497,498,499,500,188,191,192,196,200,217,223,228,230,231,235,236,240,244,261,266,267,272,274,275,278,281,282,286,290,307,312,313,318,320,321,501,502,400,401,426,427,433,446,447,449,450,451,452,453,454,456,457],"tindex":"705537ef-db35-11e4-9da0-cd6b6e54616d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[29,183,185,194,197,198,205,220,226,228,232,0,36,10,38,11,436,441,39,442,40],"tindex":"705537f0-db35-11e4-9da0-9d98afebda53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.next()"},"status":-1},{"failures":[],"tindex":"705537f1-db35-11e4-9da0-e9d214c7c2fa","variableMapping":{"turnCostIndex":"speed","NO_TURN_ENTRY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[45,46,29,47,48,49,50,52,53,463,54,26,58,59,60,61,62,63,64,65,67,68,69,70,71,503,504,505,506],"tindex":"70555f02-db35-11e4-9da0-89f01a38300c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[33,2,8,9,10,11,441,444],"tindex":"70555f03-db35-11e4-9da0-e1b0e301f886","variableMapping":{"id":"value","rowSizeInBytes":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:78","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[401],"tindex":"70555f04-db35-11e4-9da0-b54de86a4308","variableMapping":{"delta_lat":"prevEle","r_lat":"prevEle","a_lat":"prevEle","delta_lon":"prevEle","r_lon":"prevEle","a_lon":"prevEle","norm":"prevEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-1},{"failures":[357,358,15,16,359,360,361,362,363,364,365,17,366,41,367,368],"tindex":"70555f05-db35-11e4-9da0-c7233e6e90f9","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[507,508],"tindex":"70555f06-db35-11e4-9da0-d58ef965de7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[463,66,15,16,361,17,368,18,377,19,382,509,510,385,20,21,392,22,399,404,23,24,411,25,418,507,508],"tindex":"70555f07-db35-11e4-9da0-059fbb8842ae","variableMapping":{"nodeId":"flags","nodeIdOffset":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-1},{"failures":[58,64,71,15,16,17,368,372,18,19,382,385,20,387,21,22,399,404,23,406,24,25,418,507,508,421],"tindex":"70555f08-db35-11e4-9da0-95e5f03ff1c5","variableMapping":{"high":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"70555f09-db35-11e4-9da0-8582c262ad53","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[45,46,29,47,48,49,50,52,53,463,54,26,58,59,60,61,62,63,64,65,67,68,69,70,71,464,465,466,467,468,469,470,471,77,82,83,84,85,472,473,474,475,114,476,477,478,479,480,481,482,483,484,485,486,487,140,141,142,143,145,148,149,150,168,169,170,488,489,490,491,492,493,494,495,496,497,498,499,500,188,191,192,196,200,217,223,228,230,231,235,236,240,244,261,266,267,272,274,275,278,281,282,286,290,307,312,313,318,320,321,501,502,400,401,426,427,433,446,447,449,450,451,452,453,454,456,457],"tindex":"70555f0a-db35-11e4-9da0-6d4331f17e17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"70555f0b-db35-11e4-9da0-c916f20767d2","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"7055861c-db35-11e4-9da0-a1ae21632b9f","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"nextRelBit","edge":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[461,35,439,441,444],"tindex":"7055861d-db35-11e4-9da0-cf810d7faf6d","variableMapping":{"tmpNo":"lastElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"7055861e-db35-11e4-9da0-39eceb88257d","variableMapping":{"maxMCSpeed":"resultOrientation","speed":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"7055861f-db35-11e4-9da0-e97115b8dda3","variableMapping":{"i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","child":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"70558620-db35-11e4-9da0-45accdcac727","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"70558621-db35-11e4-9da0-39d47f9b98f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[358,384,403],"tindex":"70558622-db35-11e4-9da0-fd83e0c8f893","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"70558623-db35-11e4-9da0-cffa430fa5cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"70558624-db35-11e4-9da0-2d5eba68fbf7","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[61,67,328,344,359,375,390,409],"tindex":"70558625-db35-11e4-9da0-151ab9b6c249","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"70558626-db35-11e4-9da0-137ab4d6cca8","variableMapping":{"distInMeter":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[29,49,26,58,64,70,71,85,89,90,96,97,99,104,112,117,124,132,139,162,182,191,197,198,204,205,207,212,220,225,232,235,241,242,248,249,251,256,264,269,276,278,281,287,288,294,295,297,302,310,315,322,329,331,332,334,336,343,346,347,349,351,12,27,356,358,15,16,17,366,368,14,511,512,369,370,372,18,19,381,382,384,385,20,387,21,22,397,399,401,403,404,23,406,24,25,416,418,507,508,421,425,426,30,0,2,431,3,36,4,10],"tindex":"7055ad37-db35-11e4-9da0-dda6cbbcb3d1","variableMapping":{"lastTime":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"7055ad38-db35-11e4-9da0-c994be60d0c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"7055ad39-db35-11e4-9da0-1f2067c6637a","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"7055ad3a-db35-11e4-9da0-299188b549fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:114","type":"CtLocalVariableImpl","sourcecode":"int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int))"},"status":-2},{"failures":[],"tindex":"7055ad3b-db35-11e4-9da0-1b89031aa880","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[513],"tindex":"7055ad3c-db35-11e4-9da0-a9ff8f98e63d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"7055ad3d-db35-11e4-9da0-eb1e204bf295","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder> java.util.List<com.graphhopper.routing.util.FlagEncoder> = new java.util.ArrayList<com.graphhopper.routing.util.FlagEncoder>()"},"status":-2},{"failures":[],"tindex":"7055ad3e-db35-11e4-9da0-d90c633477f9","variableMapping":{"flags":"shift","mask":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"7055ad3f-db35-11e4-9da0-f7abb2168530","variableMapping":{"com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.BEST","com.graphhopper.routing.util.PriorityCode.BEST":"com.graphhopper.routing.util.PriorityCode.BEST","prio":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:542","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return ((double)(com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"7055ad40-db35-11e4-9da0-6193451d9526","variableMapping":{"len":"i","start":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"7055ad41-db35-11e4-9da0-a9c810886f6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"7055ad42-db35-11e4-9da0-e589ed895449","variableMapping":{"lat":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:65","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[],"tindex":"7055ad43-db35-11e4-9da0-f7f3e415cb20","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"7055ad44-db35-11e4-9da0-b30dac784504","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[1,429,33,7,8,9,38,441,39],"tindex":"7055ad45-db35-11e4-9da0-99e70172592b","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"7055ad46-db35-11e4-9da0-55f8b8d0e144","variableMapping":{"allIter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:379","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getBaseNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[328,344,359,375,390,409],"tindex":"7055ad47-db35-11e4-9da0-1b66e1fce5b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"7055ad48-db35-11e4-9da0-f952de72ed8b","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[29,163,183,194,197,198,205,220,226,228,232,0,36,10,38,11,436,441,39,442,40],"tindex":"7055d459-db35-11e4-9da0-ef2e2be1404f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:96","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setBaseNode(int)"},"status":-1},{"failures":[64,354,388,407,514],"tindex":"7055d45a-db35-11e4-9da0-df51aedd87f2","variableMapping":{"high":"turnRestrictionBit","len":"turnRestrictionBit","start":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[45,49,463,58,331,334,335],"tindex":"7055d45b-db35-11e4-9da0-512471270a7f","variableMapping":{"scDirMask":"acceptBit","flags":"ferryBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[64,354,388,407,514],"tindex":"7055d45c-db35-11e4-9da0-a94d8d17c2fe","variableMapping":{"flags2":"turnRestrictionBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"turnRestrictionBit","flags1":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[29,47,50,463,30,0,1,31,32,429,33,34,430,35,2,3,36,4,5,6,7,8,433,9,37,10,38,11,441,39,40],"tindex":"7055d45d-db35-11e4-9da0-d1bf660dcf33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[26,58,59,60,62,63,64,65,69,70,71,358,15,16,360,362,363,17,366,367,368,372,373,18,374,376,378,19,381,382,384,385,386,20,387,21,391,393,394,22,397,398,399,403,404,405,23,406,24,410,412,413,25,416,417,418,507,508,421],"tindex":"7055d45e-db35-11e4-9da0-45e1e4db3697","variableMapping":{"val":"highway","existing":"highway","key":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[45,46,29,47,48,49,50,52,53,463,54,56,57,26,58,59,60,61,62,63,64,65,67,68,69,70,71,515,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,99,114,126,127,128,129,131,132,133,134,135,136,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,516,517,518,519,520,521,522,523,524,525,526,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,337,338,339,340,341,342,400,401,422,423,426,427,30,0,1,31,32,429,33,34,430,35,2,431,3,36,4,5,6,7,432,8,433,9,37,10,38,434,11,436,437,438,439,440,441,39,442,443,444,40,446,447,448,449,450,451,452,453,454,455,456,457],"tindex":"7055d45f-db35-11e4-9da0-bd7521a9b56a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[339,340],"tindex":"7055d460-db35-11e4-9da0-a981031aee54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[99,207,251,297],"tindex":"7055d461-db35-11e4-9da0-5b0113459c7b","variableMapping":{"this":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[364,379,395,414],"tindex":"7055d462-db35-11e4-9da0-37fb78b16b26","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"7055d463-db35-11e4-9da0-0dd5311b5c71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[358,362,363,366,367,374,378,381,384,386,393,394,397,398,403,405,412,413,416,417],"tindex":"7055d464-db35-11e4-9da0-a9e5737d08c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[26,513],"tindex":"7055fa75-db35-11e4-9da0-9bd1db425de0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"7055fa76-db35-11e4-9da0-1d2419e796e4","variableMapping":{"high":"defaultL","highKey":"defaultL","key":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"7055fa77-db35-11e4-9da0-13e65fab6eb6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[383,384,385,386,20,387,21,388,389,390,391,392,393,394,395,396,22,397,43,398,399,400,401,402,403,404,405,23,406,24,407,408,409,410,411,412,413,414,415,25,416,44,417,418,419],"tindex":"7055fa78-db35-11e4-9da0-95620169795c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[],"tindex":"7055fa79-db35-11e4-9da0-ef67ddf8e065","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[45,46,29,47,48,49,50,52,53,463,54,56,57,26,58,59,60,61,62,63,64,65,67,68,69,70,71,515,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,527,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,528,324,325,330,337,338,339,340,341,342,400,401,422,423,424,425,426,427,30,0,1,31,32,429,33,34,430,35,2,431,3,36,4,5,6,7,432,8,433,9,37,10,38,434,11,436,437,438,439,440,441,39,442,443,444,40,446,446,447,447,448,448,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456,457,457],"tindex":"7055fa7a-db35-11e4-9da0-bb53fa3f8be1","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"7055fa7b-db35-11e4-9da0-a120cd1857b4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[367,372,18,374,384,398,403,417],"tindex":"7055fa7c-db35-11e4-9da0-095cfde9d75b","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"7055fa7d-db35-11e4-9da0-d364bfc29031","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"7055fa7e-db35-11e4-9da0-df883f19364c","variableMapping":{"max":"maxTurnCosts","tmpSize":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[29,47,48,49,50,53,463,324,30,0,1,31,32,429,33,34,430,35,2,3,36,4,5,6,7,8,433,9,37,10,38,11,441,39,40],"tindex":"7055fa7f-db35-11e4-9da0-7145ae4e277e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"70562190-db35-11e4-9da0-7f4d7511b694","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[45,29,47,48,49,50,52,53,463,54,58,59,60,61,62,63,65,67,69,467,468,470,471,77,82,83,84,85,472,473,474,475,114,478,141,142,143,145,148,149,150,168,169,170,491,188,191,196,217,223,228,230,231,235,240,261,267,272,274,275,278,281,286,307,313,318,320,321,502,400,401,426,427,433,446,447,449,450,451,452,453,454,456,457],"tindex":"70562191-db35-11e4-9da0-6d8e57715964","variableMapping":{"turnCostsCount":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"70562192-db35-11e4-9da0-1d30e8fedced","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"70562193-db35-11e4-9da0-93a258760486","variableMapping":{"flags":"lastTime","mask":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"705648a4-db35-11e4-9da0-999f1d393659","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[],"tindex":"705648a5-db35-11e4-9da0-a36743eaf09f","variableMapping":{"index":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":432,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":447,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":14,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":135,"com.graphhopper.GraphHopperAPITest.testNoLoad":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":89,"com.graphhopper.reader.OSMReaderTest.testFerry":26,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":73,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":169,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":46,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":296,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":380,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":275,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":109,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":165,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":477,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":495,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":442,"com.graphhopper.GraphHopperTest.testPrepare":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":38,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":258,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":462,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":2,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":527,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":19,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":87,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":341,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":384,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":517,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":1,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":149,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":321,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":21,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":278,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":196,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":461,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":40,"com.graphhopper.GraphHopperTest.testLoadOSM":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":156,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":520,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":150,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":420,"com.graphhopper.reader.OSMReaderTest.testSort":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":397,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":282,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":480,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":270,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":122,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":453,"com.graphhopper.storage.RAMDataAccessTest.testHeader":496,"com.graphhopper.routing.DijkstraTest.initializationError":458,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":515,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":317,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":501,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":221,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":247,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":279,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":291,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":512,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":23,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":368,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":173,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":4,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":164,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":171,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":32,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":198,"com.graphhopper.coll.OSMIDMapTest.testGetLong":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":300,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":306,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":213,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":191,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":215,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":260,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":358,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":297,"com.graphhopper.GraphHopperAPITest.testLoad":324,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":195,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":519,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":328,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":252,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":242,"com.graphhopper.storage.LevelGraphStorageTest.testClone":200,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":513,"com.graphhopper.reader.OSMReaderTest.testBarriers":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":287,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":34,"com.graphhopper.util.GHUtilityTest.testCopy":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":182,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":364,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":137,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":499,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":377,"com.graphhopper.routing.PathTest.testFindInstruction":427,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":288,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":460,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":72,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":334,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":229,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":405,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":271,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":256,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":315,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":414,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":445,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":94,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":238,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":526,"com.graphhopper.util.InstructionListTest.testWayList2":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":157,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":20,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":528,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":320,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":369,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":385,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":400,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":204,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":478,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":388,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":298,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":33,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":241,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":62,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":479,"com.graphhopper.routing.AStarTest.initializationError":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":433,"com.graphhopper.coll.OSMIDMapTest.testGet":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":295,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":335,"com.graphhopper.routing.PathBidirRefTest.testExtract":422,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":391,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":177,"com.graphhopper.storage.RAMDataAccessTest.testCopy":492,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":482,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":390,"com.graphhopper.storage.RAMDataAccessTest.testSegments":498,"com.graphhopper.util.GHUtilityTest.testSort2":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":5,"com.graphhopper.reader.OSMReaderTest.testMain":59,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":192,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":43,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":178,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":283,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":207,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":211,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":232,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":510,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":208,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":450,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":403,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":518,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":214,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":70,"com.graphhopper.storage.StorablePropertiesTest.testStore":502,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":491,"com.graphhopper.storage.GraphHopperStorageTest.testClone":244,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":27,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":505,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":351,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":183,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":95,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":186,"com.graphhopper.routing.PathTest.testTime":425,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":363,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":230,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":201,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":356,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":159,"com.graphhopper.reader.OSMReaderTest.testRelation":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":108,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":219,"com.graphhopper.util.GHUtilityTest.testSortDirected":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":416,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":503,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":486,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":449,"com.graphhopper.GraphHopperTest.testFootOnly":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":373,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":349,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":488,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":172,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":508,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":104,"com.graphhopper.search.NameIndexTest.testCreate":475,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":497,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":446,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":522,"com.graphhopper.routing.QueryGraphTest.testOneWay":455,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":148,"com.graphhopper.reader.OSMReaderTest.testWithBounds":69,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":500,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":44,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":319,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":338,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":110,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":336,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":507,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":197,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":382,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":309,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":302,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":240,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":0,"com.graphhopper.util.InstructionListTest.testWayList":83,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":389,"com.graphhopper.GraphHopperAPITest.testDisconnected179":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":96,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":91,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":504,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":412,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":107,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":516,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":396,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":48,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":246,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":142,"com.graphhopper.routing.util.EncodedValueTest.testSwap":509,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":443,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":383,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":3,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":459,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":39,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":360,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":22,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":37,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":180,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":521,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":399,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":234,"com.graphhopper.routing.PathTest.testWayList":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":348,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":13,"com.graphhopper.coll.OSMIDMapTest.testGet2":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":10,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":483,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":225,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":464,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":308,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":395,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":257,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":329,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":174,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":175,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":493,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":487,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":409,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.util.GHUtilityTest.testSort":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":153,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":511,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":394,"com.graphhopper.search.NameIndexTest.testPut":473,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":322,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":145,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":128,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":524,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":406,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":452,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":401,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":280,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":359,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":370,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":465,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":303,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":337,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":525,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":114,"com.graphhopper.routing.PathTest.testFound":424,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":54,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":421,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":227,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":28,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":393,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":299,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":474,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":99,"com.graphhopper.util.InstructionListTest.testEmptyList":81,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":249,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":489,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":355,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":345,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":344,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":381,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":6,"com.graphhopper.reader.PrinctonReaderTest.testRead":56,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":170,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":98,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":88,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":304,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":410,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":514,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":506,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":404,"com.graphhopper.reader.OSMReaderTest.testFoot":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":112,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":457,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":154,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":231,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":371,"com.graphhopper.reader.OSMReaderTest.testOneWay":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":155,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":253,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":268,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":378,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":485,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":106,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":438,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":444,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":436,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":484,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":102,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":448,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":237,"com.graphhopper.routing.PathBidirRefTest.testExtract2":423,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":523,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":30,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":158,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":472,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":266,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":130,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":367,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":125,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":331,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":441,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":151,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":269,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":79,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":353,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":261,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":181,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":494,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":92,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":419,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":354,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":8,"com.graphhopper.GraphHopperTest.testPrepareOnly":45,"com.graphhopper.GraphHopperTest.testVia":29,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":90,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":67,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":187,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":85,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":265,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":332,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":105,"com.graphhopper.routing.AStarBidirectionTest.initializationError":428,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":343,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":226,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":224,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":281}}]
