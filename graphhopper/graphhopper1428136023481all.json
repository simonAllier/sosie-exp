[{"failures":[],"tindex":"5f64f1a0-daa4-11e4-bcd2-f92670972feb","variableMapping":{"allBits":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[0],"tindex":"5f6518b1-daa4-11e4-bcd2-d735f2736b6b","variableMapping":{"edgePointer":"flags","edgeEntryBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[1,2,3],"tindex":"5f6518b2-daa4-11e4-bcd2-55a12785e258","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[4,2,5],"tindex":"5f6518b3-daa4-11e4-bcd2-910b7e39bbdf","variableMapping":{"sacScale":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5f6518b4-daa4-11e4-bcd2-ad385b81b98b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[6],"tindex":"5f653fc5-daa4-11e4-bcd2-3f4a509fff02","variableMapping":{"index":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[1,2,5],"tindex":"5f653fc6-daa4-11e4-bcd2-556caab83d80","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"5f653fc7-daa4-11e4-bcd2-efe4c35dbb99","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[6],"tindex":"5f653fc8-daa4-11e4-bcd2-8f74ec4d3dee","variableMapping":{"str":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,1,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,4,57,58,2,59,60,61,5,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"5f658de9-daa4-11e4-bcd2-85df0c35f7cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"secondary\") , java.util.Map<java.lang.String, java.lang.Integer>.get(\"motorway\"))"},"status":-1},{"failures":[],"tindex":"5f658dea-daa4-11e4-bcd2-6904677ec1a6","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[86],"tindex":"5f658deb-daa4-11e4-bcd2-4d25aad3a6cf","variableMapping":{"turnCostsCount":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"5f658dec-daa4-11e4-bcd2-bdc29483206f","variableMapping":{"tmp":"hash","initializedCounter":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[279],"tindex":"5f658ded-daa4-11e4-bcd2-5993521929de","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[7,9,10,11,13,16,388,26,27,389,390,391,32,1,42,43,44,45,46,47,48,49,50,51,52,54,392,393,394,395,396,92,98,102,105,108,133,153,158,179,185,190,193,201,203,238,240,253,274,279,280,285,288,397,398,399,400,401,402,403,291,294,299,320,326,331,334,404,405,406,407,345,350,371,377,382,385,408,409,410,411,412,413,414,415],"tindex":"5f658dee-daa4-11e4-bcd2-17628d7634c3","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[],"tindex":"5f658def-daa4-11e4-bcd2-b13bde4c6061","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:506","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"5f658df0-daa4-11e4-bcd2-41d04c90d584","variableMapping":{"minDistance":"weight","rMin":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[0],"tindex":"5f658df1-daa4-11e4-bcd2-87cf9ae17800","variableMapping":{"closestEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"5f65b502-daa4-11e4-bcd2-f9ec74cf657d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[416,417,418],"tindex":"5f65b503-daa4-11e4-bcd2-f1c5a3493091","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"shift","sign":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"5f65b504-daa4-11e4-bcd2-374420c3e014","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[7,8,9,10,13,15,388,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,146,147,148,149,150,151,196,198,338,340,343],"tindex":"5f65b505-daa4-11e4-bcd2-e35ad48b1e1e","variableMapping":{"size":"index","index":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[7,8,9,10,11,12,13,15,16,388,17,19,20,1,41,42,43,44,45,46,47,48,49,50,51,52,54,122,126,127,130,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"tindex":"5f65dc16-daa4-11e4-bcd2-cf6e58f4359b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"5f65dc17-daa4-11e4-bcd2-0711c3a5e921","variableMapping":{"currentBucket":"x1","retBucket":"x1","currentIndex":"x2","bucketSize":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"5f65dc18-daa4-11e4-bcd2-b3e6c3a94df2","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"5f65dc19-daa4-11e4-bcd2-67ad1bb181c7","variableMapping":{"node":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":0},{"failures":[],"tindex":"5f65dc1a-daa4-11e4-bcd2-a3dff33214bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:346","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":0},{"failures":[7,9,10,11,12,13,15,16,388,17,19,20,22,23,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,1,41,42,43,44,45,46,47,48,49,50,51,52,54,419,0,76,83,84,85,86,87,88,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,221,222,223,224,225,226,228,229,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,264,279,291,293,294,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,420,421,404,422,423,405,406,407,337,338,339,340,341,343,344,345,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"5f662a3b-daa4-11e4-bcd2-73b0e7ba1b8f","variableMapping":{"i":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"5f662a3c-daa4-11e4-bcd2-e1ba824bb732","variableMapping":{"nodeB":"start","edgeId":"key","nodeA":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"5f662a3d-daa4-11e4-bcd2-9768ade932ee","variableMapping":{"high":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"5f662a3e-daa4-11e4-bcd2-b5f542b1b907","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"5f662a3f-daa4-11e4-bcd2-5f6a8e9079f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[10,32,119,132,134,138,140,141,142,143,144,146,148,150,151,338,340,343],"tindex":"5f662a40-daa4-11e4-bcd2-fb02c82d81a6","variableMapping":{"red":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"5f662a41-daa4-11e4-bcd2-13dca4f71eb1","variableMapping":{"flags":"encoded","tmpValue":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"5f662a42-daa4-11e4-bcd2-5d65a72c460a","variableMapping":{"dataAccess":"location","type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:177","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"SYNC\"))\n    com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"5f662a43-daa4-11e4-bcd2-97ea1ab6cde3","variableMapping":{"resultOrientation":"decDist2DSum","orientation":"speed","java.lang.Math.PI":"restDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[113,114,123,125,136],"tindex":"5f665154-daa4-11e4-bcd2-d9c9a4748a4e","variableMapping":{"flags":"flags","nodeFlags":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[7,8,9,10,11,12,13,15,16,388,17,19,20,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,1,41,42,43,44,45,46,47,48,49,50,51,52,54,419,0,76,83,84,85,86,87,88,90,91,92,93,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,221,222,424,223,224,225,226,228,229,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,264,279,291,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,425,420,421,404,422,426,427,423,405,406,407,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"5f665155-daa4-11e4-bcd2-e948df84be03","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[7,8,9,10,11,12,13,15,16,388,17,19,20,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,1,41,42,43,44,45,46,47,48,49,50,51,52,54,419,0,76,83,84,85,86,87,88,90,91,92,93,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,424,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"5f665156-daa4-11e4-bcd2-113f99877e06","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"5f667867-daa4-11e4-bcd2-91bd84b621b4","variableMapping":{"sacScale":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"5f667868-daa4-11e4-bcd2-9d499ebbfaed","variableMapping":{"flags":"oldRelationFlags","tmpValue":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[7,12,388,41,77,81],"tindex":"5f667869-daa4-11e4-bcd2-65cb2d2e590a","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"5f66786a-daa4-11e4-bcd2-11a727c73b01","variableMapping":{"highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"5f66786b-daa4-11e4-bcd2-6b432b8ce7d1","variableMapping":{"max":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[428,429,430,431,432,116,119,120,122,129,131,132,133,134,135,136,144,146,150],"tindex":"5f66786c-daa4-11e4-bcd2-1dbb5028a01d","variableMapping":{"mKeys":"elem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:62","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-1},{"failures":[],"tindex":"5f66786d-daa4-11e4-bcd2-2dd79797d5b7","variableMapping":{"storedKey":"flags","key":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-2},{"failures":[0],"tindex":"5f66786e-daa4-11e4-bcd2-9d936a8d9131","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[12,29,36,37,39,40,55,56,4,57,58,2,59,60,61,5,62,63,64,65,66,67,68,69,70,73,78,90,91,92,93,101,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,215,222,235,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"5f669f7f-daa4-11e4-bcd2-f540021763cf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-1},{"failures":[85,86],"tindex":"5f669f80-daa4-11e4-bcd2-b7eca5756548","variableMapping":{"compressionLevel":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[],"tindex":"5f669f81-daa4-11e4-bcd2-4bb17ffadfee","variableMapping":{"y1":"orientation","x1":"orientation","y2":"java.lang.Math.PI","x2":"baseOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"5f669f82-daa4-11e4-bcd2-91b3b6f5867d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[47,64,433,71,434],"tindex":"5f669f83-daa4-11e4-bcd2-c5abcbe82b7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[],"tindex":"5f669f84-daa4-11e4-bcd2-e189dec6466a","variableMapping":{"java.lang.Double.NaN":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","com.graphhopper.reader.OSMReader.EMPTY":"val","id":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:482","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[7,9,10,11,13,15,16,388,25,26,27,32,1,42,43,44,45,46,47,48,49,50,51,52,54,392,393,395,396,419,0,92,97,98,100,101,102,104,105,108,133,153,158,179,185,190,193,201,202,203,223,224,225,226,228,238,239,240,435,397,398,399,400,401,402,403,291,294,299,320,326,331,334,345,350,371,377,382,385,436,408,409,410,411,412,413,414,437],"tindex":"5f669f85-daa4-11e4-bcd2-5f3d0b06a4a9","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[7,10,11,13,16,26,389,390,391,32,1,42,43,44,45,46,47,48,49,50,51,52,54,392,394,92,98,105,108,133,153,179,185,190,201,238,274,279,280,285,397,400,401,402,403,291,294,320,326,331,405,406,345,371,377,382,408,411,412,413,414],"tindex":"5f669f86-daa4-11e4-bcd2-6d0584f6b42b","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"5f669f87-daa4-11e4-bcd2-1dca6552fc1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failures":[],"tindex":"5f669f88-daa4-11e4-bcd2-159631f0df65","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"locked","v":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"5f669f89-daa4-11e4-bcd2-6398ea7d040c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"5f66c69a-daa4-11e4-bcd2-032ee31681c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[430,438],"tindex":"5f66c69b-daa4-11e4-bcd2-77b4c1393096","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"5f66edac-daa4-11e4-bcd2-f9420e505297","variableMapping":{"eleDelta":"key","decEleSum":"key","fullDist2D":"key","decDist2DSum":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[7,9,10,11,12,13,15,16,388,17,19,20,40,1,41,42,43,44,45,47,48,49,51,52,54,114,115,116,119,120,122,123,125,126,128,129,130,131,132,134,135,136,140,146,150,152,202,207,208,239,244,245,293,420,423,344],"tindex":"5f66edad-daa4-11e4-bcd2-738421d328ab","variableMapping":{"len":"bytes","start":"bytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[],"tindex":"5f66edae-daa4-11e4-bcd2-3395a2b5b878","variableMapping":{"numTiles":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":0},{"failures":[],"tindex":"5f66edaf-daa4-11e4-bcd2-fdec1b06de60","variableMapping":{"latSimilar":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"5f66edb0-daa4-11e4-bcd2-99db46cbee21","variableMapping":{"high":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG","guess":"weightLong","low":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"5f66edb1-daa4-11e4-bcd2-459195f216cd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[439,440],"tindex":"5f66edb2-daa4-11e4-bcd2-616716bd96f0","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[439,441,442,443,444,445,6,446,440,447,448],"tindex":"5f66edb3-daa4-11e4-bcd2-b53b6b616eb6","variableMapping":{"flags":"encoded","tmpValue":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"5f66edb4-daa4-11e4-bcd2-0beff26775f4","variableMapping":{"gradient":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","yend":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"5f66edb5-daa4-11e4-bcd2-d58476e5c4cc","variableMapping":{"lastIndex":"shift","fromIndex":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[7,9,10,11,13,16,388,26,27,389,390,391,32,1,42,43,44,45,46,47,48,49,50,51,52,54,392,393,394,395,396,92,98,102,105,108,133,153,158,179,185,190,193,201,203,238,240,253,274,279,280,285,288,397,398,399,400,401,402,403,291,294,299,320,326,331,334,404,405,406,407,345,350,371,377,382,385,408,409,410,411,412,413,414,415],"tindex":"5f66edb6-daa4-11e4-bcd2-c965570c2e26","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[0],"tindex":"5f66edb7-daa4-11e4-bcd2-0d280e7ff513","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"5f66edb8-daa4-11e4-bcd2-3336d9f9fb9e","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"5f66edb9-daa4-11e4-bcd2-b147c76130f2","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5f66edba-daa4-11e4-bcd2-41274f2cbea4","variableMapping":{"str":"val","name":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-2},{"failures":[442,445,446,448],"tindex":"5f6713cb-daa4-11e4-bcd2-3f6b6c17afe6","variableMapping":{"synched":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[338,343],"tindex":"5f6713cc-daa4-11e4-bcd2-c93c811d630f","variableMapping":{"edgeCount":"index","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:373","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException((\"too many edges. new edge id would be negative. \" + com.graphhopper.storage.GraphHopperStorage.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"5f6713cd-daa4-11e4-bcd2-e329a2154efd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"5f6713ce-daa4-11e4-bcd2-7b723551eae4","variableMapping":{"distance":"longTripsSpeed","speed":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[146,150,337],"tindex":"5f6713cf-daa4-11e4-bcd2-c38340eca083","variableMapping":{"initialized":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"5f6713d0-daa4-11e4-bcd2-333b7f203653","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":0},{"failures":[1],"tindex":"5f6713d1-daa4-11e4-bcd2-1f1d087eed4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[3],"tindex":"5f6713d2-daa4-11e4-bcd2-9baba0e93aa2","variableMapping":{"com.graphhopper.util.Constants.VERSION":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:85","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"5f6713d3-daa4-11e4-bcd2-a129339d957a","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[449,450,451,452,453,454,455,456,457,458,459,460,199,205,207,208,236,242,244,245],"tindex":"5f6713d4-daa4-11e4-bcd2-8ba1233641d4","variableMapping":{"workerThreads":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"5f6713d5-daa4-11e4-bcd2-d1e16511cb61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:145","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5f6713d6-daa4-11e4-bcd2-e996ee7e368d","variableMapping":{"dLat":"indexDivisor","dLon":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"5f6713d7-daa4-11e4-bcd2-2fe6069d6bac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[9,113,114,115,116,117,119,120,122,123,125,126,127,128,129,130,132,134,135,136,137,140,147,151],"tindex":"5f6713d8-daa4-11e4-bcd2-ef1ef3cc5ded","variableMapping":{"fwdFaster":"distance","incDist2DSum":"dist","fwdSlower":"distance","fullDist2D":"dist","restDist2D":"dist","speed":"distance","decDist2DSum":"dist"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"5f6713d9-daa4-11e4-bcd2-2d46b898b42a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"5f673aea-daa4-11e4-bcd2-c7621aadba0c","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"5f673aeb-daa4-11e4-bcd2-795b3801ba83","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[1,2,3],"tindex":"5f673aec-daa4-11e4-bcd2-97d5944260a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"5f673aed-daa4-11e4-bcd2-67d0af5056c0","variableMapping":{"this":"g","toNodeId":"removed","newEdgeId":"removed","fromNodeId":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:352","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"5f673aee-daa4-11e4-bcd2-0b7e59989a96","variableMapping":{"shift":"sLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"5f673aef-daa4-11e4-bcd2-2743a1c5334b","variableMapping":{"line":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"5f673af0-daa4-11e4-bcd2-4748169914e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"5f673af1-daa4-11e4-bcd2-eb84d2cbe970","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"5f673af2-daa4-11e4-bcd2-7faee59e7254","variableMapping":{"mask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[7,8,9,10,11,12,13,15,16,388,17,19,20,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,1,41,42,43,44,45,46,47,48,49,50,51,52,54,419,0,76,83,84,85,86,87,88,92,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,221,222,223,224,225,226,228,229,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,264,279,291,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,425,420,421,404,422,426,427,423,405,406,407,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"5f676203-daa4-11e4-bcd2-f99c9bbd881a","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":376,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":131,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":89,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":342,"com.graphhopper.GraphHopperAPITest.testNoLoad":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":254,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":36,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":202,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":309,"com.graphhopper.coll.CompressedArrayTest.testCompress":450,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":142,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":274,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":198,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":148,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":137,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":176,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":432,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":123,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":446,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":23,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":87,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":121,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":239,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":334,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":447,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":291,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":457,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":350,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":151,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":246,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":422,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":240,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":73,"com.graphhopper.reader.OSMReaderTest.testSort":43,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":295,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":409,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":188,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":153,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":287,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":104,"com.graphhopper.routing.DijkstraTest.initializationError":111,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":330,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":415,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":375,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":165,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":292,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":299,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":360,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":206,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":127,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":197,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":204,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":117,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":352,"com.graphhopper.coll.OSMIDMapTest.testGetLong":395,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":319,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":367,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":345,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":369,"com.graphhopper.coll.CompressedArrayTest.testCompress2":449,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":178,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":310,"com.graphhopper.GraphHopperAPITest.testLoad":19,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":349,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":74,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":170,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":160,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":3,"com.graphhopper.storage.LevelGraphStorageTest.testClone":354,"com.graphhopper.reader.OSMReaderTest.testBarriers":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":433,"com.graphhopper.util.GHUtilityTest.testCopy":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":215,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":220,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":402,"com.graphhopper.routing.PathTest.testFindInstruction":93,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":301,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":428,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":29,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":80,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":383,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":189,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":174,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":314,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":344,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":72,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":96,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":356,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":259,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":407,"com.graphhopper.util.InstructionListTest.testWayList2":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":247,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":194,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":440,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":418,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":419,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":434,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":311,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":119,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":159,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":45,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":408,"com.graphhopper.routing.AStarTest.initializationError":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":133,"com.graphhopper.coll.OSMIDMapTest.testGet":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":308,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":81,"com.graphhopper.routing.PathBidirRefTest.testExtract":109,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":371,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":210,"com.graphhopper.storage.RAMDataAccessTest.testCopy":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":280,"com.graphhopper.storage.RAMDataAccessTest.testSegments":401,"com.graphhopper.util.GHUtilityTest.testSort2":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":128,"com.graphhopper.reader.OSMReaderTest.testMain":42,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":318,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":458,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":211,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":4,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":296,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":361,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":365,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":386,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":101,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":323,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":421,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":368,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":52,"com.graphhopper.storage.GraphHopperStorageTest.testClone":162,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":5,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":60,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":172,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":260,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":340,"com.graphhopper.routing.PathTest.testTime":91,"com.graphhopper.util.BitUtilLittleTest.testToFloat":390,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":384,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":355,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":66,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":273,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":373,"com.graphhopper.util.GHUtilityTest.testSortDirected":35,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":438,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":413,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":100,"com.graphhopper.GraphHopperTest.testFootOnly":388,"com.graphhopper.util.BitUtilLittleTest.testToInt":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":2,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":269,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":400,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":97,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":427,"com.graphhopper.routing.QueryGraphTest.testOneWay":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":250,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":238,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":451,"com.graphhopper.reader.OSMReaderTest.testWithBounds":51,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":403,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":435,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":84,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":332,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":275,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":417,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":351,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":347,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":59,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":315,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":158,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":114,"com.graphhopper.util.BitUtilLittleTest.testToBitString":389,"com.graphhopper.util.InstructionListTest.testWayList":26,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":191,"com.graphhopper.GraphHopperAPITest.testDisconnected179":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":261,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":256,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":272,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":289,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":164,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":149,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":182,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":125,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":147,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":62,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":297,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":135,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":157,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":213,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":426,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":152,"com.graphhopper.routing.PathTest.testWayList":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":265,"com.graphhopper.coll.OSMIDMapTest.testGet2":393,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":136,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":379,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":321,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":175,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":75,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":207,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":208,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":398,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":209,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":430,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":443,"com.graphhopper.util.GHUtilityTest.testSort":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":278,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":459,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":200,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":228,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":231,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":405,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":229,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":293,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":69,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":316,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":83,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":406,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":364,"com.graphhopper.routing.PathTest.testFound":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":279,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":17,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":381,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":339,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":312,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":429,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":264,"com.graphhopper.util.InstructionListTest.testEmptyList":24,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":55,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":129,"com.graphhopper.reader.PrinctonReaderTest.testRead":39,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":203,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":263,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":396,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":253,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":317,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":437,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":416,"com.graphhopper.reader.OSMReaderTest.testFoot":41,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":244,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":385,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":456,"com.graphhopper.reader.OSMReaderTest.testOneWay":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":245,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":171,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":186,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":329,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":412,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":180,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":143,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":460,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":141,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":232,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":411,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":76,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":267,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":99,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":53,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":155,"com.graphhopper.routing.PathBidirRefTest.testExtract2":110,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":423,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":248,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":445,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":184,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":47,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":241,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":187,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":34,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":63,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":179,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":214,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":399,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":257,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":303,"com.graphhopper.GraphHopperTest.testPrepareOnly":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":132,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":255,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":49,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":341,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":28,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":183,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":78,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":48,"com.graphhopper.routing.AStarBidirectionTest.initializationError":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":270,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":67,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":380,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":378,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":294}}]
