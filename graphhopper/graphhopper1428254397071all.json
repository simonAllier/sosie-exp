[{"failures":[],"tindex":"fb8fa2b1-dbb7-11e4-9bc7-55dbffb16889","variableMapping":{"weightLong":"relBitMask","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[0,1],"tindex":"fb8fc9c2-dbb7-11e4-9bc7-af64818f84e8","variableMapping":{"empty":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"tindex":"fb906603-dbb7-11e4-9bc7-ed37de6f3330","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"segmentSizeIntsPower","speed":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[236,237,238,239,240,241,242,243,244,245,246],"tindex":"fb906604-dbb7-11e4-9bc7-99a228c84be9","variableMapping":{"name":"highway","value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:71","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException((((\"negative \" + (java.lang.String)) + \" value not allowed! \") + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"fb906605-dbb7-11e4-9bc7-79c936838dc3","variableMapping":{"line":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-2},{"failures":[247,248,237,249,250,240,251,252,242,253,254,255,245,256],"tindex":"fb906606-dbb7-11e4-9bc7-7bd862351575","variableMapping":{"fromNode":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[257,258,259,260,261,262,263,264,265,266],"tindex":"fb906607-dbb7-11e4-9bc7-b9b1e9a0700b","variableMapping":{"tmp":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"fb908d18-dbb7-11e4-9bc7-a121c7b5ef1c","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[267,268,269,270,271,272],"tindex":"fb908d19-dbb7-11e4-9bc7-97cceaa910d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[157,158,159,160,163,165,167,168,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,208],"tindex":"fb908d1a-dbb7-11e4-9bc7-ff1ac5ea3ba6","variableMapping":{"entries":"elem","lastEntry":"toSize","this":"this","i":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:190","type":"CtIfImpl","sourcecode":"if (int < (int[][int])) {\n    throw new java.lang.IllegalStateException((\"entries should decrease or stay but was:\" + java.util.Arrays.(java.util.Arrays.toString(int[]))));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-1},{"failures":[],"tindex":"fb908d1b-dbb7-11e4-9bc7-93d468ff8b69","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[273,274,275,276,277,278,279],"tindex":"fb908d1c-dbb7-11e4-9bc7-3b3bdb0cedd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:173","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"fb908d1d-dbb7-11e4-9bc7-415b7bc8c2ce","variableMapping":{"maxY":"costs","deltaX":"costs","stepX":"maxTurnCosts","maxX":"costs","deltaY":"costs","stepY":"maxTurnCosts","x":"maxTurnCosts","y":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:71","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double += double;\n    int += int;\n} else {\n    double += double;\n    int += int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[],"tindex":"fb908d1e-dbb7-11e4-9bc7-cb6c9b855e66","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"fb908d1f-dbb7-11e4-9bc7-6d6df2e3a157","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"fb908d20-dbb7-11e4-9bc7-33f7afb3e3fa","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[12,13,14,15,18,280,21,22,281,282,283,284,285,286,287,288,95,96,97,98,101,289,104,105,115,116,117,118,121,290,124,125,144,147,231],"tindex":"fb908d21-dbb7-11e4-9bc7-19523fcfbf93","variableMapping":{"next":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"fb908d22-dbb7-11e4-9bc7-a3be4b11a251","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"fb908d23-dbb7-11e4-9bc7-051afd896d74","variableMapping":{"a":"finishedTo","approx":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"fb908d24-dbb7-11e4-9bc7-8b1908a2d96e","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[291,292,293,294],"tindex":"fb908d25-dbb7-11e4-9bc7-232f0a8bffc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[176,178,182,183,186,195,196,198,199,200,201,202,203,204,206,208,210,211,214,215],"tindex":"fb90b436-dbb7-11e4-9bc7-bb2683f2bd98","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-1},{"failures":[],"tindex":"fb90b437-dbb7-11e4-9bc7-43339917494c","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"fb90b438-dbb7-11e4-9bc7-530207783279","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[2],"tindex":"fb90b439-dbb7-11e4-9bc7-9d15bdb0d778","variableMapping":{"latSimilar":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-2},{"failures":[],"tindex":"fb90b43a-dbb7-11e4-9bc7-6304240c7339","variableMapping":{"tmpNode":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[295],"tindex":"fb90b43b-dbb7-11e4-9bc7-776879d54b23","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[247,242,254],"tindex":"fb90b43c-dbb7-11e4-9bc7-c7d4649a3cfa","variableMapping":{"indexWithMaxDist":"speed","lastIndex":"speed","fromIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[138,295,296,297,298,208,230],"tindex":"fb90b43d-dbb7-11e4-9bc7-1f72873fa7ac","variableMapping":{"precision":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"fb90b43e-dbb7-11e4-9bc7-0d3109e98832","variableMapping":{"osmValue":"this","values":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:151","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    if (java.lang.String.equals(java.lang.Object))\n        return true;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"fb90b43f-dbb7-11e4-9bc7-f347a4411f85","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[207,216,220],"tindex":"fb90b440-dbb7-11e4-9bc7-ab22d84681fc","variableMapping":{"_location":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[273,274,275,276,277,278,279],"tindex":"fb90b441-dbb7-11e4-9bc7-f1d71933883b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:173","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"fb90b442-dbb7-11e4-9bc7-7ba1191e68a4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[],"tindex":"fb90b443-dbb7-11e4-9bc7-6d66fda9187b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:479","type":"CtLocalVariableImpl","sourcecode":"java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null)"},"status":-2},{"failures":[],"tindex":"fb90b444-dbb7-11e4-9bc7-b532971b52b7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[144,148,149],"tindex":"fb90db55-dbb7-11e4-9bc7-474ddcd56b86","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"start","edgeTo":"start","edgeFrom":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"fb90db56-dbb7-11e4-9bc7-01492525574c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"fb90db57-dbb7-11e4-9bc7-9bb900cb8cc2","variableMapping":{"size":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"fb90db58-dbb7-11e4-9bc7-1feabdd3c733","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"fb90db59-dbb7-11e4-9bc7-c3190645d09e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[299,237,242,300,245,301,302],"tindex":"fb90db5a-dbb7-11e4-9bc7-27a82aa01890","variableMapping":{"red":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[],"tindex":"fb90db5b-dbb7-11e4-9bc7-ad57a70d2e2f","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[175,188,190],"tindex":"fb90db5c-dbb7-11e4-9bc7-f3e65055d65f","variableMapping":{"periodicUpdates":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"fb90db5d-dbb7-11e4-9bc7-8154dd1b6305","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[301,303,302],"tindex":"fb90db5e-dbb7-11e4-9bc7-4775240a85cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"fb90db5f-dbb7-11e4-9bc7-09aa9f289b64","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"fb90db60-dbb7-11e4-9bc7-d9c71f9fe93f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"fb90db61-dbb7-11e4-9bc7-a105e6e85ad3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"fb90db62-dbb7-11e4-9bc7-f9e4300363ed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[304,305,306,307,308,82,83,87,88,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323],"tindex":"fb9213e3-dbb7-11e4-9bc7-6f8d7a9d36d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[236,237,238,239,240,241,242,243,244,245,246],"tindex":"fb9213e4-dbb7-11e4-9bc7-83d2c82e9717","variableMapping":{"str":"wayTypeName","j":"wayType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String += \",\\t\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"fb9213e5-dbb7-11e4-9bc7-39e600bb3470","variableMapping":{"y1":"maxTurnCosts","y2":"maxTurnCosts","x1":"maxTurnCosts","x2":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[324,163,167,172,175,176,178,185,187,188,190,191,192],"tindex":"fb9213e6-dbb7-11e4-9bc7-250b5dd88517","variableMapping":{"segmentSizeInBytes":"element","index":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"fb9213e7-dbb7-11e4-9bc7-bfa130603ef3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[325,326,299,236,237,291,327,238,328,239,240,329,241,330,242,331,243,332,292,300,244,245,293,333,246,334,301,294,303,225],"tindex":"fb9213e8-dbb7-11e4-9bc7-99eaa755feae","variableMapping":{"bits":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[],"tindex":"fb9213e9-dbb7-11e4-9bc7-273ea36161be","variableMapping":{"high":"frontIndex","guess":"frontIndex","low":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"fb9213ea-dbb7-11e4-9bc7-8f33db981fa4","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"fb9213eb-dbb7-11e4-9bc7-3d4993d49024","variableMapping":{"len":"segmentSizePower","start":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"fb9213ec-dbb7-11e4-9bc7-8f3d4b8777a5","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"fb9213ed-dbb7-11e4-9bc7-cd5975b7e715","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[267,268,269,271,272],"tindex":"fb9213ee-dbb7-11e4-9bc7-35558a65641e","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"blockByDefault"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[138,301,303,335,207,336,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231],"tindex":"fb9213ef-dbb7-11e4-9bc7-9fcec51d4eba","variableMapping":{"bytePos":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"fb9213f0-dbb7-11e4-9bc7-e563a4cb7359","variableMapping":{"max":"start","tmpSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"fb9213f1-dbb7-11e4-9bc7-170bc4e5b337","variableMapping":{"value":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[337,36,42,44,45,53,59,61,62,257,258,259,260,261,262,264,265,338,339,266],"tindex":"fb9213f2-dbb7-11e4-9bc7-331ad6047cd3","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"lon","com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"lon","weight":"minLonTmp","weightLong":"hash","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"fb923b03-dbb7-11e4-9bc7-010a6970b2c4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[],"tindex":"fb923b04-dbb7-11e4-9bc7-277e37b7929f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[],"tindex":"fb923b05-dbb7-11e4-9bc7-2dae7feff190","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"fb923b06-dbb7-11e4-9bc7-19b259a0483e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"fb923b07-dbb7-11e4-9bc7-c7f0aca61553","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[138,340],"tindex":"fb923b08-dbb7-11e4-9bc7-fdad45334595","variableMapping":{"str":"str","i":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:519","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.String += \"->\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"fb923b09-dbb7-11e4-9bc7-c5a6ea04c46d","variableMapping":{"silent":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"fb923b0a-dbb7-11e4-9bc7-e1ff70ccbbed","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"fb923b0b-dbb7-11e4-9bc7-4943b76ab0bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"fb923b0c-dbb7-11e4-9bc7-4d1a014ea6c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:502","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[138,340],"tindex":"fb923b0d-dbb7-11e4-9bc7-e9bb8f22450d","variableMapping":{"str":"str","edge":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:440","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (\"\\n--- edges \" + int) + \" ---\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[291,292,293],"tindex":"fb923b0e-dbb7-11e4-9bc7-9db05f16d1cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[324,341],"tindex":"fb923b0f-dbb7-11e4-9bc7-17abe05d35a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[238,241,243,246],"tindex":"fb923b10-dbb7-11e4-9bc7-05c193d7a5ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:400","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"fb923b11-dbb7-11e4-9bc7-0f51f6d36ddc","variableMapping":{"dLat":"segmentSizePower","dLon":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":0},{"failures":[170],"tindex":"fb923b12-dbb7-11e4-9bc7-1998e1ff5a80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-1},{"failures":[2,3,4,5,342,343,6,7,8,9,344,345,346,10,11,12,347,348,349,350,351,352,353,13,354,355,14,356,15,16,357,17,18,280,358,359,360,19,361,20,21,22,23,24,362,25,363,364,365,26,27,52,69,75,81,366,367,281,368,369,370,371,372,373,374,282,375,376,283,377,284,378,379,380,285,286,381,382,383,384,385,91,287,288,386,387,388,389,390,391,392,393,394,395,92,93,396,397,398,399,94,95,400,401,402,403,404,405,406,96,407,408,97,409,98,99,410,100,101,289,411,412,413,102,414,103,104,105,415,106,416,107,417,418,419,108,109,110,318,111,112,113,420,421,422,423,114,115,424,425,426,427,428,429,430,116,431,432,117,433,118,119,434,120,121,290,435,436,437,122,438,123,124,125,439,126,440,127,441,442,443,128,129,444,247,299,445,236,248,237,291,446,267,447,327,448,449,450,451,238,452,273,249,328,453,250,239,240,268,454,329,455,456,457,458,241,459,274,251,330,460,146,461,252,462,242,253,269,463,331,464,465,466,243,467,275,332,270,468,296,469,470,276,471,297,298,277,472,473,292,474,475,271,476,150,477,478,479,480,278,481,151,152,482,254,300,483,244,255,245,293,484,272,485,333,486,487,488,489,246,490,279,256,334,491,301,294,492,303,335,493,494,495,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,496,497,195,211,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231],"tindex":"fb926223-dbb7-11e4-9bc7-1f9860278345","variableMapping":{"encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1003","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    throw new java.lang.IllegalArgumentException(((\"Contraction hierarchies preparation \" + \"requires (at the moment) only one vehicle. But was:\") + (com.graphhopper.routing.util.EncodingManager)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"fb926224-dbb7-11e4-9bc7-c7b1b03fe2f9","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"child","sign":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"fb926225-dbb7-11e4-9bc7-1f83067843f9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"fb926226-dbb7-11e4-9bc7-773ff0ae7cc6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[498,156,157,158,159,160,161,162,163,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,336,208,209,212,213],"tindex":"fb926227-dbb7-11e4-9bc7-537afb2a479d","variableMapping":{"allBits":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-1},{"failures":[295],"tindex":"fb926228-dbb7-11e4-9bc7-d9004334009d","variableMapping":{"longSegmentSize":"flags","bufferStart":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"fb926229-dbb7-11e4-9bc7-b96e973c2318","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"fb92622a-dbb7-11e4-9bc7-fff465fc97e9","variableMapping":{"err":"i","dLat":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[278],"tindex":"fb92622b-dbb7-11e4-9bc7-9df16dfe2b23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[8,10,11,12,353,354,19,23,25,26,366,367,281,374,375,384,386,389,393,92,399,94,95,406,407,102,415,107,108,110,112,423,114,115,430,431,122,439,127,128,139,142,144,148,149,474,481,155,157,158,163,164,165,168,169,170,174,177,180,182,183,192,199,202,208,219,231,232,233],"tindex":"fb92622c-dbb7-11e4-9bc7-632a51a4150b","variableMapping":{"high":"dir","highKey":"dir","key":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"fb92622d-dbb7-11e4-9bc7-51e98c61bf28","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"fb92622e-dbb7-11e4-9bc7-ddba39a3ad5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[4,151,152,335,499,169,179],"tindex":"fb92893f-dbb7-11e4-9bc7-539b2d7f46b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:54","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[152],"tindex":"fb928940-dbb7-11e4-9bc7-5923c5ed11fe","variableMapping":{"resultOrientation":"fwdSlower","orientation":"fwdSlower","java.lang.Math.PI":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[343,8,92,500,110,112,207,212,213,214,216],"tindex":"fb928941-dbb7-11e4-9bc7-9d8f6031a399","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[236,244],"tindex":"fb928942-dbb7-11e4-9bc7-c73ba108d835","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":187,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":196,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":295,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":343,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":367,"com.graphhopper.reader.OSMReaderTest.testFerry":218,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":142,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":39,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":336,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":334,"com.graphhopper.storage.MMapDataAccessTest.testSegments":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":116,"com.graphhopper.coll.CompressedArrayTest.testCompress":258,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":466,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":419,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":381,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":35,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":165,"com.graphhopper.GraphHopperTest.testPrepare":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":390,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":445,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":243,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":141,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":148,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":247,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":171,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":177,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":56,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":443,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":110,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":338,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":168,"com.graphhopper.GraphHopperTest.testLoadOSM":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":63,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":57,"com.graphhopper.reader.OSMReaderTest.testSort":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":452,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":146,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":113,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":106,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":92,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":391,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":202,"com.graphhopper.routing.DijkstraTest.initializationError":496,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":440,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":361,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":404,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":318,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":244,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":423,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":330,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":43,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":98,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":174,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":173,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":424,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":357,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":8,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":18,"com.graphhopper.coll.CompressedArrayTest.testCompress2":257,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":250,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":431,"com.graphhopper.GraphHopperAPITest.testLoad":234,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":346,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":408,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":95,"com.graphhopper.storage.LevelGraphStorageTest.testClone":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":149,"com.graphhopper.reader.OSMReaderTest.testBarriers":222,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":293,"com.graphhopper.util.GHUtilityTest.testCopy":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":457,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":275,"com.graphhopper.routing.PathTest.testFindInstruction":154,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":331,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":115,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":139,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":480,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":363,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":483,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":416,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":99,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":321,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":439,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":488,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":492,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":497,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":371,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":397,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":307,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":90,"com.graphhopper.util.InstructionListTest.testWayList2":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":64,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":108,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":427,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":236,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":442,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":151,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":352,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":432,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":28,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":175,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":223,"com.graphhopper.routing.AStarTest.initializationError":494,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":430,"com.graphhopper.routing.PathBidirRefTest.testExtract":193,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":278,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":267,"com.graphhopper.storage.RAMDataAccessTest.testSegments":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":69,"com.graphhopper.util.GHUtilityTest.testSort2":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":184,"com.graphhopper.reader.OSMReaderTest.testMain":220,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":327,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":339,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":273,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":420,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":354,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":15,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":26,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":326,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":199,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":122,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":254,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":17,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":230,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":320,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":109,"com.graphhopper.storage.GraphHopperStorageTest.testClone":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":387,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":277,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":297,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":409,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":274,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":372,"com.graphhopper.routing.PathTest.testTime":499,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":456,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":364,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":349,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":475,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":286,"com.graphhopper.reader.OSMReaderTest.testRelation":302,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":360,"com.graphhopper.util.GHUtilityTest.testSortDirected":134,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":341,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":490,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":198,"com.graphhopper.GraphHopperTest.testFootOnly":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":462,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":29,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":42,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":303,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":482,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":378,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":322,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":195,"com.graphhopper.routing.QueryGraphTest.testOneWay":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":67,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":262,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":55,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":259,"com.graphhopper.reader.OSMReaderTest.testWithBounds":229,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":1,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":279,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":319,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":145,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":382,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":481,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":301,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":11,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":344,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":437,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":471,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":119,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":399,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":170,"com.graphhopper.util.InstructionListTest.testWayList":136,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":446,"com.graphhopper.GraphHopperAPITest.testDisconnected179":235,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":373,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":486,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":233,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":451,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":210,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":403,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":30,"com.graphhopper.routing.util.EncodedValueTest.testSwap":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":166,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":444,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":181,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":493,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":164,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":25,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":472,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":238,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":191,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":398,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":50,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":328,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":395,"com.graphhopper.routing.PathTest.testWayList":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":376,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":470,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":192,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":436,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":450,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":476,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":428,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":45,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":0,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":272,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":239,"com.graphhopper.util.GHUtilityTest.testSort":133,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":385,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":266,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":128,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":37,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":79,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":72,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":255,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":201,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":111,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":268,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":434,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":144,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":89,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":91,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":216,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":335,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":311,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":362,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":448,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":117,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":498,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":314,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":375,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":178,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":458,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":474,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":468,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":467,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":185,"com.graphhopper.reader.PrinctonReaderTest.testRead":232,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":40,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":429,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":366,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":120,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":465,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":485,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":300,"com.graphhopper.reader.OSMReaderTest.testFoot":219,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":265,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":365,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":62,"com.graphhopper.reader.OSMReaderTest.testOneWay":231,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":97,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":105,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":464,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":313,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":380,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":160,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":158,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":312,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":150,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":377,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":197,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":396,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":87,"com.graphhopper.routing.PathBidirRefTest.testExtract2":194,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":241,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":251,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":477,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":487,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":58,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":415,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":473,"com.graphhopper.GraphHopperTest.testFootAndCar":211,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":411,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":240,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":369,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":491,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":188,"com.graphhopper.GraphHopperTest.testPrepareOnly":207,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":80,"com.graphhopper.GraphHopperTest.testVia":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":281,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":227,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":342,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":138,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":414,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":478,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":379,"com.graphhopper.routing.AStarBidirectionTest.initializationError":495,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":460,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":24,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":22,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":112}}]
