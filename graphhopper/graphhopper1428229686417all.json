[{"failures":[],"tindex":"740feb3f-db7e-11e4-a99d-ef0fdccc5a7c","variableMapping":{"initLeafSize":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[],"tindex":"74128350-db7e-11e4-a99d-c78c115fd477","variableMapping":{"bestPath":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"74128351-db7e-11e4-a99d-5fec39a44409","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"74128352-db7e-11e4-a99d-cf0f1369fc63","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"74128353-db7e-11e4-a99d-3d062b56553d","variableMapping":{"len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"741409f4-db7e-11e4-a99d-e5058eb948f7","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[9,10,11,12,13,14,15,16,17,18],"tindex":"74143105-db7e-11e4-a99d-2d17816395a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"74143106-db7e-11e4-a99d-b7e341fa170e","variableMapping":{"tt":"highwayValue","this":"this","trackTypeSpeedMap":"trackTypeSpeedMap","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"74143107-db7e-11e4-a99d-972f75be4657","variableMapping":{"cp":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[31,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,22,131,132,23,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,24,217,218,25,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,302,303,303,0,304,305,306,307,308,309,310,1,2,311,312,313,314,315,316,3,317,318,4,5,319,320,321,322,323,324,325,326,327,328,6,329,7,330,8,331,332,26,333,334,335,336,337,27,28,29,338,30,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"74151b68-db7e-11e4-a99d-3d602fd8c252","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[356],"tindex":"74151b69-db7e-11e4-a99d-db8de419e7d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"74151b6a-db7e-11e4-a99d-7920801d6e65","variableMapping":{"initializedCounter":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"74151b6b-db7e-11e4-a99d-11414de0b070","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[31,19,32,33,34,357,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,22,131,132,23,133,134,135,358,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,24,217,218,25,219,220,221,359,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,360,262,263,264,265,266,267,268,361,269,270,271,272,273,274,275,276,277,278,362,279,280,281,282,283,284,363,364,285,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,286,287,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,356,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,288,289,290,291,466,292,293,294,295,296,297,298,299,300,301,302,303,0,304,467,305,306,307,308,309,310,1,2,311,312,313,314,315,316,3,317,318,4,5,319,320,321,322,323,324,325,326,327,328,6,329,7,330,8,331,332,468,469,26,333,334,335,336,337,27,470,28,29,338,30,471,339,340,341,342,343,344,345,346,347,472,348,349,350,351,352,354,355],"tindex":"7415427c-db7e-11e4-a99d-73d59f63b1f2","variableMapping":{"y":"defaultD","angle":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[473],"tindex":"7415427d-db7e-11e4-a99d-cf9aa3ecd35a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"7415427e-db7e-11e4-a99d-f5c830ba033d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"7415427f-db7e-11e4-a99d-479c855422a9","variableMapping":{"ref":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"74154280-db7e-11e4-a99d-fdbd4af137f2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[279,283,284],"tindex":"74154281-db7e-11e4-a99d-6fc52185b219","variableMapping":{"values":"nodeIndex","i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:323","type":"CtAssignmentImpl","sourcecode":"int[][int] = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"74154282-db7e-11e4-a99d-79de6d72f52a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"74154283-db7e-11e4-a99d-cd258cba8862","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"74154284-db7e-11e4-a99d-fbdd2ae00f19","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"defaultL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"74156995-db7e-11e4-a99d-9369f340df3d","variableMapping":{"red":"connectedId","green":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"74156996-db7e-11e4-a99d-0f0b68603e7b","variableMapping":{"time":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"74156997-db7e-11e4-a99d-d16f97446197","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"74156998-db7e-11e4-a99d-c948ebb9c0c1","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"child","speed":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":0},{"failures":[],"tindex":"74156999-db7e-11e4-a99d-09a443a50129","variableMapping":{"enableIfAssert":"isRoundabout"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":0},{"failures":[363,396,421,437,455],"tindex":"7415699a-db7e-11e4-a99d-4d7725a3f4d9","variableMapping":{"mGarbage":"blockByDefault"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[19,35,36,37,44,46,59,64,67,71,22,23,136,137,138,145,147,160,165,168,172,174,175,176,183,185,198,203,206,210,25,222,223,224,231,233,246,251,254,258,260,262,263,279,283,284,296,299,0,305,306,1,2,311,314,315,316,4,320,323,325,326,332,340,352,354,355],"tindex":"7417174b-db7e-11e4-a99d-4fea3f357230","variableMapping":{"size":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[31,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,21,22,131,132,23,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,24,217,218,25,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,302,303,303,0,304,305,306,307,308,309,310,1,2,311,312,313,314,315,316,3,317,318,4,5,319,320,321,322,323,324,325,326,327,328,6,329,7,330,8,331,332,26,333,334,335,336,337,27,28,29,338,30,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"74173e5c-db7e-11e4-a99d-950f8d9b3d1c","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[474,475,476,477,478,131,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"tindex":"74173e5d-db7e-11e4-a99d-95a5116af953","variableMapping":{"segmentSizeInBytes":"tmp","this":"this","segmentSizeIntsPower":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"74173e5e-db7e-11e4-a99d-bd43b7866b3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"74173e5f-db7e-11e4-a99d-513c301e0069","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:185","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"74173e60-db7e-11e4-a99d-f3374e5341b3","variableMapping":{"keyIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[406,431,447,454],"tindex":"74173e61-db7e-11e4-a99d-9193125c618d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-1},{"failures":[],"tindex":"74173e62-db7e-11e4-a99d-8b565624ee35","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"74173e63-db7e-11e4-a99d-97807a14fae0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[260,0,305,1,2,314,315,316,3,317,318,4,5,319,320,321,322,324,325,326,327,328,6,7,330,8,331,332,334,335,336,337,27,29,338],"tindex":"74173e64-db7e-11e4-a99d-e5b68ab0820e","variableMapping":{"closed":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[313,497,498,499,500],"tindex":"74173e65-db7e-11e4-a99d-837a2cacb1b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"74173e66-db7e-11e4-a99d-77fdd2566286","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"74173e67-db7e-11e4-a99d-3d2e4ff2cfff","variableMapping":{"orientation":"lat","java.lang.Math.PI":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[31,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,95,96,97,98,99,100,101,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,22,132,23,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,185,200,501,483,502,503,504,505,506,485,486,507,508,212,213,214,215,216,24,217,218,25,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,302,303,303,0,304,305,306,307,308,309,310,1,2,311,312,313,314,315,316,3,317,318,4,5,319,320,321,322,323,324,325,326,327,328,6,329,7,330,8,331,332,26,333,334,335,336,337,27,28,29,338,30,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"74176578-db7e-11e4-a99d-f5ac10023803","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[405,430,446,463],"tindex":"74176579-db7e-11e4-a99d-c182983cc852","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[9,10,11,12,14,15,16,17],"tindex":"7417657a-db7e-11e4-a99d-0f59f358a3cf","variableMapping":{"eleDelta":"midLat","decEleSum":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"7417657b-db7e-11e4-a99d-71ca3a077a08","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"7417657c-db7e-11e4-a99d-6759d3a8217a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterator com.graphhopper.util.EdgeSkipIterator = com.graphhopper.util.EdgeSkipExplorer.setBaseNode(com.graphhopper.util.EdgeIteratorState.getAdjNode())"},"status":-2},{"failures":[260,261,0,305,1,2,314,315,316,3,317,318,4,5,319,320,321,322,323,324,325,326,327,328,6,329,7,330,8,331,332,334,335,336,337,27,29,338],"tindex":"7417657d-db7e-11e4-a99d-b36e1941547f","variableMapping":{"allowWrites":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"7417657e-db7e-11e4-a99d-c127b64be5c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[31,36,37,45,48,50,51,53,54,59,61,62,63,65,67,71,72,132,137,138,146,149,151,152,154,155,160,162,163,164,166,168,172,173,483,502,504,485,486,212,213,215,217,218,222,223,224,232,235,237,238,240,241,246,248,249,250,251,252,254,258,259],"tindex":"7417657f-db7e-11e4-a99d-47a3e8dd6ed4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[279,284],"tindex":"74176580-db7e-11e4-a99d-790b5ecdf394","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[37,45,47,48,50,54,62,98,99,100,101,102,103,138,146,148,149,151,155,163,176,184,186,187,189,193,201,217,224,232,234,235,237,241,249,263,264,266,268,269,275,276,279,280,281,282,509,510,511,512,513,26,334,335,336,337,27,28,29,338,30],"tindex":"74176581-db7e-11e4-a99d-638c8b49e06a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:45","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[283,284],"tindex":"74176582-db7e-11e4-a99d-4f35bfb10492","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[281,337,30,340,341,342,343,344,345,346,347,348,349,350,352],"tindex":"74176583-db7e-11e4-a99d-55a042690fc8","variableMapping":{"encodingManager":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1003","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    throw new java.lang.IllegalArgumentException(((\"Contraction hierarchies preparation \" + \"requires (at the moment) only one vehicle. But was:\") + (com.graphhopper.routing.util.EncodingManager)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-1},{"failures":[],"tindex":"74178c94-db7e-11e4-a99d-778aab75f782","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[334,337],"tindex":"74178c95-db7e-11e4-a99d-2de3a599bcc8","variableMapping":{"shift":"encoded","tmpValue":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"741801c6-db7e-11e4-a99d-7fdf36841138","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"741801c7-db7e-11e4-a99d-d5850c148da3","variableMapping":{"version":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"741801c8-db7e-11e4-a99d-a31da65fbae6","variableMapping":{"workerThreads":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[404,429,445,462],"tindex":"741801c9-db7e-11e4-a99d-ab2a08904cdc","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[388,356,413,434],"tindex":"741801ca-db7e-11e4-a99d-975b7a8daa5e","variableMapping":{"turnCostIndex":"speed","nextTurnCostIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[73,79,81,82,514,114,120,122,123,9,10,11,12,13,14,16,17,515,516,18],"tindex":"741801cb-db7e-11e4-a99d-f98456bcde8a","variableMapping":{"tmpDegreeCounter":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"741801cc-db7e-11e4-a99d-df6637163fba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"741801cd-db7e-11e4-a99d-517d25062167","variableMapping":{"wayTypeEncoder":"this","shift":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"741801ce-db7e-11e4-a99d-6f999151da9c","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.RACINGBIKE":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","com.graphhopper.routing.util.EncodingManager.FOOT":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","entryVal":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"741801cf-db7e-11e4-a99d-978104835063","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[449],"tindex":"741801d0-db7e-11e4-a99d-95593e717d1c","variableMapping":{"pavementName":"valueStr","wayTypeName":"valueStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"741801d1-db7e-11e4-a99d-6b953c15d187","variableMapping":{"visitedSum":"estimatedLength"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:880","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.atomic.AtomicLong.set(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-2},{"failures":[287],"tindex":"741801d2-db7e-11e4-a99d-531e303be0b6","variableMapping":{"noNumberValue":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:75","type":"CtIfImpl","sourcecode":"if (long == (int)) {\n    throw new java.lang.IllegalArgumentException((\"Illegal key \" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[212,1,313],"tindex":"741801d3-db7e-11e4-a99d-ad0cc2ed5959","variableMapping":{"from":"edgeState","E_ADDITIONAL":"tmpPrevEdge","to":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:942","type":"CtIfImpl","sourcecode":"if ((int) >= 0)\n    com.graphhopper.util.EdgeIteratorState.setAdditionalField(com.graphhopper.util.EdgeIteratorState.getAdditionalField());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"741801d4-db7e-11e4-a99d-0b0bc1740125","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[517,518],"tindex":"741828e5-db7e-11e4-a99d-99bb25ceae86","variableMapping":{"val":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[389,391,392,393,403,407,519,520,356,414,416,417,418,428,432,435,436,444,448,451,453,461,464,339,340,341,342,344,345,346,347,350,351,352],"tindex":"741828e6-db7e-11e4-a99d-710b9a41ffeb","variableMapping":{"resultOrientation":"speed","orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"741828e7-db7e-11e4-a99d-0b3e6293c25b","variableMapping":{"counter":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"741828e8-db7e-11e4-a99d-8952d2e8300c","variableMapping":{"red":"bitsForEdgeFlags","green":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"741828e9-db7e-11e4-a99d-65a42e5f50cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:394","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"741828ea-db7e-11e4-a99d-b9f80be7102b","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[521,522,523,19,35,56,62,67,69,70,75,76,77,116,117,118,20,22,23,136,157,163,168,170,171,200,24,25,222,243,249,254,256,257,488,493,267,271,272,273,274,286,287,290,291,292,293,295,296,297,299,300,303,330,524,525,526,527,528,26,334,336,27,28,29,338,30,341,342,343,344,345],"tindex":"741828eb-db7e-11e4-a99d-790775091673","variableMapping":{"segmentSizeInBytes":"indexDivisor","length":"indexDivisor","index":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[200],"tindex":"741828ec-db7e-11e4-a99d-87692bd6b96f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[279,283,284],"tindex":"741828ed-db7e-11e4-a99d-dda4c260da14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:99","type":"CtContinueImpl","sourcecode":"continue nextState"},"status":-1},{"failures":[112,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,214,215,216,218,25,221,222,225,228,229,230,235,236,237,239,240,241,242,243,244,245,248,254,255,256,262,265,267,0,305,306,307,308,309,310,1,2,311,312,313,315,316,3,317,318,4,5,319,320,321,322,323,324,325,326,327,328,6,329,7,330,8,331,332,26,333,334,335,27,28,338],"tindex":"741828ee-db7e-11e4-a99d-bf2c66dc3bc1","variableMapping":{"initializedCounter":"a"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"741828ef-db7e-11e4-a99d-fd25d5474afc","variableMapping":{"id":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"741828f0-db7e-11e4-a99d-cd359798342f","variableMapping":{"location":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":0},{"failures":[],"tindex":"741828f1-db7e-11e4-a99d-ff8134bfde4a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"741828f2-db7e-11e4-a99d-e32f665ad9b1","variableMapping":{"size":"value","hash":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"74185003-db7e-11e4-a99d-9384d354cd12","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[19,35,56,62,67,70,75,76,77,98,99,100,101,103,116,117,118,529,22,23,136,157,163,168,171,25,222,243,249,254,257,530,531,532,490,491,533,534,535,536,537,495,496,538,539,267,271,272,273,286,287,290,292,293,295,296,297,299,300,303,330,524,525,527,528,26,333,334,335,336,27,28,29,338,339,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"74185004-db7e-11e4-a99d-f5342b656678","variableMapping":{"maxBits":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[522],"tindex":"74185005-db7e-11e4-a99d-138ad394d3b0","variableMapping":{"heights":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"74185006-db7e-11e4-a99d-3f60e750fc97","variableMapping":{"edgeId":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[],"tindex":"74185007-db7e-11e4-a99d-0f8c0fb43392","variableMapping":{"mask":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"74185008-db7e-11e4-a99d-f94557631d87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[19,35,36,37,39,40,43,44,46,51,53,59,61,64,66,67,71,22,23,136,137,138,140,141,144,145,147,152,154,160,162,165,167,168,172,174,175,176,178,179,182,183,185,190,192,198,200,203,205,206,210,212,216,25,222,223,224,226,227,230,231,233,238,240,246,248,251,253,254,258,260,262,263,264,267,271,272,273,274,277,278,279,280,282,283,285,366,374,377,380,382,384,287,540,289,290,291,296,299,0,304,305,306,307,308,309,1,2,311,312,313,314,315,316,3,317,318,4,5,319,320,321,322,323,324,325,326,327,328,6,329,7,330,8,331,332,26,333,334,335,336,337,27,28,29,338,340,341,343,346,347,348,349,350,352,354,355],"tindex":"74185009-db7e-11e4-a99d-cb081f3d926b","variableMapping":{"shift":"forwardBit","tmpValue":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"7418500a-db7e-11e4-a99d-0339939eac37","variableMapping":{"edgeId":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[],"tindex":"7418500b-db7e-11e4-a99d-db67ec3e0e34","variableMapping":{"visitedCountFrom":"length","visitedCountTo":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"7418500c-db7e-11e4-a99d-eb3def9de1c5","variableMapping":{"res":"lastTime","value":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"7418500d-db7e-11e4-a99d-9340aef137dc","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[19,35,56,62,67,75,77,116,118,541,22,23,136,157,163,168,174,195,200,201,206,503,486,507,508,25,222,243,249,254,530,531,532,490,491,533,534,535,536,537,495,496,538,539,542,543,544,272,273,290,293,296,297,299,300,303,330,524,525,526,527,528,26,335,336,27,29,338,339,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"7418500e-db7e-11e4-a99d-49bb72cbdfd6","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[111,113,213,215,217,267,304,305,306,307,308,309,1,311,313,314,5,322,7,8,332],"tindex":"7418771f-db7e-11e4-a99d-477bc0b72357","variableMapping":{"high":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[389,393,519,414,418,453,472],"tindex":"74187720-db7e-11e4-a99d-e98825dfb640","variableMapping":{"shift":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"74187721-db7e-11e4-a99d-f337b54725bb","variableMapping":{"elem":"this","i":"hash","child":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:172","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":248,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":329,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":24,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":92,"com.graphhopper.GraphHopperAPITest.testNoLoad":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":175,"com.graphhopper.reader.OSMReaderTest.testFerry":339,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":263,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":454,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":117,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":333,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":407,"com.graphhopper.storage.MMapDataAccessTest.testSegments":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":146,"com.graphhopper.coll.CompressedArrayTest.testCompress":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":460,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":70,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":195,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":113,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":492,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":311,"com.graphhopper.GraphHopperTest.testPrepare":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":53,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":415,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":322,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":461,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":276,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":453,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":413,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":483,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":3,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":320,"com.graphhopper.coll.BitSetImplTest.testCopy":510,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":171,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":418,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":22,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":515,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":222,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":499,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":314,"com.graphhopper.GraphHopperTest.testLoadOSM":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":83,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":504,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":77,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":411,"com.graphhopper.reader.OSMReaderTest.testSort":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":429,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":281,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":133,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":536,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":65,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":19,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":208,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":299,"com.graphhopper.routing.DijkstraTest.initializationError":465,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":167,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":541,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":247,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":42,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":131,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":141,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":136,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":448,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":121,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":50,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":326,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":119,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":470,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":4,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":318,"com.graphhopper.coll.OSMIDMapTest.testGetLong":527,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":150,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":156,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":239,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":25,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":241,"com.graphhopper.coll.CompressedArrayTest.testCompress2":9,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":434,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":147,"com.graphhopper.GraphHopperAPITest.testLoad":260,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":359,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":503,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":363,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":47,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":37,"com.graphhopper.storage.LevelGraphStorageTest.testClone":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":137,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":284,"com.graphhopper.reader.OSMReaderTest.testBarriers":343,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":482,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":179,"com.graphhopper.util.GHUtilityTest.testCopy":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":130,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":442,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":463,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":533,"com.graphhopper.routing.PathTest.testFindInstruction":291,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":457,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":138,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":497,"com.graphhopper.coll.BitSetImplTest.testClear":509,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":262,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":368,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":255,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":390,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":66,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":51,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":165,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":151,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":401,"com.graphhopper.coll.BitSetImplTest.testEnsureCapacity":513,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":540,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":466,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":228,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":180,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":477,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":508,"com.graphhopper.util.InstructionListTest.testWayList2":273,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":518,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":84,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":71,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":416,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":170,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":414,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":286,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":230,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":419,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":537,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":148,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":5,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":36,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":344,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":535,"com.graphhopper.routing.AStarTest.initializationError":469,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":330,"com.graphhopper.coll.OSMIDMapTest.testGet":524,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":145,"com.graphhopper.routing.PathBidirRefTest.testExtract":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":369,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":422,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":526,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":125,"com.graphhopper.storage.RAMDataAccessTest.testCopy":530,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":201,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":421,"com.graphhopper.storage.RAMDataAccessTest.testSegments":491,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":89,"com.graphhopper.util.GHUtilityTest.testSort2":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":327,"com.graphhopper.reader.OSMReaderTest.testMain":341,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":219,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":423,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":516,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":430,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":205,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":233,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":237,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":258,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":234,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":388,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":502,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":240,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":351,"com.graphhopper.storage.StorablePropertiesTest.testStore":20,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":488,"com.graphhopper.storage.GraphHopperStorageTest.testClone":39,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":380,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":181,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":215,"com.graphhopper.routing.PathTest.testTime":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":441,"com.graphhopper.util.BitUtilLittleTest.testToFloat":543,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":256,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":227,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":385,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":194,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":245,"com.graphhopper.reader.OSMReaderTest.testRelation":472,"com.graphhopper.util.GHUtilityTest.testSortDirected":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":404,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":538,"com.graphhopper.coll.BitSetImplTest.testNext":511,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":295,"com.graphhopper.GraphHopperTest.testFootOnly":338,"com.graphhopper.util.BitUtilLittleTest.testToInt":544,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":452,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":120,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":476,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":520,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":387,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":190,"com.graphhopper.search.NameIndexTest.testCreate":523,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":490,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":292,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":506,"com.graphhopper.routing.QueryGraphTest.testOneWay":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":87,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":456,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":75,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":11,"com.graphhopper.coll.BitSetImplTest.testToString":512,"com.graphhopper.reader.OSMReaderTest.testWithBounds":350,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":534,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":405,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":487,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":280,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":196,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":370,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":519,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":464,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":152,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":35,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":316,"com.graphhopper.util.BitUtilLittleTest.testToBitString":542,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":68,"com.graphhopper.util.InstructionListTest.testWayList":272,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":420,"com.graphhopper.GraphHopperAPITest.testDisconnected179":261,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":182,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":399,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":355,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":193,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":501,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":210,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":427,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":336,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":41,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":100,"com.graphhopper.routing.util.EncodedValueTest.testSwap":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":312,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":412,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":324,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":468,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":2,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":381,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":135,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":331,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":128,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":484,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":505,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":432,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":31,"com.graphhopper.routing.PathTest.testWayList":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":186,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":375,"com.graphhopper.coll.OSMIDMapTest.testGet2":525,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":332,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":426,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":52,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":364,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":122,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":123,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":531,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":539,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":396,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":498,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":435,"com.graphhopper.util.GHUtilityTest.testSort":268,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":475,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":199,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":425,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.search.NameIndexTest.testPut":521,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":358,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":115,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":103,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":106,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":486,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":392,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":287,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":437,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":409,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":279,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":507,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":200,"com.graphhopper.routing.PathTest.testFound":288,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":30,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":356,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":253,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":494,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":449,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":424,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":149,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":479,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":522,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":185,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":44,"com.graphhopper.util.InstructionListTest.testEmptyList":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":372,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":371,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":462,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":328,"com.graphhopper.reader.PrinctonReaderTest.testRead":354,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":118,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":184,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":528,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":174,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":459,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":529,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":389,"com.graphhopper.reader.OSMReaderTest.testFoot":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":198,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":303,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":81,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":82,"com.graphhopper.reader.OSMReaderTest.testOneWay":352,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":48,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":63,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":166,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":458,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":496,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":395,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":308,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":514,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":313,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":379,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":306,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":495,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":285,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":481,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":188,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":294,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":33,"com.graphhopper.routing.PathBidirRefTest.testExtract2":278,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":485,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":444,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":61,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":108,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":447,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":211,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":365,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":78,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":64,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":361,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":382,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":56,"com.graphhopper.GraphHopperTest.testFootAndCar":337,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":235,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":129,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":532,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":178,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":410,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":474,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":7,"com.graphhopper.GraphHopperTest.testPrepareOnly":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":95,"com.graphhopper.GraphHopperTest.testVia":334,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":176,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":348,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":216,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":60,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":274,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":366,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":191,"com.graphhopper.routing.AStarBidirectionTest.initializationError":362,"com.graphhopper.util.AngleCalcTest.testCombined":517,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":386,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":252,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":250,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":23}}]
