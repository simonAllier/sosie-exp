[{"failures":[],"tindex":"3d0cf151-dbb1-11e4-b918-3503e8c6bf6b","variableMapping":{"gradient":"fwdIncline","yend":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"3d0ddbb2-dbb1-11e4-b918-3b843cbe3d67","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"3d0ddbb3-dbb1-11e4-b918-67757b9cec3c","variableMapping":{"high":"I_SKIP_EDGE1","guess":"I_SKIP_EDGE1","low":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":0},{"failures":[],"tindex":"3d0ddbb4-dbb1-11e4-b918-195584b6b164","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:153","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.Integer, java.lang.Integer>.size()) < 2)\n    return ;\n"},"status":0},{"failures":[0,1,2],"tindex":"3d0ddbb5-dbb1-11e4-b918-ebd51bfadd4b","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"3d0ddbb6-dbb1-11e4-b918-ad03dd289622","variableMapping":{"edgePointer":"unpavedBit","maxEdges":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"3d0e02c7-dbb1-11e4-b918-a33c91d52eff","variableMapping":{"nodeId":"hash","nodeIdOffset":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":0},{"failures":[],"tindex":"3d0e02c8-dbb1-11e4-b918-73c148e30d24","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"finishedFrom","v":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[3,4],"tindex":"3d0e02c9-dbb1-11e4-b918-2f712902eec5","variableMapping":{"currentBucket":"i","currentIndex":"i","bucketSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"3d0e02ca-dbb1-11e4-b918-f12b32c08e28","variableMapping":{"segmentsToMap":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"3d0e02cb-dbb1-11e4-b918-4db6db7739ae","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"3d0e02cc-dbb1-11e4-b918-a544f623971e","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[9,10,11,13,44,14,16,45,20,46,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,39,40,41,42,43],"tindex":"3d0e02cd-dbb1-11e4-b918-15ce7277a83c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,0,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,7,8,9,10,147,148,11,12,149,13,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,40],"tindex":"3d0e02ce-dbb1-11e4-b918-1921e68d124d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[152],"tindex":"3d0e02cf-dbb1-11e4-b918-6df7dbd27ae9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"3d0e02d0-dbb1-11e4-b918-0935226538fa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"tindex":"3d0e02d1-dbb1-11e4-b918-b7d265b0c925","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[],"tindex":"3d0e29e2-dbb1-11e4-b918-b117754097ef","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[57,58,59,6,180,181,121,122,123,182,183,184,185,186,187,188,189,190,191,192,193,194,129,130,131,195,196,197,198,199,200,201,202,203,204,205,206,9,10,147,148,11,149,13,29,33,34,37],"tindex":"3d0e29e3-dbb1-11e4-b918-5f9d85f80417","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"3d0e29e4-dbb1-11e4-b918-7d191a7d9bfa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"3d0e29e5-dbb1-11e4-b918-41a91a3ec9e0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"3d0e29e6-dbb1-11e4-b918-77356978a56c","variableMapping":{"todoBytes":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"3d0e29e7-dbb1-11e4-b918-8782527ca47e","variableMapping":{"len":"oldRelationFlags","start":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3d0e29e8-dbb1-11e4-b918-a56b98cc4a21","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[55,207],"tindex":"3d0e29e9-dbb1-11e4-b918-81a9355e6a5e","variableMapping":{"cp":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"3d0e29ea-dbb1-11e4-b918-a923bac71d86","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"3d0e29eb-dbb1-11e4-b918-3be093ed2a0c","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[208,209,210,211,47,212,213,48,49,50,51,214,215,216,217,218,5,219,220,101,221,103,222,223,224,104,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,106,240,241,242,108,109,243,244,110,245,246,111,247,113,248,249,250,114,251,252,253,254,255,256,257,258,259,260,261,262,263,264,116,117,265,266,267,119,120,268,269,270,271,272,273,274,275,6,180,181,276,121,122,123,182,277,183,184,185,186,187,188,189,190,191,124,125,126,127,128,278,279,280,281,282,283,194,284,129,130,131,195,285,196,197,198,199,200,201,202,203,204,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,132,305,306,307,308,309,310,311,312,313,133,314,135,315,316,317,136,318,319,320,321,322,323,324,325,326,327,328,329,330,331,138,139,332,333,334,141,142,335,336,205,206,337,338,1,2,339,340,341,342,155,156,157,158,159,160,161,162,343,163,164,344,14,345,15,346,347,348,16,17,18,19,20,46,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,40,41,42,43],"tindex":"3d0e50fc-dbb1-11e4-b918-f5fef099d675","variableMapping":{"alreadyRun":"forward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[208,209,210,211,47,212,213,349,48,49,50,51,214,215,350,216,217,218,52,53,54,55,56,57,58,59,60,61,62,63,351,64,65,66,67,352,0,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,85,86,87,88,90,91,92,93,94,95,97,98,99,5,353,354,219,355,100,356,220,101,102,357,221,103,222,223,224,104,225,358,226,359,227,360,361,228,229,230,231,232,233,234,235,236,105,362,237,238,363,239,106,240,241,364,242,107,365,108,109,243,244,110,246,111,112,366,247,113,248,249,250,114,251,367,252,368,253,369,370,254,255,256,257,258,259,260,261,262,115,371,263,264,372,116,117,265,266,373,267,118,374,119,120,268,269,270,271,272,273,274,275,6,180,375,181,276,121,122,123,182,277,183,184,185,186,187,188,189,190,191,376,124,125,126,127,128,278,279,280,281,282,283,194,284,129,130,131,195,285,196,197,198,199,200,201,202,203,204,377,132,313,133,134,378,314,135,315,316,317,136,318,379,319,380,320,381,382,321,322,323,324,325,326,327,328,329,137,383,330,331,384,138,139,332,333,385,334,140,386,141,142,335,336,143,144,145,146,205,206,7,8,9,10,147,148,11,12,149,13,150,387,337,338,1,2,339,340,151,152,388,389,153,154,341,342,155,155,156,156,390,390,157,157,158,158,159,159,160,160,161,161,162,162,343,343,163,163,164,164,44,344,14,345,15,346,347,348,16,45,17,18,19,20,46,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"3d0e780d-dbb1-11e4-b918-5f3af6eb37f5","variableMapping":{"foundIndex":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"3d0e780e-dbb1-11e4-b918-65c637da24ce","variableMapping":{"factor":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":0},{"failures":[391],"tindex":"3d0e9f1f-dbb1-11e4-b918-bf9437a518a9","variableMapping":{"edgeId":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"3d0e9f20-dbb1-11e4-b918-fff78f5cc438","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"x2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"3d0e9f21-dbb1-11e4-b918-d5b17365c146","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"3d0e9f22-dbb1-11e4-b918-39323f13e206","variableMapping":{"max":"factor","time":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:52","type":"CtIfImpl","sourcecode":"if (long > (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-2},{"failures":[392],"tindex":"3d0e9f23-dbb1-11e4-b918-8f26d61b3ff1","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"defaultD","java.lang.Double.POSITIVE_INFINITY":"defaultD","weight":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[9,393,394],"tindex":"3d0e9f24-dbb1-11e4-b918-67072a2ae66a","variableMapping":{"lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[395,14,16,19],"tindex":"3d0e9f25-dbb1-11e4-b918-8fa1dafde2c8","variableMapping":{"elem":"elem","size":"toSize","i":"size","element":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,0,7,9,10,147,148,11,12,149,13,150,1],"tindex":"3d0e9f26-dbb1-11e4-b918-bd5e1ac18917","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"3d0e9f27-dbb1-11e4-b918-3dbaa001f7be","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-2},{"failures":[56,7,148,13,396,397],"tindex":"3d0e9f28-dbb1-11e4-b918-276e777b9ed0","variableMapping":{"name":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"3d0e9f29-dbb1-11e4-b918-79d695dc927a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"3d0e9f2a-dbb1-11e4-b918-5ba8c29b596a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[208,209,210,211,47,212,213,349,48,49,50,51,214,215,350,216,217,218,55,56,57,58,59,60,61,62,63,64,65,66,67,0,398,399,400,401,402,403,404,405,406,5,353,354,219,355,100,356,220,101,102,357,221,103,222,223,224,104,225,358,226,359,227,360,361,228,229,230,231,232,233,234,235,236,105,362,237,238,363,239,106,240,241,364,242,107,365,108,109,243,244,110,246,111,112,366,247,113,248,249,250,114,251,367,252,368,253,369,370,254,255,256,257,258,259,260,261,262,115,371,263,264,372,116,117,265,266,373,267,118,374,119,120,268,269,270,271,272,273,274,275,6,180,375,181,276,121,122,123,182,277,183,184,185,186,187,188,189,190,191,376,124,125,126,127,128,278,279,280,281,282,283,194,284,129,130,131,195,285,196,197,198,199,200,201,202,203,204,377,132,313,133,134,378,314,135,315,316,317,136,318,379,319,380,320,381,382,321,322,323,324,325,326,327,328,329,137,383,330,331,384,138,139,332,333,385,334,140,386,141,142,335,336,205,206,7,8,9,10,147,148,11,12,149,13,150,387,337,338,1,2,339,340,151,152,388,389,153,154,341,342,155,155,156,156,390,390,157,157,158,158,159,159,160,160,161,161,162,162,343,343,163,163,164,164,44,344,14,345,15,346,347,348,16,45,17,18,19,20,46,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"3d0ec53b-dbb1-11e4-b918-25dc6eb8d340","variableMapping":{"lastTime":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"3d0ec53c-dbb1-11e4-b918-3d9ae654de64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,0,407,408,409,410,7,8,9,10,147,148,11,12,149,13,150],"tindex":"3d0ec53d-dbb1-11e4-b918-eb111e246252","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"3d0ec53e-dbb1-11e4-b918-4939cb973fb2","variableMapping":{"i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[411,412,413,168,176,414,415,416,417,418,419],"tindex":"3d0ec53f-dbb1-11e4-b918-e1c3028e2396","variableMapping":{"str":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[],"tindex":"3d0ec540-dbb1-11e4-b918-a98f209a9b25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,0,13,420,421,387,396,422,423,424,397,425,426,427,428,429,430,431,432,433,434,207,435,436,437,438,439,440,441,442,443],"tindex":"3d0ec541-dbb1-11e4-b918-f3e75c95dc7a","variableMapping":{"start":"shift","delta":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[44,45,46,21,43],"tindex":"3d0ec542-dbb1-11e4-b918-451f194ab49e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[208,209,210,211,47,212,213,349,48,49,50,51,214,215,350,216,217,218,55,56,57,58,59,60,61,62,63,64,65,66,67,0,5,353,354,219,355,100,356,220,101,102,357,221,103,222,223,224,104,225,358,226,359,227,360,361,228,229,230,231,232,233,234,235,236,105,362,237,238,363,239,106,240,241,364,242,107,365,108,109,243,244,110,245,246,111,112,366,247,113,248,249,250,114,251,367,252,368,253,369,370,254,255,256,257,258,259,260,261,262,115,371,263,264,372,116,117,265,266,373,267,118,374,119,120,268,269,270,271,272,273,444,274,275,6,180,375,181,276,121,122,123,182,277,183,184,185,186,187,188,189,445,190,191,376,124,125,126,127,446,128,278,279,280,281,447,282,283,194,284,129,130,131,195,285,196,197,198,199,200,201,202,448,203,204,286,287,288,289,290,291,449,292,450,293,451,377,294,295,296,297,298,299,300,301,302,452,453,303,304,454,132,305,306,307,455,308,456,457,309,310,311,312,313,133,134,378,314,135,315,316,317,136,318,379,319,380,320,381,382,321,322,323,324,325,326,327,328,329,137,383,330,331,384,138,139,332,333,385,334,140,386,141,142,335,336,205,206,7,8,9,10,147,148,11,12,149,13,150,387,337,338,1,2,339,340,151,152,388,389,153,154,341,342,155,155,156,156,390,390,157,157,158,158,159,159,160,160,161,161,162,162,343,343,163,163,164,164,44,344,14,345,15,346,347,348,16,45,17,18,19,20,46,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"3d0eec53-dbb1-11e4-b918-1fd32ae68955","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[458,459,460,461,462,463,464,465,466,181,184,185,193,194,197,198],"tindex":"3d0eec54-dbb1-11e4-b918-cda113ae274a","variableMapping":{"precision":"minLatTmp","lat":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"3d0eec55-dbb1-11e4-b918-bd01171d90b5","variableMapping":{"store":"edgeBased"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[9,393,394],"tindex":"3d0eec56-dbb1-11e4-b918-630e70c38f27","variableMapping":{"lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"3d0eec57-dbb1-11e4-b918-6b969de1228a","variableMapping":{"err":"x2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"3d0eec58-dbb1-11e4-b918-bbc6e62d85f3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"3d0f8899-dbb1-11e4-b918-83229c3ef2ce","variableMapping":{"strLen":"index","bLen":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":0},{"failures":[],"tindex":"3d0f889a-dbb1-11e4-b918-8967a67177b4","variableMapping":{"latSize":"speed","size":"speed","lonSize":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":0},{"failures":[413,176,416,419],"tindex":"3d0f889b-dbb1-11e4-b918-f70fabdd4acd","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:200","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[59,64,420,426,467,170,468,469],"tindex":"3d0f889c-dbb1-11e4-b918-9b33474bfb0c","variableMapping":{"len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[],"tindex":"3d0fafad-dbb1-11e4-b918-291f3394d84d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"3d0fafae-dbb1-11e4-b918-e115d1938a8c","variableMapping":{"elem":"mKeys","size":"mSize","keys":"mKeys","i":"i","key":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[152],"tindex":"3d0fafaf-dbb1-11e4-b918-61c21d824180","variableMapping":{"incEleSum":"fwdIncline","incDist2DSum":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"3d0fafb0-dbb1-11e4-b918-4b8e855b17db","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"3d0fafb1-dbb1-11e4-b918-2d93de334a30","variableMapping":{"value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":0},{"failures":[208,209,210,211,47,212,213,349,48,49,50,51,214,215,350,216,217,218,55,56,57,58,59,60,61,62,63,64,65,66,67,0,470,398,399,400,401,402,471,403,404,405,406,5,353,354,219,355,100,356,220,101,102,357,221,103,222,223,224,104,225,358,226,359,227,360,361,228,229,230,231,232,233,234,235,236,105,362,237,238,363,239,106,240,241,364,242,107,365,108,109,243,244,110,246,111,112,366,247,113,248,249,250,114,251,367,252,368,253,369,370,254,255,256,257,258,259,260,261,262,115,371,263,264,372,116,117,265,266,373,267,118,374,119,120,268,269,270,271,272,273,274,275,6,180,375,181,276,121,122,123,182,277,183,184,185,186,187,188,189,190,191,376,124,125,126,127,128,278,279,280,281,282,283,194,284,129,130,131,195,285,196,197,198,199,200,201,202,203,204,377,132,313,133,134,378,314,135,315,316,317,136,318,379,319,380,320,381,382,321,322,323,324,325,326,327,328,329,137,383,330,331,384,138,139,332,333,385,334,140,386,141,142,335,336,205,206,7,8,9,10,147,148,11,12,149,13,150,387,337,338,1,2,339,340,151,152,388,389,153,154,341,342,155,155,156,156,390,390,157,157,158,158,159,159,160,160,161,161,162,162,343,343,163,163,164,164,44,344,14,345,15,346,347,348,16,45,17,18,19,20,46,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"3d0fafb2-dbb1-11e4-b918-477b2785ce6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"3d0fafb3-dbb1-11e4-b918-d51e13c1b16e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:78","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.Integer, java.lang.Integer> java.util.Map<java.lang.Integer, java.lang.Integer> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks()"},"status":-2},{"failures":[210,47,350,5,353,354,219,355,100,356,220,101,102,221,103,222,223,224,104,225,358,226,359,227,360,228,229,230,231,232,233,234,235,236,105,362,237,238,363,239,106,240,241,364,242,107,365,108,109,243,244,6,180,375,181,276,121,122,123,182,277,183,184,185,186,187,188,189,445,190,191,7,9,10,11,12,13,44,344,14,345,15,346,347,348,16,45,17,18,19,20,46,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"3d0fd6c4-dbb1-11e4-b918-41e6ab709923","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.create(long)"},"status":-1},{"failures":[],"tindex":"3d0fd6c5-dbb1-11e4-b918-17bdd33b22e2","variableMapping":{"mask":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-2},{"failures":[],"tindex":"3d0fd6c6-dbb1-11e4-b918-31ceed128ce2","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"3d0fd6c7-dbb1-11e4-b918-037847faead1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"3d0fd6c8-dbb1-11e4-b918-8f5aaacd71b7","variableMapping":{"bits":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"3d0fd6c9-dbb1-11e4-b918-854a20a02920","variableMapping":{"len":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","start":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"3d15ca3a-dbb1-11e4-b918-490a4ead3a53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"3d15ca3b-dbb1-11e4-b918-1d8ea4ac7807","variableMapping":{"latSize":"edgeEntryBytes","size":"tmpPrevEdge","lonSize":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":0},{"failures":[472,395,3,473,4,474,14,15,346,347,16,17,19],"tindex":"3d15ca3c-dbb1-11e4-b918-058b21a695e1","variableMapping":{"tmpNo":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[396,397],"tindex":"3d15ca3d-dbb1-11e4-b918-b7b8a135f1d3","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"sidewalks","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[20,46,21,40,41,43],"tindex":"3d15ca3e-dbb1-11e4-b918-e93a4fb32277","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:81","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[353,356],"tindex":"3d15ca3f-dbb1-11e4-b918-9b7df345b321","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[48,49,50,51,205,9,10,147,148,11,149,44,14,346,347,16,45,20,46,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43],"tindex":"3d15ca40-dbb1-11e4-b918-8376db28cf1c","variableMapping":{"iterState":"iterState","noOfStates":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[458,459,475,460,476,461,462,477,465,466],"tindex":"3d15ca41-dbb1-11e4-b918-d5055549db33","variableMapping":{"orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[57,58,59,6,180,181,121,122,123,182,183,184,185,186,187,188,189,190,191,192,193,194,129,130,131,195,196,197,198,199,200,201,202,203,204,205,206,9,10,147,148,11,149,13,29,33,34,37],"tindex":"3d15ca42-dbb1-11e4-b918-ebf367c51cca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"3d15ca43-dbb1-11e4-b918-97f15ad5c99e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[411,412,413,168,176,414,415,416,417,418,419],"tindex":"3d15ca44-dbb1-11e4-b918-d74b73af4319","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"3d15ca45-dbb1-11e4-b918-b9e440e49ab0","variableMapping":{"this":"em"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[442],"tindex":"3d15ca46-dbb1-11e4-b918-5ba99bc7a31e","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[55,56,59,64,0,9,420,396,397,426,431,207,442,478,411,412,467,479,413,480,167,168,170,176,178,481,414,415,468,482,416,483,484,417,469,485,419,486],"tindex":"3d15f157-dbb1-11e4-b918-41ce5eae2bd2","variableMapping":{"sacScale":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[],"tindex":"3d15f158-dbb1-11e4-b918-a3c5bc1de2a0","variableMapping":{"high":"scDirMask","highKey":"flags","key":"scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[480,178,483,486],"tindex":"3d15f159-dbb1-11e4-b918-77f255825d8d","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[14,15,346,347,16,17,19],"tindex":"3d15f15a-dbb1-11e4-b918-c1ce8edb49ed","variableMapping":{"closestNode":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[],"tindex":"3d15f15b-dbb1-11e4-b918-a1f3fb1841e5","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"3d15f15c-dbb1-11e4-b918-358b5bed7d64","variableMapping":{"finishedTo":"empty","finishedFrom":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[337,339],"tindex":"3d15f15d-dbb1-11e4-b918-152159dcf4c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[],"tindex":"3d15f15e-dbb1-11e4-b918-51ef9b9635df","variableMapping":{"cap":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"3d15f15f-dbb1-11e4-b918-55bbb07c87b9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[398,403],"tindex":"3d15f160-dbb1-11e4-b918-99c211711ded","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[458,459,475,460,476,461,462,477,465,466],"tindex":"3d15f161-dbb1-11e4-b918-83b8a2f81ed4","variableMapping":{"eleDelta":"midLat","decEleSum":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":38,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":156,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":100,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":287,"com.graphhopper.reader.OSMReaderTest.testFerry":55,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":214,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":122,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":369,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":76,"com.graphhopper.coll.CompressedArrayTest.testCompress":466,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":175,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":15,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":452,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":375,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":77,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":17,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":44,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":327,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":30,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":48,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":176,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":209,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":478,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":28,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":130,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":110,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":463,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":103,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":473,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":20,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":199,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":131,"com.graphhopper.reader.OSMReaderTest.testSort":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":1,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":65,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":112,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":385,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":133,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":309,"com.graphhopper.storage.RAMDataAccessTest.testHeader":95,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":161,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":218,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":267,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":363,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":319,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":245,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":113,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":360,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":183,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":180,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":24,"com.graphhopper.coll.OSMIDMapTest.testGetLong":71,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":223,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":262,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":233,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":101,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":235,"com.graphhopper.coll.CompressedArrayTest.testCompress2":465,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":329,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":484,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":370,"com.graphhopper.GraphHopperAPITest.testLoad":205,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":400,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":420,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":321,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":316,"com.graphhopper.storage.LevelGraphStorageTest.testClone":104,"com.graphhopper.reader.OSMReaderTest.testBarriers":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":340,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":27,"com.graphhopper.util.GHUtilityTest.testCopy":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":178,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":444,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":98,"com.graphhopper.routing.PathTest.testFindInstruction":154,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":172,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":249,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":472,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":350,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":424,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":365,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":271,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":334,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":325,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":266,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":347,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":358,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":449,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":406,"com.graphhopper.util.InstructionListTest.testWayList2":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":200,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":119,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":393,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":151,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":359,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":78,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":254,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":26,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":315,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":60,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":40,"com.graphhopper.coll.OSMIDMapTest.testGet":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":253,"com.graphhopper.routing.PathBidirRefTest.testExtract":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":397,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":70,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":187,"com.graphhopper.storage.RAMDataAccessTest.testCopy":91,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":305,"com.graphhopper.storage.RAMDataAccessTest.testSegments":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":467,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":204,"com.graphhopper.util.GHUtilityTest.testSort2":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":35,"com.graphhopper.reader.OSMReaderTest.testMain":57,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":102,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":261,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":480,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":366,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":361,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":231,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":243,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":158,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":264,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":481,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":234,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":67,"com.graphhopper.storage.StorablePropertiesTest.testStore":75,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":90,"com.graphhopper.storage.GraphHopperStorageTest.testClone":136,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":455,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":207,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":407,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":433,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":5,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":486,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":292,"com.graphhopper.routing.PathTest.testTime":389,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":108,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":439,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":202,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":302,"com.graphhopper.reader.OSMReaderTest.testRelation":351,"com.graphhopper.util.GHUtilityTest.testSortDirected":213,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":4,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":409,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":86,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":157,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":431,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":23,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":298,"com.graphhopper.search.NameIndexTest.testCreate":146,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":96,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":155,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":471,"com.graphhopper.routing.QueryGraphTest.testOneWay":343,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":448,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":460,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":129,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":458,"com.graphhopper.reader.OSMReaderTest.testWithBounds":66,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":99,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":483,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":295,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":374,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":453,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":222,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":179,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":263,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":258,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":135,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":21,"com.graphhopper.util.InstructionListTest.testWayList":49,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":386,"com.graphhopper.GraphHopperAPITest.testDisconnected179":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":450,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":476,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":289,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":482,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":217,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":301,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":311,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":147,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":379,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":18,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":331,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":45,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":413,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":445,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":402,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":313,"com.graphhopper.routing.PathTest.testWayList":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":294,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":430,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":391,"com.graphhopper.coll.OSMIDMapTest.testGet2":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":43,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":83,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":241,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":371,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":326,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":252,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":184,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":185,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":92,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":87,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":468,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":417,"com.graphhopper.util.GHUtilityTest.testSort":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":454,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":170,"com.graphhopper.search.NameIndexTest.testPut":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":268,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":317,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":128,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":280,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":404,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":278,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":246,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":469,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":53,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":423,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":337,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":405,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":132,"com.graphhopper.routing.PathTest.testFound":388,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":150,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":442,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":242,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":392,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":479,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":255,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":395,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":145,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":377,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":88,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":320,"com.graphhopper.util.InstructionListTest.testEmptyList":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":426,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":36,"com.graphhopper.reader.PrinctonReaderTest.testRead":216,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":140,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":123,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":368,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":451,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":286,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":224,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":260,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":441,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":485,"com.graphhopper.reader.OSMReaderTest.testFoot":56,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":54,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":304,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":197,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":462,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":165,"com.graphhopper.reader.OSMReaderTest.testOneWay":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":198,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":322,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":332,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":173,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":85,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":300,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":380,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":346,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":434,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":345,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":296,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":390,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":352,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":378,"com.graphhopper.routing.PathBidirRefTest.testExtract2":342,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":403,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":201,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":275,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":419,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":143,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":138,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":447,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":312,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":396,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":195,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":333,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":436,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":137,"com.graphhopper.GraphHopperTest.testFootAndCar":148,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":190,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":290,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":440,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":437,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":114,"com.graphhopper.GraphHopperTest.testPrepareOnly":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":39,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":288,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":64,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":355,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":51,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":422,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":299,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":443,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":364,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":240,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":111}}]
