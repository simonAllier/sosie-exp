[{"failures":[0,1],"tindex":"a98f6663-da30-11e4-992c-9171d5b30a8e","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"a9922584-da30-11e4-992c-a3ae8af5aa36","variableMapping":{"len":"nodeA","start":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a9922585-da30-11e4-992c-65e9e0aa2141","variableMapping":{"y1":"orientation","x1":"java.lang.Math.PI","y2":"baseOrientation","x2":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11],"tindex":"a9922586-da30-11e4-992c-5bb086e14573","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[],"tindex":"a9922587-da30-11e4-992c-bfea5585544e","variableMapping":{"p":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:99","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathNative"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[],"tindex":"a9922588-da30-11e4-992c-cdf022aa5cba","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"a9922589-da30-11e4-992c-ff327eb28b9f","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"a992258a-da30-11e4-992c-0d6caaacc1ab","variableMapping":{"segmentSizePower":"skippedEdge1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[26,27],"tindex":"a992258b-da30-11e4-992c-9f4240e3a818","variableMapping":{"size":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"a992258c-da30-11e4-992c-b32611bc1c8c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"a992258d-da30-11e4-992c-373290664244","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"a9924c9e-da30-11e4-992c-cde6ff22ad57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"a9924c9f-da30-11e4-992c-df2941c85dc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[],"tindex":"a9924ca0-da30-11e4-992c-838f6c990e71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"a9924ca1-da30-11e4-992c-7f642254ddd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61],"tindex":"a9924ca2-da30-11e4-992c-191935234db9","variableMapping":{"weightLong":"bits","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[62],"tindex":"a9924ca3-da30-11e4-992c-3bc04c121ae3","variableMapping":{"resultOrientation":"shortTripsSpeed","orientation":"shortTripsSpeed","java.lang.Math.PI":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[63],"tindex":"a9924ca4-da30-11e4-992c-2525cbfa53a2","variableMapping":{"r":"maxSpeed","x":"maxSpeed","absY":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"a9924ca5-da30-11e4-992c-0f055632f990","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-2},{"failures":[],"tindex":"a9924ca6-da30-11e4-992c-c921a6e2a90b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"a9924ca7-da30-11e4-992c-d5f00ec07481","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"a9924ca8-da30-11e4-992c-f57cc0a3e4aa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[64,65,66,67,68,69,70,71],"tindex":"a9924ca9-da30-11e4-992c-89053f81f3aa","variableMapping":{"sacScale":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"a9924caa-da30-11e4-992c-e1528ab6a0ec","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"a99272bb-da30-11e4-992c-8340a47086b7","variableMapping":{"delNodes":"tmpEdge","this":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.inPlaceNodeRemove(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-2},{"failures":[72],"tindex":"a99272bc-da30-11e4-992c-8d9dc5af36c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[73,74,75,4,7,76,62],"tindex":"a99272bd-da30-11e4-992c-afa20e5c2a3b","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[77],"tindex":"a99272be-da30-11e4-992c-0b6dde132036","variableMapping":{"nameIndexRef":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"a99272bf-da30-11e4-992c-39a9c6f977f5","variableMapping":{"maxLeafEntries":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"a99272c0-da30-11e4-992c-a7dd11bfe346","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"a99272c1-da30-11e4-992c-1b6088443b8b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"a99272c2-da30-11e4-992c-a7ca0ff2a0b4","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"a99272c3-da30-11e4-992c-5d4eab8e8973","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"a99272c4-da30-11e4-992c-c9432664c1f6","variableMapping":{"red":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-2},{"failures":[],"tindex":"a99299d5-da30-11e4-992c-9df4879ada2b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[119,73,120,121,64,122,74,75,123,65,124,125,126,78,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,4,5,6,7,8,159,9,10,76],"tindex":"a99299d6-da30-11e4-992c-05aa5b327bc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[160,161,162,163,164,165,166,167,168,169],"tindex":"a99299d7-da30-11e4-992c-ffc949a1f943","variableMapping":{"enableIfAssert":"partOfCycleRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"a99299d8-da30-11e4-992c-6b9095438a8e","variableMapping":{"maxSpeed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[78,117],"tindex":"a99299d9-da30-11e4-992c-253cfa2f8d33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[73,74,75,157,7,10,170,171,172,173,62,174,175,176,177,178,179,180,181,182,183],"tindex":"a99299da-da30-11e4-992c-53eefb3257f2","variableMapping":{"properties":"properties"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"a99299db-da30-11e4-992c-a347d2220bb6","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"a99299dc-da30-11e4-992c-b5e0e0e020be","variableMapping":{"scDirMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a99299dd-da30-11e4-992c-2feffd1159da","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"a99299de-da30-11e4-992c-d77b8fdc37d6","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,119,73,120,121,64,122,74,75,123,65,124,125,126,78,202,47,135,203,204,205,136,49,50,206,207,208,209,210,211,212,137,79,213,138,139,214,215,216,217,80,218,140,219,220,221,222,223,81,224,82,83,225,84,226,227,228,85,86,229,230,231,232,233,234,87,88,235,236,237,238,239,240,241,242,243,141,244,142,143,245,246,247,248,89,249,144,250,251,252,253,254,90,255,91,92,256,93,257,258,259,94,95,260,261,262,263,264,145,96,97,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,146,147,148,149,150,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,152,323,153,154,324,325,326,327,107,328,155,329,330,331,332,333,108,334,109,110,335,111,336,337,338,112,113,339,340,341,342,343,156,114,115,344,345,346,347,348,349,350,351,352,2,3,157,158,4,5,6,7,8,159,9,10,76,353,116,354,117,118,355,356,357,72,358,359,360,361,362,363,364,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,12,376,377,378,379,380,381,382,13,14,383,384,385,15,16,17,18,386,387,19,20,388,389,390,391,392,393,394,395,396,397,21,398,22,23,24,399,25],"tindex":"a992c0ef-da30-11e4-992c-3ba1e1613d36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"a992c0f0-da30-11e4-992c-e5a04073da8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[208,13,385],"tindex":"a992c0f1-da30-11e4-992c-f1a6316ea989","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[80,82,83,85,87,88,89,91,92,94,96,97,98,100,101,103,105,106,107,109,110,112,114,115,118],"tindex":"a992c0f2-da30-11e4-992c-2bb73da981b7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"a992c0f3-da30-11e4-992c-4994cf29e7ff","variableMapping":{"time":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[119,400],"tindex":"a992c0f4-da30-11e4-992c-b3802744227d","variableMapping":{"intVal":"minutes","degree":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"a992e805-da30-11e4-992c-cf7df309a5d6","variableMapping":{"width":"bytes","i":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:147","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"a992e806-da30-11e4-992c-b7b56ba9cd92","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[66],"tindex":"a992e807-da30-11e4-992c-1789b0e92000","variableMapping":{"empty":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[116,355,356],"tindex":"a992e808-da30-11e4-992c-794fcc75fdd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:97","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,119,73,120,121,64,122,74,75,123,65,124,125,126,78,202,47,135,203,204,205,136,49,50,206,207,208,209,210,211,212,137,79,213,138,139,214,215,216,217,80,218,140,219,220,221,222,223,81,224,82,83,225,84,226,227,228,85,86,229,230,231,232,233,234,87,88,235,236,237,238,239,240,241,242,243,141,244,142,143,245,246,247,248,89,249,144,250,251,252,253,254,90,255,91,92,256,93,257,258,259,94,95,260,261,262,263,264,145,96,97,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,146,147,148,149,150,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,152,323,153,154,324,325,326,327,107,328,155,329,330,331,332,333,108,334,109,110,335,111,336,337,338,112,113,339,340,341,342,343,156,114,115,344,345,346,347,348,349,350,351,352,2,3,157,158,4,5,6,7,8,159,9,10,76,353,116,354,117,118,355,356,357,72,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,12,376,377,378,379,380,381,382,13,14,383,384,385,15,16,17,18,386,387,19,20,388,389,390,391,392,393,394,395,396,397,21,398,22,23,24,399,25],"tindex":"a9930f19-da30-11e4-992c-cb205591b7e8","variableMapping":{"edgePointer":"cap","maxEdges":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-1},{"failures":[63],"tindex":"a9930f1a-da30-11e4-992c-cf6b56c28563","variableMapping":{"resultOrientation":"maxSpeed","orientation":"backSpeed","java.lang.Math.PI":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[195,126,77,63,401],"tindex":"a9930f1b-da30-11e4-992c-f7fda6cc5d10","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"a9930f1c-da30-11e4-992c-0d341aca9fcd","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"a9930f1d-da30-11e4-992c-5d5df4562424","variableMapping":{"res":"lastTime","value":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"a9930f1e-da30-11e4-992c-fd3928d1905f","variableMapping":{"y":"delta","angle":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[38,43],"tindex":"a9930f1f-da30-11e4-992c-357702af32e9","variableMapping":{"nextTowerId":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"a9930f20-da30-11e4-992c-d300a6cfdab5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[7,402,17,391,394],"tindex":"a9930f21-da30-11e4-992c-ed155920a987","variableMapping":{"dX":"speed","dY":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-1},{"failures":[],"tindex":"a9930f22-da30-11e4-992c-e76989622ea2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"a9933633-da30-11e4-992c-5dfb3c384a52","variableMapping":{"angle":"bwFaster","com.graphhopper.util.AngleCalc.PI3_4":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"a9933634-da30-11e4-992c-a946b0a88fe4","variableMapping":{"edgeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"a9933635-da30-11e4-992c-c9a37b849f60","variableMapping":{"shift":"shift","backwardBit":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"a9933636-da30-11e4-992c-2518d377c4cb","variableMapping":{"minDistance":"longTripsSpeed","rMin":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"a9933637-da30-11e4-992c-e761ad54ecc8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"a9933638-da30-11e4-992c-a5d9b9631eb1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"a9933639-da30-11e4-992c-3b90897ab22c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"a993363a-da30-11e4-992c-75a09c4b286a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[403],"tindex":"a993363b-da30-11e4-992c-6bcb94648a4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"a993363c-da30-11e4-992c-0fb649368773","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"a993363d-da30-11e4-992c-e70e6100a187","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"a9946ebe-da30-11e4-992c-c3b3f0a63460","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:143","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"a9946ebf-da30-11e4-992c-e9e0fab737c5","variableMapping":{"flags":"lastTime","nodeFlags":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"a9946ec0-da30-11e4-992c-8b7d2a6375d5","variableMapping":{"allBits":"oldValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[],"tindex":"a9946ec1-da30-11e4-992c-51487fecd2c3","variableMapping":{"priorityFromRelation":"com.graphhopper.routing.util.FootFlagEncoder.FERRY_SPEED","relationCodeEncoder":"relationCodeEncoder","relationFlags":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"a9946ec2-da30-11e4-992c-ebc847bf2dd5","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[26,27,404,405],"tindex":"a9946ec3-da30-11e4-992c-7dfa30548c5a","variableMapping":{"latSimilar":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"a9946ec4-da30-11e4-992c-9ba2380a3858","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"a9946ec5-da30-11e4-992c-31d4086135a0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[120,121,64,283,286,291,292,294,295,296,297,406,407,306,309,314,315,316,317,318,319,320,2,4,5,6,7,8,9,394,395,21],"tindex":"a99495d6-da30-11e4-992c-338a1ce95ca1","variableMapping":{"i":"tmpErr","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"a99495d7-da30-11e4-992c-a3374c971ba2","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"start","keys":"nodeLowLink","values":"nodeIndex","n":"index","o":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:131","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = int[][int];\n    if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n        if (int != int) {\n            int[][int] = int[][int];\n            int[][int] = int;\n        } \n        int++;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[16],"tindex":"a99495d8-da30-11e4-992c-2b2af94b371d","variableMapping":{"i":"lastEdgeIndex","lastIndex":"lastEdgeIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-1},{"failures":[],"tindex":"a99495d9-da30-11e4-992c-e5980d2f215c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[391],"tindex":"a99495da-da30-11e4-992c-25a238c3c32e","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[],"tindex":"a99495db-da30-11e4-992c-9f78060a743b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"a99495dc-da30-11e4-992c-b1253b95367d","variableMapping":{"lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[52,53,54,55,56,57,58,408,409,59,119,73,120,121,64,122,74,75,123,65,124,125,126,78,60,61,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,410,297,298,411,306,307,308,309,310,311,312,313,314,315,316,317,318,319,412,320,321,2,3,157,4,5,6,7,8,159,9,10,76,390,394,395,21],"tindex":"a99495dd-da30-11e4-992c-6909a2f5c629","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[413,414,13],"tindex":"a99495de-da30-11e4-992c-2bf80bf88ad6","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[415],"tindex":"a99495df-da30-11e4-992c-81e902d9a8e8","variableMapping":{"shift":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","backwardBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[416,137,213,138,138,139,139,214,215,216,217,80,218,140,140,219,220,221,222,223,81,224,224,82,83,225,225,84,226,227,228,85,86,229,230,231,232,233,234,234,87,88,235,236,237,238,239,240,241,242,243,141,141,51,244,142,142,143,143,245,246,247,248,89,249,144,144,250,251,252,253,254,90,255,255,91,92,256,256,93,257,258,259,94,95,260,261,262,263,264,145,145,96,97,265,266,267,268,269,270,271,272,273,275,276,277,417,278,279,293,294,295,296,410,297,298,146,147,148,149,418,150,301,302,303,419,304,305,316,317,318,319,412,320,321,420,421,98,422,151,151,423,424,425,426,427,99,322,322,100,101,428,428,102,429,430,431,103,104,432,433,434,435,436,152,152,105,106,437,438,439,440,441,442,443,444,445,323,153,153,154,154,324,325,326,327,107,328,155,155,329,330,331,332,333,108,334,334,109,110,335,335,111,336,337,338,112,113,339,340,341,342,343,156,156,114,115,344,345,346,347,348,349,350,351,352,2,3,157,157,158,4,5,6,7,8,159,9,10,76,76,358,359,364,365,366,366,367,368,369,370,371,372,373,374,375],"tindex":"a99495e0-da30-11e4-992c-412d74559410","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10).flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"a994bcf1-da30-11e4-992c-bbca6446b7fc","variableMapping":{"this":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[446,77],"tindex":"a994bcf2-da30-11e4-992c-b5ceb38d5c05","variableMapping":{"osmFile":"tt","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[446],"tindex":"a994bcf3-da30-11e4-992c-45761c67b551","variableMapping":{"fwdFaster":"durationInHours","incDist2DSum":"val","fwdSlower":"shortTripsSpeed","fullDist2D":"durationInHours","restDist2D":"val","speed":"durationInHours","decDist2DSum":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[447,446,448,161,449,166],"tindex":"a994bcf4-da30-11e4-992c-612b7934996f","variableMapping":{"high":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[446],"tindex":"a994bcf5-da30-11e4-992c-75de870e1ccc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"a994bcf6-da30-11e4-992c-dbac308321c2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":234,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":398,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":137,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":421,"com.graphhopper.reader.OSMReaderTest.testFerry":119,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":196,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":175,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":286,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":158,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":167,"com.graphhopper.storage.MMapDataAccessTest.testSegments":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":90,"com.graphhopper.coll.CompressedArrayTest.testCompress":61,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":350,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":432,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":334,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":282,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":383,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":441,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":12,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":338,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":448,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":391,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":299,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":164,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":185,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":215,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":283,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":355,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":163,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":18,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":309,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":141,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":408,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":216,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":15,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":316,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":310,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":11,"com.graphhopper.reader.OSMReaderTest.testSort":121,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":117,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":143,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":345,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":153,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":442,"com.graphhopper.storage.RAMDataAccessTest.testHeader":134,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":371,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":201,"com.graphhopper.storage.MMapDataAccessTest.testHeader":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":267,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":233,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":130,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":331,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":51,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":250,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":165,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":290,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":427,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":19,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":256,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":249,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":227,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":138,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":85,"com.graphhopper.coll.CompressedArrayTest.testCompress2":60,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":255,"com.graphhopper.GraphHopperAPITest.testLoad":2,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":203,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":66,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":109,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":107,"com.graphhopper.storage.LevelGraphStorageTest.testClone":140,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":400,"com.graphhopper.reader.OSMReaderTest.testBarriers":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":356,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":36,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":280,"com.graphhopper.util.GHUtilityTest.testCopy":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":298,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":178,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":417,"com.graphhopper.routing.PathTest.testFindInstruction":361,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":89,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":171,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":198,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":239,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":449,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":346,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":336,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":44,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":93,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":381,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":220,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":424,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":31,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":207,"com.graphhopper.util.InstructionListTest.testWayList2":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":317,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":351,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":270,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":404,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":357,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":222,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":38,"com.graphhopper.storage.RAMDirectoryTest.testSynched":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":20,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":327,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":122,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":254,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":129,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":172,"com.graphhopper.routing.PathBidirRefTest.testExtract":362,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":294,"com.graphhopper.storage.RAMDataAccessTest.testCopy":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":105,"com.graphhopper.storage.RAMDataAccessTest.testSegments":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":68,"com.graphhopper.util.GHUtilityTest.testSort2":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":396,"com.graphhopper.reader.OSMReaderTest.testMain":120,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":139,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":94,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":77,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":439,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":224,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":84,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":242,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":82,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":263,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":135,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":228,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":126,"com.graphhopper.storage.StorablePropertiesTest.testStore":416,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":43,"com.graphhopper.storage.GraphHopperStorageTest.testClone":155,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":174,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":63,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":335,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":183,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":425,"com.graphhopper.routing.PathTest.testTime":359,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":240,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":104,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":231,"com.graphhopper.reader.OSMReaderTest.testRelation":447,"com.graphhopper.util.GHUtilityTest.testSortDirected":190,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":367,"com.graphhopper.GraphHopperTest.testFootOnly":10,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":407,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":62,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":289,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":27,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":386,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":429,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":45,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":364,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":136,"com.graphhopper.routing.QueryGraphTest.testOneWay":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":412,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":52,"com.graphhopper.reader.OSMReaderTest.testWithBounds":125,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":34,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":269,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":354,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":433,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":26,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":217,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":262,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":257,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":326,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":17,"com.graphhopper.util.InstructionListTest.testWayList":193,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":176,"com.graphhopper.GraphHopperAPITest.testDisconnected179":3,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":426,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":422,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":200,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":103,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":444,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":330,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":384,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":342,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":14,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":162,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":410,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":48,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":205,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":323,"com.graphhopper.storage.MMapDataAccessTest.testCopy":127,"com.graphhopper.routing.PathTest.testWayList":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":25,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":132,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":261,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":252,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":329,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":226,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":168,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":29,"com.graphhopper.util.GHUtilityTest.testSort":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":436,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":272,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":328,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":284,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":150,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":302,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":179,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":72,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":300,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":244,"com.graphhopper.storage.MMapDirectoryTest.testSynched":1,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":258,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":116,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":206,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":152,"com.graphhopper.routing.PathTest.testFound":358,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":76,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":403,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":39,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":237,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":210,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":92,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":33,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":322,"com.graphhopper.util.InstructionListTest.testEmptyList":191,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":390,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":394,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":67,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":397,"com.graphhopper.reader.PrinctonReaderTest.testRead":199,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":287,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":253,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":420,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":405,"com.graphhopper.reader.OSMReaderTest.testFoot":73,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":435,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":58,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":314,"com.graphhopper.reader.OSMReaderTest.testOneWay":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":315,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":110,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":115,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":266,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":41,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":180,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":380,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":411,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":385,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":378,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":353,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":35,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":428,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":366,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":324,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":49,"com.graphhopper.routing.PathBidirRefTest.testExtract2":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":169,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":318,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":156,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":419,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":75,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":445,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":311,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":344,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":221,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":339,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":151,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":144,"com.graphhopper.storage.StorablePropertiesTest.testLoad":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":22,"com.graphhopper.GraphHopperTest.testPrepareOnly":157,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":98,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":65,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":212,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":195,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":343,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":430,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":401,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":236,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":88,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":142}}]
